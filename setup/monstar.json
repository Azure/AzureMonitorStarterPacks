{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "14689327651408063243"
    }
  },
  "parameters": {
    "subscriptionId": {
      "type": "string"
    },
    "resourceGroupName": {
      "type": "string"
    },
    "createNewResourceGroup": {
      "type": "bool",
      "defaultValue": false
    },
    "location": {
      "type": "string"
    },
    "newLogAnalyticsWSName": {
      "type": "string",
      "defaultValue": ""
    },
    "createNewLogAnalyticsWS": {
      "type": "bool"
    },
    "existingLogAnalyticsWSId": {
      "type": "string",
      "defaultValue": ""
    },
    "grafanaLocation": {
      "type": "string",
      "defaultValue": ""
    },
    "grafanaName": {
      "type": "string",
      "defaultValue": ""
    },
    "newGrafana": {
      "type": "bool"
    },
    "storageAccountName": {
      "type": "string"
    },
    "createNewStorageAccount": {
      "type": "bool",
      "defaultValue": false
    },
    "instanceName": {
      "type": "string"
    },
    "deployGrafana": {
      "type": "bool"
    },
    "customerTags": {
      "type": "object"
    },
    "deployDiscovery": {
      "type": "bool",
      "defaultValue": false
    },
    "collectTelemetry": {
      "type": "bool",
      "defaultValue": true
    },
    "appInsightsLocation": {
      "type": "string"
    }
  },
  "variables": {
    "solutionTag": "MonitorStarterPacks",
    "solutionTagComponents": "MonitorStarterPacksComponents",
    "solutionVersion": "0.1",
    "tempTags": {
      "[format('{0}', variables('solutionTagComponents'))]": "BackendComponent",
      "solutionVersion": "[variables('solutionVersion')]",
      "instanceName": "[parameters('instanceName')]"
    },
    "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
    "functionName": "[format('AMP-{0}-{1}-Function', parameters('instanceName'), split(parameters('subscriptionId'), '-')[0])]",
    "logicAppName": "[format('AMP-{0}-LogicApp', parameters('instanceName'))]",
    "ImageGalleryName": "[format('AMP{0}Gallery', parameters('instanceName'))]"
  },
  "resources": [
    {
      "condition": "[parameters('createNewResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17175818948770477909"
            }
          },
          "parameters": {
            "resourceGroupName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2023-07-01",
              "name": "[parameters('resourceGroupName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]"
            }
          ],
          "outputs": {
            "newResourceGroupId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('createNewStorageAccount')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('STOmonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13373718962256926750"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'discovery')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'applications')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'amba')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'modules')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'deploy')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'dashboards')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "supportsHttpsTrafficOnly": true
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "condition": "[not(parameters('createNewStorageAccount'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('existingstorage-depl-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17947763426648198191"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'discovery')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'amba')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": false
                }
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('createNewLogAnalyticsWS')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('newLogAnalyticsWSName')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13376729168955437095"
            }
          },
          "parameters": {
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            }
          ],
          "outputs": {
            "customerId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]"
            },
            "lawresourceid": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "condition": "[parameters('deployDiscovery')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('DeployDiscovery-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "dceId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.dceId.value]"
          },
          "imageGalleryName": {
            "value": "[variables('ImageGalleryName')]"
          },
          "lawResourceId": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName'))), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "storageAccountname": {
            "value": "[parameters('storageAccountName')]"
          },
          "tableName": {
            "value": "Discovery"
          },
          "resultstableName": {
            "value": "DiscoveryResults"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          },
          "solutionVersion": {
            "value": "[variables('solutionVersion')]"
          },
          "functionName": {
            "value": "[variables('functionName')]"
          },
          "UserManagedIdentityId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.functionUserManagedIdentityId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "1799007499643204546"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "storageAccountname": {
              "type": "string"
            },
            "imageGalleryName": {
              "type": "string"
            },
            "lawResourceId": {
              "type": "string"
            },
            "tableName": {
              "type": "string"
            },
            "resultstableName": {
              "type": "string"
            },
            "dceId": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            },
            "instanceName": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "functionName": {
              "type": "string"
            },
            "UserManagedIdentityId": {
              "type": "string"
            }
          },
          "variables": {
            "solutionTagComponents": "MonitorStarterPacksComponents",
            "tempTags": {
              "[format('{0}', variables('solutionTagComponents'))]": "BackendComponent",
              "solutionVersion": "[parameters('solutionVersion')]",
              "instanceName": "[parameters('instanceName')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
            "tableNameToUse": "[format('{0}_CL', parameters('tableName'))]",
            "resultstableNameToUse": "[format('{0}_CL', parameters('resultstableName'))]",
            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parentname": {
                    "value": "[variables('lawFriendlyName')]"
                  },
                  "tableName": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "retentionDays": {
                    "value": 31
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2081426938105913058"
                    }
                  },
                  "parameters": {
                    "parentname": {
                      "type": "string"
                    },
                    "tableName": {
                      "type": "string"
                    },
                    "retentionDays": {
                      "type": "int",
                      "defaultValue": 31
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                      "apiVersion": "2022-10-01",
                      "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                      "properties": {
                        "totalRetentionInDays": "[parameters('retentionDays')]",
                        "plan": "Analytics",
                        "schema": {
                          "name": "[parameters('tableName')]",
                          "columns": [
                            {
                              "name": "TimeGenerated",
                              "type": "datetime"
                            },
                            {
                              "name": "RawData",
                              "type": "string"
                            }
                          ]
                        },
                        "retentionInDays": "[parameters('retentionDays')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('WinDisc-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "customerTags": {
                    "value": "[parameters('customerTags')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "packtag": {
                    "value": "WinDisc"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "storageAccountname": {
                    "value": "[parameters('storageAccountname')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('lawResourceId')]"
                  },
                  "tableNameToUse": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  },
                  "UserManagedIdentityId": {
                    "value": "[parameters('UserManagedIdentityId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "4841463231091957606"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "storageAccountname": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "tableNameToUse": {
                      "type": "string"
                    },
                    "customerTags": {
                      "type": "object"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "UserManagedIdentityId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "tempTags": {
                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                      "instanceName": "[parameters('instanceName')]",
                      "MonitoringPackType": "Discovery",
                      "solutionVersion": "[parameters('solutionVersion')]"
                    },
                    "tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                    "appName": "[format('{0}-windiscovery', parameters('instanceName'))]",
                    "appDescription": "Windows Workload discovery",
                    "OS": "Windows",
                    "appVersionName": "1.0.0"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appDescription": {
                            "value": "[variables('appDescription')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "osType": {
                            "value": "[variables('OS')]"
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1322876657246934676"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "aigname": {
                              "type": "string"
                            },
                            "osType": {
                              "type": "string"
                            },
                            "appDescription": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications",
                              "apiVersion": "2024-03-03",
                              "name": "[format('{0}/{1}', parameters('aigname'), parameters('appName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "supportedOSType": "[parameters('osType')]",
                                "description": "[parameters('appDescription')]"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('upload-discovery-{0}', variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "containerName": {
                            "value": "discovery"
                          },
                          "filename": {
                            "value": "discover.zip"
                          },
                          "storageAccountName": {
                            "value": "[parameters('storageAccountname')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          },
                          "UserManagedIdentityId": {
                            "value": "[parameters('UserManagedIdentityId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "5200230085175839476"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "storageAccountName": {
                              "type": "string"
                            },
                            "filename": {
                              "type": "string"
                            },
                            "containerName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            },
                            "UserManagedIdentityId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "$fxv#0": "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",
                            "discoveryContainerName": "discovery",
                            "tempfilename": "download.tmp"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2023-08-01",
                              "name": "deployscript-windiscover",
                              "tags": "[parameters('tags')]",
                              "location": "[parameters('location')]",
                              "kind": "AzureCLI",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('UserManagedIdentityId'))]": {}
                                }
                              },
                              "properties": {
                                "azCliVersion": "2.42.0",
                                "timeout": "PT5M",
                                "retentionInterval": "PT1H",
                                "environmentVariables": [
                                  {
                                    "name": "AZURE_STORAGE_ACCOUNT",
                                    "value": "[parameters('storageAccountName')]"
                                  },
                                  {
                                    "name": "CONTENT",
                                    "value": "[variables('$fxv#0')]"
                                  }
                                ],
                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                              }
                            }
                          ],
                          "outputs": {
                            "fileURL": {
                              "type": "string",
                              "value": "[format('{0}{1}/{2}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}-App', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "appVersionName": {
                            "value": "[variables('appVersionName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "targetRegion": {
                            "value": "[parameters('location')]"
                          },
                          "mediaLink": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}', variables('OS'))), '2022-09-01').outputs.fileURL.value]"
                          },
                          "installCommands": {
                            "value": "powershell -command \"ren windiscovery discover.zip; expand-archive ./discover.zip . ; ./install.ps1\""
                          },
                          "removeCommands": {
                            "value": "powershell -command \"Unregister-ScheduledTask -TaskName 'Monstar Packs Discovery' '\\'\""
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          },
                          "packageFileName": {
                            "value": "discover.zip"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "15746020392038745111"
                            }
                          },
                          "parameters": {
                            "aigname": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "appVersionName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "targetRegion": {
                              "type": "string"
                            },
                            "mediaLink": {
                              "type": "string"
                            },
                            "packageFileName": {
                              "type": "string"
                            },
                            "installCommands": {
                              "type": "string"
                            },
                            "removeCommands": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications/versions",
                              "apiVersion": "2024-03-03",
                              "name": "[format('{0}/{1}/{2}', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "publishingProfile": {
                                  "source": {
                                    "mediaLink": "[parameters('mediaLink')]"
                                  },
                                  "manageActions": {
                                    "install": "[parameters('installCommands')]",
                                    "remove": "[parameters('removeCommands')]"
                                  },
                                  "settings": {
                                    "packageFileName": "[parameters('packageFileName')]"
                                  },
                                  "enableHealthCheck": false,
                                  "targetRegions": [
                                    {
                                      "name": "[parameters('targetRegion')]",
                                      "regionalReplicaCount": 1,
                                      "storageAccountType": "Standard_LRS"
                                    }
                                  ],
                                  "replicaCount": 1,
                                  "excludeFromLatest": false,
                                  "storageAccountType": "Standard_LRS"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "appVersionId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Compute/galleries/applications/versions', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}', variables('OS')))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-DCR-{1}Discovery', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "endpointResourceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "filepatterns": {
                            "value": [
                              "C:\\WindowsAzure\\Discovery\\*.csv"
                            ]
                          },
                          "kind": {
                            "value": "Windows"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "lawResourceId": {
                            "value": "[parameters('lawResourceId')]"
                          },
                          "OS": {
                            "value": "Windows"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "tableName": {
                            "value": "[parameters('tableNameToUse')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "packtype": {
                            "value": "Discovery"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "6398790429983616841"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "lawResourceId": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "filepatterns": {
                              "type": "array"
                            },
                            "OS": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "endpointResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the resource id of the data collection endpoint."
                              }
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "streamName": "[format('Custom-{0}', parameters('tableName'))]",
                            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/dataCollectionRules",
                              "apiVersion": "2023-03-11",
                              "name": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                "instanceName": "[parameters('instanceName')]",
                                "MonitoringPackType": "[parameters('packtype')]"
                              },
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "dataSources": {
                                  "logFiles": [
                                    {
                                      "streams": [
                                        "[variables('streamName')]"
                                      ],
                                      "filePatterns": "[parameters('filepatterns')]",
                                      "format": "text",
                                      "settings": {
                                        "text": {
                                          "recordStartTimestampFormat": "ISO 8601"
                                        }
                                      },
                                      "name": "[parameters('tableName')]"
                                    }
                                  ]
                                },
                                "destinations": {
                                  "logAnalytics": [
                                    {
                                      "workspaceResourceId": "[parameters('lawResourceId')]",
                                      "name": "[variables('lawFriendlyName')]"
                                    }
                                  ]
                                },
                                "dataFlows": [
                                  {
                                    "streams": [
                                      "[variables('streamName')]"
                                    ],
                                    "destinations": [
                                      "[variables('lawFriendlyName')]"
                                    ],
                                    "transformKql": "source",
                                    "outputStream": "[variables('streamName')]"
                                  }
                                ],
                                "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                "streamDeclarations": {
                                  "[format('{0}', variables('streamName'))]": {
                                    "columns": [
                                      {
                                        "name": "TimeGenerated",
                                        "type": "datetime"
                                      },
                                      {
                                        "name": "RawData",
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ruleId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS')))]"
                            },
                            "ruleName": {
                              "type": "string",
                              "value": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('LxDisc-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "storageAccountname": {
                    "value": "[parameters('storageAccountname')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('lawResourceId')]"
                  },
                  "tableNameToUse": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "packtag": {
                    "value": "LxDisc"
                  },
                  "customerTags": {
                    "value": "[parameters('customerTags')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  },
                  "UserManagedIdentityId": {
                    "value": "[parameters('UserManagedIdentityId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "5851577557651319400"
                    }
                  },
                  "parameters": {
                    "UserManagedIdentityId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "storageAccountname": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "tableNameToUse": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "customerTags": {
                      "type": "object"
                    },
                    "instanceName": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "filename": "discover.tar",
                    "tempTags": {
                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                      "instanceName": "[parameters('instanceName')]",
                      "MonitoringPackType": "Discovery",
                      "solutionVersion": "[parameters('solutionVersion')]"
                    },
                    "tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                    "appName": "[format('{0}-LxDiscovery', parameters('instanceName'))]",
                    "appDescription": "Linux Workload discovery",
                    "OS": "Linux",
                    "appVersionName": "1.0.0"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}-{2}', parameters('instanceName'), variables('OS'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appDescription": {
                            "value": "[variables('appDescription')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "osType": {
                            "value": "[variables('OS')]"
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1322876657246934676"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "aigname": {
                              "type": "string"
                            },
                            "osType": {
                              "type": "string"
                            },
                            "appDescription": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications",
                              "apiVersion": "2024-03-03",
                              "name": "[format('{0}/{1}', parameters('aigname'), parameters('appName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "supportedOSType": "[parameters('osType')]",
                                "description": "[parameters('appDescription')]"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('upload-discovery-{0}-{1}-{2}', variables('OS'), parameters('instanceName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "containerName": {
                            "value": "discovery"
                          },
                          "filename": {
                            "value": "[variables('filename')]"
                          },
                          "storageAccountName": {
                            "value": "[parameters('storageAccountname')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          },
                          "UserManagedIdentityId": {
                            "value": "[parameters('UserManagedIdentityId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "18026369093345398653"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "storageAccountName": {
                              "type": "string"
                            },
                            "filename": {
                              "type": "string"
                            },
                            "containerName": {
                              "type": "string"
                            },
                            "UserManagedIdentityId": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "$fxv#0": "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
                            "discoveryContainerName": "discovery",
                            "tempfilename": "download.tmp"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "deployscript-MonstarPacks",
                              "tags": "[parameters('tags')]",
                              "location": "[parameters('location')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('UserManagedIdentityId'))]": {}
                                }
                              },
                              "kind": "AzureCLI",
                              "properties": {
                                "azCliVersion": "2.42.0",
                                "timeout": "PT5M",
                                "retentionInterval": "PT1H",
                                "environmentVariables": [
                                  {
                                    "name": "AZURE_STORAGE_ACCOUNT",
                                    "value": "[parameters('storageAccountName')]"
                                  },
                                  {
                                    "name": "CONTENT",
                                    "value": "[variables('$fxv#0')]"
                                  }
                                ],
                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                              }
                            }
                          ],
                          "outputs": {
                            "fileURL": {
                              "type": "string",
                              "value": "[format('{0}{1}/{2}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}-App-{2}', parameters('instanceName'), variables('OS'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "appVersionName": {
                            "value": "[variables('appVersionName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "targetRegion": {
                            "value": "[parameters('location')]"
                          },
                          "mediaLink": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}-{1}-{2}', variables('OS'), parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value]"
                          },
                          "installCommands": {
                            "value": "[format('tar -xvf {0} && chmod +x ./install.sh && ./install.sh', variables('filename'))]"
                          },
                          "removeCommands": {
                            "value": "/opt/microsoft/discovery/uninstall.sh"
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          },
                          "packageFileName": {
                            "value": "[variables('filename')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "15746020392038745111"
                            }
                          },
                          "parameters": {
                            "aigname": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "appVersionName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "targetRegion": {
                              "type": "string"
                            },
                            "mediaLink": {
                              "type": "string"
                            },
                            "packageFileName": {
                              "type": "string"
                            },
                            "installCommands": {
                              "type": "string"
                            },
                            "removeCommands": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications/versions",
                              "apiVersion": "2024-03-03",
                              "name": "[format('{0}/{1}/{2}', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "publishingProfile": {
                                  "source": {
                                    "mediaLink": "[parameters('mediaLink')]"
                                  },
                                  "manageActions": {
                                    "install": "[parameters('installCommands')]",
                                    "remove": "[parameters('removeCommands')]"
                                  },
                                  "settings": {
                                    "packageFileName": "[parameters('packageFileName')]"
                                  },
                                  "enableHealthCheck": false,
                                  "targetRegions": [
                                    {
                                      "name": "[parameters('targetRegion')]",
                                      "regionalReplicaCount": 1,
                                      "storageAccountType": "Standard_LRS"
                                    }
                                  ],
                                  "replicaCount": 1,
                                  "excludeFromLatest": false,
                                  "storageAccountType": "Standard_LRS"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "appVersionId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Compute/galleries/applications/versions', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}-{2}', parameters('instanceName'), variables('OS'), parameters('location')))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}-{1}-{2}', variables('OS'), parameters('instanceName'), parameters('location')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('LinuxDiscoveryDCR-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "endpointResourceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "filepatterns": {
                            "value": [
                              "/opt/microsoft/discovery/*.csv"
                            ]
                          },
                          "kind": {
                            "value": "Linux"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "lawResourceId": {
                            "value": "[parameters('lawResourceId')]"
                          },
                          "OS": {
                            "value": "Linux"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "tableName": {
                            "value": "[parameters('tableNameToUse')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "packtype": {
                            "value": "Discovery"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "6398790429983616841"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "lawResourceId": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "filepatterns": {
                              "type": "array"
                            },
                            "OS": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "endpointResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the resource id of the data collection endpoint."
                              }
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "streamName": "[format('Custom-{0}', parameters('tableName'))]",
                            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/dataCollectionRules",
                              "apiVersion": "2023-03-11",
                              "name": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                "instanceName": "[parameters('instanceName')]",
                                "MonitoringPackType": "[parameters('packtype')]"
                              },
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "dataSources": {
                                  "logFiles": [
                                    {
                                      "streams": [
                                        "[variables('streamName')]"
                                      ],
                                      "filePatterns": "[parameters('filepatterns')]",
                                      "format": "text",
                                      "settings": {
                                        "text": {
                                          "recordStartTimestampFormat": "ISO 8601"
                                        }
                                      },
                                      "name": "[parameters('tableName')]"
                                    }
                                  ]
                                },
                                "destinations": {
                                  "logAnalytics": [
                                    {
                                      "workspaceResourceId": "[parameters('lawResourceId')]",
                                      "name": "[variables('lawFriendlyName')]"
                                    }
                                  ]
                                },
                                "dataFlows": [
                                  {
                                    "streams": [
                                      "[variables('streamName')]"
                                    ],
                                    "destinations": [
                                      "[variables('lawFriendlyName')]"
                                    ],
                                    "transformKql": "source",
                                    "outputStream": "[variables('streamName')]"
                                  }
                                ],
                                "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                "streamDeclarations": {
                                  "[format('{0}', variables('streamName'))]": {
                                    "columns": [
                                      {
                                        "name": "TimeGenerated",
                                        "type": "datetime"
                                      },
                                      {
                                        "name": "RawData",
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ruleId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS')))]"
                            },
                            "ruleName": {
                              "type": "string",
                              "value": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('results{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parentname": {
                    "value": "[variables('lawFriendlyName')]"
                  },
                  "tableName": {
                    "value": "[variables('resultstableNameToUse')]"
                  },
                  "retentionDays": {
                    "value": 31
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "1255332294702827265"
                    }
                  },
                  "parameters": {
                    "parentname": {
                      "type": "string"
                    },
                    "tableName": {
                      "type": "string"
                    },
                    "retentionDays": {
                      "type": "int",
                      "defaultValue": 31
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                      "apiVersion": "2022-10-01",
                      "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                      "properties": {
                        "totalRetentionInDays": "[parameters('retentionDays')]",
                        "plan": "Analytics",
                        "schema": {
                          "name": "[parameters('tableName')]",
                          "columns": [
                            {
                              "name": "TimeGenerated",
                              "type": "datetime"
                            },
                            {
                              "name": "Tag",
                              "type": "string"
                            },
                            {
                              "name": "ResourceId",
                              "type": "string"
                            },
                            {
                              "name": "OS",
                              "type": "string"
                            },
                            {
                              "name": "Location",
                              "type": "string"
                            }
                          ]
                        },
                        "retentionInDays": "[parameters('retentionDays')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('DiscoveryResults-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceResourceId": {
                    "value": "[parameters('lawResourceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "ruleName": {
                    "value": "[format('discoveryResults-{0}', variables('lawFriendlyName'))]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "tableName": {
                    "value": "[variables('resultstableNameToUse')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8830504372643311254"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "ruleName": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "tableName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "streamname": "[format('Custom-{0}', parameters('tableName'))]",
                    "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2023-03-11",
                      "name": "[format('{0}-discovery', parameters('ruleName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "description": "Data collection rule for workload discovery.",
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "streamDeclarations": {
                          "[format('{0}', variables('streamname'))]": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "Tag",
                                "type": "string"
                              },
                              {
                                "name": "ResourceId",
                                "type": "string"
                              },
                              {
                                "name": "OS",
                                "type": "string"
                              },
                              {
                                "name": "Location",
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                              "name": "[variables('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "[format('{0}', variables('streamname'))]"
                            ],
                            "destinations": [
                              "[variables('wsfriendlyname')]"
                            ],
                            "transformKql": "source | project TimeGenerated, Tag, ResourceId, OS, Location",
                            "outputStream": "[variables('streamname')]"
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "RuleId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-discovery', parameters('ruleName')))]"
                    },
                    "dcrImmutableId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-discovery', parameters('ruleName'))), '2023-03-11').immutableId]"
                    },
                    "streamName": {
                      "type": "string",
                      "value": "[variables('streamname')]"
                    },
                    "tableName": {
                      "type": "string",
                      "value": "[format('{0}-discovery', parameters('ruleName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('results{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('updateSiteConfig-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "functionName": {
                    "value": "[parameters('functionName')]"
                  },
                  "appSettings": {
                    "value": {
                      "discoveryDCRImmutableId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('DiscoveryResults-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.dcrImmutableId.value]",
                      "DiscoveryResultsTableName": "[variables('resultstableNameToUse')]"
                    }
                  },
                  "currentAppSettings": {
                    "value": "[list(resourceId(parameters('subscriptionId'), parameters('resourceGroupName'), 'Microsoft.Web/sites/config', parameters('functionName'), 'appsettings'), '2024-04-01').properties]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "14660183399238099724"
                    }
                  },
                  "parameters": {
                    "functionName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the function app."
                      }
                    },
                    "appSettings": {
                      "type": "object",
                      "metadata": {
                        "description": "The new application settings to be added or updated."
                      }
                    },
                    "currentAppSettings": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('functionName'), 'appsettings')]",
                      "properties": "[union(parameters('currentAppSettings'), parameters('appSettings'))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('DiscoveryResults-{0}-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "condition": "[and(parameters('newGrafana'), parameters('deployGrafana'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('azureManagedGrafana-{0}', parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "location": {
            "value": "[parameters('grafanaLocation')]"
          },
          "grafanaName": {
            "value": "[parameters('grafanaName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17298094867159064977"
            }
          },
          "parameters": {
            "grafanaName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "solutionTag": {
              "type": "string"
            },
            "instanceName": {
              "type": "string"
            }
          },
          "variables": {
            "ReaderRoleId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "LogAnalyticsContribuorRoleId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
            "MonitoringContributorRoleId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa"
          },
          "resources": [
            {
              "type": "Microsoft.Dashboard/grafana",
              "apiVersion": "2022-08-01",
              "name": "[parameters('grafanaName')]",
              "tags": "[parameters('Tags')]",
              "sku": {
                "name": "Standard"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMGRReadP_{0}_{1}', parameters('grafanaName'), parameters('instanceName'))]",
              "subscriptionId": "[subscription().subscriptionId]",
              "location": "[resourceGroup().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('ReaderRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Reader"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "12046791720435112264"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMGLAWP-{0}_{1}', parameters('grafanaName'), parameters('instanceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('LogAnalyticsContribuorRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Log Analytics Contributor"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "18441567381332934980"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMGMonP_{0}_{1}', parameters('grafanaName'), parameters('instanceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('MonitoringContributorRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Monitor Contributor Role"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "18441567381332934980"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            }
          ],
          "outputs": {
            "grafanaId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName')))]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('MonitoringPacks-backend-{0}', parameters('instanceName'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsLocation": {
            "value": "[parameters('appInsightsLocation')]"
          },
          "functionname": {
            "value": "[variables('functionName')]"
          },
          "lawresourceid": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName'))), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "imageGalleryName": {
            "value": "[variables('ImageGalleryName')]"
          },
          "logicappname": {
            "value": "[variables('logicAppName')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          },
          "collectTelemetry": {
            "value": "[parameters('collectTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "3466556108963886929"
            }
          },
          "parameters": {
            "functionname": {
              "type": "string",
              "metadata": {
                "description": "The name for the function app that you wish to create"
              }
            },
            "logicappname": {
              "type": "string"
            },
            "instanceName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "lawresourceid": {
              "type": "string"
            },
            "appInsightsLocation": {
              "type": "string"
            },
            "Tags": {
              "type": "object",
              "metadata": {
                "description": "UTC timestamp used to create distinct deployment scripts for each deployment"
              }
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "imageGalleryName": {
              "type": "string"
            },
            "collectTelemetry": {
              "type": "bool"
            }
          },
          "variables": {
            "$fxv#0": "{\r\n  \"customerUsageAttribution\": {\r\n    \"SolutionIdentifier\": \"pid-be73d263-1f29-42ad-adf2-253234454db6\"\r\n  }\r\n}",
            "packPolicyRoleDefinitionIds": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ],
            "backendFunctionRoleDefinitionIds": [
              "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
              "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
              "48b40c6e-82e0-4eb3-90d5-19e40f49b624",
              "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
              "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "36243c78-bf99-498c-9df9-86d9f8d28608",
              "f1a07417-d97a-45cb-824c-7a7467783830",
              "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
              "3913510d-42f4-4e42-8a64-420c390055eb",
              "641177b8-a67a-45b9-a033-47bc880bb21e",
              "0618ae3d-2930-4bb7-aa00-718db34ee9f9"
            ],
            "logicappRequiredRoleassignments": [
              "4633458b-17de-408a-b874-0445c86b69e6"
            ],
            "telemetryInfo": "[json(variables('$fxv#0'))]"
          },
          "resources": [
            {
              "condition": "[parameters('collectTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('telemetryInfo').customerUsageAttribution.SolutionIdentifier]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "16208364426447542075"
                    }
                  },
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('imageGalleryName')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "galleryname": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "userManagedIdentity": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "16468091443145566085"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "galleryname": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "userManagedIdentity": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/galleries",
                      "apiVersion": "2024-03-03",
                      "name": "[parameters('galleryname')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentity'))]": {}
                        }
                      },
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "description": "Monitoring gallery"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('opstables-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dceId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.dceId.value]"
                  },
                  "workspaceResourceId": {
                    "value": "[parameters('lawresourceid')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8286277544341004779"
                    }
                  },
                  "parameters": {
                    "retentionDays": {
                      "type": "int",
                      "defaultValue": 7
                    },
                    "availableIaaSPackstablename": {
                      "type": "string",
                      "defaultValue": "AvailableIaaSPacks_CL"
                    },
                    "supportedServicesTableName": {
                      "type": "string",
                      "defaultValue": "SupportedServices_CL"
                    },
                    "monitoredPaaSTableName": {
                      "type": "string",
                      "defaultValue": "MonitoredPaaSTable_CL"
                    },
                    "nonMonitoredPaaSTableName": {
                      "type": "string",
                      "defaultValue": "NonMonitoredPaaSTable_CL"
                    },
                    "Tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "ruleName": {
                      "type": "string",
                      "defaultValue": "AMP-backendDCR"
                    },
                    "workspaceResourceId": {
                      "type": "string"
                    },
                    "wsfriendlyname": {
                      "type": "string",
                      "defaultValue": "[split(parameters('workspaceResourceId'), '/')[8]]"
                    }
                  },
                  "variables": {
                    "streamnames": [
                      "[format('Custom-{0}', parameters('availableIaaSPackstablename'))]",
                      "[format('Custom-{0}', parameters('supportedServicesTableName'))]",
                      "[format('Custom-{0}', parameters('monitoredPaaSTableName'))]",
                      "[format('Custom-{0}', parameters('nonMonitoredPaaSTableName'))]"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                      "apiVersion": "2025-02-01",
                      "name": "[format('{0}/{1}', parameters('wsfriendlyname'), parameters('availableIaaSPackstablename'))]",
                      "properties": {
                        "totalRetentionInDays": "[parameters('retentionDays')]",
                        "plan": "Analytics",
                        "schema": {
                          "name": "[parameters('availableIaaSPackstablename')]",
                          "columns": [
                            {
                              "name": "TimeGenerated",
                              "type": "datetime"
                            },
                            {
                              "name": "Name",
                              "type": "string"
                            },
                            {
                              "name": "Tag",
                              "type": "string"
                            },
                            {
                              "name": "NumberofRules",
                              "type": "int"
                            },
                            {
                              "name": "NumberofAlerts",
                              "type": "int"
                            },
                            {
                              "name": "AlertNames",
                              "type": "string"
                            }
                          ]
                        },
                        "retentionInDays": "[parameters('retentionDays')]"
                      }
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                      "apiVersion": "2025-02-01",
                      "name": "[format('{0}/{1}', parameters('wsfriendlyname'), parameters('supportedServicesTableName'))]",
                      "properties": {
                        "totalRetentionInDays": "[parameters('retentionDays')]",
                        "plan": "Analytics",
                        "schema": {
                          "name": "[parameters('supportedServicesTableName')]",
                          "columns": [
                            {
                              "name": "TimeGenerated",
                              "type": "datetime"
                            },
                            {
                              "name": "namespace",
                              "type": "string"
                            },
                            {
                              "name": "category",
                              "type": "string"
                            },
                            {
                              "name": "service",
                              "type": "string"
                            },
                            {
                              "name": "metricnamespace",
                              "type": "string"
                            },
                            {
                              "name": "tag",
                              "type": "string"
                            },
                            {
                              "name": "NumberOfMetrics",
                              "type": "int"
                            },
                            {
                              "name": "Details",
                              "type": "string"
                            }
                          ]
                        },
                        "retentionInDays": "[parameters('retentionDays')]"
                      }
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                      "apiVersion": "2025-02-01",
                      "name": "[format('{0}/{1}', parameters('wsfriendlyname'), parameters('monitoredPaaSTableName'))]",
                      "properties": {
                        "totalRetentionInDays": "[parameters('retentionDays')]",
                        "plan": "Analytics",
                        "schema": {
                          "name": "[parameters('monitoredPaaSTableName')]",
                          "columns": [
                            {
                              "name": "TimeGenerated",
                              "type": "datetime"
                            },
                            {
                              "name": "Resource",
                              "type": "string"
                            },
                            {
                              "name": "resourcetype",
                              "type": "string"
                            },
                            {
                              "name": "resourceGroup",
                              "type": "string"
                            },
                            {
                              "name": "location",
                              "type": "string"
                            },
                            {
                              "name": "subscriptionId",
                              "type": "string"
                            },
                            {
                              "name": "resourcekind",
                              "type": "string"
                            },
                            {
                              "name": "AlertCount",
                              "type": "int"
                            }
                          ]
                        },
                        "retentionInDays": "[parameters('retentionDays')]"
                      }
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                      "apiVersion": "2025-02-01",
                      "name": "[format('{0}/{1}', parameters('wsfriendlyname'), parameters('nonMonitoredPaaSTableName'))]",
                      "properties": {
                        "totalRetentionInDays": "[parameters('retentionDays')]",
                        "plan": "Analytics",
                        "schema": {
                          "name": "[parameters('nonMonitoredPaaSTableName')]",
                          "columns": [
                            {
                              "name": "TimeGenerated",
                              "type": "datetime"
                            },
                            {
                              "name": "Resource",
                              "type": "string"
                            },
                            {
                              "name": "resourcetype",
                              "type": "string"
                            },
                            {
                              "name": "resourceGroup",
                              "type": "string"
                            },
                            {
                              "name": "location",
                              "type": "string"
                            },
                            {
                              "name": "subscriptionId",
                              "type": "string"
                            },
                            {
                              "name": "resourcekind",
                              "type": "string"
                            }
                          ]
                        },
                        "retentionInDays": "[parameters('retentionDays')]"
                      }
                    },
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2023-03-11",
                      "name": "[format('{0}-ops', parameters('ruleName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "description": "Data collection rule for workload backend management.",
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "streamDeclarations": {
                          "[format('{0}', variables('streamnames')[0])]": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "Name",
                                "type": "string"
                              },
                              {
                                "name": "Tag",
                                "type": "string"
                              },
                              {
                                "name": "NumberofRules",
                                "type": "int"
                              },
                              {
                                "name": "NumberofAlerts",
                                "type": "int"
                              },
                              {
                                "name": "AlertNames",
                                "type": "string"
                              }
                            ]
                          },
                          "[format('{0}', variables('streamnames')[1])]": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "namespace",
                                "type": "string"
                              },
                              {
                                "name": "category",
                                "type": "string"
                              },
                              {
                                "name": "service",
                                "type": "string"
                              },
                              {
                                "name": "metricnamespace",
                                "type": "string"
                              },
                              {
                                "name": "tag",
                                "type": "string"
                              },
                              {
                                "name": "NumberOfMetrics",
                                "type": "int"
                              },
                              {
                                "name": "Details",
                                "type": "string"
                              }
                            ]
                          },
                          "[format('{0}', variables('streamnames')[2])]": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "Resource",
                                "type": "string"
                              },
                              {
                                "name": "resourcetype",
                                "type": "string"
                              },
                              {
                                "name": "resourceGroup",
                                "type": "string"
                              },
                              {
                                "name": "location",
                                "type": "string"
                              },
                              {
                                "name": "subscriptionId",
                                "type": "string"
                              },
                              {
                                "name": "resourcekind",
                                "type": "string"
                              },
                              {
                                "name": "AlertCount",
                                "type": "int"
                              }
                            ]
                          },
                          "[format('{0}', variables('streamnames')[3])]": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "Resource",
                                "type": "string"
                              },
                              {
                                "name": "resourcetype",
                                "type": "string"
                              },
                              {
                                "name": "resourceGroup",
                                "type": "string"
                              },
                              {
                                "name": "location",
                                "type": "string"
                              },
                              {
                                "name": "subscriptionId",
                                "type": "string"
                              },
                              {
                                "name": "resourcekind",
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                              "name": "[parameters('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "[format('{0}', variables('streamnames')[0])]"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ],
                            "transformKql": "source",
                            "outputStream": "[variables('streamnames')[0]]"
                          },
                          {
                            "streams": [
                              "[format('{0}', variables('streamnames')[1])]"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ],
                            "transformKql": "source",
                            "outputStream": "[variables('streamnames')[1]]"
                          },
                          {
                            "streams": [
                              "[format('{0}', variables('streamnames')[2])]"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ],
                            "transformKql": "source | project TimeGenerated, Resource, resourcetype, resourceGroup, location, subscriptionId, resourcekind",
                            "outputStream": "[variables('streamnames')[2]]"
                          },
                          {
                            "streams": [
                              "[format('{0}', variables('streamnames')[3])]"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ],
                            "transformKql": "source | project TimeGenerated, Resource, resourcetype, resourceGroup, location, subscriptionId, resourcekind",
                            "outputStream": "[variables('streamnames')[3]]"
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces/tables', parameters('wsfriendlyname'), parameters('availableIaaSPackstablename'))]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces/tables', parameters('wsfriendlyname'), parameters('monitoredPaaSTableName'))]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces/tables', parameters('wsfriendlyname'), parameters('nonMonitoredPaaSTableName'))]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces/tables', parameters('wsfriendlyname'), parameters('supportedServicesTableName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "RuleId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-ops', parameters('ruleName')))]"
                    },
                    "opsdcrimmutableId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-ops', parameters('ruleName'))), '2023-03-11').immutableId]"
                    },
                    "streamNames": {
                      "type": "array",
                      "value": "[variables('streamnames')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('functionname')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "amgdStorageURL": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amgdupload-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.amgdstorageURL.value]"
                  },
                  "packsURL": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('PacksDefStorage-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value]"
                  },
                  "ambaJsonURL": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('ambaAlertsUpload-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value]"
                  },
                  "appInsightsLocation": {
                    "value": "[parameters('appInsightsLocation')]"
                  },
                  "functionname": {
                    "value": "[parameters('functionname')]"
                  },
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "userManagedIdentity": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "userManagedIdentityClientId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                  },
                  "packsUserManagedId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "packsModulesRootURL": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('modulesstorage-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.modulesURL.value]"
                  },
                  "applicationsURL": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('applicationstostorage-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.applicationsURL.value]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "opsdcrimmutableId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('opstables-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.opsdcrimmutableId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "9654006953679596300"
                    }
                  },
                  "parameters": {
                    "functionname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "userManagedIdentity": {
                      "type": "string"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string"
                    },
                    "packsUserManagedId": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "filename": {
                      "type": "string",
                      "defaultValue": "backend.zip"
                    },
                    "sasExpiry": {
                      "type": "string",
                      "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                    },
                    "lawresourceid": {
                      "type": "string"
                    },
                    "appInsightsLocation": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "packsURL": {
                      "type": "string"
                    },
                    "ambaJsonURL": {
                      "type": "string"
                    },
                    "packsModulesRootURL": {
                      "type": "string"
                    },
                    "applicationsURL": {
                      "type": "string"
                    },
                    "amgdStorageURL": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "opsdcrimmutableId": {
                      "type": "string"
                    },
                    "apiManagementKey": {
                      "type": "string",
                      "defaultValue": "[base64(newGuid())]"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "deploymentContainerName": "deploy",
                    "tempfilename": "[format('{0}.tmp', parameters('filename'))]",
                    "sasConfig": {
                      "signedResourceTypes": "sco",
                      "signedPermission": "r",
                      "signedServices": "b",
                      "signedExpiry": "[parameters('sasExpiry')]",
                      "signedProtocol": "https",
                      "keyToSign": "key2"
                    },
                    "keyName": "monitoringKey"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('deployscript-Function-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "AZURE_STORAGE_KEY",
                            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('deploymentContainerName'), parameters('filename'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/config', parameters('functionname'), 'appsettings')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}-farm', parameters('functionname'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "sku": {
                        "name": "Y1",
                        "tier": "Dynamic",
                        "size": "Y1",
                        "family": "Y",
                        "capacity": 0
                      },
                      "kind": "functioapp",
                      "properties": {
                        "perSiteScaling": false,
                        "elasticScaleEnabled": false,
                        "maximumElasticWorkerCount": 1,
                        "isSpot": false,
                        "reserved": false,
                        "isXenon": false,
                        "hyperV": false,
                        "targetWorkerCount": 0,
                        "targetWorkerSizeId": 0,
                        "zoneRedundant": false
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2024-04-01",
                      "name": "[parameters('functionname')]",
                      "location": "[parameters('location')]",
                      "kind": "functionapp",
                      "tags": "[parameters('Tags')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentity'))]": {}
                        }
                      },
                      "properties": {
                        "enabled": true,
                        "hostNameSslStates": [
                          {
                            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
                            "sslState": "Disabled",
                            "hostType": "Standard"
                          },
                          {
                            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
                            "sslState": "Disabled",
                            "hostType": "Repository"
                          }
                        ],
                        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]",
                        "reserved": false,
                        "isXenon": false,
                        "hyperV": false,
                        "siteConfig": {
                          "numberOfWorkers": 1,
                          "acrUseManagedIdentityCreds": false,
                          "alwaysOn": false,
                          "ipSecurityRestrictions": [
                            {
                              "ipAddress": "Any",
                              "action": "Allow",
                              "priority": 1,
                              "name": "Allow all",
                              "description": "Allow all access"
                            }
                          ],
                          "scmIpSecurityRestrictions": [
                            {
                              "ipAddress": "Any",
                              "action": "Allow",
                              "priority": 1,
                              "name": "Allow all",
                              "description": "Allow all access"
                            }
                          ],
                          "http20Enabled": false,
                          "functionAppScaleLimit": 200,
                          "minimumElasticInstanceCount": 0,
                          "minTlsVersion": "1.2",
                          "cors": {
                            "allowedOrigins": [
                              "https://portal.azure.com"
                            ],
                            "supportCredentials": true
                          }
                        },
                        "scmSiteAlsoStopped": false,
                        "clientAffinityEnabled": false,
                        "clientCertEnabled": false,
                        "clientCertMode": "Required",
                        "hostNamesDisabled": false,
                        "containerSize": 1536,
                        "dailyMemoryTimeQuota": 0,
                        "httpsOnly": true,
                        "redundancyMode": "None",
                        "storageAccountRequired": false,
                        "keyVaultReferenceIdentity": "SystemAssigned"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', parameters('functionname'), 'appsettings')]",
                      "properties": {
                        "MSI_CLIENT_ID": "[parameters('userManagedIdentityClientId')]",
                        "PacksUserManagedId": "[parameters('packsUserManagedId')]",
                        "InstanceName": "[parameters('instanceName')]",
                        "AMBAJsonURL": "[parameters('ambaJsonURL')]",
                        "PacksURL": "[parameters('packsURL')]",
                        "PacksModulesRootURL": "[parameters('packsModulesRootURL')]",
                        "applicationsURL": "[parameters('applicationsURL')]",
                        "amgdStorageURL": "[parameters('amgdStorageURL')]",
                        "storageAccountName": "[parameters('storageAccountName')]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "SolutionTag": "[parameters('solutionTag')]",
                        "galleryName": "[parameters('imageGalleryName')]",
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]",
                        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]",
                        "WEBSITE_CONTENTSHARE": "[parameters('storageAccountName')]",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey)]",
                        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                        "subscriptionId": "[parameters('subscriptionId')]",
                        "opsdcrimmutableId": "[parameters('opsdcrimmutableId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('functionname'))]",
                        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/extensions",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}', parameters('functionname'), 'MSDeploy')]",
                      "properties": {
                        "packageUri": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, variables('deploymentContainerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]",
                        "[resourceId('Microsoft.Resources/deploymentScripts', format('deployscript-Function-{0}-{1}', parameters('instanceName'), parameters('location')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('functionname')]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('appInsightsLocation')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "publicNetworkAccessForIngestion": "Enabled",
                        "publicNetworkAccessForQuery": "Enabled",
                        "WorkspaceResourceId": "[parameters('lawresourceid')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites/host/functionKeys",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/default/{1}', parameters('functionname'), variables('keyName'))]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "name": "[variables('keyName')]",
                        "value": "[parameters('apiManagementKey')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/config', parameters('functionname'), 'appsettings')]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('ambaAlertsUpload-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amgdupload-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('applicationstostorage-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('imageGalleryName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('modulesstorage-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('opstables-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('PacksDefStorage-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('logicappname')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "functioname": {
                    "value": "[parameters('functionname')]"
                  },
                  "logicAppName": {
                    "value": "[parameters('logicappname')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "keyvaultid": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))), '2022-09-01').outputs.kvResourceId.value]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6926915386702646703"
                    }
                  },
                  "parameters": {
                    "functioname": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "location": {
                      "type": "string"
                    },
                    "keyvaultid": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "logicAppName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "keyVaultName": "[split(parameters('keyvaultid'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Logic/workflows",
                      "apiVersion": "2019-05-01",
                      "name": "[parameters('logicAppName')]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "state": "Enabled",
                        "definition": {
                          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "$connections": {
                              "defaultValue": {},
                              "type": "Object"
                            }
                          },
                          "triggers": {
                            "manual": {
                              "type": "Request",
                              "kind": "Http",
                              "inputs": {}
                            }
                          },
                          "actions": {
                            "Get_Secret": {
                              "runAfter": {
                                "Parse_JSON": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('FunctionKey')}/value"
                              }
                            },
                            "Parse_JSON": {
                              "runAfter": {},
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                  "properties": {
                                    "function": {
                                      "type": "string"
                                    },
                                    "functionBody": {
                                      "properties": {},
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Switch": {
                              "runAfter": {
                                "Get_Secret": [
                                  "Succeeded"
                                ]
                              },
                              "cases": {
                                "Case": {
                                  "case": "packmgmt",
                                  "actions": {
                                    "packmgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "Headers": {
                                          "x-functions-key": "[listKeys(resourceId('Microsoft.Web/sites/host', parameters('functioname'), 'default'), '2022-09-01').functionKeys.monitoringKey]"
                                        },
                                        "function": {
                                          "id": "[format('{0}/functions/packmgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_2": {
                                  "case": "alertmgmt",
                                  "actions": {
                                    "alertConfigMgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/alertConfigMgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_3": {
                                  "case": "opstasksondemand",
                                  "actions": {
                                    "opstasksondemand": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/opstasksondemand', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_4": {
                                  "case": "agentMgmt",
                                  "actions": {
                                    "agentMgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/agentmgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "default": {
                                "actions": {}
                              },
                              "expression": "@body('Parse_JSON')?['Function']",
                              "type": "Switch"
                            }
                          },
                          "outputs": {}
                        },
                        "parameters": {
                          "$connections": {
                            "value": {
                              "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'keyvault')]",
                                "connectionName": "keyvault",
                                "connectionProperties": {
                                  "authentication": {
                                    "type": "ManagedServiceIdentity"
                                  }
                                },
                                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/eastus/managedApis/keyvault', parameters('subscriptionId'))]"
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/connections', 'keyvault')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/connections",
                      "apiVersion": "2018-07-01-preview",
                      "name": "keyvault",
                      "properties": {
                        "displayName": "KeyVault",
                        "authenticatedUser": {},
                        "overallStatus": "Ready",
                        "statuses": [
                          {
                            "status": "Ready"
                          }
                        ],
                        "connectionState": "Enabled",
                        "parameterValueSet": {
                          "name": "oauthMI",
                          "values": {
                            "vaultName": {
                              "value": "[variables('keyVaultName')]"
                            }
                          }
                        },
                        "customParameterValues": {},
                        "createdTime": "2023-10-12T20:52:26.0864876Z",
                        "changedTime": "2023-10-12T20:52:26.0864876Z",
                        "api": {
                          "name": "keyvault",
                          "displayName": "Azure Key Vault",
                          "description": "Azure Key Vault is a service to securely store and access secrets.",
                          "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1656/1.0.1656.3432/keyvault/icon.png",
                          "brandColor": "#0079d6",
                          "category": "Standard",
                          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/keyvault', parameters('subscriptionId'), parameters('location'))]",
                          "type": "Microsoft.Web/locations/managedApis"
                        },
                        "testLinks": [],
                        "testRequests": []
                      },
                      "location": "[parameters('location')]"
                    }
                  ],
                  "outputs": {
                    "logicAppPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '2019-05-01', 'full').identity.principalId]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('functionname'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6)))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('workbook2deployment-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7662151034088516243"
                    }
                  },
                  "parameters": {
                    "Tags": {
                      "type": "object"
                    },
                    "location": {
                      "type": "string"
                    },
                    "lawresourceid": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "version": "Notebook/1.0",
                      "items": [
                        {
                          "type": 1,
                          "content": {
                            "json": "# Azure Monitor Starter Packs - Extended Admin Centre - V3.0 (Preview)\n\n\n"
                          },
                          "customWidth": "50",
                          "name": "textTitle"
                        },
                        {
                          "type": 9,
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                              {
                                "id": "741661c9-5e51-44bc-8e8e-bfc6396f2646",
                                "version": "KqlParameterItem/1.0",
                                "name": "showHelp",
                                "label": "Show Help Info",
                                "type": 10,
                                "isRequired": true,
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[[\n    { \"value\":\"yes\", \"label\":\"Yes\",\"default\": \"yes\" },\n    { \"value\":\"no\", \"label\":\"No\" }\n]",
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "value": "no"
                              },
                              {
                                "version": "KqlParameterItem/1.0",
                                "name": "showHidden",
                                "label": "Show Hidden Items",
                                "type": 10,
                                "isRequired": true,
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[[\n    { \"value\":\"yes\", \"label\":\"Yes\",\"default\": \"yes\" },\n    { \"value\":\"no\", \"label\":\"No\" }\n]",
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "value": "no",
                                "id": "f538abc2-3e09-45aa-a81e-b966a64e0703"
                              }
                            ],
                            "style": "above",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          "customWidth": "50",
                          "name": "showHelpparameter"
                        },
                        {
                          "type": 11,
                          "content": {
                            "version": "LinkItem/1.0",
                            "style": "tabs",
                            "links": [
                              {
                                "id": "a9a63932-4a11-4fe1-938c-02619e609193",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Getting Started",
                                "subTarget": "gettingstarted",
                                "style": "link"
                              },
                              {
                                "id": "4f0ca437-37b0-42f6-a150-e994338f5185",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Status",
                                "subTarget": "status",
                                "style": "link"
                              },
                              {
                                "id": "15f0fa97-4286-48d6-9dea-26a956197d26",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Servers",
                                "subTarget": "discovery",
                                "style": "link"
                              },
                              {
                                "id": "c5269422-e723-43b6-b923-8bf44fd49320",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Services",
                                "subTarget": "paas",
                                "style": "link"
                              },
                              {
                                "id": "7499a88f-a536-41d7-9b58-9ebae1b5290e",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Alert Rules",
                                "subTarget": "alertmanagement",
                                "style": "link"
                              },
                              {
                                "id": "c2a67d72-dd46-44ea-adba-b9d70915c607",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Packs",
                                "subTarget": "rulemanagement",
                                "style": "link"
                              },
                              {
                                "id": "d8f7936d-170f-430d-af7d-ac22115a9e38",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Agents",
                                "subTarget": "agentmgmt",
                                "style": "link"
                              },
                              {
                                "id": "afec2944-3bd3-4bd3-8afa-6dc39d0b623a",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Discovery(Prototype)",
                                "subTarget": "autodiscovery",
                                "style": "link"
                              },
                              {
                                "id": "e1f636a4-1593-49ef-bf35-abf708e2be48",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Configuration",
                                "subTarget": "backend",
                                "style": "link"
                              },
                              {
                                "id": "295ed7b4-8237-409a-87d2-1efd439bea97",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Logs",
                                "subTarget": "logs",
                                "style": "link"
                              }
                            ]
                          },
                          "customWidth": "75",
                          "name": "mainLinksTab"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "loadType": "always",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "## General Parameters\n\n### Subscriptions\n\nSelect the Subscriptions that will be used in the Configuration\n\n### Logic App\n\nSelect the logic app to be used. Typically the shoulbe a single one but if more instances exist, select the one for the instance you want to use.\n\n### Function Apps\n\nSelect the Backend Function to be used. Typically the shoulbe a single one but if more instances exist, select the one for the instance you want to use.\n\n### Config Function Key\n\nThis field will be automatically populated once the function is selected.\n\n### Workspace\n\nSelect the Log Analytics Workspace to be used for this instance.\n\n### Azure Managed Grafana\n\nSelect the Azure Managed Grafana if you have deployed one along with the solution.",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - Configuration "
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "04f4ebcc-705a-4c79-a15a-bcba40d8dd51",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "instanceName",
                                      "label": "Instance",
                                      "type": 2,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\r\n| where type =~ 'microsoft.web/sites' and ['kind'] =~ 'functionapp'\r\n| where isnotempty(tags.MonitorStarterPacksComponents)\r\n| project instanceNames=tags.instanceName",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "mcp2"
                                    },
                                    {
                                      "id": "7a778b2c-619d-4f82-bd1c-810f853af6fd",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Subscriptions",
                                      "type": 6,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "multiSelect": true,
                                      "quote": "'",
                                      "delimiter": ",",
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::all"
                                        ],
                                        "includeAll": false,
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "value": [
                                        "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8"
                                      ]
                                    },
                                    {
                                      "id": "16d48fd3-189f-4604-9582-da7cf5c93d7c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "FunctionApps",
                                      "label": "Function Apps",
                                      "type": 5,
                                      "description": "Select the function to provide the access key.",
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\n| where type =~ 'microsoft.web/sites' and ['kind'] =~ 'functionapp'\n| where isnotempty(tags.MonitorStarterPacksComponents)\n| where tags.instanceName == '{instanceName}'\n| project id,name",
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources",
                                      "value": "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourceGroups/rg-MonstarPacks2/providers/Microsoft.Web/sites/AMP-mcp2-e315fe54-Function"
                                    },
                                    {
                                      "id": "4552c35d-c26c-4cbf-a4cf-b2e57ff7ee78",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Workspace",
                                      "label": "WorkSpace",
                                      "type": 5,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\n| where type == \"microsoft.operationalinsights/workspaces\"\n| where tags.instanceName =~ '{instanceName}'\n| project id",
                                      "crossComponentResources": [
                                        "value::all"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "queryType": 1,
                                      "value": "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourceGroups/rg-MonstarPacks2/providers/Microsoft.OperationalInsights/workspaces/Monster-LAW2"
                                    },
                                    {
                                      "id": "1efb8bbe-532a-491b-b3c4-55f1402ee280",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "logicAppResource",
                                      "label": "Logic App",
                                      "type": 5,
                                      "isRequired": true,
                                      "query": "resources\n| where type == \"microsoft.logic/workflows\" \n| where isnotempty(tags.MonitorStarterPacksComponents)\n| where tags.instanceName =~ '{instanceName}'\n| project Id=id, Name=name",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "resourceTypeFilter": {
                                          "microsoft.logic/workflows": true
                                        },
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourceGroups/rg-MonstarPacks2/providers/Microsoft.Logic/workflows/AMP-mcp2-LogicApp"
                                    },
                                    {
                                      "id": "ea93902e-9856-4bd4-998d-ea88378907a7",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "GrafanaInstance",
                                      "label": "Azure Managed Grafana",
                                      "type": 2,
                                      "description": "Select an Azure Managed Grafana instance, if available.",
                                      "isGlobal": true,
                                      "query": "resources\n| where type =~ \"microsoft.dashboard/grafana\"\n| where isnotempty(tags.monitorStarterPacksComponents) or isnotempty(tags.MonitorStarterPacksComponents)\n| where tags.instanceName == '{instanceName}'\n| project id, label=properties.endpoint",
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources",
                                      "value": null
                                    },
                                    {
                                      "id": "7961f447-f72b-401d-a26b-283a44e45b2e",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "DefaultAG",
                                      "label": "Default Action Group",
                                      "type": 5,
                                      "isRequired": true,
                                      "query": "resources\r\n| where type == \"microsoft.insights/actiongroups\"\r\n| where properties.enabled == 'true'\r\n| project id",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": []
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourceGroups/rg-Hub/providers/microsoft.insights/actiongroups/Jose"
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 12
                                },
                                "customWidth": "100",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "backend"
                                },
                                "name": "generalParams"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "03340268-1ac8-4d74-a76e-bc37a4bdd45c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "appInsightsName",
                                      "label": "",
                                      "type": 1,
                                      "isRequired": true,
                                      "query": "resources\n| where type == \"microsoft.insights/components\"\n| where name == \"{FunctionApps:name}\"\n| project id",
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources"
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 10
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHidden",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "parameters - AvailableIaaSPacks"
                              },
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "f5b4b4b6-c5d7-4941-b807-8a61df48a0f4",
                                      "cellValue": "configTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Resource List",
                                      "subTarget": "resources",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 4"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where (isnotempty(tags.MonitorStarterPacks) or isnotempty(tags.MonitorStarterPacksComponents)) and (tags.instanceName == '{instanceName}')\n|union ( \npolicyresources | where isnotempty(properties.metadata.MonitorStarterPacks))\n| summarize count() by type, tostring(tags.instanceName)\n| sort by count_ desc ",
                                  "size": 0,
                                  "title": "Monitoring Packs resources and Components",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "filter": true
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "configTab",
                                  "comparison": "isEqualTo",
                                  "value": "resources"
                                },
                                "name": "Installed Components",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              }
                            ],
                            "exportParameters": true
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "backend"
                          },
                          "name": "ConfigStatusGroup"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "SupportedServices_CL\r\n| summarize arg_max(TimeGenerated,*) by namespace\r\n| project namespace",
                            "size": 0,
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspace}"
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "showHidden",
                            "comparison": "isEqualTo",
                            "value": "yes"
                          },
                          "name": "queryServiceTags - Global"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "# Getting Started\n\n## Instance: <span style=\"color: #0000FF\"> {instanceName} </span>\n\nWelcome to the Azure Monitoring Packs. This workbook was designed to help you configuring the solution. Here you can:\n- Enable/Disable monitoring packs for one or more VMs or services. You may also disable all the monitoring for a specific server or service. This will remove the tags and the rule associations or alerts.\n- Enable/Disable Alerts in bulk. You can also assign a different Action group to one or more alerts or delete the rules**\n- Review discovered applications (VMs only)\n- Manage agent configuration (install/remove)\n\n## <span style=\"color: #FF0000\">If this is the first time using this solution, please configure the parameters in the ***Configuration*** tab and save the workbook for proper functionality.</span>\n\n\n## Please check the Monitoring Packs repository for updates. [Azure MONitor STARter Packs](http://github.com/Azure/AzureMonitorStarterPacks)\n## Also check the Azure Monitor Baseline Alerts ([AMBA](http://aka.ms/amba)) website for the details on the alerts.\n\n\n"
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "gettingstarted"
                          },
                          "name": "textGetStarted"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "04e679ee-16ae-46f6-a85b-d47751c0bcca",
                                      "cellValue": "dashTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Active Alerts",
                                      "subTarget": "alerts",
                                      "preText": "",
                                      "style": "link"
                                    },
                                    {
                                      "id": "a4b4c83e-fce7-48e2-95ce-acf12c050eaa",
                                      "cellValue": "dashTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "IaaS Summary",
                                      "subTarget": "iaas",
                                      "style": "link"
                                    },
                                    {
                                      "id": "4e01b5fe-51d5-4ba4-9d3c-6f5b5ef2d93c",
                                      "cellValue": "dashTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Services Summary",
                                      "subTarget": "paas",
                                      "style": "link"
                                    },
                                    {
                                      "id": "16d88bee-194e-4097-89eb-a7463578a1e8",
                                      "cellValue": "dashTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Dashboards",
                                      "subTarget": "dashboards",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 3 - Copy"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## Active Alerts List\n\nThis tab shows all Monitoring Packs related alerts that are currently active.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "text - Summary - Active Alerts"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "alertsmanagementresources\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status,severity=properties.context.context.severity\n| where isnotempty(alertRule)\n| join (resources\n| where type == \"microsoft.insights/scheduledqueryrules\" or type ==\"microsoft.insights/metricalerts\" or type == 'microsoft.insights/activitylogalerts'\n| where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\n| extend alertRule=tolower(tostring(['id']))) on alertRule\n| project id, ['Alert Name']=name,['Details']=['Alert Id'], Status=status, Resource=resourceId, Sev=severity\n| where Status=='Activated'\n",
                                        "size": 0,
                                        "title": "Active Alerts",
                                        "exportedParameters": [
                                          {
                                            "fieldName": "Details",
                                            "parameterName": "selectedAlertId",
                                            "parameterType": 5
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Details",
                                              "formatter": 7,
                                              "formatOptions": {
                                                "linkTarget": "OpenBlade",
                                                "linkLabel": "Details",
                                                "linkIsContextBlade": true,
                                                "bladeOpenContext": {
                                                  "bladeName": "AlertDetails.ReactView",
                                                  "extensionName": "Microsoft_Azure_Monitoring_Alerts",
                                                  "bladeJsonParameters": "{\n    \"alertId\": \"{selectedAlertId}\",\n    \"invokedFrom\": \"CopyLinkFeature\"\n}"
                                                }
                                              }
                                            },
                                            {
                                              "columnMatch": "Status",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "Activated",
                                                    "representation": "up",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "Resource",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": "Resource",
                                                "linkIsContextBlade": true,
                                                "showIcon": true
                                              }
                                            },
                                            {
                                              "columnMatch": "Sev",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "1",
                                                    "representation": "Sev1",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "2",
                                                    "representation": "Sev2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "3",
                                                    "representation": "Sev3",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "4",
                                                    "representation": "Sev4",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "0",
                                                    "representation": "Sev0",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "unknown",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "Alert Id",
                                              "formatter": 7,
                                              "formatOptions": {
                                                "linkTarget": "Resource",
                                                "linkLabel": "Details",
                                                "linkIsContextBlade": true
                                              }
                                            },
                                            {
                                              "columnMatch": "Target",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": null,
                                                "showIcon": true
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "customWidth": "66",
                                      "name": "activeAlertsquery"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "alertsmanagementresources\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status\n| where isnotempty(alertRule)\n| join (resources\n| where type == \"microsoft.insights/scheduledqueryrules\" or type ==\"microsoft.insights/metricalerts\" or type == 'microsoft.insights/activitylogalerts'\n| where isnotempty(tags.MonitorStarterPacks) and tags.instanceName in ({alertsInstance})\n| extend alertRule=tolower(tostring(['id']))) on alertRule\n| summarize count() by AlertType=type\n\n",
                                        "size": 0,
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart"
                                      },
                                      "customWidth": "33",
                                      "name": "activeAlertsQueryPie"
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "dashTab",
                                  "comparison": "isEqualTo",
                                  "value": "alerts"
                                },
                                "name": "groupDashAlerts"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## IaaS Information\n\nThe summary below shows details related to the IaaS Monitoring packs.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "text - Summary - IaaS"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' or type =~ 'microsoft.compute/virtualmachines'\n| extend MonitorStatus=iff(isnotempty(tostring(tags.MonitorStarterPacks)),'Monitored','Not Monitored')\n| where tags.instanceName =~ '{instanceName}'\n| summarize count() by MonitorStatus",
                                        "size": 1,
                                        "title": "Monitoring Status (Tags)",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart",
                                        "chartSettings": {
                                          "seriesLabelSettings": [
                                            {
                                              "seriesName": "Monitored",
                                              "color": "green"
                                            },
                                            {
                                              "seriesName": "Not Monitored",
                                              "color": "orange"
                                            }
                                          ]
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "Monitoring Status Tags",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| where tags.instanceName =~ '{instanceName}'\n| extend\n    JoinID = toupper(id)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| where tags.instanceName =~ '{instanceName}'\n| extend\n    JoinID = toupper(id)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| summarize count() by AgentInstalled=iff(isempty(ExtensionName),\"No\",\"Yes\")",
                                        "size": 1,
                                        "title": "Agent Install Status",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart",
                                        "chartSettings": {
                                          "seriesLabelSettings": [
                                            {
                                              "seriesName": "Yes",
                                              "label": "AMA Installed",
                                              "color": "green"
                                            },
                                            {
                                              "seriesName": "No",
                                              "label": "No AMA",
                                              "color": "red"
                                            }
                                          ]
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "agentInstallStatus",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| where tags.instanceName =~ '{instanceName}'\n| summarize by Pack=MPs,rulename=tostring(name)\n//ruleId=properties.dataCollectionRuleId\n| join (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Associated=count() by Pack\n| sort by Pack asc",
                                        "size": 1,
                                        "title": "Servers/Pack (Association)",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart",
                                        "tileSettings": {
                                          "showBorder": false,
                                          "titleContent": {
                                            "columnMatch": "Pack",
                                            "formatter": 1
                                          },
                                          "leftContent": {
                                            "columnMatch": "Associated",
                                            "formatter": 12,
                                            "formatOptions": {
                                              "palette": "auto"
                                            },
                                            "numberFormat": {
                                              "unit": 17,
                                              "options": {
                                                "maximumSignificantDigits": 3,
                                                "maximumFractionDigits": 2
                                              }
                                            }
                                          }
                                        },
                                        "mapSettings": {
                                          "locInfo": "LatLong",
                                          "sizeSettings": "Associated",
                                          "sizeAggregation": "Sum",
                                          "legendMetric": "Associated",
                                          "legendAggregation": "Sum",
                                          "itemColorSettings": {
                                            "type": "heatmap",
                                            "colorAggregation": "Sum",
                                            "nodeColorField": "Associated",
                                            "heatmapPalette": "greenRed"
                                          }
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "AssociatedResourceStatsperTag - Copy - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' or type =~ 'microsoft.compute/virtualmachines'\n| project name, MPs=tags.MonitorStarterPacks\n| where isnotnull(MPs)\n| mv-expand (split(MPs,','))\n| summarize Total=count() by tostring(MPs)\n| sort by MPs asc\n\n\n",
                                        "size": 1,
                                        "title": "Tagged Resources per Tag",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "tiles",
                                        "tileSettings": {
                                          "titleContent": {
                                            "columnMatch": "MPs",
                                            "formatter": 1
                                          },
                                          "leftContent": {
                                            "columnMatch": "Total",
                                            "formatter": 12,
                                            "formatOptions": {
                                              "palette": "auto"
                                            },
                                            "numberFormat": {
                                              "unit": 17,
                                              "options": {
                                                "style": "decimal",
                                                "maximumFractionDigits": 2,
                                                "maximumSignificantDigits": 3
                                              }
                                            }
                                          },
                                          "showBorder": false
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "taggedResourceStatsperTag",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| where tags.instanceName =~ 'mcp1'\n| summarize by Pack=MPs,rulename=tostring(name)\n| join  (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Associated=count() by Pack\n| sort by Pack asc",
                                        "size": 1,
                                        "title": "Associated Servers per Pack",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "tiles",
                                        "tileSettings": {
                                          "showBorder": false,
                                          "titleContent": {
                                            "columnMatch": "Pack",
                                            "formatter": 1
                                          },
                                          "leftContent": {
                                            "columnMatch": "Associated",
                                            "formatter": 12,
                                            "formatOptions": {
                                              "palette": "auto"
                                            },
                                            "numberFormat": {
                                              "unit": 17,
                                              "options": {
                                                "maximumSignificantDigits": 3,
                                                "maximumFractionDigits": 2
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "AssociatedResourceStatsperTag - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "dashTab",
                                  "comparison": "isEqualTo",
                                  "value": "iaas"
                                },
                                "name": "groupDashboardIaaS"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\n| project nameSpace=tolower(strcat(tostring(split(properties.scopes[0],\"/\")[-3]),\"/\",tostring(split(properties.scopes[0],\"/\")[-2]))),Target=split(properties.scopes[0],\"/\")[-1]\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\n| project nameSpace=tolower(strcat(tostring(split(properties.scopes[0],\"/\")[-3]),\"/\",tostring(split(properties.scopes[0],\"/\")[-2]))),Target=split(properties.scopes[0],\"/\")[-1])\n| distinct tostring(Target),nameSpace\n| summarize Total=count() by nameSpace",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "piechart"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "dashTab",
                                  "comparison": "isEqualTo",
                                  "value": "paas"
                                },
                                "name": "query - resourcestomerge - nonIaaS"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\r\n| where ['type'] =~ 'microsoft.insights/workbooks' or ['type'] =~ 'microsoft.dashboard/dashboards'\r\n| extend realName=iff(['type']=~'microsoft.insights/workbooks',properties.displayName,name)\r\n| project id, Name=realName,type,MP=tags.MonitorStarterPacks\r\n| where isnotnull(MP)\r\n| union (\r\nresources\r\n| where ['type']  =~ 'microsoft.dashboard/grafana'\r\n| project id,Name=name, type,MP=tags.MonitorStarterPacksComponents\r\n| where isnotnull(MP))\r\n| project Link=id,Name, type=iff(['type']=~'microsoft.insights/workbooks',\"Workbook\",iff(['type']=~'microsoft.dashboard/grafana', \"Azure Managed Grafana\", \"Azure Monitor Dashboard with Grafana\"))\r\n",
                                  "size": 0,
                                  "title": "Dashboards",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Link",
                                        "formatter": 7,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "linkLabel": "Go"
                                        }
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "dashTab",
                                  "comparison": "isEqualTo",
                                  "value": "dashboards"
                                },
                                "name": "query - Dashboards"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "status"
                          },
                          "name": "dashboardgroup"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "## Server Monitoring Setup\n\nSelect servers on the right to assign a pack. Once the backend is done with the assigning, the server will show on the left side grid.\n\nOn the left side grid, the monitoring can be updated to add more packs, as well as to remove a specific pack or remove any monitoring altogether from the server.\n\nOnce a pack is added for the first time, the required alerts, dashboards and DCRs will be created. The selected servers will be associated with the proper DCRs and will have the VM Application(s) installed, if any.\n\nWhen the monitoring is removed, the associations are removed as well as the VM Applications, if any.",
                            "style": "info"
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "tabSelection",
                              "comparison": "isEqualTo",
                              "value": "discovery"
                            },
                            {
                              "parameterName": "showHelp",
                              "comparison": "isEqualTo",
                              "value": "yes"
                            }
                          ],
                          "name": "serversMonitoringHelptext"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Servers - {instanceName} instance",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "When Monitoring is first enabled, the Azure Monitoring Agent will also be installed to the selected servers. See the help for details.",
                                  "style": "info"
                                },
                                "name": "text - 3"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId=tolower(tostring(resourceId))//ruleId=properties.dataCollectionRuleId\n| join kind= inner  (\nresources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| where MPs !in~ ('WinDisc', 'LxDisc')\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| summarize by resourceId, Pack\n| summarize Packs=tostring(make_list(Pack)) by resourceId\n| project Packs2=tostring(Packs), resourceId",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Packs",
                                        "formatter": 1
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHidden",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "showPin": false,
                                "name": "query - associatedVMs"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources | where type =~ 'microsoft.hybridcompute/machines' \n| extend MP=tolower(tags.MonitorStarterPacks), instanceName=tolower(tags.instanceName),state=iff(properties.status =='Connected','On','Off')\n| where isnotempty(MP) and instanceName == '{instanceName}'\n| where MP !in~ ('WinDisc', 'LxDisc')\n//| extend overrides=tags.CustomThresholds\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.osType, subscriptionId, Location=location, state\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| extend MP=tolower(tags.MonitorStarterPacks), instanceName=tolower(tags.instanceName),state=iff(properties.extended.instanceView.powerState.code =='PowerState/running','On','Off')\n| where MP !in~ ('WinDisc', 'LxDisc')\n//| extend overrides=tags.CustomThresholds\n| where isnotempty(MP) and instanceName == '{instanceName}' and (tolower(tags.Vendor) != 'databricks')\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location, state)\n",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Packs",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "OS",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Subscription",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHidden",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "showPin": false,
                                "name": "query - taggedVMs"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\",\"mergeType\":\"leftouter\",\"leftTable\":\"query - taggedVMs\",\"rightTable\":\"query - associatedVMs\",\"leftColumn\":\"Resource\",\"rightColumn\":\"resourceId\"}],\"projectRename\":[{\"originalName\":\"[query - associatedVMs].Packs2\",\"mergedName\":\"Associations\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].state\",\"mergedName\":\"state\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - associatedVMs].MPs\",\"mergedName\":\"MPs\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Resource Group\",\"mergedName\":\"Resource Group\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Packs\",\"mergedName\":\"Packs\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].OS\",\"mergedName\":\"OS\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Location\",\"mergedName\":\"Location\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].resourceId\",\"mergedName\":\"resourceId\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].instanceName\",\"mergedName\":\"instanceName\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].MP\",\"mergedName\":\"MP\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].overrides\",\"mergedName\":\"overrides\",\"fromId\":\"unknown\"}]}",
                                        "size": 0,
                                        "title": "Monitored Machines",
                                        "showRefreshButton": true,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "taggedVMs",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "queryType": 7,
                                        "visualization": "table",
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Associations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "linkColumn": "Associations",
                                                "linkTarget": "CellDetails",
                                                "linkIsContextBlade": true,
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "is Empty",
                                                    "representation": "cancelled",
                                                    "text": "",
                                                    "tooltipFormat": {
                                                      "tooltip": "{0}{1}"
                                                    }
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "",
                                                    "tooltipFormat": {
                                                      "tooltip": "{0}{1}"
                                                    }
                                                  }
                                                ],
                                                "customColumnWidthSetting": "12.2857ch"
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "Click to see associations."
                                              }
                                            },
                                            {
                                              "columnMatch": "state",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "On",
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "Off",
                                                    "representation": "stopped",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "unknown",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "resourceId",
                                              "formatter": 5
                                            },
                                            {
                                              "columnMatch": "subscriptionId",
                                              "formatter": 15,
                                              "formatOptions": {
                                                "linkTarget": null,
                                                "showIcon": true
                                              }
                                            },
                                            {
                                              "columnMatch": "overrides",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "linkTarget": "CellDetails",
                                                "linkIsContextBlade": true,
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "representation": "cancelled",
                                                    "text": ""
                                                  },
                                                  {
                                                    "operator": "!=",
                                                    "representation": "2",
                                                    "text": ""
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "Associated Packs",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "is Empty",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "showPin": false,
                                      "name": "query-mergeVMs",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "{Workspace}"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "2415a274-9657-4eb6-9179-92c0cdb31728",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTagsLeft",
                                            "label": "Add/Remove",
                                            "type": 2,
                                            "isGlobal": true,
                                            "multiSelect": true,
                                            "quote": "",
                                            "delimiter": ",",
                                            "query": "AvailableIaaSPacks_CL\r\n| summarize arg_max(TimeGenerated,*) by Tag\r\n| project Tag\r\n| where isnotempty(Tag)",
                                            "crossComponentResources": [
                                              "{Workspace}"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "queryType": 0,
                                            "resourceType": "microsoft.operationalinsights/workspaces"
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 0,
                                        "resourceType": "microsoft.operationalinsights/workspaces"
                                      },
                                      "customWidth": "25",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedVMs",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "param-IaaS-tagged"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "nav",
                                        "links": [
                                          {
                                            "id": "550df977-06a8-4c40-9cd3-aba6286ebcdf",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Add Monitoring for {PackTagsLeft} Pack(s)",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddPack\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"{PackTagsLeft}\",\n    \"PackType\": \"IaaS\",\n    \"WorkspaceId\": \"{Workspace}\",\n    \"DefaultAG\": \"{DefaultAG}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Add Monitoring",
                                              "description": "# Please confirm the change.\n\nAdd Monitoring for {PackTagsLeft} Pack(s)",
                                              "actionName": "AddMonitoringPack",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                            "cellValue": "",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove Monitoring for {PackTagsLeft} Pack(s)",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "removeTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"{PackTagsLeft}\",\n    \"PackType\": \"IaaS\",\n    \"WorkspaceId\": \"{Workspace}\",\n    \"DefaultAG\": \"{DefaultAG}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove Monitoring for {PackTagsLeft} Pack(s) \n\nServers:\n\n{taggedVMs}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "3b1af630-47ab-43e9-a5b2-d2f2e21880d0",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove All Monitoring",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"All\",\n    \"PackType\": \"IaaS\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove All Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove ALL Monitoring for Servers, including discovery configuration.",
                                              "actionName": "RemoveAllMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "75",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedVMs",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "links - 1"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "discovery"
                                },
                                "name": "TaggedGroup"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' | where isempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.osType, subscriptionId, Location=location, MP=tolower(tags.MonitorStarterPacks),state=iff(properties.status =='Connected','On','Off')\n| where isempty(MP) or MP =~ 'LxDisc' or MP =~ 'WinDisc'\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location,MP=tolower(tags.MonitorStarterPacks),state=iff(properties.extended.instanceView.powerState.code =='PowerState/running','On','Off')\n| where isempty(MP) or MP =~ 'LxDisc' or MP =~ 'WinDisc')\n| union (resources | where type =~ 'microsoft.compute/virtualmachinescalesets' and properties.orchestrationMode == 'Uniform'\n| where isempty(tolower(tags.MonitorStarterPacks)) \n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.virtualMachineProfile.storageProfile.osDisk.osType, subscriptionId, Location=location,MP=tolower(tags.MonitorStarterPacks)\n| where isempty(MP) or MP =~ 'LxDisc' or MP =~ 'WinDisc')\n| project-away MP",
                                        "size": 0,
                                        "title": "Non-monitored Machines",
                                        "noDataMessage": "No unmonitored servers. Good job!",
                                        "showRefreshButton": true,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "parameterName": "vmstotag",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "exportToExcelOptions": "all",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources",
                                        "crossComponentResources": [
                                          "{Subscriptions}"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "OS",
                                              "formatter": 1
                                            },
                                            {
                                              "columnMatch": "state",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "On",
                                                    "representation": "success",
                                                    "text": ""
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "Off",
                                                    "representation": "stopped",
                                                    "text": ""
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "unknown",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "$gen_link_Resource_0",
                                              "sortOrder": 1
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "$gen_link_Resource_0",
                                            "sortOrder": 1
                                          }
                                        ]
                                      },
                                      "name": "Non Monitores Servers",
                                      "styleSettings": {
                                        "margin": "400",
                                        "padding": "400",
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "{Workspace}"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "8a177eab-edac-41cc-84f9-a5b7de931bea",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTags",
                                            "label": "Add Pack(s)",
                                            "type": 2,
                                            "isGlobal": true,
                                            "multiSelect": true,
                                            "quote": "",
                                            "delimiter": ",",
                                            "query": "AvailableIaaSPacks_CL\r\n| summarize arg_max(TimeGenerated,*) by Tag\r\n| project Tag\r\n| where isnotempty(Tag)",
                                            "crossComponentResources": [
                                              "{Workspace}"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 0,
                                            "resourceType": "microsoft.operationalinsights/workspaces"
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 0,
                                        "resourceType": "microsoft.operationalinsights/workspaces"
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "vmstotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "param-IaaS-vmstotag"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Monitoring for {PackTags} Pack",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "addTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddPack\",\n    \"Resources\": [{vmstotag}],\n    \"Pack\": \"{PackTags}\",\n    \"PackType\": \"IaaS\",\n    \"WorkspaceId\" : \"{Workspace}\",\n    \"DefaultAG\" : \"{DefaultAG}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Monitoring Packs",
                                              "description": "# This will enable the pack for the following servers:\n{vmstotag}\n\nby adding the {PackTags} Pack(s) to the resource(s).\n\nWorkspace: {Workspace}\n\nAction Group: {DefaultAG}",
                                              "actionName": "EnableMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "vmstotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "links - 1 - Copy"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "discovery"
                                },
                                "name": "NonTaggedGroup"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "discovery"
                          },
                          "name": "Servers",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Azure Services - {instanceName} instance",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "## Services Monitoring Setup\n\nSelect service on the right to assign a pack. Once the backend is done with the assigning, the alerts for the specific service will be created and it show on the left side grid, with the number of alerts that were created.\n\nOn the left side grid, the monitoring can be updated to remove the from the service. The alerts for that specific service instance will be removed.",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - Monitoring - PaaS"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "69e06557-55cc-490c-86d2-892d7817b729",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "SelectPaasType",
                                            "label": "Select Service Type(s)",
                                            "type": 7,
                                            "multiSelect": true,
                                            "quote": "'",
                                            "delimiter": ",",
                                            "query": "resources | where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\r\n| where not(type in~ ('microsoft.compute/virtualmachines','microsoft.hybridcompute/machines',\"microsoft.insights/scheduledqueryrules\",\"microsoft.insights/metricalerts\",\"microsoft.insights/activitylogalerts\",'microsoft.insights/datacollectionrules','Microsoft.Compute/galleries/applications/versions','Microsoft.Compute/galleries/applications'))\r\n| project Resource=id, type,tag=tostring(tags.MonitorStarterPacks),resourceGroup, location, subscriptionId, ['kind']\r\n| join kind=fullouter    (resources\r\n    | where tolower(type) in (\"microsoft.insights/metricalerts\",\"microsoft.insights/activitylogalerts\")\r\n    | where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\r\n    | summarize AlertCount=count() by Resource=tostring(properties.scopes[0]), MP=tostring(tags.MonitorStarterPacks)) on Resource\r\n| summarize by Type=['type']",
                                            "crossComponentResources": [
                                              "value::tenant"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [
                                                "value::all"
                                              ],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resources/tenants",
                                            "value": [
                                              "value::all"
                                            ]
                                          }
                                        ],
                                        "style": "above",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants"
                                      },
                                      "name": "parameters - service type tagged"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "MonitoredPaaSTable_CL\r\n| summarize arg_max(TimeGenerated,*) by Resource,resourceGroup, resourcetype, location, resourcekind\r\n| where resourcetype in ({SelectPaasType})\r\n| where isnotempty(location)",
                                        "size": 0,
                                        "title": "Monitored Services",
                                        "showRefreshButton": true,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "parameterName": "taggedPaaS",
                                            "parameterType": 1,
                                            "quote": ""
                                          },
                                          {
                                            "fieldName": "tag",
                                            "parameterName": "PaaSLeftTagsOnly",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "exportToExcelOptions": "all",
                                        "queryType": 0,
                                        "resourceType": "microsoft.operationalinsights/workspaces",
                                        "crossComponentResources": [
                                          "{Workspace}"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "AlertRules",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "0",
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "is Empty",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "warning",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "Total number of alerts created by the policies. It can take a while for the alert rules to be created. If still a warning after a day, please check logs."
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "name": "query - Monitored Services",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                            "cellValue": "",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove Monitoring for {taggedPaaS:$.tag} Pack(s)",
                                            "preText": "",
                                            "postText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "removeTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedPaaS}],\n    \"Pack\": \"{PaaSLeftTagsOnly}\",\n    \"PackType\": \"PaaS\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove Monitoring for Pack(s).\n\nResources:\n\n{taggedPaaS:$.Resource}\n\nTags:\n\n{taggedPaaS:$.tag}",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "75",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedPaaS",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "actionsPaaSLeft"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "name": "TaggedGroupPaaS"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "{Workspace}"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "f6a88467-77d9-4e0e-912a-3d7b94aab938",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "SelectPaaStypeToTag",
                                            "label": "Select Service Type(s)",
                                            "type": 7,
                                            "multiSelect": true,
                                            "quote": "'",
                                            "delimiter": ",",
                                            "query": "SupportedServices_CL\r\n| summarize arg_max(TimeGenerated,*) by namespace\r\n| project namespace",
                                            "crossComponentResources": [
                                              "{Workspace}"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [
                                                "value::all"
                                              ],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 172800000
                                            },
                                            "queryType": 0,
                                            "resourceType": "microsoft.operationalinsights/workspaces",
                                            "value": [
                                              "value::all"
                                            ]
                                          }
                                        ],
                                        "style": "above",
                                        "queryType": 0,
                                        "resourceType": "microsoft.operationalinsights/workspaces"
                                      },
                                      "name": "parameters - service type not tagged"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "NonMonitoredPaaSTable_CL\r\n| summarize arg_max(TimeGenerated,*) by Resource, resourceGroup,resourcekind\r\n| where resourcetype in ({SelectPaaStypeToTag})\r\n| where isnotempty(location)",
                                        "size": 0,
                                        "title": "Non-Monitored Services",
                                        "showRefreshButton": true,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "parameterName": "paastotag",
                                            "parameterType": 1,
                                            "quote": ""
                                          },
                                          {
                                            "fieldName": "type",
                                            "parameterName": "passtotagtype",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "exportToExcelOptions": "all",
                                        "queryType": 0,
                                        "resourceType": "microsoft.operationalinsights/workspaces",
                                        "crossComponentResources": [
                                          "{Workspace}"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Total",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">=",
                                                    "thresholdValue": "1",
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "<",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "unknown",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "Total number of Alerts assigned to this resource."
                                              }
                                            }
                                          ],
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "name": "query - nonMonitored Paas - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Monitoring",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "addTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddPack\",\n    \"Resources\": [{paastotag}],\n    \"Pack\": \"{PackTagsPaaS}\",\n    \"PackType\": \"PaaS\",\n    \"Type\": \"{passtotagtype}\",\n    \"DefaultAG\": \"{DefaultAG}\",\n    \"WorkspaceId\": \"{Workspace}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Monitoring Packs",
                                              "description": "# This will enable the pack for the following services:\n***{paastotag:$.Resource}***\n\nby adding the specific Pack(s) to the resource(s).\n\n",
                                              "actionName": "EnableMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "paastotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "platformenableparameters"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "name": "NonTaggedGroup"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "paas"
                          },
                          "name": "PaaSMgmt",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Alerts - {instanceName} instance",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "355de2ec-11fb-4db8-9813-2e0bf7cdb3d0",
                                      "cellValue": "alertTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Packs' Alerts",
                                      "subTarget": "packs",
                                      "style": "link"
                                    },
                                    {
                                      "id": "d1f8bc9e-5a21-47f3-a2b3-e7fc213e04ee",
                                      "cellValue": "alertTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Other Alerts",
                                      "subTarget": "others",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 18"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "## Alert Rules Management\n\n### Select a pack on the left to visualize the alerts rules related to those packs. Select the Other Alerts tab to visualize any other alert rule that is not related to the packs.\n\nAlert rules are created dynamically when resources are assigned monitoring.",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - Alert - Packs Alerts"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "e99b4870-f7a6-4b8e-95b7-6aaeece1f438",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "AlertPack",
                                      "type": 2,
                                      "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\", \"microsoft.insights/metricalerts\",\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs\n",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": null
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "packs"
                                },
                                "name": "param-alerts-toAction"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1]\n| union (\nresources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| where tags.instanceName == '{instanceName}'\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| where MP=='{AlertPack}'",
                                  "size": 0,
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "fieldName": "",
                                      "parameterName": "alertsselected",
                                      "parameterType": 1,
                                      "quote": ""
                                    }
                                  ],
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "location",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "name",
                                        "formatter": 7
                                      }
                                    ],
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "$gen_link_Enabled_2",
                                        "sortOrder": 1
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "$gen_link_Enabled_2",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "customWidth": "70",
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "packs"
                                },
                                "name": "AlertConfigQuery",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "# Enable or Disable alerts. \n\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\n\n# Update Action Group\n## Select a list of alerts on the left and a new Action Group to assign to the alert.\n\n# Delete Alert rules\n## Select a list of alert rules to be deleted.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "AlertMgmtHelpText"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/actiongroups\"\n| where properties.enabled == 'true'\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\"(\",properties.emailReceivers[0].emailAddress,\")\")",
                                        "size": 1,
                                        "exportFieldName": "",
                                        "exportParameterName": "selectedAG",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "id",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": "OpenBlade",
                                                "linkIsContextBlade": true,
                                                "showIcon": true
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "alertsselected",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "ActionGroupsQuery",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "f5cb3ede-91d1-4414-bfa1-a1689f45d0c8",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Alerts",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Enable\", \n    \"alerts\":  [{alertsselected}]\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Alerts",
                                              "description": "# This action will Enable the selected Alerts\n\n{alertsselected}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "d9469141-a104-4696-b9cd-f0fc7e3f963e",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Disable Alerts",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Disable\", \n    \"alerts\":  [{alertsselected}]\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Disable Alerts",
                                              "description": "# This action will disable the selected Alerts\n\n{alertsselected}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "7942ba17-4942-4f4a-b2ea-e19ad806b49d",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Update Action Group",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Update\", \n    \"alerts\":  [{alertsselected}],\n    \"aGroup\": {selectedAG}\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Update Action Group",
                                              "description": "Updating alerts:\n\n\n{alertsselected}\n\nwith Action Group:\n\n{selectedAG}\n",
                                              "actionName": "updateAG",
                                              "runLabel": "Update"
                                            }
                                          },
                                          {
                                            "id": "f802b903-8a8a-458d-9c55-a428d96ba63d",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Delete Alert Rule",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Delete\", \n    \"alerts\":  [{alertsselected}]\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Delete",
                                              "description": "# Deleting Alerts\n\nThe following alert rules will be deleted:\n\n{alertsselected}",
                                              "actionName": "Delete",
                                              "runLabel": "Delete"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 8"
                                    }
                                  ]
                                },
                                "customWidth": "30",
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "packs"
                                },
                                "name": "AlertsSubGroup1"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "Alert Management - Other Alerts",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\")\n| where isempty(tags.MonitorStarterPacks)\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1]\n| union (\nresources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isempty(tags.MonitorStarterPacks)\n| project id, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isempty(tags.MonitorStarterPacks)\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])",
                                        "size": 0,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "alertsselectednopack",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "location",
                                              "formatter": 5
                                            },
                                            {
                                              "columnMatch": "name",
                                              "formatter": 7
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "$gen_link_Enabled_1",
                                              "sortOrder": 1
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "$gen_link_Enabled_1",
                                            "sortOrder": 1
                                          }
                                        ]
                                      },
                                      "customWidth": "70",
                                      "name": "queryOtherAlerts",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 12,
                                      "content": {
                                        "version": "NotebookGroup/1.0",
                                        "groupType": "editable",
                                        "items": [
                                          {
                                            "type": 1,
                                            "content": {
                                              "json": "# Enable or Disable alerts. \n\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\n\n# Update Action Group\n## Select a list of alerts on the left and a new Action Group to assign to the alert.",
                                              "style": "info"
                                            },
                                            "conditionalVisibility": {
                                              "parameterName": "showHelp",
                                              "comparison": "isEqualTo",
                                              "value": "yes"
                                            },
                                            "name": "text - 3"
                                          },
                                          {
                                            "type": 3,
                                            "content": {
                                              "version": "KqlItem/1.0",
                                              "query": "resources\n| where type == \"microsoft.insights/actiongroups\"\n| where properties.enabled == 'true'\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\"(\",properties.emailReceivers[0].emailAddress,\")\")",
                                              "size": 1,
                                              "exportFieldName": "",
                                              "exportParameterName": "selectedAG",
                                              "queryType": 1,
                                              "resourceType": "microsoft.resourcegraph/resources",
                                              "gridSettings": {
                                                "filter": true
                                              }
                                            },
                                            "name": "agQuery2",
                                            "styleSettings": {
                                              "showBorder": true
                                            }
                                          },
                                          {
                                            "type": 11,
                                            "content": {
                                              "version": "LinkItem/1.0",
                                              "style": "paragraph",
                                              "links": [
                                                {
                                                  "id": "f5cb3ede-91d1-4414-bfa1-a1689f45d0c8",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Enable Alerts",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Enable\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}",
                                                    "httpMethod": "POST",
                                                    "title": "Enable Alerts",
                                                    "description": "# This action will Enable the selected Alerts\n\n{alertsselected}",
                                                    "runLabel": "Confirm"
                                                  }
                                                },
                                                {
                                                  "id": "d9469141-a104-4696-b9cd-f0fc7e3f963e",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Disable Alerts",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Disable\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}\n",
                                                    "httpMethod": "POST",
                                                    "title": "Disable Alerts",
                                                    "description": "# This action will disable the selected Alerts\n\n{alertsselected}",
                                                    "runLabel": "Confirm"
                                                  }
                                                },
                                                {
                                                  "id": "7942ba17-4942-4f4a-b2ea-e19ad806b49d",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Update Action Group",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Update\", \n    \"alerts\":  [{alertsselectednopack}],\n    \"aGroup\": {selectedAG}\n  }\n}\n",
                                                    "httpMethod": "POST",
                                                    "title": "Update Action Group",
                                                    "description": "Updating alerts:\n\n\n{alertsselected}\n\nwith Action Group:\n\n{selectedAG}\n",
                                                    "actionName": "updateAG",
                                                    "runLabel": "Update"
                                                  }
                                                },
                                                {
                                                  "id": "eb46862a-b443-489e-a2bf-abc05c541b53",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Delete Alert Rule",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Delete\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}\n",
                                                    "httpMethod": "POST",
                                                    "title": "Delete",
                                                    "description": "# Deleting the following Alert rules:\n\n\n{alertsselectednopack}]\n",
                                                    "actionName": "Delete",
                                                    "runLabel": "Delete"
                                                  }
                                                }
                                              ]
                                            },
                                            "name": "links - 8"
                                          }
                                        ]
                                      },
                                      "customWidth": "30",
                                      "conditionalVisibility": {
                                        "parameterName": "alertsselectednopack",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "AlertsSubGroup1"
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "others"
                                },
                                "name": "AlertMGMT - Others"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "alertmanagement"
                          },
                          "name": "AlertMGMT"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "13be6531-5163-4697-b6bd-cb7381b15d65",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "IaaS Packs Associtation",
                                      "subTarget": "associations",
                                      "preText": "Iaas",
                                      "style": "link"
                                    },
                                    {
                                      "id": "82684c12-244f-4488-9223-da3e48a6206f",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "DCR Details",
                                      "subTarget": "dcrdetails",
                                      "style": "link"
                                    },
                                    {
                                      "id": "0f666555-5e2a-4eb9-bd6c-cef1365a6ce9",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "VMInsights Status",
                                      "subTarget": "vmistatus",
                                      "style": "link"
                                    },
                                    {
                                      "id": "ec137a21-cd22-46df-b002-a68a964465e4",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Import IaaS Packs",
                                      "subTarget": "importPack",
                                      "style": "link"
                                    },
                                    {
                                      "id": "2d44157f-bd79-4963-9133-518597498a1b",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "IaaS Packs Details",
                                      "subTarget": "IaaSPacksDetails",
                                      "style": "link"
                                    },
                                    {
                                      "id": "2cc2c20b-8b44-49d5-ab3f-8917f4bfa9ab",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Services Packs Details",
                                      "subTarget": "servicesPacksDetails",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 2"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "# VM Insights tab\r\n\r\n## Use this tab to check the configuration of any VM Insights rule in the environment. Use it to avoid duplication of data.\r\n\r\nThe first sections will show each machine and to how many VM Insights rule it is assigned to. Selecting the entry will trigger the details view on the right.\r\n\r\nThe second section will show each VM Insights rule and how many machines are assigned to it. Selecting the item will reveal details about each rule (which machines are assigned to it)\r\n\r\n",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - VM insights help"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "VMInsights Status",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=inner  (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(sourceResourceId), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| project serverName=sourceResourceId, name\n| summarize VMInsightsAssociations=count(name) by ['Server Name']=serverName \n",
                                        "size": 1,
                                        "title": "Servers and DCR associations",
                                        "exportFieldName": "Server Name",
                                        "exportParameterName": "vmiSelectedServer",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "VMInsightsAssociations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "If more than one VMInsights association is found, there may be data duplication to one or more Log Analytics workspaces."
                                              }
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "$gen_thresholds_VMInsightsAssociations_1",
                                              "sortOrder": 2
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "$gen_thresholds_VMInsightsAssociations_1",
                                            "sortOrder": 2
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "name": "query - 3",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=leftouter   (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(split(sourceResourceId,'/')[8]), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| where sourceResourceId=~'{vmiSelectedServer}'\n| summarize by DCRId=dataCollectionRuleId\n",
                                        "size": 1,
                                        "title": "Details for {vmiSelectedServer}",
                                        "exportFieldName": "DCR",
                                        "exportParameterName": "vmiSelectedDCR",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "VMInsightsAssociations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "If more than one VMInsights association is found, there may be data duplication to one or more Log Analytics workspaces."
                                              }
                                            }
                                          ],
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "customWidth": "50",
                                      "name": "query - VM Insights per DCR",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=inner   (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(split(sourceResourceId,'/')[8]), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| project serverName, dataCollectionRuleId\n| summarize Servers=count(serverName) by DCRId=dataCollectionRuleId\n",
                                        "size": 1,
                                        "title": "VMInsights DCRs and Servers",
                                        "exportFieldName": "DCRId",
                                        "exportParameterName": "VMIdataCollectionRuleId",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "dataCollectionRuleId",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": "Resource",
                                                "linkIsContextBlade": true,
                                                "showIcon": true
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "customWidth": "50",
                                      "name": "query - VMInsight rules details",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=leftouter   (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(split(sourceResourceId,'/')[8]), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| where dataCollectionRuleId=='{VMIdataCollectionRuleId}'\n| project ['Server Name']=sourceResourceId\n\n",
                                        "size": 1,
                                        "title": "Associated Servers",
                                        "exportFieldName": "DCR",
                                        "exportParameterName": "vmiSelectedDCR",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "VMInsightsAssociations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "If more than one VMInsights association is found, there may be data duplication to one or more Log Analytics workspaces."
                                              }
                                            }
                                          ],
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "customWidth": "50",
                                      "name": "query - VM Insights per DCR - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "packsTab",
                                  "comparison": "isEqualTo",
                                  "value": "vmistatus"
                                },
                                "name": "group - VMInsights status"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "IaaS Packs Association",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) and ['tags'].instanceName =~ '{instanceName}'//or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)\n| join (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n) on rulename\n| project-away rulename1,resourceId\n| summarize Associated=count() by Pack, rulename\n| order by Pack asc",
                                        "size": 0,
                                        "title": "Select Pack to see associated Machines",
                                        "exportFieldName": "rulename",
                                        "exportParameterName": "selectedRule",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Group",
                                              "formatter": 1
                                            }
                                          ],
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "customWidth": "50",
                                      "name": "query - 6 - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=split(properties.dataCollectionRuleId,\"/\")[8],resourceName=split(resourceId,\"/\")[8],resourceId//ruleId=properties.dataCollectionRuleId\n| where '{selectedRule}'==rulename",
                                        "size": 0,
                                        "title": "Associated Machines",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Group",
                                              "formatter": 1
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "customWidth": "50",
                                      "name": "query - 6 - Copy - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "packsTab",
                                  "comparison": "isEqualTo",
                                  "value": "associations"
                                },
                                "name": "rulemanagement",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\n| extend ds=properties.dataSources\n| project id,Type=kind, location,syslog=ds.syslog[0].streams[0], windowsEventLogs=ds.windowsEventLogs[0].streams[0], logsettings=ds.logFiles[0].name,iislogs=ds.iisLogs[0].name,performanceCounters=ds.performanceCounters[0].streams[0],\ndataCollectionEndpointId=properties.dataCollectionEndpointId,transformKql=properties.dataFlows[0].transformKql,workspaceResourceId=properties.destinations.logAnalytics[0].workspaceResourceId,State=properties.provisioningState\n",
                                  "size": 0,
                                  "title": "List of Currently Configured Data Collection Rules",
                                  "showRefreshButton": true,
                                  "exportedParameters": [
                                    {
                                      "parameterName": "selectedRule"
                                    },
                                    {
                                      "fieldName": "destinationName",
                                      "parameterName": "destinationName",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "",
                                      "parameterName": "resourceGroupName",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "workspaceResourceId",
                                      "parameterName": "workspace",
                                      "parameterType": 5
                                    },
                                    {
                                      "fieldName": "properties",
                                      "parameterName": "properties",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "name",
                                      "parameterName": "name",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "location",
                                      "parameterName": "location",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "Rule Type",
                                      "parameterName": "kind",
                                      "parameterType": 1
                                    },
                                    {
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "id",
                                      "parameterName": "id",
                                      "parameterType": 1
                                    }
                                  ],
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscriptions}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "id",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkColumn": "id",
                                          "linkTarget": "Resource",
                                          "linkIsContextBlade": true,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Type",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Windows",
                                              "representation": "Initial_Access",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Linux",
                                              "representation": "Console",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "Capture",
                                              "text": "Custom"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "location",
                                        "formatter": 17,
                                        "formatOptions": {
                                          "customColumnWidthSetting": "94px"
                                        }
                                      },
                                      {
                                        "columnMatch": "syslog",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "subTarget": "2",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "bladeOpenContext": {
                                            "bladeName": "DataCollectionRulesDataSourceManagementViewModel",
                                            "extensionName": "Microsoft_Azure_Monitoring",
                                            "bladeParameters": [
                                              {
                                                "name": "id",
                                                "source": "column",
                                                "value": "id"
                                              }
                                            ]
                                          },
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "windowsEventLogs",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "logsettings",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": ""
                                            }
                                          ],
                                          "customColumnWidthSetting": "10ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "iislogs",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": ""
                                            }
                                          ],
                                          "customColumnWidthSetting": "10ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "performanceCounters",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "performanceCounters",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured!"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "dataCollectionEndpointId",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "21.7143ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "transformKql",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "queries",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "stopped",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "|",
                                              "representation": "success",
                                              "text": "Ingestion KQL"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "stopped",
                                              "text": "Custom KQL"
                                            }
                                          ],
                                          "bladeOpenContext": {
                                            "bladeName": "CreateMicrosoftTableTransformBlade",
                                            "extensionName": "Microsoft_OperationsManagementSuite_Workspace",
                                            "bladeJsonParameters": "{\r\n\t\"workspaceResourceId\" : \"{workspace}\",\r\n\t\"providers\" : \"microsoft.operationalinsights\",\r\n\t\"table\" : { \r\n\t\t\"name\" : \"{selectedTableName}\",\r\n\t\t\"description\":\"Security events collected from windows machines by Azure Security Center or Azure Sentinel.\",\r\n\t\t\"hasData\":true,\r\n\t\t\"tableType\":\"Microsoft\",\r\n\t\t\"tableAPIState\":\"Any\",\r\n\t\t\"solutions\":[\"Security and Audit\",\"Microsoft Sentinel\"],\r\n\t\t\"categories\":[\"Security\"],\r\n\t\t\"retentionInDaysAsDefault\":false,\r\n\t\t\"totalRetentionInDaysAsDefault\":false,\r\n\t\t\"isEditTransformationEnabled\":true,\r\n\t\t\"isCreateTransformationEnabled\":true\r\n\t},\r\n\t\"isMicrosoftTable\" : true,\r\n\t\"isMigrationRequired\" : false\r\n}"
                                          },
                                          "customColumnWidthSetting": "22ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "workspaceResourceId",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "showIcon": true,
                                          "customColumnWidthSetting": "16.8571ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "State",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "properties",
                                        "formatter": 7,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkLabel": "📋",
                                          "linkIsContextBlade": true,
                                          "customColumnWidthSetting": "5ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "kind",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "Capture",
                                              "text": "{0}{1} Custom"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "Linux",
                                              "representation": "Console",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "Windows",
                                              "representation": "Initial_Access",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "WorkspaceTransforms",
                                              "representation": "Persistence",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "customColumnWidthSetting": "17ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "name",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "securityEvents",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "windowsEventLogs",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "destinations",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "queries",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "dataSources",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "dataFlows",
                                        "formatter": 5,
                                        "formatOptions": {
                                          "aggregation": "Sum"
                                        }
                                      },
                                      {
                                        "columnMatch": "description",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "destinationName",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "lastModifiedBy",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "customEvents",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "StepTab",
                                        "formatter": 5
                                      }
                                    ],
                                    "rowLimit": 1000,
                                    "filter": true
                                  },
                                  "sortBy": []
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "tabSelection",
                                    "comparison": "isEqualTo",
                                    "value": "rulemanagement"
                                  },
                                  {
                                    "parameterName": "packsTab",
                                    "comparison": "isEqualTo",
                                    "value": "dcrdetails"
                                  }
                                ],
                                "name": "Select Existing DCR - Copy",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "Add New Pack",
                                  "items": [
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "parameters": [
                                          {
                                            "id": "492e3bc2-3037-44fb-9129-4fc8aed5ec93",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "newPack",
                                            "label": "New Pack Definition",
                                            "type": 1,
                                            "description": "create a new pack",
                                            "typeSettings": {
                                              "multiLineText": true,
                                              "editorLanguage": "text",
                                              "multiLineHeight": 20
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            }
                                          }
                                        ],
                                        "style": "above",
                                        "queryType": 0,
                                        "resourceType": "microsoft.operationalinsights/workspaces"
                                      },
                                      "name": "parameters - 0"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "list",
                                        "links": [
                                          {
                                            "id": "84da816b-84fa-494e-a51b-9a4cd221c7dd",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Import Pack Definition",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "",
                                                  "value": ""
                                                }
                                              ],
                                              "body": "{ \r\n  \"function\": \"packmgmt\",\r\n  \"functionBody\" : {\r\n    \"Action\":\"importPack\",\r\n    \"PackDef\": {newPack}\r\n  }\r\n}\r\n\r\n",
                                              "httpMethod": "POST",
                                              "title": "Import New Pack",
                                              "description": "# Importing new Pack definition\n\n{newPack}",
                                              "actionName": "importPack",
                                              "runLabel": "Import"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 1"
                                    }
                                  ]
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "tabSelection",
                                    "comparison": "isEqualTo",
                                    "value": "rulemanagement"
                                  },
                                  {
                                    "parameterName": "packsTab",
                                    "comparison": "isEqualTo",
                                    "value": "importPack"
                                  }
                                ],
                                "name": "packAuthoringGroup"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "AvailableIaaSPacks_CL\r\n| where isnotempty(Name)\r\n| summarize arg_max(TimeGenerated,*) by Name, Tag, NumberofRules,NumberofAlerts,AlertNames\r\n| project Name,Tag, NumberofRules, NumberofAlerts, AlertNames\r\n",
                                  "size": 0,
                                  "title": "IaaS Packs Details",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "AlertDetails",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "AlertDetails",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "more",
                                              "text": ""
                                            },
                                            {
                                              "operator": "!=",
                                              "representation": "1",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "packsTab",
                                  "comparison": "isEqualTo",
                                  "value": "IaaSPacksDetails"
                                },
                                "name": "query-IaaSPacksDetails"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "SupportedServices_CL\r\n| summarize arg_max(TimeGenerated,*) by category, namespace, service,metricnamespace,tag,NumberOfMetrics,Details\r\n| project category, namespace, service,metricnamespace,tag,NumberOfMetrics,Details",
                                  "size": 0,
                                  "title": "Services Packs Details",
                                  "showExportToExcel": true,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Details",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "Details",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "more",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": ""
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "AlertDetails",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "AlertDetails",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "more",
                                              "text": ""
                                            },
                                            {
                                              "operator": "!=",
                                              "representation": "1",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "NumberOfMetrics",
                                        "sortOrder": 2
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "NumberOfMetrics",
                                      "sortOrder": 2
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "packsTab",
                                  "comparison": "isEqualTo",
                                  "value": "servicesPacksDetails"
                                },
                                "name": "query-servicesPacksDetails"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "rulemanagement"
                          },
                          "name": "packMgmtGroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Agent Management",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "24d1e53a-ca25-4488-92af-4746e5411951",
                                      "cellValue": "agentTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Agents",
                                      "subTarget": "agents",
                                      "preText": "",
                                      "style": "link"
                                    },
                                    {
                                      "id": "230109a1-ed5a-4f33-b577-dab3c9b97c4d",
                                      "cellValue": "agentTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "HeartBeat",
                                      "subTarget": "heartbeat",
                                      "style": "link"
                                    },
                                    {
                                      "id": "7413ed40-fb13-48b3-acee-d27259ca7617",
                                      "cellValue": "agentTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "VM Applications",
                                      "subTarget": "vmapplications",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 3"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "Resources\n| where type == 'microsoft.compute/virtualmachines' and tolower(tags.Vendor) != 'databricks'\n| extend\n    JoinID = toupper(id),\n    OSType = tostring(properties.storageProfile.osDisk.osType),\n    Instance=tostring(tags.instanceName)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('DependencyAgentWindows','DependencyAgentLinux')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        DepAgent = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines' and tolower(tags.Vendor) != 'databricks'\n| extend\n    JoinID = toupper(id),\n    OSType = tostring(properties.osType),\n    Instance=tostring(tags.instanceName)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('DependencyAgentWindows','DependencyAgentLinux')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        DepAgent = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId)\n| summarize by id, OSType, ['Dependency Agent']=iff(isempty(DepAgent),'N/A',DepAgent),ExtensionName=iff(isempty(ExtensionName),'N/A',ExtensionName), ['AMA State']=State, ['AMA Upg']=UpgradeEnabled,['Subscription']=subscriptionId,['Resource Group']=resourceGroup, location, Instance\n| extend Install=iff(ExtensionName=='N/A','Install',iff(['AMA State']<> 'succeeded','Unhealthy','')), Uninstall=iff((ExtensionName<>'N/A') and (['AMA State'] == 'succeeded'),'Uninstall',iff(['AMA State'] <> 'succeeded','Warning',''))\n",
                                  "size": 0,
                                  "title": "Agent Install Status",
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "parameterType": 1
                                    },
                                    {
                                      "parameterName": "vmstoinstall",
                                      "parameterType": 5,
                                      "quote": ""
                                    }
                                  ],
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Dependency Agent",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "N/A",
                                              "representation": "1",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Not Installed"
                                              }
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "DependencyAgentWindows",
                                              "representation": "success",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Windows"
                                              }
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "DependencyAgentLinux",
                                              "representation": "success",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Linux"
                                              }
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "unknown",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "customColumnWidthSetting": "9.8555ch"
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "{0}{1}"
                                        }
                                      },
                                      {
                                        "columnMatch": "ExtensionName",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorLinuxAgent",
                                              "representation": "success",
                                              "text": "Linux Agent"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorWindowsAgent",
                                              "representation": "success",
                                              "text": "Windows Agent"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "stopped",
                                              "text": "No Agent"
                                            }
                                          ],
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}",
                                            "httpMethod": "POST",
                                            "title": "Install Agent",
                                            "description": "# Installing agent(s) for the following machine(s):\n\n{vmstoinstall}\n",
                                            "actionName": "InstallAgent",
                                            "runLabel": "InstallAgent"
                                          },
                                          "customColumnWidthSetting": "20ch"
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "Click To Install Agent"
                                        }
                                      },
                                      {
                                        "columnMatch": "State",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "succeeded",
                                              "representation": "success",
                                              "text": ""
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "failed",
                                              "representation": "3",
                                              "text": "failed"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "unknown",
                                              "text": ""
                                            }
                                          ],
                                          "customColumnWidthSetting": "17.5ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "AMA Upg",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "1",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Auto Upgrade not enabled"
                                              }
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Enabled"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "Subscription",
                                        "formatter": 15,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Resource Group",
                                        "formatter": 14,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Install",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "ArmAction",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "success",
                                              "text": "Ok"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Unhealthy",
                                              "representation": "2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "Add",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}\n",
                                            "httpMethod": "POST",
                                            "title": "Install Agent",
                                            "description": "# Installing agent(s) for the following machine(s):\n\n\n{vmstoinstall}\n",
                                            "actionName": "Install Agent",
                                            "runLabel": "Install Agent"
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "Uninstall",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "ArmAction",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "3",
                                              "text": "Not Installed"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Warning",
                                              "representation": "1",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "warning",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}\n",
                                            "httpMethod": "POST",
                                            "title": "Remove Agent",
                                            "description": "# Removing agent(s) for the following machine(s):\n\n## <span style=\"color:red\">Warning! </span> Removing the agent from the machine(s) may result in data not being collected.\n\n\n{vmstoinstall}\n",
                                            "actionName": "RemoveAgent",
                                            "runLabel": "RemoveAgent"
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "subscriptionId",
                                        "formatter": 15,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "DepAgent",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "N/A",
                                              "representation": "1",
                                              "text": "{0}{1}",
                                              "tooltipFormat": {
                                                "tooltip": "Not Installed"
                                              }
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}",
                                              "tooltipFormat": {
                                                "tooltip": "Installed"
                                              }
                                            }
                                          ]
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "Dependency Agent Status"
                                        }
                                      },
                                      {
                                        "columnMatch": "UpgradeEnabled",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "true",
                                              "representation": "success",
                                              "text": ""
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "false",
                                              "representation": "2",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "unknown",
                                              "text": ""
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "filter": true
                                  },
                                  "sortBy": []
                                },
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "agents"
                                },
                                "name": "query - agent install status",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.storageProfile.osDisk.osType)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.osType)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| extend ExtensionName = iff(isnotempty(ExtensionName),ExtensionName, \"NotInstalled\")\n| summarize count() by ExtensionName\n| sort by ExtensionName asc",
                                  "size": 1,
                                  "title": "Agent Install Status",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "tiles",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "ExtensionName",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorLinuxAgent",
                                              "representation": "success",
                                              "text": "Linux Agent"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorWindowsAgent",
                                              "representation": "success",
                                              "text": "Windows Agent"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "stopped",
                                              "text": "No Agent"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      }
                                    ],
                                    "filter": true
                                  },
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "ExtensionName",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "count_",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "maximumSignificantDigits": 3,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    "showBorder": false
                                  },
                                  "chartSettings": {
                                    "seriesLabelSettings": [
                                      {
                                        "seriesName": "",
                                        "label": "No Agent",
                                        "color": "red"
                                      }
                                    ]
                                  }
                                },
                                "customWidth": "25",
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "agents"
                                },
                                "name": "query - agent install status - graph",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "Heartbeat | where Category == \"Azure Monitor Agent\"\n| summarize arg_max(TimeGenerated, *) by Computer\n| project  Computer,LastHeartbeat=TimeGenerated, ['SecondsAgo']=datetime_diff('second',now(),TimeGenerated)\n| sort by SecondsAgo asc",
                                  "size": 0,
                                  "title": "Last Heartbeat (24 hours)",
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "SecondsAgo",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "<=",
                                              "thresholdValue": "600",
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": ">",
                                              "thresholdValue": "600",
                                              "representation": "2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": null,
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "$gen_thresholds_SecondsAgo_2",
                                        "sortOrder": 1
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "$gen_thresholds_SecondsAgo_2",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "heartbeat"
                                },
                                "name": "query - active alerts",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where type =~ \"microsoft.compute/virtualmachines\"\n| mvexpand with_itemindex=i apps=properties.applicationProfile.galleryApplications\n| where apps != ''\n| extend splitFields = split(apps.packageReferenceId, '/')\n| extend Gallery = strcat('/',strcat_array(array_slice(splitFields, 1, 8), '/'))\n| project Computer=id, ['Application Version']=tostring(apps.packageReferenceId), Gallery\n| summarize by Gallery,['Application Version'], Computer\n| sort by Gallery asc",
                                  "size": 0,
                                  "title": "Client Status (VM Applications)",
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Gallery",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Application Name",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Computer",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "showIcon": true
                                        }
                                      }
                                    ],
                                    "filter": true
                                  },
                                  "sortBy": []
                                },
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "vmapplications"
                                },
                                "name": "query - vmapplications",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "agentmgmt"
                          },
                          "name": "AgentMGMTGroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Auto Discovery Prototype - Use with caution.",
                            "loadType": "always",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "6346adc4-5e50-4b56-ab9d-0d8b17b8a86f",
                                      "cellValue": "discTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Discovery Results",
                                      "subTarget": "discResults",
                                      "preText": "",
                                      "style": "link"
                                    },
                                    {
                                      "id": "a914f6ed-4d20-4895-bed4-48a32f3a5c21",
                                      "cellValue": "discTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Discovery Config",
                                      "subTarget": "discConfig",
                                      "style": "link"
                                    },
                                    {
                                      "id": "3a11d108-b694-4989-9302-48010831377a",
                                      "cellValue": "discTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Discovery Data",
                                      "subTarget": "discData",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 10"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "VM Discovery",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "When Discovery is first enabled, the Azure Monitoring Agent will also be installed to the selected servers along with a VM Application agent to collect discovery data. Data will be sent to the Log Analytics agent.",
                                        "style": "info"
                                      },
                                      "name": "text - 3"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId=tostring(resourceId)//ruleId=properties.dataCollectionRuleId\n| join kind= inner  (\nresources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks), instanceName = ['tags'].instanceName\n| where instanceName == '{instanceName}'\n| where isnotempty(MPs) and (MPs =~ 'WinDisc' or MPs =~ 'LxDisc')//or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| summarize by resourceId, Pack\n| summarize Packs=make_list(Pack) by resourceId",
                                        "size": 0,
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Packs",
                                              "formatter": 1
                                            }
                                          ]
                                        }
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "test",
                                        "comparison": "isEqualTo",
                                        "value": "1"
                                      },
                                      "showPin": false,
                                      "name": "query - associatedVMs"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.compute/virtualmachines' \n| extend MPs=tostring(['tags'].MonitorStarterPacks), instanceName = ['tags'].instanceName\n| where instanceName == '{instanceName}'\n| where isnotempty(MPs) and (MPs contains 'WinDisc' or MPs contains 'LxDisc')\n| extend Packs = iff(MPs contains 'WinDisc','WinDisc','LxDisc')\n| project Resource=id,['Resource Group']=resourceGroup,Packs, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location\n",
                                        "size": 0,
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Packs",
                                              "formatter": 1
                                            },
                                            {
                                              "columnMatch": "subscriptionId",
                                              "formatter": 15,
                                              "formatOptions": {
                                                "linkTarget": null,
                                                "showIcon": true
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHidden",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "showPin": false,
                                      "name": "query - taggedVMs"
                                    },
                                    {
                                      "type": 12,
                                      "content": {
                                        "version": "NotebookGroup/1.0",
                                        "groupType": "editable",
                                        "items": [
                                          {
                                            "type": 3,
                                            "content": {
                                              "version": "KqlItem/1.0",
                                              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\",\"mergeType\":\"outer\",\"leftTable\":\"query - taggedVMs\",\"rightTable\":\"query - associatedVMs\",\"leftColumn\":\"Resource\",\"rightColumn\":\"resourceId\"}],\"projectRename\":[{\"originalName\":\"[query - taggedVMs].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Resource Group\",\"mergedName\":\"Resource Group\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Packs\",\"mergedName\":\"Packs\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].OS\",\"mergedName\":\"OS\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Location\",\"mergedName\":\"Location\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].Packs\",\"mergedName\":\"Associated\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - associatedVMs].resourceId\"}]}",
                                              "size": 0,
                                              "title": "Discoverable Machines",
                                              "exportMultipleValues": true,
                                              "exportedParameters": [
                                                {
                                                  "fieldName": "",
                                                  "parameterName": "taggedVMsDiscovery",
                                                  "parameterType": 1,
                                                  "quote": ""
                                                }
                                              ],
                                              "showExportToExcel": true,
                                              "queryType": 7,
                                              "visualization": "table",
                                              "gridSettings": {
                                                "formatters": [
                                                  {
                                                    "columnMatch": "Packs",
                                                    "formatter": 18,
                                                    "formatOptions": {
                                                      "thresholdsOptions": "icons",
                                                      "thresholdsGrid": [
                                                        {
                                                          "operator": "contains",
                                                          "thresholdValue": "WinDisc",
                                                          "text": "WinDisc"
                                                        },
                                                        {
                                                          "operator": "contains",
                                                          "thresholdValue": "LxDisc",
                                                          "text": "LxDisc"
                                                        },
                                                        {
                                                          "operator": "Default",
                                                          "thresholdValue": null,
                                                          "representation": "unknown",
                                                          "text": "{0}{1}"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "OS",
                                                    "formatter": 1
                                                  },
                                                  {
                                                    "columnMatch": "Associated",
                                                    "formatter": 1
                                                  },
                                                  {
                                                    "columnMatch": "subscriptionId",
                                                    "formatter": 15,
                                                    "formatOptions": {
                                                      "linkTarget": null,
                                                      "showIcon": true
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "Associated Packs",
                                                    "formatter": 1
                                                  }
                                                ],
                                                "filter": true
                                              }
                                            },
                                            "showPin": false,
                                            "name": "query-mergeVMsDiscovery",
                                            "styleSettings": {
                                              "showBorder": true
                                            }
                                          },
                                          {
                                            "type": 11,
                                            "content": {
                                              "version": "LinkItem/1.0",
                                              "style": "paragraph",
                                              "links": [
                                                {
                                                  "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                                  "cellValue": "",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Remove Discovery Pack(s)",
                                                  "preText": "",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [
                                                      {
                                                        "key": "action",
                                                        "value": "removeTag"
                                                      }
                                                    ],
                                                    "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMsDiscovery}],\n    \"PackType\":\"Discovery\"\n  }\n}",
                                                    "httpMethod": "POST",
                                                    "title": "Remove Monitoring",
                                                    "description": "# Please confirm the change.\n\nRemove Monitoring for Discovery Pack(s) \n\nServers:\n\n{taggedVMsDiscovery}",
                                                    "runLabel": "Confirm"
                                                  }
                                                }
                                              ]
                                            },
                                            "customWidth": "75",
                                            "conditionalVisibility": {
                                              "parameterName": "taggedVMsDiscovery",
                                              "comparison": "isNotEqualTo"
                                            },
                                            "name": "links - 1"
                                          }
                                        ],
                                        "exportParameters": true
                                      },
                                      "customWidth": "50",
                                      "name": "TaggedGroupDiscovery"
                                    },
                                    {
                                      "type": 12,
                                      "content": {
                                        "version": "NotebookGroup/1.0",
                                        "groupType": "editable",
                                        "items": [
                                          {
                                            "type": 3,
                                            "content": {
                                              "version": "KqlItem/1.0",
                                              "query": "resources | where type =~ 'microsoft.compute/virtualmachines' \n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isempty(MPs) or (MPs notcontains 'WinDisc' and MPs notcontains 'LxDisc')//and subscriptionId in split('{Subscriptions:subscriptionId}',',')\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, Subscription=subscriptionId, Location=location,state=iff(properties.extended.instanceView.powerState.code =='PowerState/running','On','Off')\n| extend Pack=iff(OS=~'Windows',\"WinDisc\", \"LxDisc\")\n\n",
                                              "size": 0,
                                              "title": "Non-discoverable Machines",
                                              "showRefreshButton": true,
                                              "exportMultipleValues": true,
                                              "exportedParameters": [
                                                {
                                                  "parameterName": "vmstotagDiscovery",
                                                  "parameterType": 1,
                                                  "quote": ""
                                                }
                                              ],
                                              "showExportToExcel": true,
                                              "queryType": 1,
                                              "resourceType": "microsoft.resourcegraph/resources",
                                              "crossComponentResources": [
                                                "{Subscriptions}"
                                              ],
                                              "visualization": "table",
                                              "gridSettings": {
                                                "formatters": [
                                                  {
                                                    "columnMatch": "Resource",
                                                    "formatter": 0,
                                                    "formatOptions": {
                                                      "customColumnWidthSetting": "24.4281ch"
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "Resource Group",
                                                    "formatter": 14,
                                                    "formatOptions": {
                                                      "linkTarget": null,
                                                      "showIcon": true,
                                                      "customColumnWidthSetting": "21.571ch"
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "Subscription",
                                                    "formatter": 15,
                                                    "formatOptions": {
                                                      "linkTarget": null,
                                                      "showIcon": true
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "state",
                                                    "formatter": 18,
                                                    "formatOptions": {
                                                      "thresholdsOptions": "icons",
                                                      "thresholdsGrid": [
                                                        {
                                                          "operator": "==",
                                                          "thresholdValue": "On",
                                                          "representation": "success",
                                                          "text": ""
                                                        },
                                                        {
                                                          "thresholdValue": "Off",
                                                          "representation": "stopped",
                                                          "text": ""
                                                        },
                                                        {
                                                          "operator": "Default",
                                                          "thresholdValue": null,
                                                          "representation": "unknown",
                                                          "text": "{0}{1}"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "tag",
                                                    "formatter": 5
                                                  },
                                                  {
                                                    "columnMatch": "subscriptionId",
                                                    "formatter": 13,
                                                    "formatOptions": {
                                                      "linkTarget": null,
                                                      "showIcon": true
                                                    }
                                                  }
                                                ],
                                                "filter": true
                                              },
                                              "sortBy": []
                                            },
                                            "name": "Non Discoverable Servers",
                                            "styleSettings": {
                                              "margin": "400",
                                              "padding": "400",
                                              "showBorder": true
                                            }
                                          },
                                          {
                                            "type": 11,
                                            "content": {
                                              "version": "LinkItem/1.0",
                                              "style": "paragraph",
                                              "links": [
                                                {
                                                  "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Enable Discovery for servers.",
                                                  "preText": "",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [
                                                      {
                                                        "key": "action",
                                                        "value": "addTag"
                                                      }
                                                    ],
                                                    "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddPack\",\n    \"Resources\": [{vmstotagDiscovery}],\n    \"PackType\": \"Discovery\",\n    \"WorkspaceId\": \"{Workspace}\",\n    \"DefaultAG\" : \"{DefaultAG}\"\n  }\n}",
                                                    "httpMethod": "POST",
                                                    "title": "Enable Discovery Packs",
                                                    "description": "# This will enable the pack for the following servers:\n{vmstotagDiscovery}\n\nby adding the Pack(s) to the resource(s).\n",
                                                    "actionName": "EnableDiscovery",
                                                    "runLabel": "Confirm"
                                                  }
                                                }
                                              ]
                                            },
                                            "customWidth": "50",
                                            "conditionalVisibility": {
                                              "parameterName": "vmstotagDiscovery",
                                              "comparison": "isNotEqualTo"
                                            },
                                            "name": "links - 1 - Copy"
                                          }
                                        ],
                                        "exportParameters": true
                                      },
                                      "customWidth": "50",
                                      "name": "NonTaggedGroupDiscovery"
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discConfig"
                                },
                                "name": "Servers - Discovery",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "list",
                                        "links": [
                                          {
                                            "id": "b3bb5a4d-0f95-4e9a-8634-9cb027f860aa",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remediate (all policies)",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Remediate\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Rmediate policies",
                                              "description": "# Please confirm remediation\n\nThis button will trigger a global policy remeadiation. \n\nThe backend script will go through the policies and initiatives, finding the ones that are not compliant, and will trigger remediation. \n\nIt is not restricted to the ones in this screen.",
                                              "actionName": "Remediate",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "8dfc5afa-108a-4713-8a0c-651c3a32c5f1",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Check Compliance",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Scan\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Check Policy Compliance",
                                              "description": "# Please confirm the scan.",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 3"
                                    },
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## Policy Compliance Check\nThis task will trigger a tenant wide check for policy compliance.\n\n## Policy Remediation\n\nThis Task will trigger remediation for the policies in the list that are considered not compliant at this time.",
                                        "style": "info"
                                      },
                                      "conditionalVisibilities": [
                                        {
                                          "parameterName": "tabSelection",
                                          "comparison": "isEqualTo",
                                          "value": "policystatus"
                                        },
                                        {
                                          "parameterName": "showHelp",
                                          "comparison": "isEqualTo",
                                          "value": "yes"
                                        }
                                      ],
                                      "name": "text - 7"
                                    }
                                  ]
                                },
                                "customWidth": "25",
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discPolicies"
                                },
                                "name": "ComplianceButtons - Copy"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "d1f20750-4a22-4433-9c5d-a4d9a4f62f9d",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "discoveryPeriod",
                                      "label": "Period",
                                      "type": 4,
                                      "typeSettings": {
                                        "selectableValues": [
                                          {
                                            "durationMs": 300000
                                          },
                                          {
                                            "durationMs": 900000
                                          },
                                          {
                                            "durationMs": 1800000
                                          },
                                          {
                                            "durationMs": 3600000
                                          },
                                          {
                                            "durationMs": 14400000
                                          },
                                          {
                                            "durationMs": 43200000
                                          },
                                          {
                                            "durationMs": 86400000
                                          },
                                          {
                                            "durationMs": 172800000
                                          },
                                          {
                                            "durationMs": 259200000
                                          },
                                          {
                                            "durationMs": 604800000
                                          },
                                          {
                                            "durationMs": 1209600000
                                          },
                                          {
                                            "durationMs": 2419200000
                                          }
                                        ]
                                      },
                                      "value": {
                                        "durationMs": 3600000
                                      }
                                    },
                                    {
                                      "id": "079a4550-40c9-44cd-a223-40097e453659",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "ComputerDiscovery",
                                      "label": "Select Server",
                                      "type": 5,
                                      "query": "Discovery_CL\n| parse RawData with timestamp \",\" rest1\n| extend Computer=_ResourceId,timestamp=todatetime(timestamp)\n| summarize by tostring(Computer)",
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 0
                                      },
                                      "timeContextFromParameter": "discoveryPeriod",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "value": null
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discData"
                                },
                                "name": "param-discovery-period"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "//let maxts=\nlet maxts=Discovery_CL\n| project timestamp=todatetime(tostring(split(RawData,\",\")[0])), _ResourceId\n| where isnotempty(timestamp) and _ResourceId =~ '{ComputerDiscovery}'\n| summarize maxts=max(timestamp);\nDiscovery_CL\n| extend Computer=_ResourceId\n| where Computer =~ '{ComputerDiscovery}'\n| extend fields=split(RawData,\",\")\n| extend timestamp=todatetime(fields[0])\n| extend type=tostring(fields[1])\n| extend platform=tostring(fields[2])\n| extend package=iff (platform =~ 'linux', tostring(fields[4]),'')\n| extend name=iff (platform =~ 'linux', tostring(fields[3]), tostring(fields[3]))\n| extend othertype=tostring(fields[5])\n| extend vendor=tostring(fields[6])\n| extend OSVersion=iff(platform =~ 'linux', '',tostring(fields[3]))\n| where timestamp == toscalar(maxts)\n| project timestamp,Computer,type,name,platform,OSVersion,othertype,vendor",
                                  "size": 0,
                                  "title": "All Discovery Data",
                                  "timeContextFromParameter": "discoveryPeriod",
                                  "showExportToExcel": true,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "gridSettings": {
                                    "rowLimit": 1000,
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "name",
                                        "sortOrder": 1
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "name",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discData"
                                },
                                "name": "query - discovery - all"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "18e396d2-d597-4f30-a863-c47a8d579c58",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "discoveryQueryPeriod",
                                      "label": "Discovery Period ",
                                      "type": 4,
                                      "typeSettings": {
                                        "selectableValues": [
                                          {
                                            "durationMs": 300000
                                          },
                                          {
                                            "durationMs": 900000
                                          },
                                          {
                                            "durationMs": 1800000
                                          },
                                          {
                                            "durationMs": 3600000
                                          },
                                          {
                                            "durationMs": 14400000
                                          },
                                          {
                                            "durationMs": 43200000
                                          },
                                          {
                                            "durationMs": 86400000
                                          },
                                          {
                                            "durationMs": 172800000
                                          },
                                          {
                                            "durationMs": 259200000
                                          },
                                          {
                                            "durationMs": 604800000
                                          },
                                          {
                                            "durationMs": 1209600000
                                          }
                                        ]
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "value": {
                                        "durationMs": 3600000
                                      }
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces"
                                },
                                "name": "parameters - 7"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let maxts=DiscoveryResults_CL\r\n| summarize maxts=max(TimeGenerated);\r\nDiscoveryResults_CL\r\n| where TimeGenerated == toscalar(maxts)\r\n| project Resource=ResourceId, OS, Pack=Tag, Location, ['Discovery Time']=TimeGenerated",
                                  "size": 0,
                                  "title": "Discovery Results",
                                  "timeContextFromParameter": "discoveryQueryPeriod",
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "fieldName": "",
                                      "parameterName": "vmsDiscoveryTag",
                                      "parameterType": 1,
                                      "quote": ""
                                    }
                                  ],
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "resourceId",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discResults"
                                },
                                "name": "query - 0"
                              },
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "list",
                                  "links": [
                                    {
                                      "id": "af7d39e4-d1a9-40c5-89e7-d6fcfb191dc5",
                                      "linkTarget": "ArmAction",
                                      "linkLabel": "Enable Monitoring",
                                      "style": "primary",
                                      "linkIsContextBlade": true,
                                      "armActionContext": {
                                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                        "headers": [],
                                        "params": [],
                                        "body": "{ \r\n  \"function\": \"packmgmt\",\r\n  \"functionBody\" : {\r\n    \"Action\":\"AddPack\",\r\n    \"Resources\": [{vmsDiscoveryTag}],\r\n    \"PackType\": \"IaaS\",\r\n    \"WorkspaceId\" : \"{Workspace}\",\r\n    \"DefaultAG\" : \"{DefaultAG}\"\r\n  }\r\n}",
                                        "httpMethod": "POST",
                                        "title": "Enable Monitoring",
                                        "description": "# Enable Discovery\n\nResources:\n\n{vmsDiscoveryTag}",
                                        "actionName": "AddPack",
                                        "runLabel": "Enable"
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "discTab",
                                    "comparison": "isEqualTo",
                                    "value": "discResults"
                                  },
                                  {
                                    "parameterName": "vmsDiscoveryTag",
                                    "comparison": "isNotEqualTo"
                                  }
                                ],
                                "name": "links - enableDiscoveryMonitoring"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "autodiscovery"
                          },
                          "name": "AutoDiscoveryGroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "{appInsightsName}"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "dffde712-0ef1-4c46-922a-47a42643130c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "appInsightsTimeframe",
                                      "label": "Time Range",
                                      "type": 4,
                                      "typeSettings": {
                                        "selectableValues": [
                                          {
                                            "durationMs": 300000
                                          },
                                          {
                                            "durationMs": 900000
                                          },
                                          {
                                            "durationMs": 1800000
                                          },
                                          {
                                            "durationMs": 3600000
                                          },
                                          {
                                            "durationMs": 14400000
                                          },
                                          {
                                            "durationMs": 43200000
                                          },
                                          {
                                            "durationMs": 86400000
                                          },
                                          {
                                            "durationMs": 172800000
                                          },
                                          {
                                            "durationMs": 259200000
                                          },
                                          {
                                            "durationMs": 604800000
                                          },
                                          {
                                            "durationMs": 1209600000
                                          },
                                          {
                                            "durationMs": 2419200000
                                          },
                                          {
                                            "durationMs": 2592000000
                                          }
                                        ]
                                      },
                                      "timeContext": {
                                        "durationMs": 2592000000
                                      },
                                      "value": {
                                        "durationMs": 2419200000
                                      }
                                    },
                                    {
                                      "id": "70107de5-d9cd-46ea-9027-43d83053dac3",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "FunctionApp",
                                      "label": "Function App",
                                      "type": 2,
                                      "query": "requests\n| project\n    timestamp,\n    id,\n    operation_Name,\n    success,\n    resultCode,\n    duration,\n    operation_Id,\n    cloud_RoleName,\n    invocationId=customDimensions['InvocationId']\n| order by timestamp desc\n| take 20\n| summarize by Functions=operation_Name\n",
                                      "crossComponentResources": [
                                        "{appInsightsName}"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 2592000000
                                      },
                                      "queryType": 0,
                                      "resourceType": "microsoft.insights/components",
                                      "value": "opstasks"
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components"
                                },
                                "name": "parameters - 18"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "requests\n| project\n    timestamp,\n    id,\n    operation_Name,\n    success,\n    resultCode,\n    duration,\n    operation_Id,\n    cloud_RoleName,\n    invocationId=customDimensions['InvocationId']\n| where operation_Name =~ '{FunctionApp}'\n| order by timestamp desc\n| take 20",
                                  "size": 0,
                                  "title": "Invocations",
                                  "timeContextFromParameter": "appInsightsTimeframe",
                                  "exportedParameters": [
                                    {
                                      "fieldName": "invocationId",
                                      "parameterName": "invocationid",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "operation_Id",
                                      "parameterName": "operationid",
                                      "parameterType": 1
                                    }
                                  ],
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsName}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "id",
                                        "formatter": 5
                                      }
                                    ]
                                  }
                                },
                                "customWidth": "30",
                                "name": "queryInvocations"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "union traces\n| union exceptions\n| where operation_Id == '{operationid}'\n| where customDimensions['InvocationId'] == '{invocationid}'\n| order by timestamp asc\n| project\n    timestamp,\n    message = iff(message != '', message, iff(innermostMessage != '', innermostMessage, customDimensions.[strcat('prop__{','OriginalFormat}')])),\n    logLevel = customDimensions.['LogLevel']",
                                  "size": 0,
                                  "title": "Invocation Details",
                                  "noDataMessage": "No Invocation Selected",
                                  "timeContextFromParameter": "appInsightsTimeframe",
                                  "exportFieldName": "invocationId",
                                  "exportParameterName": "invocationid",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsName}"
                                  ]
                                },
                                "customWidth": "70",
                                "name": "queryInvocationDetails"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "logs"
                          },
                          "name": "groupLogs"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getdiscoveryresults\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"WSId\",\"value\":\"{Workspace}\"}],\"transformers\":null}",
                            "size": 0,
                            "exportedParameters": [
                              {
                                "parameterName": "vmsDiscoveryTag",
                                "parameterType": 1
                              },
                              {
                                "fieldName": "tag",
                                "parameterName": "vmsDiscoveryTagValue",
                                "parameterType": 1
                              }
                            ],
                            "queryType": 10,
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "tag",
                                  "formatter": 1,
                                  "formatOptions": {
                                    "linkTarget": "ArmAction",
                                    "linkIsContextBlade": true,
                                    "armActionContext": {
                                      "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                      "headers": [],
                                      "params": [],
                                      "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddPack\",\n    \"Resources\": [{vmsDiscoveryTag}],\n    \"Pack\": \"{vmsDiscoveryTagValue}\"\n  }\n}",
                                      "httpMethod": "POST",
                                      "title": "Enable Monitoring",
                                      "description": "# Adding Tag(s) To VMs\n\n\"Resources\": {vmsDiscoveryTag:$.Computer}\n\n\"Pack\": \"{vmsDiscoveryTagValue}\"",
                                      "runLabel": "Enable"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "discTab",
                            "comparison": "isEqualTo",
                            "value": "discResults"
                          },
                          "name": "query - discovery Results"
                        }
                      ],
                      "fallbackResourceIds": [
                        "Azure Monitor"
                      ],
                      "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
                    },
                    "wbConfig": "[string(variables('$fxv#0'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/workbooks",
                      "apiVersion": "2023-06-01",
                      "name": "[guid('Azure Monitor Starter Packs V2')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "shared",
                      "properties": {
                        "displayName": "Azure Monitor Starter Packs Extended",
                        "serializedData": "[variables('wbConfig')]",
                        "category": "workbook",
                        "sourceId": "[parameters('lawresourceid')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "dceName": {
                    "value": "[format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3784354634483652394"
                    }
                  },
                  "parameters": {
                    "dceName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionEndpoints",
                      "apiVersion": "2021-09-01-preview",
                      "name": "[parameters('dceName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "networkAcls": {
                          "publicNetworkAccess": "Enabled"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "dceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dceName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('packPolicyRoleDefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "[format('AMP-{0}-UMI-Packs', parameters('instanceName'))]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "addRGRoleAssignments": {
                    "value": true
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "17842332302260083262"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "addRGRoleAssignments": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "RGroleDefinitionIds": [
                      "b24988ac-6180-42a0-ab88-20f7382dd24c",
                      "22926164-76b3-42b3-bc55-97df8dab3e41"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1567859393178125257"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('Tags')]"
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-{2}', parameters('userIdentityName'), copyIndex(), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "12046791720435112264"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignmentRG",
                        "count": "[length(variables('RGroleDefinitionIds'))]"
                      },
                      "condition": "[parameters('addRGRoleAssignments')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-RG', parameters('userIdentityName'), copyIndex())]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "18441567381332934980"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('backendFunctionRoleDefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "[format('AMP-{0}-UMI-Function', parameters('instanceName'))]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "17842332302260083262"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "addRGRoleAssignments": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "RGroleDefinitionIds": [
                      "b24988ac-6180-42a0-ab88-20f7382dd24c",
                      "22926164-76b3-42b3-bc55-97df8dab3e41"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1567859393178125257"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('Tags')]"
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-{2}', parameters('userIdentityName'), copyIndex(), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "12046791720435112264"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignmentRG",
                        "count": "[length(variables('RGroleDefinitionIds'))]"
                      },
                      "condition": "[parameters('addRGRoleAssignments')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-RG', parameters('userIdentityName'), copyIndex())]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "18441567381332934980"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "kvName": {
                    "value": "[format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "functionName": {
                    "value": "[parameters('functionname')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8871134978585325884"
                    }
                  },
                  "parameters": {
                    "kvName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "functionName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2024-12-01-preview",
                      "name": "[parameters('kvName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "tenantId": "[subscription().tenantId]",
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": false,
                        "enabledForTemplateDeployment": false,
                        "enableSoftDelete": true,
                        "softDeleteRetentionInDays": 90,
                        "enableRbacAuthorization": true,
                        "provisioningState": "Succeeded",
                        "publicNetworkAccess": "Enabled",
                        "enablePurgeProtection": true
                      }
                    },
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2021-11-01-preview",
                      "name": "[format('{0}/{1}', parameters('kvName'), 'FunctionKey')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "attributes": {
                          "enabled": true
                        },
                        "contentType": "string",
                        "value": "[listKeys(resourceId('Microsoft.Web/sites/host', parameters('functionName'), 'default'), '2022-09-01').functionKeys.monitoringKey]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "kvResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('functionname'))]"
              ]
            },
            {
              "copy": {
                "name": "userIdentityRoleAssignments",
                "count": "[length(variables('logicappRequiredRoleassignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('logiapprbac-{0}', copyIndex())]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "resourcename": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))), '2022-09-01').outputs.kvResourceId.value]"
                  },
                  "principalId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('logicappname')), '2022-09-01').outputs.logicAppPrincipalId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('logicappRequiredRoleassignments')[copyIndex()]]"
                  },
                  "roleShortName": {
                    "value": "[variables('logicappRequiredRoleassignments')[copyIndex()]]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "12046791720435112264"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6)))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('logicappname'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('PacksDefStorage-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerName": {
                    "value": "amba"
                  },
                  "filename": {
                    "value": "PacksDef.json"
                  },
                  "UserManagedIdentityId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "13690361879345816616"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "filename": {
                      "type": "string"
                    },
                    "containerName": {
                      "type": "string"
                    },
                    "UserManagedIdentityId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "tempfilename": "download"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('deployscript-PacksDef-{0}', parameters('filename'))]",
                      "tags": "[parameters('tags')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('UserManagedIdentityId'))]": {}
                        }
                      },
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0}.tmp && cat {1}.tmp | base64 -d > {2}.zip && unzip {3}.zip  && az storage blob upload -f {4} -c {5} -n {6} --overwrite true', variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('containerName'), parameters('filename'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "fileURL": {
                      "type": "string",
                      "value": "[format('{0}{1}/{2}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('ambaAlertsUpload-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerName": {
                    "value": "amba"
                  },
                  "filename": {
                    "value": "amba-alerts.json"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "UserManagedIdentityId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "15864650490007147318"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "filename": {
                      "type": "string"
                    },
                    "UserManagedIdentityId": {
                      "type": "string"
                    },
                    "containerName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": "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",
                    "tempfilename": "download"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('DS-amba-{0}-{1}-{2}', parameters('filename'), parameters('storageAccountName'), parameters('location'))]",
                      "tags": "[parameters('tags')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('UserManagedIdentityId'))]": {}
                        }
                      },
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0}.tmp && cat {1}.tmp | base64 -d > {2}.zip && unzip {3}.zip  && az storage blob upload -f {4} -c {5} -n {6} --overwrite true', variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('containerName'), parameters('filename'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "fileURL": {
                      "type": "string",
                      "value": "[format('{0}{1}/{2}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('modulesstorage-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerName": {
                    "value": "modules"
                  },
                  "UserManagedIdentityId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "11018087033447173833"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "containerName": {
                      "type": "string"
                    },
                    "UserManagedIdentityId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "tempfilename": "download"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('deployscript-Modules-{0}', parameters('location'))]",
                      "tags": "[parameters('tags')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('UserManagedIdentityId'))]": {}
                        }
                      },
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0}.tmp && cat {1}.tmp | base64 -d > {2}.zip && unzip {3}.zip  && for file in *.bicep; do az storage blob upload -f \"$file\" -c {4} -n \"$file\" --overwrite true; done', variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), parameters('containerName'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "modulesURL": {
                      "type": "string",
                      "value": "[format('{0}{1}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('applicationstostorage-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerName": {
                    "value": "applications"
                  },
                  "UserManagedIdentityId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "4920188389747639228"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "containerName": {
                      "type": "string"
                    },
                    "UserManagedIdentityId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": "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",
                    "tempfilename": "download"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('deployscript-applications-{0}', parameters('location'))]",
                      "tags": "[parameters('tags')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('UserManagedIdentityId'))]": {}
                        }
                      },
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0}.tmp && cat {1}.tmp | base64 -d > {2}.zip && unzip {3}.zip  && for file in *.zip; do az storage blob upload -f \"$file\" -c {4} -n \"$file\" --overwrite true; done', variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), parameters('containerName'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "applicationsURL": {
                      "type": "string",
                      "value": "[format('{0}{1}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('amgdupload-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerName": {
                    "value": "dashboards"
                  },
                  "UserManagedIdentityId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2858460425487258756"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "containerName": {
                      "type": "string"
                    },
                    "UserManagedIdentityId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "tempfilename": "download"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('deployscript-amgd-{0}', parameters('location'))]",
                      "tags": "[parameters('tags')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('UserManagedIdentityId'))]": {}
                        }
                      },
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0}.tmp && cat {1}.tmp | base64 -d > {2}.zip && unzip {3}.zip  && for file in *.json; do az storage blob upload -f \"$file\" -c {4} -n \"$file\" --overwrite true; done', variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), parameters('containerName'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "amgdstorageURL": {
                      "type": "string",
                      "value": "[format('{0}{1}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            }
          ],
          "outputs": {
            "amgdStorageURL": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amgdupload-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.amgdstorageURL.value]"
            },
            "packsDefStorageURL": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('PacksDefStorage-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value]"
            },
            "ambaStorageURL": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('ambaAlertsUpload-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value]"
            },
            "functionUserManagedIdentityId": {
              "type": "string",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
            },
            "dceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.dceId.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName')))]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('STOmonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    }
  ]
}