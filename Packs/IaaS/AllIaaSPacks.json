{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "9597593355851264922"
    }
  },
  "parameters": {
    "mgname": {
      "type": "string"
    },
    "subscriptionId": {
      "type": "string"
    },
    "resourceGroupId": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "location for the deployment."
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "Full resource ID of the log analytics workspace to be used for the deployment."
      }
    },
    "solutionTag": {
      "type": "string"
    },
    "solutionVersion": {
      "type": "string"
    },
    "dceId": {
      "type": "string",
      "metadata": {
        "description": "Full resource ID of the data collection endpoint to be used for the deployment."
      }
    },
    "userManagedIdentityResourceId": {
      "type": "string",
      "metadata": {
        "description": "Full resource ID of the user managed identity to be used for the deployment"
      }
    },
    "assignmentLevel": {
      "type": "string"
    },
    "grafanaResourceId": {
      "type": "string"
    },
    "customerTags": {
      "type": "object"
    },
    "actionGroupResourceId": {
      "type": "string"
    }
  },
  "variables": {
    "solutionTagComponents": "MonitorStarterPacksComponents",
    "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
    "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', variables('solutionTagComponents')), 'BackendComponent', 'MonitoringPackType', 'IaaS', 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', variables('solutionTagComponents')), 'BackendComponent', 'solutionVersion', parameters('solutionVersion'), 'MonitoringPackType', 'IaaS'), parameters('customerTags').All))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "WinOSPack",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": {
            "value": "[parameters('actionGroupResourceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "13539627308366536058"
            }
          },
          "parameters": {
            "packtag": {
              "type": "string",
              "defaultValue": "WinOS",
              "metadata": {
                "description": "The Tag value for this pack"
              }
            },
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-Windows-OS",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "actionGroupResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string"
            },
            "userManagedIdentityResourceId": {
              "type": "string"
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            }
          },
          "variables": {
            "tempTags": {
              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
              "MonitoringPackType": "IaaS",
              "solutionVersion": "[parameters('solutionVersion')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
            "ruleshortname": "VMI-OS",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('vmInsightsDCR-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceResourceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "ruleName": {
                    "value": "[parameters('rulename')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "16579881467422974035"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "ruleName": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2021-09-01-preview",
                      "name": "[format('{0}-VMI', parameters('ruleName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "description": "Data collection rule for VM Insights.",
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "dataSources": {
                          "performanceCounters": [
                            {
                              "name": "VMInsightsPerfCounters",
                              "streams": [
                                "Microsoft-InsightsMetrics"
                              ],
                              "samplingFrequencyInSeconds": 60,
                              "counterSpecifiers": [
                                "\\VmInsights\\DetailedMetrics"
                              ]
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                              "name": "[variables('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-InsightsMetrics"
                            ],
                            "destinations": [
                              "[variables('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "VMIRuleId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-VMI', parameters('ruleName')))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "13807474782643765134"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "moduleprefix": "AMSP-Win-VMI",
                    "alertlist": [
                      {
                        "alertRuleDescription": "Alert for Memory over 90%",
                        "alertRuleDisplayName": "Memory over 90%",
                        "alertRuleName": "MemoveryOverPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "Aggregated",
                        "metricMeasureColumn": "AvgMemUse",
                        "operator": "GreaterThan",
                        "threshold": 90,
                        "query": "InsightsMetrics | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend memorySizeMB = todouble(parse_json(Tags).[\"vm.azm.ms/memorySizeMB\"]) | extend PercentageBytesinUse = Val/memorySizeMB*100    | summarize AvgMemUse = avg(PercentageBytesinUse) by bin(TimeGenerated, 15m), _ResourceId,Computer"
                      },
                      {
                        "alertRuleDescription": "Alert for disk space under 10%",
                        "alertRuleDisplayName": "Disk space under 10%",
                        "alertRuleName": "DiskSpaceUnderPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 10 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                      },
                      {
                        "alertRuleDescription": "Alert for disk space under 5%",
                        "alertRuleDisplayName": "Disk space under 5%",
                        "alertRuleName": "DiskSpaceUnderPercentCritical",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 5 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                      },
                      {
                        "alertRuleDescription": "Heartbeat alert for VMs - 5 minutes",
                        "alertRuleDisplayName": "Heartbeat alert for VMs",
                        "alertRuleName": "HeartbeatAlert",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT5M",
                        "windowSize": "PT5M",
                        "alertType": "rows",
                        "query": "InsightsMetrics| where Namespace == 'Computer' and Name == 'Heartbeat'| summarize arg_max(TimeGenerated, *) by _ResourceId, Computer| where TimeGenerated < ago(5m)"
                      },
                      {
                        "alertRuleDescription": "Alert for CPU usage over 90%",
                        "alertRuleDisplayName": "CPU usage over 90%",
                        "alertRuleName": "CPUUsageOverPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 90 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                      },
                      {
                        "alertRuleDescription": "Alert for CPU usage over 95%",
                        "alertRuleDisplayName": "CPU usage over 95%",
                        "alertRuleName": "CPUUsageOverPercentcritical",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 95 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[variables('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag'))), '2022-09-01').outputs.VMIRuleId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[variables('ruleshortname')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "LxOSPack-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": {
            "value": "[parameters('actionGroupResourceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "18165690541588829035"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-VMI-Linux",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "actionGroupResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "LxOS"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            }
          },
          "variables": {
            "tempTags": {
              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
              "MonitoringPackType": "IaaS",
              "solutionVersion": "[parameters('solutionVersion')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
            "ruleshortname": "VMI-LxOS",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('vmInsightsDCR-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceResourceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "ruleName": {
                    "value": "[parameters('rulename')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "16579881467422974035"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "ruleName": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2021-09-01-preview",
                      "name": "[format('{0}-VMI', parameters('ruleName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "description": "Data collection rule for VM Insights.",
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "dataSources": {
                          "performanceCounters": [
                            {
                              "name": "VMInsightsPerfCounters",
                              "streams": [
                                "Microsoft-InsightsMetrics"
                              ],
                              "samplingFrequencyInSeconds": 60,
                              "counterSpecifiers": [
                                "\\VmInsights\\DetailedMetrics"
                              ]
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                              "name": "[variables('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-InsightsMetrics"
                            ],
                            "destinations": [
                              "[variables('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "VMIRuleId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-VMI', parameters('ruleName')))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "9423000554671818874"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "moduleprefix": "AMSP-Lx-VMI",
                    "alertlist": [
                      {
                        "alertRuleDescription": "Alert for Memory over 90%",
                        "alertRuleDisplayName": "Memory over 90%",
                        "alertRuleName": "MemoveryOverPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "Aggregated",
                        "metricMeasureColumn": "AvgMemUse",
                        "operator": "GreaterThan",
                        "threshold": 90,
                        "query": "InsightsMetrics | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend memorySizeMB = todouble(parse_json(Tags).[\"vm.azm.ms/memorySizeMB\"]) | extend PercentageBytesinUse = Val/memorySizeMB*100    | summarize AvgMemUse = avg(PercentageBytesinUse) by bin(TimeGenerated, 15m), _ResourceId,Computer"
                      },
                      {
                        "alertRuleDescription": "Alert for disk space under 10%",
                        "alertRuleDisplayName": "Disk space under 10%",
                        "alertRuleName": "DiskSpaceUnderPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 10 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                      },
                      {
                        "alertRuleDescription": "Alert for disk space under 5%",
                        "alertRuleDisplayName": "Disk space under 5%",
                        "alertRuleName": "DiskSpaceUnderPercentCritical",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 5 \n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                      },
                      {
                        "alertRuleDescription": "Heartbeat alert for VMs - 5 minutes",
                        "alertRuleDisplayName": "Heartbeat alert for VMs",
                        "alertRuleName": "HeartbeatAlert",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT5M",
                        "windowSize": "PT5M",
                        "alertType": "rows",
                        "query": "InsightsMetrics| where Namespace == 'Computer' and Name == 'Heartbeat'| summarize arg_max(TimeGenerated, *) by _ResourceId, Computer| where TimeGenerated < ago(5m)"
                      },
                      {
                        "alertRuleDescription": "Alert for CPU usage over 90%",
                        "alertRuleDisplayName": "CPU usage over 90%",
                        "alertRuleName": "CPUUsageOverPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 90 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                      },
                      {
                        "alertRuleDescription": "Alert for CPU usage over 95%",
                        "alertRuleDisplayName": "CPU usage over 95%",
                        "alertRuleName": "CPUUsageOverPercentcritical",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 95 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[variables('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag'))), '2022-09-01').outputs.VMIRuleId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[variables('ruleshortname')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "IISPack-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": {
            "value": "[parameters('actionGroupResourceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "6249676087572449934"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-IIS-Server",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "IIS"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            },
            "actionGroupResourceId": {
              "type": "string"
            }
          },
          "variables": {
            "tempTags": {
              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
              "MonitoringPackType": "IaaS",
              "solutionVersion": "[parameters('solutionVersion')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
            "ruleshortname": "IIS1",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "kind": "Windows",
            "xPathQueries": [
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2216)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2221)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5152)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5010 or EventID=5011 or EventID=5012 or EventID=5013)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5009)]]",
              "Application!*[System[Provider[@Name='Active Server Pages'] and (EventID=500 or EventID=499 or EventID=23 or EventID=22 or EventID=21 or EventID=20 or EventID=19 or EventID=18 or EventID=17 or EventID=16 or EventID=9 or EventID=8 or EventID=7 or EventID=6 or EventID=5)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1037)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2208)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2206)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2201)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2203)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2204)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2274 or EventID=2268 or EventID=2220 or EventID=2219 or EventID=2214)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5088 or EventID=5061 or EventID=5060)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2296)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2295)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2293)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1133)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2261)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5036)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2264)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2298)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2218)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2258)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2227)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2233)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2226 or EventID=2230 or EventID=2231 or EventID=2232)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5174 or EventID=5179 or EventID=5180)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5085)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5054 or EventID=5091)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5063)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5058)]]"
            ],
            "performanceCounters": [
              "\\Web Service(_Total)\\Bytes Received/sec",
              "\\Web Service(_Total)\\Bytes Sent/sec",
              "\\Web Service(_Total)\\Bytes Total/sec",
              "\\Web Service(_Total)\\Connection Attempts/sec",
              "\\Web Service(_Total)\\Current Connections",
              "\\Web Service(_Total)\\Total Method Requests/sec",
              "\\Microsoft FTP Service(_Total)\\Bytes Total/sec",
              "\\Microsoft FTP Service(_Total)\\Current Connections",
              "\\SMTP Server(_Total)\\Bytes Received/sec",
              "\\SMTP Server(_Total)\\Bytes Sent/sec",
              "\\SMTP Server(_Total)\\Bytes Total/sec",
              "\\SMTP Server(_Total)\\Inbound Connections Current",
              "\\SMTP Server(_Total)\\Message Bytes Received/sec",
              "\\SMTP Server(_Total)\\Message Bytes Sent/sec",
              "\\SMTP Server(_Total)\\Messages Delivered/sec",
              "\\SMTP Server(_Total)\\Messages Received/sec",
              "\\SMTP Server(_Total)\\Messages Sent/sec",
              "\\SMTP Server(_Total)\\Outbound Connections Current",
              "\\SMTP Server(_Total)\\Total Messages Submitted",
              "\\SMTP Server(SMTP 1)\\Bytes Received/sec",
              "\\SMTP Server(SMTP 1)\\Bytes Sent/sec",
              "\\SMTP Server(SMTP 1)\\Bytes Total/sec",
              "\\SMTP Server(SMTP 1)\\Inbound Connections Current",
              "\\SMTP Server(SMTP 1)\\Message Bytes Received/sec",
              "\\SMTP Server(SMTP 1)\\Message Bytes Sent/sec",
              "\\SMTP Server(SMTP 1)\\Messages Delivered/sec",
              "\\SMTP Server(SMTP 1)\\Messages Received/sec",
              "\\SMTP Server(SMTP 1)\\Messages Sent/sec",
              "\\SMTP Server(SMTP 1)\\Outbound Connections Current",
              "\\SMTP Server(SMTP 1)\\Total Messages Submitted"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "7801460712043596894"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "moduleprefix": {
                      "type": "string",
                      "defaultValue": "AMSP-IIS"
                    }
                  },
                  "variables": {
                    "alertlist": [
                      {
                        "alertRuleDescription": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                        "alertRuleDisplayName": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                        "alertRuleName": "AlertRule-IIS-2012-1",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2221) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                        "alertRuleDisplayName": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                        "alertRuleName": "AlertRule-IIS-2012-2",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5152) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Application Pool worker process is unresponsive",
                        "alertRuleDisplayName": "Application Pool worker process is unresponsive",
                        "alertRuleName": "AlertRule-IIS-2012-3",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5010,5011,5012,5013) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Application Pool worker process terminated unexpectedly",
                        "alertRuleDisplayName": "Application Pool worker process terminated unexpectedly",
                        "alertRuleName": "AlertRule-IIS-2012-4",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5009) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "ASP application error occurred",
                        "alertRuleDisplayName": "ASP application error occurred",
                        "alertRuleName": "AlertRule-IIS-2012-5",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (500,499,23,22,21,20,19,18,17,16,9,8,7,6,5) and EventLog == 'Application' and Source == 'Active Server Pages'"
                      },
                      {
                        "alertRuleDescription": "HTTP control channel for the WWW Service did not open",
                        "alertRuleDisplayName": "HTTP control channel for the WWW Service did not open",
                        "alertRuleName": "AlertRule-IIS-2012-6",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1037) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not create a client connection object for user",
                        "alertRuleDisplayName": "HTTP Server could not create a client connection object for user",
                        "alertRuleName": "AlertRule-IIS-2012-7",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2208) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not create the main connection socket",
                        "alertRuleDisplayName": "HTTP Server could not create the main connection socket",
                        "alertRuleName": "AlertRule-IIS-2012-8",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2206) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not initialize its security",
                        "alertRuleDisplayName": "HTTP Server could not initialize its security",
                        "alertRuleName": "AlertRule-IIS-2012-9",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2201) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not initialize the socket library",
                        "alertRuleDisplayName": "HTTP Server could not initialize the socket library",
                        "alertRuleName": "AlertRule-IIS-2012-10",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2203) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server was unable to initialize due to a shortage of available memory",
                        "alertRuleDisplayName": "HTTP Server was unable to initialize due to a shortage of available memory",
                        "alertRuleName": "AlertRule-IIS-2012-11",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2204) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "ISAPI application error detected",
                        "alertRuleDisplayName": "ISAPI application error detected",
                        "alertRuleName": "AlertRule-IIS-2012-12",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2274,2268,2220,2219,2214) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Job object associated with the application pool encountered an error",
                        "alertRuleDisplayName": "Job object associated with the application pool encountered an error",
                        "alertRuleName": "AlertRule-IIS-2012-13",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5088,5061,5060) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Module has an invalid precondition",
                        "alertRuleDisplayName": "Module has an invalid precondition",
                        "alertRuleName": "AlertRule-IIS-2012-14",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2296) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Module registration error detected (failed to find RegisterModule entrypoint)",
                        "alertRuleDisplayName": "Module registration error detected (failed to find RegisterModule entrypoint)",
                        "alertRuleName": "AlertRule-IIS-2012-15",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2295) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Module registration error detected (module returned an error during registration)",
                        "alertRuleDisplayName": "Module registration error detected (module returned an error during registration)",
                        "alertRuleName": "AlertRule-IIS-2012-16",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2293) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Only one type of logging can be enabled at a time",
                        "alertRuleDisplayName": "Only one type of logging can be enabled at a time",
                        "alertRuleName": "AlertRule-IIS-2012-17",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1133) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                      },
                      {
                        "alertRuleDescription": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                        "alertRuleDisplayName": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                        "alertRuleName": "AlertRule-IIS-2012-18",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2261) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The configuration manager for WAS did not initialize",
                        "alertRuleDisplayName": "The configuration manager for WAS did not initialize",
                        "alertRuleName": "AlertRule-IIS-2012-19",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5036) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "The directory specified for caching compressed content is invalid",
                        "alertRuleDisplayName": "The directory specified for caching compressed content is invalid",
                        "alertRuleName": "AlertRule-IIS-2012-20",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2264) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The Global Modules list is empty",
                        "alertRuleDisplayName": "The Global Modules list is empty",
                        "alertRuleName": "AlertRule-IIS-2012-21",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2298) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The HTTP server encountered an error processing the server side include file",
                        "alertRuleDisplayName": "The HTTP server encountered an error processing the server side include file",
                        "alertRuleName": "AlertRule-IIS-2012-22",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2218) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server failed to close client connections to URLs during shutdown",
                        "alertRuleDisplayName": "The server failed to close client connections to URLs during shutdown",
                        "alertRuleName": "AlertRule-IIS-2012-23",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2258) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to acquire a license for a SSL connection",
                        "alertRuleDisplayName": "The server was unable to acquire a license for a SSL connection",
                        "alertRuleName": "AlertRule-IIS-2012-24",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2227) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to allocate a buffer to read a file",
                        "alertRuleDisplayName": "The server was unable to allocate a buffer to read a file",
                        "alertRuleName": "AlertRule-IIS-2012-25",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2233) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to read a file",
                        "alertRuleDisplayName": "The server was unable to read a file",
                        "alertRuleName": "AlertRule-IIS-2012-26",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2226,2230,2231,2232) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "WAS detected invalid configuration data",
                        "alertRuleDisplayName": "WAS detected invalid configuration data",
                        "alertRuleName": "AlertRule-IIS-2012-27",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5174,5179,5180) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[parameters('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "wsfriendlyname": {
                    "value": "[variables('workspaceFriendlyName')]"
                  },
                  "kind": {
                    "value": "[variables('kind')]"
                  },
                  "xPathQueries": {
                    "value": "[variables('xPathQueries')]"
                  },
                  "counterSpecifiers": {
                    "value": "[variables('performanceCounters')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15586190674869500289"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "Windows"
                    },
                    "wsfriendlyname": {
                      "type": "string",
                      "defaultValue": "TBD"
                    },
                    "xPathQueries": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "counterSpecifiers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "samplingFrequencyInSeconds": {
                      "type": "int",
                      "defaultValue": 300
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('rulename')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceId')]",
                              "name": "[parameters('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataSources": {
                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), json('null'), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                          "performanceCounters": [
                            {
                              "streams": [
                                "Microsoft-Perf"
                              ],
                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                              "name": "PerfCountersDataSource"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-Event",
                              "Microsoft-Perf"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrIISLogs-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "ruleName": {
                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "endpointResourceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "tableName": {
                    "value": "IISLogs"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "926628126860187676"
                    }
                  },
                  "parameters": {
                    "ruleName": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the name of the data collection rule to create."
                      }
                    },
                    "endpointResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the resource id of the data collection endpoint."
                      }
                    },
                    "tableName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the table."
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the location in which to create the data collection rule."
                      }
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('ruleName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "Windows",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                        "dataSources": {
                          "iisLogs": [
                            {
                              "streams": [
                                "Microsoft-W3CIISLog"
                              ],
                              "name": "iisLogsDataSource"
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('lawResourceId')]",
                              "name": "[variables('lawFriendlyName')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-W3CIISLog"
                            ],
                            "destinations": [
                              "[variables('lawFriendlyName')]"
                            ],
                            "transformKql": "source",
                            "outputStream": "Microsoft-W3CIISLog"
                          }
                        ],
                        "streamDeclarations": {
                          "Custom-MyTable_CL": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "RawData",
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}-IISLogs', parameters('packtag'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-2', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "IIS2016-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": {
            "value": "[parameters('actionGroupResourceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "9095339064875188723"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-IIS2016-Server",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "actionGroupResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "IIS2016"
            },
            "solutionTag": {
              "type": "string",
              "defaultValue": "MonitorStarterPacks"
            },
            "solutionVersion": {
              "type": "string",
              "defaultValue": "0.1.0"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            }
          },
          "variables": {
            "tempTags": {
              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
              "MonitoringPackType": "IaaS",
              "solutionVersion": "[parameters('solutionVersion')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
            "ruleshortname": "IIS2016",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "kind": "Windows",
            "xPathQueries": [
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1071 or EventID=1073)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1135 or EventID=1134)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2226 or EventID=2230 or EventID=2231 or EventID=2232)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2274 or EventID=2268 or EventID=2220 or EventID=2219 or EventID=2214)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5172 or EventID=5173)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5174 or EventID=5179 or EventID=5180)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5152)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1037)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1062)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1126)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1133)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1173)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1175)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2201)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2203)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2204)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2206)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2208)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2218)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2227)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2233)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2258)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2261)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2264)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2281)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2293)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2295)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2296)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2298)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5005)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5030)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5036)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5053)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5063)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5066)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5067)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5153)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6001)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6002)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6003)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6004)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6005)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6006)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6007)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6008)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6009)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6010)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6011)]]",
              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7023 or EventID=7024)]]",
              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7031)]]",
              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7034)]]",
              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7043)]]"
            ],
            "performanceCounters": [
              "\\Web Service(_Total)\\Bytes Received/sec",
              "\\Web Service(_Total)\\Bytes Sent/sec",
              "\\Web Service(_Total)\\Bytes Total/sec",
              "\\Web Service(_Total)\\Connection Attempts/sec",
              "\\Web Service(_Total)\\Current Connections",
              "\\Web Service(_Total)\\Total Method Requests/sec",
              "\\Microsoft FTP Service(_Total)\\Bytes Total/sec",
              "\\Microsoft FTP Service(_Total)\\Current Connections",
              "\\SMTP Server(_Total)\\Bytes Received/sec",
              "\\SMTP Server(_Total)\\Bytes Sent/sec",
              "\\SMTP Server(_Total)\\Bytes Total/sec",
              "\\SMTP Server(_Total)\\Inbound Connections Current",
              "\\SMTP Server(_Total)\\Message Bytes Received/sec",
              "\\SMTP Server(_Total)\\Message Bytes Sent/sec",
              "\\SMTP Server(_Total)\\Messages Delivered/sec",
              "\\SMTP Server(_Total)\\Messages Received/sec",
              "\\SMTP Server(_Total)\\Messages Sent/sec",
              "\\SMTP Server(_Total)\\Outbound Connections Current",
              "\\SMTP Server(_Total)\\Total Messages Submitted",
              "\\SMTP Server(SMTP 1)\\Bytes Received/sec",
              "\\SMTP Server(SMTP 1)\\Bytes Sent/sec",
              "\\SMTP Server(SMTP 1)\\Bytes Total/sec",
              "\\SMTP Server(SMTP 1)\\Inbound Connections Current",
              "\\SMTP Server(SMTP 1)\\Message Bytes Received/sec",
              "\\SMTP Server(SMTP 1)\\Message Bytes Sent/sec",
              "\\SMTP Server(SMTP 1)\\Messages Delivered/sec",
              "\\SMTP Server(SMTP 1)\\Messages Received/sec",
              "\\SMTP Server(SMTP 1)\\Messages Sent/sec",
              "\\SMTP Server(SMTP 1)\\Outbound Connections Current",
              "\\SMTP Server(SMTP 1)\\Total Messages Submitted"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "5107644619156935321"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "moduleprefix": {
                      "type": "string",
                      "defaultValue": "AMSP-IIS2016"
                    }
                  },
                  "variables": {
                    "alertlist": [
                      {
                        "alertRuleDescription": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                        "alertRuleDisplayName": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                        "alertRuleName": "AlertRule-IIS-2012-1",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2221) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                        "alertRuleDisplayName": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                        "alertRuleName": "AlertRule-IIS-2012-2",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5152) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Application Pool worker process is unresponsive",
                        "alertRuleDisplayName": "Application Pool worker process is unresponsive",
                        "alertRuleName": "AlertRule-IIS-2012-3",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5010,5011,5012,5013) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Application Pool worker process terminated unexpectedly",
                        "alertRuleDisplayName": "Application Pool worker process terminated unexpectedly",
                        "alertRuleName": "AlertRule-IIS-2012-4",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5009) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "ASP application error occurred",
                        "alertRuleDisplayName": "ASP application error occurred",
                        "alertRuleName": "AlertRule-IIS-2012-5",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (500,499,23,22,21,20,19,18,17,16,9,8,7,6,5) and EventLog == 'Application' and Source == 'Active Server Pages'"
                      },
                      {
                        "alertRuleDescription": "HTTP control channel for the WWW Service did not open",
                        "alertRuleDisplayName": "HTTP control channel for the WWW Service did not open",
                        "alertRuleName": "AlertRule-IIS-2012-6",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1037) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not create a client connection object for user",
                        "alertRuleDisplayName": "HTTP Server could not create a client connection object for user",
                        "alertRuleName": "AlertRule-IIS-2012-7",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2208) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not create the main connection socket",
                        "alertRuleDisplayName": "HTTP Server could not create the main connection socket",
                        "alertRuleName": "AlertRule-IIS-2012-8",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2206) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not initialize its security",
                        "alertRuleDisplayName": "HTTP Server could not initialize its security",
                        "alertRuleName": "AlertRule-IIS-2012-9",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2201) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not initialize the socket library",
                        "alertRuleDisplayName": "HTTP Server could not initialize the socket library",
                        "alertRuleName": "AlertRule-IIS-2012-10",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2203) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server was unable to initialize due to a shortage of available memory",
                        "alertRuleDisplayName": "HTTP Server was unable to initialize due to a shortage of available memory",
                        "alertRuleName": "AlertRule-IIS-2012-11",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2204) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "ISAPI application error detected",
                        "alertRuleDisplayName": "ISAPI application error detected",
                        "alertRuleName": "AlertRule-IIS-2012-12",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2274,2268,2220,2219,2214) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Job object associated with the application pool encountered an error",
                        "alertRuleDisplayName": "Job object associated with the application pool encountered an error",
                        "alertRuleName": "AlertRule-IIS-2012-13",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5088,5061,5060) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Module has an invalid precondition",
                        "alertRuleDisplayName": "Module has an invalid precondition",
                        "alertRuleName": "AlertRule-IIS-2012-14",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2296) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Module registration error detected (failed to find RegisterModule entrypoint)",
                        "alertRuleDisplayName": "Module registration error detected (failed to find RegisterModule entrypoint)",
                        "alertRuleName": "AlertRule-IIS-2012-15",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2295) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Module registration error detected (module returned an error during registration)",
                        "alertRuleDisplayName": "Module registration error detected (module returned an error during registration)",
                        "alertRuleName": "AlertRule-IIS-2012-16",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2293) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Only one type of logging can be enabled at a time",
                        "alertRuleDisplayName": "Only one type of logging can be enabled at a time",
                        "alertRuleName": "AlertRule-IIS-2012-17",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1133) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                      },
                      {
                        "alertRuleDescription": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                        "alertRuleDisplayName": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                        "alertRuleName": "AlertRule-IIS-2012-18",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2261) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The configuration manager for WAS did not initialize",
                        "alertRuleDisplayName": "The configuration manager for WAS did not initialize",
                        "alertRuleName": "AlertRule-IIS-2012-19",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5036) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "The directory specified for caching compressed content is invalid",
                        "alertRuleDisplayName": "The directory specified for caching compressed content is invalid",
                        "alertRuleName": "AlertRule-IIS-2012-20",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2264) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The Global Modules list is empty",
                        "alertRuleDisplayName": "The Global Modules list is empty",
                        "alertRuleName": "AlertRule-IIS-2012-21",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2298) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The HTTP server encountered an error processing the server side include file",
                        "alertRuleDisplayName": "The HTTP server encountered an error processing the server side include file",
                        "alertRuleName": "AlertRule-IIS-2012-22",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2218) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server failed to close client connections to URLs during shutdown",
                        "alertRuleDisplayName": "The server failed to close client connections to URLs during shutdown",
                        "alertRuleName": "AlertRule-IIS-2012-23",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2258) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to acquire a license for a SSL connection",
                        "alertRuleDisplayName": "The server was unable to acquire a license for a SSL connection",
                        "alertRuleName": "AlertRule-IIS-2012-24",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2227) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to allocate a buffer to read a file",
                        "alertRuleDisplayName": "The server was unable to allocate a buffer to read a file",
                        "alertRuleName": "AlertRule-IIS-2012-25",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2233) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to read a file",
                        "alertRuleDisplayName": "The server was unable to read a file",
                        "alertRuleName": "AlertRule-IIS-2012-26",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2226,2230,2231,2232) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "WAS detected invalid configuration data",
                        "alertRuleDisplayName": "WAS detected invalid configuration data",
                        "alertRuleName": "AlertRule-IIS-2012-27",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5174,5179,5180) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[parameters('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "wsfriendlyname": {
                    "value": "[variables('workspaceFriendlyName')]"
                  },
                  "kind": {
                    "value": "[variables('kind')]"
                  },
                  "xPathQueries": {
                    "value": "[variables('xPathQueries')]"
                  },
                  "counterSpecifiers": {
                    "value": "[variables('performanceCounters')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15586190674869500289"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "Windows"
                    },
                    "wsfriendlyname": {
                      "type": "string",
                      "defaultValue": "TBD"
                    },
                    "xPathQueries": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "counterSpecifiers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "samplingFrequencyInSeconds": {
                      "type": "int",
                      "defaultValue": 300
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('rulename')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceId')]",
                              "name": "[parameters('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataSources": {
                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), json('null'), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                          "performanceCounters": [
                            {
                              "streams": [
                                "Microsoft-Perf"
                              ],
                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                              "name": "PerfCountersDataSource"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-Event",
                              "Microsoft-Perf"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrIISLogs-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "ruleName": {
                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "endpointResourceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "tableName": {
                    "value": "IISLogs"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "926628126860187676"
                    }
                  },
                  "parameters": {
                    "ruleName": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the name of the data collection rule to create."
                      }
                    },
                    "endpointResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the resource id of the data collection endpoint."
                      }
                    },
                    "tableName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the table."
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the location in which to create the data collection rule."
                      }
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('ruleName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "Windows",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                        "dataSources": {
                          "iisLogs": [
                            {
                              "streams": [
                                "Microsoft-W3CIISLog"
                              ],
                              "name": "iisLogsDataSource"
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('lawResourceId')]",
                              "name": "[variables('lawFriendlyName')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-W3CIISLog"
                            ],
                            "destinations": [
                              "[variables('lawFriendlyName')]"
                            ],
                            "transformKql": "source",
                            "outputStream": "Microsoft-W3CIISLog"
                          }
                        ],
                        "streamDeclarations": {
                          "Custom-MyTable_CL": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "RawData",
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}-IISLogs', parameters('packtag'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-2', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "DNS2016-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": {
            "value": "[parameters('actionGroupResourceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "13889548344931579264"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-DNS2016-Server",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "DNS2016"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            },
            "actionGroupResourceId": {
              "type": "string"
            }
          },
          "variables": {
            "tempTags": {
              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
              "MonitoringPackType": "IaaS",
              "solutionVersion": "[parameters('solutionVersion')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
            "ruleshortname": "DNS2016",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "kind": "Windows",
            "xPathQueries": [
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=10)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1000)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1004)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1200)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1201)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1203)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=131)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=140)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=150)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1540)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4000)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4006)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4007)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4010)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4011)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4012)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4014)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4015)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4016)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4017)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=408)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=409)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=410)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=414)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4510)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4511)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4512)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=501)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=502)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=503)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=504)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=5051)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=6527)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=6702)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=706)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7060)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7616)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7636)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7642)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7644)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=777)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=111 or EventID=6533)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4018 or EventID=4019)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4513 or EventID=4514)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4520 or EventID=4521)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=707 or EventID=1003)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7692 or EventID=790)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=796 or EventID=799)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=2200 or EventID=2202 or EventID=2203)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7502 or EventID=7503 or EventID=7504)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=792 or EventID=795 or EventID=797)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1001 or EventID=1008 or EventID=3151 or EventID=3152 or EventID=3153)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=403 or EventID=404 or EventID=405 or EventID=406 or EventID=407)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=500 or EventID=505 or EventID=506 or EventID=507 or EventID=2204)]]"
            ],
            "performanceCounters": [
              "\\DNS\\AXFR Request Received",
              "\\DNS\\AXFR Request Sent",
              "\\DNS\\AXFR Response Received",
              "\\DNS\\AXFR Success Received",
              "\\DNS\\AXFR Success Sent",
              "\\DNS\\Caching Memory",
              "\\DNS\\Data Flush Pages/sec",
              "\\DNS\\Data Flushes/sec",
              "\\DNS\\Database Node Memory",
              "\\DNS\\Dynamic Update NoOperation",
              "\\DNS\\Dynamic Update NoOperation/sec",
              "\\DNS\\Dynamic Update Queued",
              "\\DNS\\Dynamic Update Received",
              "\\DNS\\Dynamic Update Received/sec",
              "\\DNS\\Dynamic Update Rejected",
              "\\DNS\\Dynamic Update TimeOuts",
              "\\DNS\\Dynamic Update Written to Database",
              "\\DNS\\Dynamic Update Written to Database/sec",
              "\\DNS\\IXFR Request Received",
              "\\DNS\\IXFR Request Sent",
              "\\DNS\\IXFR Response Received",
              "\\DNS\\IXFR Success Received",
              "\\DNS\\IXFR Success Sent",
              "\\DNS\\IXFR TCP Success Received",
              "\\DNS\\IXFR UDP Success Received",
              "\\DNS\\Nbstat Memory",
              "\\DNS\\Notify Received",
              "\\DNS\\Notify Sent",
              "\\DNS\\Query Dropped Bad Socket",
              "\\DNS\\Query Dropped Bad Socket/sec",
              "\\DNS\\Query Dropped By Policy",
              "\\DNS\\Query Dropped By Policy/sec",
              "\\DNS\\Query Dropped By Response Rate Limiting",
              "\\DNS\\Query Dropped By Response Rate Limiting/sec",
              "\\DNS\\Query Dropped Send",
              "\\DNS\\Query Dropped Send/sec",
              "\\DNS\\Query Dropped Total",
              "\\DNS\\Query Dropped Total/sec",
              "\\DNS\\Record Flow Memory",
              "\\DNS\\Recursive Queries",
              "\\DNS\\Recursive Queries/sec",
              "\\DNS\\Recursive Query Failure",
              "\\DNS\\Recursive Query Failure/sec",
              "\\DNS\\Recursive Send TimeOuts",
              "\\DNS\\Recursive TimeOut/sec",
              "\\DNS\\Responses Suppressed",
              "\\DNS\\Responses Suppressed/sec",
              "\\DNS\\Secure Update Failure",
              "\\DNS\\Secure Update Received",
              "\\DNS\\Secure Update Received/sec",
              "\\DNS\\TCP Message Memory",
              "\\DNS\\TCP Query Received",
              "\\DNS\\TCP Query Received/sec",
              "\\DNS\\TCP Response Sent",
              "\\DNS\\TCP Response Sent/sec",
              "\\DNS\\Total Query Received",
              "\\DNS\\Total Query Received/sec",
              "\\DNS\\Total Remote Inflight Queries",
              "\\DNS\\Total Response Sent",
              "\\DNS\\Total Response Sent/sec",
              "\\DNS\\UDP Message Memory",
              "\\DNS\\UDP Query Received",
              "\\DNS\\UDP Query Received/sec",
              "\\DNS\\UDP Response Sent",
              "\\DNS\\UDP Response Sent/sec",
              "\\DNS\\Unmatched Responses Received",
              "\\DNS\\WINS Lookup Received",
              "\\DNS\\WINS Lookup Received/sec",
              "\\DNS\\WINS Response Sent",
              "\\DNS\\WINS Response Sent/sec",
              "\\DNS\\WINS Reverse Lookup Received",
              "\\DNS\\WINS Reverse Lookup Received/sec",
              "\\DNS\\WINS Reverse Response Sent",
              "\\DNS\\WINS Reverse Response Sent/sec",
              "\\DNS\\Zone Transfer Failure",
              "\\DNS\\Zone Transfer Request Received",
              "\\DNS\\Zone Transfer SOA Request Sent",
              "\\DNS\\Zone Transfer Success"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "3090517007237896765"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "moduleprefix": {
                      "type": "string",
                      "defaultValue": "AMSP-DNS2016"
                    }
                  },
                  "variables": {
                    "alertlist": [
                      {
                        "alertRuleDescription": "Service.DependencyFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.DependencyFailed",
                        "alertRuleName": "AlertRule-Dns-2016-10",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (10) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.FileOpenError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.FileOpenError",
                        "alertRuleName": "AlertRule-Dns-2016-1000",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1000) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.CouldNotOpenDatabase",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.CouldNotOpenDatabase",
                        "alertRuleName": "AlertRule-Dns-2016-1004",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1004) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.BootFileNotFound",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.BootFileNotFound",
                        "alertRuleName": "AlertRule-Dns-2016-1200",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1200) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.ZoneCreationFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.ZoneCreationFailed",
                        "alertRuleName": "AlertRule-Dns-2016-1201",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1201) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.NoForwardingAddresses",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.NoForwardingAddresses",
                        "alertRuleName": "AlertRule-Dns-2016-1203",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1203) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "WINSConnector.Initialize.Failed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.WINSConnector.Initialize.Failed",
                        "alertRuleName": "AlertRule-Dns-2016-131",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (131) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "RPC.Initialize.Failed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RPC.Initialize.Failed",
                        "alertRuleName": "AlertRule-Dns-2016-140",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (140) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.PluginInitFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.PluginInitFailed",
                        "alertRuleName": "AlertRule-Dns-2016-150",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (150) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.DomainNodeCreationError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.DomainNodeCreationError",
                        "alertRuleName": "AlertRule-Dns-2016-1540",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1540) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.OpenFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.OpenFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4000",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4000) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.LoadFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.LoadFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4006",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4006) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.OpenPartitionFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.OpenPartitionFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4007",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4007) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.RecordLoadFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.RecordLoadFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4010",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4010) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.WriteFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.WriteFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4011",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4011) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.WriteTimeout",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.WriteTimeout",
                        "alertRuleName": "AlertRule-Dns-2016-4012",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4012) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.SecurityInterfaceFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.SecurityInterfaceFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4014",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4014) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.InterfaceError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.InterfaceError",
                        "alertRuleName": "AlertRule-Dns-2016-4015",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4015) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.LDAPTimeout",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.LDAPTimeout",
                        "alertRuleName": "AlertRule-Dns-2016-4016",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4016) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.DNSAdminsError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.DNSAdminsError",
                        "alertRuleName": "AlertRule-Dns-2016-4017",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4017) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.OpenSocketForAddress",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.OpenSocketForAddress",
                        "alertRuleName": "AlertRule-Dns-2016-408",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (408) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.UpdateListenAddresses",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.UpdateListenAddresses",
                        "alertRuleName": "AlertRule-Dns-2016-409",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (409) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.InvalidListenAddresses",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidListenAddresses",
                        "alertRuleName": "AlertRule-Dns-2016-410",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (410) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.SingleLabelHostname",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.SingleLabelHostname",
                        "alertRuleName": "AlertRule-Dns-2016-414",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (414) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.FSMOUnavailable",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.FSMOUnavailable",
                        "alertRuleName": "AlertRule-Dns-2016-4510",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4510) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.DeleteError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.DeleteError",
                        "alertRuleName": "AlertRule-Dns-2016-4511",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4511) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.PartitionCreateError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.PartitionCreateError",
                        "alertRuleName": "AlertRule-Dns-2016-4512",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4512) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.InvalidZoneType",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidZoneType",
                        "alertRuleName": "AlertRule-Dns-2016-501",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (501) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.NoZoneFile",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.NoZoneFile",
                        "alertRuleName": "AlertRule-Dns-2016-502",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (502) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.SecondaryRequiresMasters",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.SecondaryRequiresMasters",
                        "alertRuleName": "AlertRule-Dns-2016-503",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (503) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.RegZoneCreationFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.RegZoneCreationFailed",
                        "alertRuleName": "AlertRule-Dns-2016-504",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (504) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.Memory.Warning",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.Memory.Warning",
                        "alertRuleName": "AlertRule-Dns-2016-5051",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5051) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.ZoneExpiration",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.ZoneExpiration",
                        "alertRuleName": "AlertRule-Dns-2016-6527",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (6527) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.UpdateDSPeersFailure",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.UpdateDSPeersFailure",
                        "alertRuleName": "AlertRule-Dns-2016-6702",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (6702) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "RootHints.NoRootNameServer",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RootHints.NoRootNameServer",
                        "alertRuleName": "AlertRule-Dns-2016-706",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (706) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.ConnectionError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.ConnectionError",
                        "alertRuleName": "AlertRule-Dns-2016-7060",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7060) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "DNSSEC.TALoadFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TALoadFailed",
                        "alertRuleName": "AlertRule-Dns-2016-7616",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7616) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "DNSSEC.TPDeleted",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TPDeleted",
                        "alertRuleName": "AlertRule-Dns-2016-7636",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7636) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "DNSSEC.InvalidTA",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.InvalidTA",
                        "alertRuleName": "AlertRule-Dns-2016-7642",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7642) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "DNSSEC.TARefreshFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TARefreshFailed",
                        "alertRuleName": "AlertRule-Dns-2016-7644",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7644) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "DNSSEC.ZoneUnSignFailure",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.ZoneUnSignFailure",
                        "alertRuleName": "AlertRule-Dns-2016-777",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (777) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.ThreadCreationFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.ThreadCreationFailed",
                        "alertRuleName": "AlertRule-Dns-2016-111",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (111,6533) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.BackgroundLoadFailure",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.BackgroundLoadFailure",
                        "alertRuleName": "AlertRule-Dns-2016-4018",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4018,4019) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.EnlistmentFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.EnlistmentFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4513",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4513,4514) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.RetryableZoneOperationFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.RetryableZoneOperationFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4520",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4520,4521) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "RootHints.CacheFileError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RootHints.CacheFileError",
                        "alertRuleName": "AlertRule-Dns-2016-707",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (707,1003) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Server.EDNS0.ZoneTransfer.OptionInvalid",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.Server.EDNS0.ZoneTransfer.OptionInvalid",
                        "alertRuleName": "AlertRule-Dns-2016-7692",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7692,790) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ClientSubnet.LoadFail",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.ClientSubnet.LoadFail",
                        "alertRuleName": "AlertRule-Dns-2016-796",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (796,799) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.RegistryOperationFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.RegistryOperationFailed",
                        "alertRuleName": "AlertRule-Dns-2016-2200",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2200,2202,2203) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.Memory.Error",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.Memory.Error",
                        "alertRuleName": "AlertRule-Dns-2016-7502",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7502,7503,7504) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Policy.ServerLevel.LoadFail",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.Policy.ServerLevel.LoadFail",
                        "alertRuleName": "AlertRule-Dns-2016-792",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (792,795,797) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.FileError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.FileError",
                        "alertRuleName": "AlertRule-Dns-2016-1001",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1001,1008,3151,3152,3153) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.SocketFailure",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.SocketFailure",
                        "alertRuleName": "AlertRule-Dns-2016-403",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (403,404,405,406,407) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.InvalidRegistrySetting",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidRegistrySetting",
                        "alertRuleName": "AlertRule-Dns-2016-500",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (500,505,506,507,2204) and EventLog == 'DNS Server'"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[parameters('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "wsfriendlyname": {
                    "value": "[variables('workspaceFriendlyName')]"
                  },
                  "kind": {
                    "value": "[variables('kind')]"
                  },
                  "xPathQueries": {
                    "value": "[variables('xPathQueries')]"
                  },
                  "counterSpecifiers": {
                    "value": "[variables('performanceCounters')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15586190674869500289"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "Windows"
                    },
                    "wsfriendlyname": {
                      "type": "string",
                      "defaultValue": "TBD"
                    },
                    "xPathQueries": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "counterSpecifiers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "samplingFrequencyInSeconds": {
                      "type": "int",
                      "defaultValue": 300
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('rulename')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceId')]",
                              "name": "[parameters('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataSources": {
                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), json('null'), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                          "performanceCounters": [
                            {
                              "streams": [
                                "Microsoft-Perf"
                              ],
                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                              "name": "PerfCountersDataSource"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-Event",
                              "Microsoft-Perf"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "PS2016-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": {
            "value": "[parameters('actionGroupResourceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "15481136742547090579"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-Windows-PS2016",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "PS2016",
              "metadata": {
                "description": "The tag to be used for the solution."
              }
            },
            "actionGroupResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            }
          },
          "variables": {
            "tempTags": {
              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
              "MonitoringPackType": "IaaS",
              "solutionVersion": "[parameters('solutionVersion')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
            "ruleshortname": "PS2016",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "kind": "Windows",
            "xPathQueries": [
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=83) and (Provider[@Name='Microsoft-Windows-PrintBRM' or @Name='PrintBrm'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=360) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Operational!*[System[(EventID=701 or EventID=702 or EventID=703 or EventID=704) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=364 or EventID=365 or EventID=367) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=315) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=371) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=356) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=513 or EventID=514) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=600 or EventID=601) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=515 or EventID=516 or EventID=517 or EventID=518 or EventID=519 or EventID=520) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=502 or EventID=503 or EventID=504 or EventID=505 or EventID=506 or EventID=507 or EventID=508 or EventID=509 or EventID=510 or EventID=511 or EventID=512) and (Provider[@Name='Microsoft-Windows-PrintService'])]]"
            ],
            "performanceCounters": [
              "\\Print Queue(_Total)\\Jobs",
              "\\Print Queue(_Total)\\Jobs Spooling",
              "\\Print Queue(_Total)\\Total Jobs Printed",
              "\\Print Queue(_Total)\\Total Pages Printed"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "wsfriendlyname": {
                    "value": "[variables('workspaceFriendlyName')]"
                  },
                  "kind": {
                    "value": "[variables('kind')]"
                  },
                  "xPathQueries": {
                    "value": "[variables('xPathQueries')]"
                  },
                  "counterSpecifiers": {
                    "value": "[variables('performanceCounters')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15586190674869500289"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "Windows"
                    },
                    "wsfriendlyname": {
                      "type": "string",
                      "defaultValue": "TBD"
                    },
                    "xPathQueries": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "counterSpecifiers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "samplingFrequencyInSeconds": {
                      "type": "int",
                      "defaultValue": 300
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('rulename')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceId')]",
                              "name": "[parameters('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataSources": {
                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), json('null'), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                          "performanceCounters": [
                            {
                              "streams": [
                                "Microsoft-Perf"
                              ],
                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                              "name": "PerfCountersDataSource"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-Event",
                              "Microsoft-Perf"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "1280429823884943158"
                    }
                  },
                  "parameters": {
                    "moduleprefix": {
                      "type": "string",
                      "defaultValue": "AMSP-Win-PS2016"
                    },
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "alertlist": [
                      {
                        "alertRuleDescription": "Ensure the server is accessible.",
                        "alertRuleDisplayName": "Ensure the server is accessible.",
                        "alertRuleName": "AlertRule-PS-2016-1",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (83) and EventLog == 'Microsoft-Windows-PrintService/Admin' and (Source == 'Microsoft-Windows-PrintBRM' or Source == 'PrintBrm')"
                      },
                      {
                        "alertRuleDescription": "Manually install the color profile.",
                        "alertRuleDisplayName": "Manually install the color profile.",
                        "alertRuleName": "AlertRule-PS-2016-2",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (360) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Retry printing or restart the print server.",
                        "alertRuleDisplayName": "Retry printing or restart the print server.",
                        "alertRuleName": "AlertRule-PS-2016-3",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (701,702,703,704) and EventLog == 'Microsoft-Windows-PrintService/Operational!*' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Install the Printer Driver.",
                        "alertRuleDisplayName": "Install the Printer Driver.",
                        "alertRuleName": "AlertRule-PS-2016-4",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (364,365,367) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Restart the print spooler fix sharing problems and check Group Policy.",
                        "alertRuleDisplayName": "Restart the print spooler fix sharing problems and check Group Policy.",
                        "alertRuleName": "AlertRule-PS-2016-5",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (315) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Restart the print spooler and unshare the printer.",
                        "alertRuleDisplayName": "Restart the print spooler and unshare the printer.",
                        "alertRuleName": "AlertRule-PS-2016-6",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (371) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Update the printer driver.",
                        "alertRuleDisplayName": "Update the printer driver.",
                        "alertRuleName": "AlertRule-PS-2016-7",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (356) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Check Group Policy and network connectivity.",
                        "alertRuleDisplayName": "Check Group Policy and network connectivity.",
                        "alertRuleName": "AlertRule-PS-2016-8",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (513,514) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Try again or install an updated printer driver.",
                        "alertRuleDisplayName": "Try again or install an updated printer driver.",
                        "alertRuleName": "AlertRule-PS-2016-9",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (600,601) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Check network connectivity and Group Policy.",
                        "alertRuleDisplayName": "Check network connectivity and Group Policy.",
                        "alertRuleName": "AlertRule-PS-2016-10",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (515,516,517,518,519,520) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Check resource availability.",
                        "alertRuleDisplayName": "Check resource availability.",
                        "alertRuleName": "AlertRule-PS-2016-11",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (502,503,504,505,506,507,508,509,510,511,512) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[parameters('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Nginx-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": {
            "value": "[parameters('actionGroupResourceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "11534667102268109795"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-Linux-Nginx",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "actionGroupResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "Nginx"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            }
          },
          "variables": {
            "tempTags": {
              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
              "MonitoringPackType": "IaaS",
              "solutionVersion": "[parameters('solutionVersion')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
            "ruleshortname": "Nginx",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "facilityNames": [
              "daemon"
            ],
            "logLevels": [
              "Debug",
              "Info",
              "Notice",
              "Warning",
              "Error",
              "Critical",
              "Alert",
              "Emergency"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('filecollectionrule-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "endpointResourceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "ruleName": {
                    "value": "[parameters('rulename')]"
                  },
                  "filepatterns": {
                    "value": [
                      "/var/log/nginx/access.log"
                    ]
                  },
                  "lawResourceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "tableName": {
                    "value": "NginxLogs"
                  },
                  "facilityNames": {
                    "value": "[variables('facilityNames')]"
                  },
                  "logLevels": {
                    "value": "[variables('logLevels')]"
                  },
                  "syslogDataSourceName": {
                    "value": "NginxLogs-1238219"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "6845190083190442520"
                    }
                  },
                  "parameters": {
                    "ruleName": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the name of the data collection rule to create."
                      }
                    },
                    "endpointResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the resource id of the data collection endpoint."
                      }
                    },
                    "tableName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the table."
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the location in which to create the data collection rule."
                      }
                    },
                    "filepatterns": {
                      "type": "array"
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "facilityNames": {
                      "type": "array"
                    },
                    "logLevels": {
                      "type": "array"
                    },
                    "syslogDataSourceName": {
                      "type": "string",
                      "defaultValue": "sysLogsDataSource-1688419672"
                    }
                  },
                  "variables": {
                    "tableNameToUse": "[format('CustomAzMA{0}_CL', parameters('tableName'))]",
                    "streamName": "[format('Custom-{0}', variables('tableNameToUse'))]",
                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]",
                    "lawResourceGroup": "[split(parameters('lawResourceId'), '/')[4]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('ruleName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "Linux",
                      "properties": {
                        "dataSources": {
                          "syslog": [
                            {
                              "streams": [
                                "Microsoft-Syslog"
                              ],
                              "facilityNames": "[parameters('facilityNames')]",
                              "logLevels": "[parameters('logLevels')]",
                              "name": "[parameters('syslogDataSourceName')]"
                            }
                          ],
                          "logFiles": [
                            {
                              "streams": [
                                "[variables('streamName')]"
                              ],
                              "filePatterns": "[parameters('filepatterns')]",
                              "format": "text",
                              "settings": {
                                "text": {
                                  "recordStartTimestampFormat": "ISO 8601"
                                }
                              },
                              "name": "[variables('tableNameToUse')]"
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('lawResourceId')]",
                              "name": "[variables('lawFriendlyName')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-Syslog"
                            ],
                            "destinations": [
                              "[variables('lawFriendlyName')]"
                            ],
                            "transformKql": "source | where SyslogMessage == \"Stopped A high performance web server and a reverse proxy server.\" or SyslogMessage == \"Started A high performance web server and a reverse proxy server.\"",
                            "outputStream": "Microsoft-Syslog"
                          },
                          {
                            "streams": [
                              "[variables('streamName')]"
                            ],
                            "destinations": [
                              "[variables('lawFriendlyName')]"
                            ],
                            "transformKql": "source",
                            "outputStream": "[variables('streamName')]"
                          }
                        ],
                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                        "streamDeclarations": {
                          "[format('{0}', variables('streamName'))]": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "RawData",
                                "type": "string"
                              }
                            ]
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('lawResourceGroup')), 'Microsoft.Resources/deployments', variables('tableNameToUse'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('tableNameToUse')]",
                      "resourceGroup": "[variables('lawResourceGroup')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parentname": {
                            "value": "[variables('lawFriendlyName')]"
                          },
                          "tableName": {
                            "value": "[variables('tableNameToUse')]"
                          },
                          "retentionDays": {
                            "value": 31
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "8927710276797462866"
                            }
                          },
                          "parameters": {
                            "parentname": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "retentionDays": {
                              "type": "int",
                              "defaultValue": 31
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.OperationalInsights/workspaces/tables",
                              "apiVersion": "2022-10-01",
                              "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                              "properties": {
                                "totalRetentionInDays": "[parameters('retentionDays')]",
                                "plan": "Analytics",
                                "schema": {
                                  "name": "[parameters('tableName')]",
                                  "columns": [
                                    {
                                      "name": "TimeGenerated",
                                      "type": "datetime"
                                    },
                                    {
                                      "name": "RawData",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "retentionInDays": "[parameters('retentionDays')]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "ruleId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "5189601493643777727"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "moduleprefix": "AMSP-LxOS-Nginx",
                    "alertlist": [
                      {
                        "alertRuleDescription": "Nginx stopped.",
                        "alertRuleDisplayName": "Nginx service stopped.",
                        "alertRuleName": "AlertRule-Nginx-1",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Syslog | where SyslogMessage == \"Stopped A high performance web server and a reverse proxy server.\""
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[variables('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('filecollectionrule-{0}', parameters('packtag'))), '2022-09-01').outputs.ruleId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[variables('ruleshortname')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('filecollectionrule-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "grafana",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "fileName": {
            "value": "grafana.zip"
          },
          "grafanaResourceId": {
            "value": "[parameters('grafanaResourceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[variables('resourceGroupName')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "packsManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "2949158896563549567"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "grafanaResourceId": {
              "type": "string"
            },
            "fileName": {
              "type": "string"
            },
            "packsManagedIdentityResourceId": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            }
          },
          "variables": {
            "$fxv#0": "",
            "grafanaName": "[split(parameters('grafanaResourceId'), '/')[8]]",
            "tempfilename": "[format('{0}.tmp', parameters('fileName'))]",
            "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('solutionTag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('solutionTag'), 'solutionVersion', parameters('solutionVersion')), parameters('customerTags').All))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "deployscript-Grafana",
              "tags": "[variables('Tags')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('packsManagedIdentityResourceId'))]": {}
                }
              },
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "2.42.0",
                "timeout": "PT5M",
                "retentionInterval": "PT1H",
                "environmentVariables": [
                  {
                    "name": "CONTENT",
                    "value": "[variables('$fxv#0')]"
                  }
                ],
                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az extension add --name amg && az login --identity && unzip {3} && for file in *.json; do az grafana dashboard import -g {4} -n {5} --definition \"$file\" --overwrite true;done', variables('tempfilename'), variables('tempfilename'), parameters('fileName'), parameters('fileName'), parameters('resourceGroupName'), variables('grafanaName'))]"
              }
            }
          ]
        }
      }
    }
  ]
}