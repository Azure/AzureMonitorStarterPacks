{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Azure Monitor Starter Packs - Extended Admin Centre - V2.1\n\n\n"
      },
      "customWidth": "50",
      "name": "textTitle"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "741661c9-5e51-44bc-8e8e-bfc6396f2646",
            "version": "KqlParameterItem/1.0",
            "name": "showHelp",
            "label": "Show Help Info",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\n    { \"value\":\"yes\", \"label\":\"Yes\",\"default\": \"yes\" },\n    { \"value\":\"no\", \"label\":\"No\" }\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "no"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "showHidden",
            "label": "Show Hidden Items",
            "type": 10,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\n    { \"value\":\"yes\", \"label\":\"Yes\",\"default\": \"yes\" },\n    { \"value\":\"no\", \"label\":\"No\" }\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "no",
            "id": "f538abc2-3e09-45aa-a81e-b966a64e0703"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "customWidth": "50",
      "name": "showHelpparameter"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "a9a63932-4a11-4fe1-938c-02619e609193",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Getting Started",
            "subTarget": "gettingstarted",
            "style": "link"
          },
          {
            "id": "4f0ca437-37b0-42f6-a150-e994338f5185",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Status",
            "subTarget": "status",
            "style": "link"
          },
          {
            "id": "15f0fa97-4286-48d6-9dea-26a956197d26",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Servers",
            "subTarget": "discovery",
            "style": "link"
          },
          {
            "id": "c5269422-e723-43b6-b923-8bf44fd49320",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Services",
            "subTarget": "paas",
            "style": "link"
          },
          {
            "id": "7499a88f-a536-41d7-9b58-9ebae1b5290e",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Alert Mgmt",
            "subTarget": "alertmanagement",
            "style": "link"
          },
          {
            "id": "3a19e3a9-d64d-41d8-a313-3a60db36bcc4",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Policy Management",
            "subTarget": "policystatus",
            "style": "link"
          },
          {
            "id": "c2a67d72-dd46-44ea-adba-b9d70915c607",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Pack Status",
            "subTarget": "rulemanagement",
            "style": "link"
          },
          {
            "id": "d8f7936d-170f-430d-af7d-ac22115a9e38",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Agent Mgmt",
            "subTarget": "agentmgmt",
            "style": "link"
          },
          {
            "id": "afec2944-3bd3-4bd3-8afa-6dc39d0b623a",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Discovery (Preview)",
            "subTarget": "autodiscovery",
            "style": "link"
          },
          {
            "id": "e1f636a4-1593-49ef-bf35-abf708e2be48",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Configuration",
            "subTarget": "backend",
            "style": "link"
          },
          {
            "id": "295ed7b4-8237-409a-87d2-1efd439bea97",
            "cellValue": "tabSelection",
            "linkTarget": "parameter",
            "linkLabel": "Logs",
            "subTarget": "logs",
            "style": "link"
          }
        ]
      },
      "customWidth": "75",
      "name": "mainLinksTab"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "always",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## General Parameters\n\n### Subscriptions\n\nSelect the Subscriptions that will be used in the Configuration\n\n### Logic App\n\nSelect the logic app to be used. Typically the shoulbe a single one but if more instances exist, select the one for the instance you want to use.\n\n### Function Apps\n\nSelect the Backend Function to be used. Typically the shoulbe a single one but if more instances exist, select the one for the instance you want to use.\n\n### Config Function Key\n\nThis field will be automatically populated once the function is selected.\n\n### Workspace\n\nSelect the Log Analytics Workspace to be used for this instance.\n\n### Azure Managed Grafana\n\nSelect the Azure Managed Grafana if you have deployed one along with the solution.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "showHelp",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - Configuration "
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "/subscriptions/bd4d88c1-fc0f-482f-b57b-2f3ed541945e"
              ],
              "parameters": [
                {
                  "id": "7a778b2c-619d-4f82-bd1c-810f853af6fd",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "isGlobal": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": false,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": [
                    "/subscriptions/bd4d88c1-fc0f-482f-b57b-2f3ed541945e",
                    "/subscriptions/7591e487-7045-43a5-9896-e7a82cb2c602"
                  ]
                },
                {
                  "id": "1efb8bbe-532a-491b-b3c4-55f1402ee280",
                  "version": "KqlParameterItem/1.0",
                  "name": "logicAppResource",
                  "label": "Logic App",
                  "type": 5,
                  "isRequired": true,
                  "query": "resources\n| where type == \"microsoft.logic/workflows\" \n| where isnotempty(tags.MonitorStarterPacksComponents)\n| project Id=id, Name=name",
                  "crossComponentResources": [
                    "value::tenant"
                  ],
                  "typeSettings": {
                    "resourceTypeFilter": {
                      "microsoft.logic/workflows": true
                    },
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resources/tenants",
                  "value": "/subscriptions/bd4d88c1-fc0f-482f-b57b-2f3ed541945e/resourceGroups/rg-MonstarPacks/providers/Microsoft.Logic/workflows/AMP-fta-LogicApp"
                },
                {
                  "id": "16d48fd3-189f-4604-9582-da7cf5c93d7c",
                  "version": "KqlParameterItem/1.0",
                  "name": "FunctionApps",
                  "label": "Function Apps",
                  "type": 5,
                  "description": "Select the function to provide the access key.",
                  "isRequired": true,
                  "isGlobal": true,
                  "query": "resources\n| where type =~ 'microsoft.web/sites' and ['kind'] =~ 'functionapp'\n| where isnotempty(tags.MonitorStarterPacksComponents)\n| project id,name",
                  "crossComponentResources": [
                    "/subscriptions/bd4d88c1-fc0f-482f-b57b-2f3ed541945e"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 1,
                  "value": "/subscriptions/bd4d88c1-fc0f-482f-b57b-2f3ed541945e/resourceGroups/rg-MonstarPacks/providers/Microsoft.Web/sites/AMP-fta-bd4d88c1-Function"
                },
                {
                  "id": "c9fbafc9-2806-4c24-8d34-18f7cae66299",
                  "version": "KqlParameterItem/1.0",
                  "name": "configKey",
                  "label": "Config Function Key",
                  "type": 1,
                  "description": "The function key is fetched automatically from the function selected on the right.",
                  "isRequired": true,
                  "isGlobal": true,
                  "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"{FunctionApps}/functions/config/listkeys?api-version=2022-03-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.default\",\"columns\":[]}}]}",
                  "typeSettings": {
                    "isPassword": true
                  },
                  "queryType": 12
                },
                {
                  "id": "4552c35d-c26c-4cbf-a4cf-b2e57ff7ee78",
                  "version": "KqlParameterItem/1.0",
                  "name": "Workspace",
                  "label": "WorkSpace",
                  "type": 5,
                  "isRequired": true,
                  "isGlobal": true,
                  "query": "resources\n| where type == \"microsoft.operationalinsights/workspaces\"\n| project id",
                  "crossComponentResources": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": "/subscriptions/bd4d88c1-fc0f-482f-b57b-2f3ed541945e/resourceGroups/rg-MonstarPacks/providers/Microsoft.OperationalInsights/workspaces/Monstar-LAW"
                },
                {
                  "id": "ea93902e-9856-4bd4-998d-ea88378907a7",
                  "version": "KqlParameterItem/1.0",
                  "name": "GrafanaInstance",
                  "label": "Azure Managed Grafana",
                  "type": 2,
                  "isRequired": true,
                  "isGlobal": true,
                  "query": "resources\n| where type =~ \"microsoft.dashboard/grafana\"\n| where isnotempty(tags.monitorStarterPacksComponents) or isnotempty(tags.MonitorStarterPacksComponents)\n| project id, label=properties.endpoint",
                  "crossComponentResources": [
                    "value::tenant"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resources/tenants",
                  "value": "/subscriptions/bd4d88c1-fc0f-482f-b57b-2f3ed541945e/resourceGroups/rg-MonstarPacks/providers/Microsoft.Dashboard/grafana/AMSPfta24"
                }
              ],
              "style": "above",
              "queryType": 1,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "tabSelection",
              "comparison": "isEqualTo",
              "value": "backend"
            },
            "name": "generalParams"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "value::tenant"
              ],
              "parameters": [
                {
                  "id": "e5054aa1-60b0-4050-9f35-f4b2d3ac0d0e",
                  "version": "KqlParameterItem/1.0",
                  "name": "PaaSQuery",
                  "type": 1,
                  "description": "This parameter is used to bring the proper PaaS list of supported services.",
                  "isGlobal": true,
                  "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getPaaSquery\",\"contentType\":\"text/plain\",\"urlParams\":[],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[]}}]}",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 10,
                  "value": null
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "PlatformQuery",
                  "type": 1,
                  "description": "This parameter is used to bring the proper Platform list of supported services.",
                  "isGlobal": true,
                  "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getPlatformquery\",\"contentType\":\"text/plain\",\"urlParams\":[],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[]}}]}",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 10,
                  "id": "9a917e70-be3e-43bb-a44b-85d857762cd9"
                },
                {
                  "id": "03340268-1ac8-4d74-a76e-bc37a4bdd45c",
                  "version": "KqlParameterItem/1.0",
                  "name": "appInsightsName",
                  "type": 5,
                  "query": "resources\n| where type == \"microsoft.insights/components\"\n| where name == \"{FunctionApps:name}\"\n| project id, name",
                  "crossComponentResources": [
                    "value::tenant"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resources/tenants",
                  "value": "/subscriptions/bd4d88c1-fc0f-482f-b57b-2f3ed541945e/resourceGroups/rg-MonstarPacks/providers/Microsoft.Insights/components/AMP-fta-bd4d88c1-Function"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants"
            },
            "conditionalVisibility": {
              "parameterName": "showHidden",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "parameters - 5"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "f5b4b4b6-c5d7-4941-b807-8a61df48a0f4",
                  "cellValue": "configTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Resource List",
                  "subTarget": "resources",
                  "style": "link"
                },
                {
                  "id": "2b8648a3-8221-4c46-bf6c-0962dc862628",
                  "cellValue": "configTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Namespace Table",
                  "subTarget": "namespaces",
                  "style": "link"
                }
              ]
            },
            "name": "links - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\n| where isnotempty(tags.MonitorStarterPacks) or isnotempty(tags.MonitorStarterPacksComponents)\n|union ( \npolicyresources | where isnotempty(properties.metadata.MonitorStarterPacks))\n| summarize count() by type\n| sort by count_ desc ",
              "size": 0,
              "title": "Monitoring Packs resources and Components",
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "filter": true
              }
            },
            "conditionalVisibility": {
              "parameterName": "configTab",
              "comparison": "isEqualTo",
              "value": "resources"
            },
            "name": "Installed Components",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getAllServiceTags\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
              "size": 0,
              "queryType": 10
            },
            "conditionalVisibility": {
              "parameterName": "configTab",
              "comparison": "isEqualTo",
              "value": "namespaces"
            },
            "name": "queryServiceTags"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "backend"
      },
      "name": "ConfigStatusGroup"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getAllServiceTags\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
        "size": 0,
        "queryType": 10
      },
      "conditionalVisibility": {
        "parameterName": "showHidden",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "name": "queryServiceTags - Global"
    },
    {
      "type": 1,
      "content": {
        "json": "# Getting Started\n\nWelcome to the Azure Monitoring Packs. This workbook was designed to help you configuring the solution. Here you can:\n- Enable/Disable monitoring packs for one or more VMs or services. You may also disable all the monitoring for a specific server or service. This will remove the tags and the rule associations. For services, right now, the alerts won´t be deleted by themselves.\n- Enable/Disable Alerts in bulk. You can also assign a different Action group to one or more alerts or delete the rules**\n- Check policy status and start remediation if required. By clicking in a policy, you can also assign that policy to another scope.\n- Check Monitor pack associations.\n- Review discovered applications (VMs only)\n- Manage agent configuration (install/remove)\n\n## Link to your managed [Grafana]({GrafanaInstance:label}) instance. Make sure to property set permissions before attemping to access it.\n\n## ***If this is the first time using this solution, please configure parameters in the Configuration tab and save the workbook for proper functionality.***\n\n\n## Please check the Monitoring Packs repository for updates. [Azure MONitor STARter Packs](http://github.com/Azure/AzureMonitorStarterPacks)\n## Also check the Azure Monitor Baseline Alerts ([AMBA](http://aka.ms/amba)) website for the details on the alerts.\n\n\n\n\n\n"
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "gettingstarted"
      },
      "name": "textGetStarted"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "04e679ee-16ae-46f6-a85b-d47751c0bcca",
                  "cellValue": "dashTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Active Alerts",
                  "subTarget": "alerts",
                  "preText": "",
                  "style": "link"
                },
                {
                  "id": "a4b4c83e-fce7-48e2-95ce-acf12c050eaa",
                  "cellValue": "dashTab",
                  "linkTarget": "parameter",
                  "linkLabel": "IaaS Summary",
                  "subTarget": "iaas",
                  "style": "link"
                },
                {
                  "id": "4e01b5fe-51d5-4ba4-9d3c-6f5b5ef2d93c",
                  "cellValue": "dashTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Services Summary",
                  "subTarget": "paas",
                  "style": "link"
                }
              ]
            },
            "name": "links - 3 - Copy"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## IaaS Information\n\nThe summary below shows details related to the IaaS Monitoring packs.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "showHelp",
                    "comparison": "isEqualTo",
                    "value": "yes"
                  },
                  "name": "text - Summary - IaaS"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources | where type =~ 'microsoft.hybridcompute/machines' or type =~ 'microsoft.compute/virtualmachines'\n| extend MonitorStatus=iff(isnotempty(tostring(tags.MonitorStarterPacks)),'Monitored','Not Monitored')\n| summarize count() by MonitorStatus",
                    "size": 1,
                    "title": "Monitoring Status (Tags)",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Monitored",
                          "color": "green"
                        },
                        {
                          "seriesName": "Not Monitored",
                          "color": "orange"
                        }
                      ]
                    }
                  },
                  "customWidth": "33",
                  "name": "Monitoring Status Tags",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\n    JoinID = toupper(id)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| extend\n    JoinID = toupper(id)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| summarize count() by AgentInstalled=iff(isempty(ExtensionName),\"No\",\"Yes\")",
                    "size": 1,
                    "title": "Agent Install Status",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Yes",
                          "label": "AMA Installed",
                          "color": "green"
                        },
                        {
                          "seriesName": "No",
                          "label": "No AMA",
                          "color": "red"
                        }
                      ]
                    }
                  },
                  "customWidth": "33",
                  "name": "agentInstallStatus",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "policyresources | where type == \"microsoft.policyinsights/policystates\" | extend policyName=tostring(properties.policyDefinitionName), complianceState=properties.complianceState\n| join (policyresources | where type == \"microsoft.authorization/policydefinitions\" and isnotempty(properties.metadata.MonitorStarterPacks) | project policyId=id, policyName=name, pack=tostring(properties.metadata.MonitorStarterPacks)) on policyName\n| project policyId, policyName, complianceState=tostring(complianceState), pack,type='Policy'\n| union( policyresources\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\n| extend complianceState = tostring(properties.complianceState)\n| extend\n\tresourceId = tostring(properties.resourceId),\n\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\n\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\n\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\n\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\n\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\n\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\n| summarize overallStateWeight = max(max_stateWeight),\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\ncompliantCount = sumif(counts, max_stateWeight == 200),\nconflictCount = sumif(counts, max_stateWeight == 100),\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\ncompliancePercentage,\ncompliantCount,\nnonCompliantCount,\nconflictCount,\nexemptCount\n| where isnotempty(policySetDefinitionId)\n| join (policyresources\n| where type =~ 'microsoft.authorization/policysetdefinitions' and isnotempty(properties.metadata.MonitorStarterPacks)\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\n| project policyId=policySetDefinitionId, policyName=name,complianceState,pack='N/A', type='Set')\n| summarize count() by complianceState,policyName",
                    "size": 1,
                    "title": "Assignment Policies Status",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "visualization": "piechart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Compliant",
                          "label": "Compliant",
                          "color": "green"
                        },
                        {
                          "seriesName": "nonCompliant",
                          "label": "Not Compliant",
                          "color": "redDark"
                        }
                      ]
                    }
                  },
                  "customWidth": "33",
                  "name": "policyComplianceStatus",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n| join (resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Associated=count() by Pack\n| sort by Pack asc",
                    "size": 1,
                    "title": "Servers/Pack (Association)",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "visualization": "piechart",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "Pack",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Associated",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "mapSettings": {
                      "locInfo": "LatLong",
                      "sizeSettings": "Associated",
                      "sizeAggregation": "Sum",
                      "legendMetric": "Associated",
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "type": "heatmap",
                        "colorAggregation": "Sum",
                        "nodeColorField": "Associated",
                        "heatmapPalette": "greenRed"
                      }
                    }
                  },
                  "customWidth": "33",
                  "name": "AssociatedResourceStatsperTag - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n| join (resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Tagged=count() by Pack\n| sort by Pack asc\n\n\n",
                    "size": 1,
                    "title": "Tagged Resources per Tag",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "Pack",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Tagged",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "33",
                  "name": "taggedResourceStatsperTag",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n| join (resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Associated=count() by Pack\n| sort by Pack asc",
                    "size": 1,
                    "title": "Associated Servers per Pack",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "Pack",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Associated",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "33",
                  "name": "AssociatedResourceStatsperTag - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "dashTab",
              "comparison": "isEqualTo",
              "value": "iaas"
            },
            "name": "groupDashboardIaaS"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "## Active Alerts List\n\nThis tab shows all Monitoring Packs related alerts that are currently active.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "showHelp",
                    "comparison": "isEqualTo",
                    "value": "yes"
                  },
                  "name": "text - Summary - Active Alerts"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "alertsmanagementresources\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status,severity=properties.context.context.severity\n| where isnotempty(alertRule)\n| join (resources\n| where type == \"microsoft.insights/scheduledqueryrules\" or type ==\"microsoft.insights/metricalerts\" or type == 'microsoft.insights/activitylogalerts'\n| where isnotempty(tags.MonitorStarterPacks)\n| extend alertRule=tolower(tostring(['id']))) on alertRule\n| project id, ['Alert Name']=name,['Details']=['Alert Id'], Status=status, Resource=resourceId, Sev=severity\n| where Status=='Activated'\n",
                    "size": 0,
                    "title": "Active Alerts",
                    "exportedParameters": [
                      {
                        "fieldName": "Details",
                        "parameterName": "selectedAlertId",
                        "parameterType": 5
                      }
                    ],
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Details",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "linkLabel": "Details",
                            "linkIsContextBlade": true,
                            "bladeOpenContext": {
                              "bladeName": "AlertDetails.ReactView",
                              "extensionName": "Microsoft_Azure_Monitoring_Alerts",
                              "bladeJsonParameters": "{\n    \"alertId\": \"{selectedAlertId}\",\n    \"invokedFrom\": \"CopyLinkFeature\"\n}"
                            }
                          }
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Activated",
                                "representation": "up",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Resource",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Sev",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "Sev1",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "2",
                                "representation": "Sev2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "3",
                                "representation": "Sev3",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "4",
                                "representation": "Sev4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "Sev0",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Alert Id",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkLabel": "Details",
                            "linkIsContextBlade": true
                          }
                        },
                        {
                          "columnMatch": "Target",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "66",
                  "name": "activeAlertsquery"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "alertsmanagementresources\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status\n| where isnotempty(alertRule)\n| join (resources\n| where type == \"microsoft.insights/scheduledqueryrules\" or type ==\"microsoft.insights/metricalerts\" or type == 'microsoft.insights/activitylogalerts'\n| where isnotempty(tags.MonitorStarterPacks)\n| extend alertRule=tolower(tostring(['id']))) on alertRule\n| summarize count() by AlertType=type\n\n",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "activeAlertsQueryPie"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "dashTab",
              "comparison": "isEqualTo",
              "value": "alerts"
            },
            "name": "groupDashAlerts"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getAllServiceTags&Type=PaaS\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
              "size": 0,
              "queryType": 10
            },
            "conditionalVisibilities": [
              {
                "parameterName": "dashTab",
                "comparison": "isEqualTo",
                "value": "paas"
              },
              {
                "parameterName": "showHidden",
                "comparison": "isEqualTo",
                "value": "yes"
              }
            ],
            "name": "queryServiceTags"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getAllServiceTags&Type=Platform\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
              "size": 0,
              "queryType": 10
            },
            "conditionalVisibilities": [
              {
                "parameterName": "dashTab",
                "comparison": "isEqualTo",
                "value": "paas"
              },
              {
                "parameterName": "showHidden",
                "comparison": "isEqualTo",
                "value": "yes"
              }
            ],
            "name": "queryServiceTags - Platform"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project nameSpace=tolower(strcat(tostring(split(properties.scopes[0],\"/\")[-3]),\"/\",tostring(split(properties.scopes[0],\"/\")[-2]))),Target=split(properties.scopes[0],\"/\")[-1]\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project nameSpace=tolower(strcat(tostring(split(properties.scopes[0],\"/\")[-3]),\"/\",tostring(split(properties.scopes[0],\"/\")[-2]))),Target=split(properties.scopes[0],\"/\")[-1])\n| distinct tostring(Target),nameSpace\n| summarize Total=count() by nameSpace",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "showHidden",
                "comparison": "isEqualTo",
                "value": "yes"
              },
              {
                "parameterName": "dashTab",
                "comparison": "isEqualTo",
                "value": "paas"
              }
            ],
            "name": "query - resourcestomerge - nonIaaS"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"3d65009c-120d-4954-aa36-dd1e33b4b1d8\",\"mergeType\":\"innerunique\",\"leftTable\":\"queryServiceTags\",\"rightTable\":\"query - resourcestomerge - nonIaaS\",\"leftColumn\":\"nameSpace\",\"rightColumn\":\"nameSpace\"}],\"projectRename\":[{\"originalName\":\"[queryServiceTags].tag\",\"mergedName\":\"tag\",\"fromId\":\"3d65009c-120d-4954-aa36-dd1e33b4b1d8\"},{\"originalName\":\"[queryServiceTags].type\",\"mergedName\":\"type\",\"fromId\":\"3d65009c-120d-4954-aa36-dd1e33b4b1d8\"},{\"originalName\":\"[query - resourcestomerge - nonIaaS].Total\",\"mergedName\":\"Total\",\"fromId\":\"3d65009c-120d-4954-aa36-dd1e33b4b1d8\"},{\"originalName\":\"[query - 18].type\"},{\"originalName\":\"[query - pass - resourcestomerge].type\"},{\"originalName\":\"[queryServiceTags].tag\"},{\"originalName\":\"[query - resourcestomerge - nonIaaS].nameSpace\"},{\"originalName\":\"[queryServiceTags].nameSpace\"}]}",
              "size": 0,
              "title": "Monitored Services",
              "queryType": 7,
              "visualization": "piechart"
            },
            "conditionalVisibility": {
              "parameterName": "dashTab",
              "comparison": "isEqualTo",
              "value": "paas"
            },
            "showPin": false,
            "name": "query - PaaS Graph Status"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "status"
      },
      "name": "dashboardgroup"
    },
    {
      "type": 1,
      "content": {
        "json": "## Server Monitoring Setup\n\nSelect servers on the right to assign a pack. Once the backend is done with the assigning, the server will show on the left side grid.\n\nOn the left side grid, the monitoring can be updated to add more packs, as well as to remove a specific pack or remove any monitoring altogether from the server.",
        "style": "info"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "tabSelection",
          "comparison": "isEqualTo",
          "value": "discovery"
        },
        {
          "parameterName": "showHelp",
          "comparison": "isEqualTo",
          "value": "yes"
        }
      ],
      "name": "serversMonitoringHelptext"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Servers",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "When Monitoring is first enabled, the Azure Monitoring Agent will also be installed to the selected servers.",
              "style": "info"
            },
            "name": "text - 3"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId=tostring(resourceId)//ruleId=properties.dataCollectionRuleId\n| join kind= inner  (\nresources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| summarize by resourceId, Pack\n| summarize Packs=make_list(Pack) by resourceId",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Packs",
                    "formatter": 1
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "test",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "showPin": false,
            "name": "query - associatedVMs"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources | where type =~ 'microsoft.hybridcompute/machines' \n| where isnotempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.osType, subscriptionId, Location=location\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| where isnotempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location)\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ]
            },
            "conditionalVisibility": {
              "parameterName": "showHidden",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "showPin": false,
            "name": "query - taggedVMs"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\",\"mergeType\":\"outer\",\"leftTable\":\"query - taggedVMs\",\"rightTable\":\"query - associatedVMs\",\"leftColumn\":\"Resource\",\"rightColumn\":\"resourceId\"}],\"projectRename\":[{\"originalName\":\"[query - taggedVMs].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Resource Group\",\"mergedName\":\"Resource Group\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Packs\",\"mergedName\":\"Packs\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].OS\",\"mergedName\":\"OS\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Location\",\"mergedName\":\"Location\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].Packs\",\"mergedName\":\"Associated\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].resourceId\",\"mergedName\":\"resourceId\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"}]}",
                    "size": 0,
                    "title": "Monitored Machines",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "",
                        "parameterName": "taggedVMs",
                        "parameterType": 1,
                        "quote": ""
                      }
                    ],
                    "queryType": 7,
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Associated Packs",
                          "formatter": 1
                        }
                      ],
                      "filter": true
                    }
                  },
                  "showPin": false,
                  "name": "query-mergeVMs",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "54f2c7fb-7251-43b6-aa4d-fd94647cac4a",
                        "version": "KqlParameterItem/1.0",
                        "name": "PackTagsLeft",
                        "label": "Add/Remove",
                        "type": 2,
                        "isGlobal": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.MonitoringPackType=='IaaS'\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "customWidth": "25",
                  "conditionalVisibility": {
                    "parameterName": "taggedVMs",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "param-IaaS-tagged"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                        "cellValue": "",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Remove Monitoring for {PackTagsLeft} Pack(s)",
                        "preText": "",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [
                            {
                              "key": "action",
                              "value": "removeTag"
                            }
                          ],
                          "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"{PackTagsLeft}\",\n    \"PackType\": \"IaaS\"\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Remove Monitoring",
                          "description": "# Please confirm the change.\n\nRemove Monitoring for {PackTagsLeft} Pack(s) \n\nServers:\n\n{taggedVMs}",
                          "runLabel": "Confirm"
                        }
                      },
                      {
                        "id": "550df977-06a8-4c40-9cd3-aba6286ebcdf",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Add Monitoring for {PackTagsLeft} Pack(s)",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [],
                          "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"{PackTagsLeft}\",\n    \"PackType\": \"IaaS\"\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Add Monitoring",
                          "description": "# Please confirm the change.\n\nAdd Monitoring for {PackTagsLeft} Pack(s)",
                          "actionName": "AddMonitoringPack",
                          "runLabel": "Confirm"
                        }
                      },
                      {
                        "id": "3b1af630-47ab-43e9-a5b2-d2f2e21880d0",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Remove All Monitoring for VM",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [],
                          "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"All\",\n    \"PackType\": \"IaaS\"\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Remove All Monitoring",
                          "description": "# Please confirm the change.\n\nRemove All Monitoring for {PackTagsLeft} Pack(s)",
                          "actionName": "RemoveAllMonitoring",
                          "runLabel": "Confirm"
                        }
                      }
                    ]
                  },
                  "customWidth": "75",
                  "conditionalVisibility": {
                    "parameterName": "taggedVMs",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "links - 1"
                }
              ],
              "exportParameters": true
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "tabSelection",
              "comparison": "isEqualTo",
              "value": "discovery"
            },
            "name": "TaggedGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources | where type =~ 'microsoft.hybridcompute/machines' | where isempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.osType, subscriptionId, Location=location\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| where isempty(tolower(tags.MonitorStarterPacks)) \n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location)\n| join kind= leftouter  (\n    resourcecontainers| where type =~ 'microsoft.resources/subscriptions'\n    | project Subscription=name,subscriptionId\n    ) \non subscriptionId| project-away subscriptionId, subscriptionId1",
                    "size": 0,
                    "title": "Non-monitored Machines",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "parameterName": "vmstotag",
                        "parameterType": 1,
                        "quote": ""
                      }
                    ],
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "filter": true
                    },
                    "sortBy": []
                  },
                  "name": "Non Monitores Servers",
                  "styleSettings": {
                    "margin": "400",
                    "padding": "400",
                    "showBorder": true
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "parameters": [
                      {
                        "id": "8a177eab-edac-41cc-84f9-a5b7de931bea",
                        "version": "KqlParameterItem/1.0",
                        "name": "PackTags",
                        "label": "Select Pack to Enable",
                        "type": 2,
                        "isGlobal": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.MonitoringPackType=='IaaS'\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs",
                        "crossComponentResources": [
                          "value::tenant"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resources/tenants",
                        "value": [
                          "VMI"
                        ]
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants"
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "vmstotag",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "param-IaaS-vmstotag"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Enable Monitoring for {PackTags} Pack",
                        "preText": "",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [
                            {
                              "key": "action",
                              "value": "addTag"
                            }
                          ],
                          "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{vmstotag}],\n    \"Pack\": \"{PackTags}\",\n    \"PackType\": \"IaaS\"\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Enable Monitoring Packs",
                          "description": "# This will enable the pack for the following servers:\n{vmstotag}\n\nby adding the {PackTags} Pack(s) to the resource(s).",
                          "actionName": "EnableMonitoring",
                          "runLabel": "Confirm"
                        }
                      }
                    ]
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "vmstotag",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "links - 1 - Copy"
                }
              ],
              "exportParameters": true
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "tabSelection",
              "comparison": "isEqualTo",
              "value": "discovery"
            },
            "name": "NonTaggedGroup"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "discovery"
      },
      "name": "Servers",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Azure Services",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Services Monitoring Setup\n\nSelect service on the right to assign a pack. Once the backend is done with the assigning, the service will show on the left side grid.\n\nOn the left side grid, the monitoring can be updated to remove a specific pack from the service.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "showHelp",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - Monitoring - PaaS"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "69e06557-55cc-490c-86d2-892d7817b729",
                        "version": "KqlParameterItem/1.0",
                        "name": "SelectPaasType",
                        "label": "Select Service Type(s)",
                        "type": 7,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices\",\"contentType\":\"text/plain\",\"urlParams\":[],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[]}}]}",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 10,
                        "value": [
                          "value::all"
                        ]
                      }
                    ],
                    "style": "above",
                    "queryType": 10
                  },
                  "name": "parameters - service type tagged"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getMonitoredPaaS\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"resourceFilter\",\"value\":\"{SelectPaasType}\"}],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[{\"path\":\"$.Resource\",\"columnid\":\"Resource\"},{\"path\":\"$.type\",\"columnid\":\"Type\"},{\"path\":\"$.tag\",\"columnid\":\"tag\"},{\"path\":\"$.Total\",\"columnid\":\"Total\"},{\"path\":\"$.resourceGroup\",\"columnid\":\"resourceGroup\"},{\"path\":\"$.kind\",\"columnid\":\"kind\"}]}}]}",
                    "size": 0,
                    "title": "Monitored Services",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "parameterName": "taggedPaaS",
                        "parameterType": 1,
                        "quote": ""
                      },
                      {
                        "fieldName": "tag",
                        "parameterName": "PaaSLeftTagsOnly",
                        "parameterType": 1,
                        "quote": ""
                      }
                    ],
                    "queryType": 10,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Total",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true
                    }
                  },
                  "name": "query - Monitored Services",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                        "cellValue": "",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Remove Monitoring for {taggedPaaS:$.tag} Pack(s)",
                        "preText": "",
                        "postText": "",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [
                            {
                              "key": "action",
                              "value": "removeTag"
                            }
                          ],
                          "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedPaaS}],\n    \"Pack\": \"{PaaSLeftTagsOnly}\",\n    \"PackType\": \"PaaS\"\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Remove Monitoring",
                          "description": "# Please confirm the change.\n\nRemove Monitoring for Pack(s).\n\nResources:\n\n{taggedPaaS:$.Resource}\n\nTags:\n\n{taggedPaaS:$.tag}",
                          "runLabel": "Confirm"
                        }
                      }
                    ]
                  },
                  "customWidth": "75",
                  "conditionalVisibility": {
                    "parameterName": "taggedPaaS",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "actionsPaaSLeft"
                }
              ],
              "exportParameters": true
            },
            "customWidth": "50",
            "name": "TaggedGroupPaaS"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "f6a88467-77d9-4e0e-912a-3d7b94aab938",
                        "version": "KqlParameterItem/1.0",
                        "name": "SelectPaaStypeToTag",
                        "label": "Select Service Type",
                        "type": 7,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices\",\"contentType\":\"text/plain\",\"urlParams\":[],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[]}}]}",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 10,
                        "value": [
                          "value::all"
                        ]
                      }
                    ],
                    "style": "above",
                    "queryType": 10
                  },
                  "name": "parameters - service type not tagged"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getNonMonitoredPaaS\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"resourceFilter\",\"value\":\"{SelectPaaStypeToTag}\"}],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[{\"path\":\"$.Resource\",\"columnid\":\"Resource\"},{\"path\":\"$.type\",\"columnid\":\"type\"},{\"path\":\"$.tag\",\"columnid\":\"tag\"},{\"path\":\"$.location\",\"columnid\":\"location\"},{\"path\":\"$.resourceGroup\",\"columnid\":\"resourceGroup\"},{\"path\":\"$.kind\",\"columnid\":\"kind\"}]}}]}",
                    "size": 0,
                    "title": "Non-Monitored Services",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "parameterName": "paastotag",
                        "parameterType": 1,
                        "quote": ""
                      },
                      {
                        "fieldName": "tag",
                        "parameterName": "PaaSTagsToAdd",
                        "parameterType": 1,
                        "quote": ""
                      }
                    ],
                    "queryType": 10,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Total",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">=",
                                "thresholdValue": "1",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "1",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          },
                          "tooltipFormat": {
                            "tooltip": "Total number of Alerts assigned to this resource."
                          }
                        }
                      ],
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "type",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "type",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "name": "query - nonMonitored Paas - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "parameters": [
                      {
                        "id": "27d8cc17-6eb9-4158-aff2-f5a2bbddff58",
                        "version": "KqlParameterItem/1.0",
                        "name": "AvdLAWPaaS",
                        "label": "Select AVD Log Analytics Workspace",
                        "type": 5,
                        "isGlobal": true,
                        "query": "resources\n| where type =~ \"Microsoft.OperationalInsights/workspaces\"\n",
                        "crossComponentResources": [
                          "value::tenant"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resources/tenants"
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants"
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "paastotag",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "PackTagsPaaS",
                      "comparison": "isEqualTo",
                      "value": "Avd"
                    }
                  ],
                  "name": "param-IaaS-AvdLaw"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Enable Monitoring",
                        "preText": "",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [
                            {
                              "key": "action",
                              "value": "addTag"
                            }
                          ],
                          "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{paastotag}],\n    \"Pack\": \"{PaaSTagsToAdd}\",\n    \"PackType\": \"PaaS\",\n    \"AVDLAW\": \"{AvdLAWPaaS}\"\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Enable Monitoring Packs",
                          "description": "# This will enable the pack for the following services:\n***{paastotag:$.Resource}***\n\nby adding the specific Pack(s) to the resource(s).\n\n_AVD Alternate Log Analytics Workspace (if any):_\n\n{AvdLAWPaaS:name}",
                          "actionName": "EnableMonitoring",
                          "runLabel": "Confirm"
                        }
                      }
                    ]
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "paastotag",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "platformenableparameters"
                }
              ],
              "exportParameters": true
            },
            "customWidth": "50",
            "name": "NonTaggedGroup"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "paas"
      },
      "name": "PaaSMgmt",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "355de2ec-11fb-4db8-9813-2e0bf7cdb3d0",
                  "cellValue": "alertTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Packs' Alerts",
                  "subTarget": "packs",
                  "style": "link"
                },
                {
                  "id": "d1f8bc9e-5a21-47f3-a2b3-e7fc213e04ee",
                  "cellValue": "alertTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Other Alerts",
                  "subTarget": "others",
                  "style": "link"
                }
              ]
            },
            "name": "links - 18"
          },
          {
            "type": 1,
            "content": {
              "json": "## Alerts Configuration\n\n### Select a pack on the left to visualize the alerts rules related to those packs. Select the Other Alerts tab to visualiza any other alert rule that is not related to the packs.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "showHelp",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - Alert - Packs Alerts"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "value::tenant"
              ],
              "parameters": [
                {
                  "id": "e99b4870-f7a6-4b8e-95b7-6aaeece1f438",
                  "version": "KqlParameterItem/1.0",
                  "name": "AlertPack",
                  "type": 2,
                  "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\", \"microsoft.insights/metricalerts\",\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs\n",
                  "crossComponentResources": [
                    "value::tenant"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resources/tenants",
                  "value": "Storage"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants"
            },
            "conditionalVisibility": {
              "parameterName": "alertTab",
              "comparison": "isEqualTo",
              "value": "packs"
            },
            "name": "param-alerts-toAction"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1]\n| union (\nresources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| where MP=='{AlertPack}'",
              "size": 0,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "",
                  "parameterName": "alertsselected",
                  "parameterType": 1,
                  "quote": ""
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "location",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "name",
                    "formatter": 7
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "70",
            "conditionalVisibility": {
              "parameterName": "alertTab",
              "comparison": "isEqualTo",
              "value": "packs"
            },
            "name": "AlertConfigQuery",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "# Enable or Disable alerts. \n\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\n\n# Update Action Group\n## Select a list of alerts on the left and a new Action Group to assign to the alert.\n\n# Delete Alert rules\n## Select a list of alert rules to be deleted.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "showHelp",
                    "comparison": "isEqualTo",
                    "value": "yes"
                  },
                  "name": "AlertMgmtHelpText"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\n| where type == \"microsoft.insights/actiongroups\"\n| where properties.enabled == 'true'\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\"(\",properties.emailReceivers[0].emailAddress,\")\")",
                    "size": 1,
                    "exportFieldName": "",
                    "exportParameterName": "selectedAG",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        }
                      ],
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "alertsselected",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "ActionGroupsQuery",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "paragraph",
                    "links": [
                      {
                        "id": "f5cb3ede-91d1-4414-bfa1-a1689f45d0c8",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Enable Alerts",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [],
                          "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Enable\", \n    \"alerts\":  [{alertsselected}]\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Enable Alerts",
                          "description": "# This action will Enable the selected Alerts\n\n{alertsselected}",
                          "runLabel": "Confirm"
                        }
                      },
                      {
                        "id": "d9469141-a104-4696-b9cd-f0fc7e3f963e",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Disable Alerts",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [],
                          "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Disable\", \n    \"alerts\":  [{alertsselected}]\n  }\n}\n",
                          "httpMethod": "POST",
                          "title": "Disable Alerts",
                          "description": "# This action will disable the selected Alerts\n\n{alertsselected}",
                          "runLabel": "Confirm"
                        }
                      },
                      {
                        "id": "7942ba17-4942-4f4a-b2ea-e19ad806b49d",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Update Action Group",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [],
                          "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Update\", \n    \"alerts\":  [{alertsselected}],\n    \"aGroup\": {selectedAG}\n  }\n}\n",
                          "httpMethod": "POST",
                          "title": "Update Action Group",
                          "description": "Updating alerts:\n\n\n{alertsselected}\n\nwith Action Group:\n\n{selectedAG}\n",
                          "actionName": "updateAG",
                          "runLabel": "Update"
                        }
                      },
                      {
                        "id": "f802b903-8a8a-458d-9c55-a428d96ba63d",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Delete Alert Rule",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [],
                          "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Delete\", \n    \"alerts\":  [{alertsselected}]\n  }\n}\n",
                          "httpMethod": "POST",
                          "title": "Delete",
                          "description": "# Deleting Alerts\n\nThe following alert rules will be deleted:\n\n{alertsselected}",
                          "actionName": "Delete",
                          "runLabel": "Delete"
                        }
                      }
                    ]
                  },
                  "name": "links - 8"
                }
              ]
            },
            "customWidth": "30",
            "conditionalVisibility": {
              "parameterName": "alertTab",
              "comparison": "isEqualTo",
              "value": "packs"
            },
            "name": "AlertsSubGroup1"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Alert Management - Other Alerts",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\")\n| where isempty(tags.MonitorStarterPacks)\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1]\n| union (\nresources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isempty(tags.MonitorStarterPacks)\n| project id, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isempty(tags.MonitorStarterPacks)\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])",
                    "size": 0,
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "",
                        "parameterName": "alertsselectednopack",
                        "parameterType": 1,
                        "quote": ""
                      }
                    ],
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "location",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 7
                        }
                      ],
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "$gen_link_Enabled_1",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_link_Enabled_1",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "customWidth": "70",
                  "name": "queryOtherAlerts",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "# Enable or Disable alerts. \n\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\n\n# Update Action Group\n## Select a list of alerts on the left and a new Action Group to assign to the alert.",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "showHelp",
                          "comparison": "isEqualTo",
                          "value": "yes"
                        },
                        "name": "text - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\n| where type == \"microsoft.insights/actiongroups\"\n| where properties.enabled == 'true'\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\"(\",properties.emailReceivers[0].emailAddress,\")\")",
                          "size": 1,
                          "exportFieldName": "",
                          "exportParameterName": "selectedAG",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "gridSettings": {
                            "filter": true
                          }
                        },
                        "name": "agQuery2",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "f5cb3ede-91d1-4414-bfa1-a1689f45d0c8",
                              "linkTarget": "ArmAction",
                              "linkLabel": "Enable Alerts",
                              "style": "primary",
                              "linkIsContextBlade": true,
                              "armActionContext": {
                                "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                "headers": [],
                                "params": [],
                                "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Enable\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}",
                                "httpMethod": "POST",
                                "title": "Enable Alerts",
                                "description": "# This action will Enable the selected Alerts\n\n{alertsselected}",
                                "runLabel": "Confirm"
                              }
                            },
                            {
                              "id": "d9469141-a104-4696-b9cd-f0fc7e3f963e",
                              "linkTarget": "ArmAction",
                              "linkLabel": "Disable Alerts",
                              "style": "primary",
                              "linkIsContextBlade": true,
                              "armActionContext": {
                                "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                "headers": [],
                                "params": [],
                                "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Disable\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}\n",
                                "httpMethod": "POST",
                                "title": "Disable Alerts",
                                "description": "# This action will disable the selected Alerts\n\n{alertsselected}",
                                "runLabel": "Confirm"
                              }
                            },
                            {
                              "id": "7942ba17-4942-4f4a-b2ea-e19ad806b49d",
                              "linkTarget": "ArmAction",
                              "linkLabel": "Update Action Group",
                              "style": "primary",
                              "linkIsContextBlade": true,
                              "armActionContext": {
                                "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                "headers": [],
                                "params": [],
                                "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Update\", \n    \"alerts\":  [{alertsselectednopack}],\n    \"aGroup\": {selectedAG}\n  }\n}\n",
                                "httpMethod": "POST",
                                "title": "Update Action Group",
                                "description": "Updating alerts:\n\n\n{alertsselected}\n\nwith Action Group:\n\n{selectedAG}\n",
                                "actionName": "updateAG",
                                "runLabel": "Update"
                              }
                            },
                            {
                              "id": "eb46862a-b443-489e-a2bf-abc05c541b53",
                              "linkTarget": "ArmAction",
                              "linkLabel": "Delete Alert Rule",
                              "style": "primary",
                              "linkIsContextBlade": true,
                              "armActionContext": {
                                "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                "headers": [],
                                "params": [],
                                "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Delete\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}\n",
                                "httpMethod": "POST",
                                "title": "Delete",
                                "description": "# Deleting the following Alert rules:\n\n\n{alertsselectednopack}]\n",
                                "actionName": "Delete",
                                "runLabel": "Delete"
                              }
                            }
                          ]
                        },
                        "name": "links - 8"
                      }
                    ]
                  },
                  "customWidth": "30",
                  "conditionalVisibility": {
                    "parameterName": "alertsselectednopack",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "AlertsSubGroup1"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "alertTab",
              "comparison": "isEqualTo",
              "value": "others"
            },
            "name": "AlertMGMT - Others"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "alertmanagement"
      },
      "name": "AlertMGMT"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "13be6531-5163-4697-b6bd-cb7381b15d65",
                  "cellValue": "packsTab",
                  "linkTarget": "parameter",
                  "linkLabel": "IaaS Packs Associtation",
                  "subTarget": "associations",
                  "preText": "Iaas",
                  "style": "link"
                },
                {
                  "id": "82684c12-244f-4488-9223-da3e48a6206f",
                  "cellValue": "packsTab",
                  "linkTarget": "parameter",
                  "linkLabel": "DCR Details",
                  "subTarget": "dcrdetails",
                  "style": "link"
                }
              ]
            },
            "name": "links - 2"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "IaaS Packs Association",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)\n| join (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n) on rulename\n| project-away rulename1,resourceId\n| summarize Associated=count() by Pack, rulename\n| order by Pack asc",
                    "size": 0,
                    "title": "Select Pack to see associated Machines",
                    "exportFieldName": "rulename",
                    "exportParameterName": "selectedRule",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Group",
                          "formatter": 1
                        }
                      ],
                      "filter": true
                    },
                    "sortBy": []
                  },
                  "customWidth": "50",
                  "name": "query - 6 - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=split(properties.dataCollectionRuleId,\"/\")[8],resourceName=split(resourceId,\"/\")[8],resourceId//ruleId=properties.dataCollectionRuleId\n| where '{selectedRule}'==rulename",
                    "size": 0,
                    "title": "Associated Machines",
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Group",
                          "formatter": 1
                        }
                      ],
                      "filter": true
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 6 - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "packsTab",
              "comparison": "isEqualTo",
              "value": "associations"
            },
            "name": "rulemanagement",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks)\n| extend ds=properties.dataSources\n| project id,Type=kind, location,syslog=ds.syslog[0].streams[0], windowsEventLogs=ds.windowsEventLogs[0].streams[0], logsettings=ds.logFiles, performanceCounters=ds.performanceCounters[0].streams[0],provisioningState=properties.provisioningState, \ndataCollectionEndpointId=properties.dataCollectionEndpointId,transformKql=properties.dataFlows[0].transformKql,workspaceResourceId=properties.destinations.logAnalytics[0].workspaceResourceId\n",
              "size": 1,
              "title": "List of Currently Configured Data Collection Rules",
              "showRefreshButton": true,
              "exportedParameters": [
                {
                  "parameterName": "selectedRule"
                },
                {
                  "fieldName": "destinationName",
                  "parameterName": "destinationName",
                  "parameterType": 1
                },
                {
                  "fieldName": "",
                  "parameterName": "resourceGroupName",
                  "parameterType": 1
                },
                {
                  "fieldName": "workspaceResourceId",
                  "parameterName": "workspace",
                  "parameterType": 5
                },
                {
                  "fieldName": "properties",
                  "parameterName": "properties",
                  "parameterType": 1
                },
                {
                  "fieldName": "name",
                  "parameterName": "name",
                  "parameterType": 1
                },
                {
                  "fieldName": "location",
                  "parameterName": "location",
                  "parameterType": 1
                },
                {
                  "fieldName": "Rule Type",
                  "parameterName": "kind",
                  "parameterType": 1
                },
                {
                  "parameterType": 1
                },
                {
                  "fieldName": "id",
                  "parameterName": "id",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "id",
                    "formatter": 13,
                    "formatOptions": {
                      "linkColumn": "id",
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Windows",
                          "representation": "Initial_Access",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Linux",
                          "representation": "Console",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Capture",
                          "text": "Custom"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "location",
                    "formatter": 17,
                    "formatOptions": {
                      "customColumnWidthSetting": "94px"
                    }
                  },
                  {
                    "columnMatch": "syslog",
                    "formatter": 18,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "subTarget": "2",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "cancelled",
                          "text": "Not Configured"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "Configured"
                        }
                      ],
                      "bladeOpenContext": {
                        "bladeName": "DataCollectionRulesDataSourceManagementViewModel",
                        "extensionName": "Microsoft_Azure_Monitoring",
                        "bladeParameters": [
                          {
                            "name": "id",
                            "source": "column",
                            "value": "id"
                          }
                        ]
                      },
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "windowsEventLogs",
                    "formatter": 18,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "cancelled",
                          "text": "Not Configured"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "Configured"
                        }
                      ],
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "logsettings",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "cancelled",
                          "text": "Not Configured"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "Configured"
                        }
                      ],
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "performanceCounters",
                    "formatter": 18,
                    "formatOptions": {
                      "linkColumn": "performanceCounters",
                      "linkTarget": "CellDetails",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "cancelled",
                          "text": "Not Configured!"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "Configured"
                        }
                      ],
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "provisioningState",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "contains",
                          "thresholdValue": "succeeded",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "17ch"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "dataCollectionEndpointId",
                    "formatter": 18,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "cancelled",
                          "text": "Not Configured"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "Configured"
                        }
                      ],
                      "customColumnWidthSetting": "21.7143ch"
                    }
                  },
                  {
                    "columnMatch": "transformKql",
                    "formatter": 18,
                    "formatOptions": {
                      "linkColumn": "queries",
                      "linkTarget": "CellDetails",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "stopped",
                          "text": "Not Configured"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "|",
                          "representation": "success",
                          "text": "Ingestion KQL"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "stopped",
                          "text": "Custom KQL"
                        }
                      ],
                      "bladeOpenContext": {
                        "bladeName": "CreateMicrosoftTableTransformBlade",
                        "extensionName": "Microsoft_OperationsManagementSuite_Workspace",
                        "bladeJsonParameters": "{\r\n\t\"workspaceResourceId\" : \"{workspace}\",\r\n\t\"providers\" : \"microsoft.operationalinsights\",\r\n\t\"table\" : { \r\n\t\t\"name\" : \"{selectedTableName}\",\r\n\t\t\"description\":\"Security events collected from windows machines by Azure Security Center or Azure Sentinel.\",\r\n\t\t\"hasData\":true,\r\n\t\t\"tableType\":\"Microsoft\",\r\n\t\t\"tableAPIState\":\"Any\",\r\n\t\t\"solutions\":[\"Security and Audit\",\"Microsoft Sentinel\"],\r\n\t\t\"categories\":[\"Security\"],\r\n\t\t\"retentionInDaysAsDefault\":false,\r\n\t\t\"totalRetentionInDaysAsDefault\":false,\r\n\t\t\"isEditTransformationEnabled\":true,\r\n\t\t\"isCreateTransformationEnabled\":true\r\n\t},\r\n\t\"isMicrosoftTable\" : true,\r\n\t\"isMigrationRequired\" : false\r\n}"
                      },
                      "customColumnWidthSetting": "22ch"
                    }
                  },
                  {
                    "columnMatch": "workspaceResourceId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true,
                      "customColumnWidthSetting": "16.8571ch"
                    }
                  },
                  {
                    "columnMatch": "properties",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkLabel": "📋",
                      "linkIsContextBlade": true,
                      "customColumnWidthSetting": "5ch"
                    }
                  },
                  {
                    "columnMatch": "kind",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "Capture",
                          "text": "{0}{1} Custom"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Linux",
                          "representation": "Console",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Windows",
                          "representation": "Initial_Access",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "WorkspaceTransforms",
                          "representation": "Persistence",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "17ch"
                    }
                  },
                  {
                    "columnMatch": "name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "securityEvents",
                    "formatter": 18,
                    "formatOptions": {
                      "linkColumn": "windowsEventLogs",
                      "linkTarget": "CellDetails",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "cancelled",
                          "text": "Not Configured"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "Configured"
                        }
                      ],
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "destinations",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "queries",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "dataSources",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "dataFlows",
                    "formatter": 5,
                    "formatOptions": {
                      "aggregation": "Sum"
                    }
                  },
                  {
                    "columnMatch": "description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "destinationName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "lastModifiedBy",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "customEvents",
                    "formatter": 18,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "cancelled",
                          "text": "Not Configured"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "Configured"
                        }
                      ],
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "StepTab",
                    "formatter": 5
                  }
                ],
                "rowLimit": 1000,
                "filter": true
              },
              "sortBy": []
            },
            "conditionalVisibilities": [
              {
                "parameterName": "tabSelection",
                "comparison": "isEqualTo",
                "value": "rulemanagement"
              },
              {
                "parameterName": "packsTab",
                "comparison": "isEqualTo",
                "value": "dcrdetails"
              }
            ],
            "name": "Select Existing DCR - Copy",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "rulemanagement"
      },
      "name": "packMgmtGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Policy Assignment Status",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "ec38b692-92dd-405d-9e0c-7fdce860cbd9",
                  "cellValue": "policyTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Compliance",
                  "subTarget": "compliance",
                  "style": "link"
                },
                {
                  "id": "fde6131a-93c5-4a3d-a8ee-1509d3546026",
                  "cellValue": "policyTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Assignment",
                  "subTarget": "assignment",
                  "style": "link"
                }
              ]
            },
            "name": "links - 8"
          },
          {
            "type": 1,
            "content": {
              "json": "## Policy Management - Compliance\n\nThis dialog allows to verify the status of the pack policies as well as Remediate the policies.\n\nA background process remediates policies that are not compliant every 6 hours as well.",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "showHelp",
                "comparison": "isEqualTo",
                "value": "yes"
              },
              {
                "parameterName": "policyTab",
                "comparison": "isEqualTo",
                "value": "compliance"
              }
            ],
            "name": "text - Policy - Compliance"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "policyresources | where type == \"microsoft.policyinsights/policystates\" | extend policyName=tostring(properties.policyDefinitionName), complianceState=properties.complianceState\n| join (policyresources | where type == \"microsoft.authorization/policydefinitions\" and isnotempty(properties.metadata.MonitorStarterPacks) | project policyId=id, policyName=name, pack=tostring(properties.metadata.MonitorStarterPacks)) on policyName\n| project policyId, policyName, complianceState=tostring(complianceState), pack,type='Policy'\n| union( policyresources\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\n| extend complianceState = tostring(properties.complianceState)\n| extend\n\tresourceId = tostring(properties.resourceId),\n\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\n\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\n\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\n\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\n\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\n\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\n| summarize overallStateWeight = max(max_stateWeight),\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\ncompliantCount = sumif(counts, max_stateWeight == 200),\nconflictCount = sumif(counts, max_stateWeight == 100),\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\ncompliancePercentage,\ncompliantCount,\nnonCompliantCount,\nconflictCount,\nexemptCount\n| where isnotempty(policySetDefinitionId)\n| join (policyresources\n| where type =~ 'microsoft.authorization/policysetdefinitions' and isnotempty(properties.metadata.MonitorStarterPacks)\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\n| project policyId=policySetDefinitionId, policyName=name,complianceState,pack='N/A', type='Set')",
              "size": 0,
              "title": "Assignment Status (Compliance)",
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "parameterName": "policyToRemediate",
                  "parameterType": 1,
                  "quote": ""
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "complianceState",
                    "formatter": 18,
                    "formatOptions": {
                      "linkTarget": "ArmAction",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Compliant",
                          "representation": "success",
                          "text": "Compliant"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Non-compliant",
                          "representation": "2",
                          "text": "Non-Compliant"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "warning",
                          "text": "{0}{1}"
                        }
                      ],
                      "armActionContext": {
                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                        "headers": [],
                        "params": [],
                        "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Remediate\",\n    \"Policies\": [{policyToRemediate}]\n  }\n}",
                        "httpMethod": "POST",
                        "title": "Remediate a policy",
                        "description": "# Remediate\n\nPolicies:\n\n[{policyToRemediate}]\n",
                        "actionName": "Remediatepolicies",
                        "runLabel": "Remediate"
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Click To Remediate"
                    }
                  }
                ],
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "type",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "type",
                  "sortOrder": 1
                }
              ]
            },
            "customWidth": "75",
            "conditionalVisibility": {
              "parameterName": "policyTab",
              "comparison": "isEqualTo",
              "value": "compliance"
            },
            "name": "policylist",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "list",
                    "links": [
                      {
                        "id": "b3bb5a4d-0f95-4e9a-8634-9cb027f860aa",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Remediate",
                        "preText": "",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [],
                          "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Remediate\",\n    \"Policies\": [{policyToRemediate}]\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Remediate policies",
                          "description": "# Please confirm remediation\n\nThis button will trigger a remediation action against the selected policies.\n\n{policyToRemediate}",
                          "actionName": "Remediate",
                          "runLabel": "Confirm"
                        }
                      },
                      {
                        "id": "8dfc5afa-108a-4713-8a0c-651c3a32c5f1",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Check Compliance",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [],
                          "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Scan\"\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Check Policy Compliance",
                          "description": "# Please confirm the scan.",
                          "runLabel": "Confirm"
                        }
                      }
                    ]
                  },
                  "name": "links - 3"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Policy Compliance Check\nThis task will trigger a tenant wide check for policy compliance.\n\n## Policy Remediation\n\nThis Task will trigger remediation for the policies in the list that are considered not compliant at this time.",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "tabSelection",
                      "comparison": "isEqualTo",
                      "value": "policystatus"
                    },
                    {
                      "parameterName": "showHelp",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    }
                  ],
                  "name": "text - 7"
                }
              ]
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "policyTab",
              "comparison": "isEqualTo",
              "value": "compliance"
            },
            "name": "ComplianceButtons"
          },
          {
            "type": 1,
            "content": {
              "json": "## Installed Policies and Initiatives with Assignments\n\nThis grid can be used to visualize the policies and currenct assignments as well as assing/unassign policies to/from different scopes.\n\nOnce one or more policies are selected, the diaglog of scopes (subscriptions and management groups) is displayed along with the respective buttons.\n",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "showHelp",
                "comparison": "isEqualTo",
                "value": "yes"
              },
              {
                "parameterName": "policyTab",
                "comparison": "isEqualTo",
                "value": "assignment"
              }
            ],
            "name": "text - 7"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "policyresources\n| where type == \"microsoft.authorization/policydefinitions\"\n| where  isnotempty(properties.metadata.MonitorStarterPacks)\n| project Name=name, Type='Policy',['id'],Pack=tostring(properties.metadata.MonitorStarterPacks)\n| join kind = leftouter (policyresources\n| where type == \"microsoft.authorization/policyassignments\"\n| project AssignmentName=name,scope=properties.scope,PolicyId=tostring(properties.policyDefinitionId), PolicyName=split(properties.PolicyId,\"/\")[8]\n| join kind=leftouter  (policyresources\n| where type == \"microsoft.authorization/policydefinitions\"\n| where  isnotempty(properties.metadata.MonitorStarterPacks)) on $left.PolicyId == $right.id\n| project tostring(AssignmentName),Name=tostring(split(PolicyId,\"/\")[8]), PolicyId,ScopeLevel=iff(scope contains 'subscriptions',\"Sub\", \"MG\"), Scope=scope) on Name\n| project-away Name1, id\n| union ( policyresources\n| where type == \"microsoft.authorization/policysetdefinitions\"\n| where  isnotempty(properties.metadata.MonitorStarterPacks)\n| project Name=name, Type='Initiative',['id'],Pack=\"_N/A\"\n| join kind = leftouter (policyresources\n| where type == \"microsoft.authorization/policyassignments\"\n| project AssignmentName=name,scope=properties.scope,PolicyId=tostring(properties.policyDefinitionId), PolicyName=split(properties.PolicyId,\"/\")[8]\n| join kind=leftouter  (policyresources\n| where type == \"microsoft.authorization/policysetdefinitions\"\n| where  isnotempty(properties.metadata.MonitorStarterPacks)) on $left.PolicyId == $right.id\n| project tostring(AssignmentName),Name=tostring(split(PolicyId,\"/\")[8]), PolicyId, ScopeLevel=iff(scope contains 'subscriptions',\"Sub\", \"MG\"),Scope=scope) on Name\n| project-away Name1, id)\n| sort by Pack asc, AssignmentName asc ",
              "size": 0,
              "title": "Installed Policies and Initiatives with Assignments",
              "noDataMessage": "No MonStar policies (packs) installed.",
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "",
                  "parameterName": "policyseletedpolicy",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Group",
                    "formatter": 1
                  }
                ],
                "filter": true
              }
            },
            "conditionalVisibility": {
              "parameterName": "policyTab",
              "comparison": "isEqualTo",
              "value": "assignment"
            },
            "name": "query - policiestoassign",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "Select Scope below to assign a policy. There is no need to Select a scope to Unassign the policy.",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "policyseletedpolicy",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "policyTab",
                "comparison": "isEqualTo",
                "value": "assignment"
              }
            ],
            "name": "text - 6"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resourcecontainers\n| where type == 'microsoft.management/managementgroups' or type =~ 'microsoft.resources/subscriptions'\n| project name, id, subscriptionId, type=split(type,'/')[1]",
              "size": 0,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "parameterName": "policyscopes",
                  "parameterType": 1,
                  "quote": "\""
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ]
            },
            "conditionalVisibility": {
              "parameterName": "policyseletedpolicy",
              "comparison": "isNotEqualTo"
            },
            "name": "query - 15",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "paragraph",
              "links": [
                {
                  "id": "63320366-2b93-4e52-831c-55f7c6de4043",
                  "linkTarget": "ArmAction",
                  "linkLabel": "Assign Policy",
                  "style": "primary",
                  "linkIsContextBlade": true,
                  "armActionContext": {
                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                    "headers": [],
                    "params": [],
                    "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Assign\",\n    \"Scopes\": [{policyscopes}],\n    \"policies\": [{policyseletedpolicy}]\n  }\n}",
                    "httpMethod": "POST",
                    "title": "Assign Policy",
                    "description": "# Assign policy below to selected scope:\n\n## Policy\n\n{policyseletedpolicy}\n\n## Scope\n\n{policyscopes}",
                    "runLabel": "Assign"
                  }
                },
                {
                  "id": "ed3b8c20-e2ef-4768-b0b9-bfcc254602e6",
                  "linkTarget": "ArmAction",
                  "linkLabel": "Unassign Policy",
                  "style": "primary",
                  "linkIsContextBlade": true,
                  "armActionContext": {
                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                    "headers": [],
                    "params": [],
                    "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Unassign\",\n    \"policies\": [{policyseletedpolicy}]\n  }\n}",
                    "httpMethod": "POST",
                    "title": "Unassign Policies",
                    "description": "# Unassign policy or policies below from their scopes.\n\n## Policy\n\n{policyseletedpolicy}\n\n",
                    "actionName": "Unassign Policies",
                    "runLabel": "Unassign"
                  }
                }
              ]
            },
            "customWidth": "25",
            "conditionalVisibilities": [
              {
                "parameterName": "policyseletedpolicy",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "policyTab",
                "comparison": "isEqualTo",
                "value": "assignment"
              }
            ],
            "name": "links - 2 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "## Policies To Assign: \n\n`{policyseletedpolicy}`\n\n## Scopes: \n\n{policyscopes}"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "policyseletedpolicy",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "showHelp",
                "comparison": "isEqualTo",
                "value": "yes"
              }
            ],
            "name": "text - 4"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "policystatus"
      },
      "name": "policymgmt"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Agent Management",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\n    JoinID = toupper(id),\n    OSType = tostring(properties.storageProfile.osDisk.osType)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| extend\n    JoinID = toupper(id),\n    OSType = tostring(properties.osType)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| summarize by id, OSType, ExtensionName=iff(isempty(ExtensionName),'N/A',ExtensionName), State,subscriptionId,['Resource Group']=resourceGroup, location\n| extend Install=iff(ExtensionName=='N/A','Install',iff(State<> 'succeeded','Unhealthy','')), Uninstall=iff((ExtensionName<>'N/A') and (State == 'succeeded'),'Uninstall',iff(State <> 'succeeded','Warning',''))\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1\n| order by id",
              "size": 0,
              "title": "Agent Install Status",
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "parameterType": 1
                },
                {
                  "parameterName": "vmstoinstall",
                  "parameterType": 5,
                  "quote": ""
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "ExtensionName",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "AzureMonitorLinuxAgent",
                          "representation": "success",
                          "text": "Linux Agent"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "AzureMonitorWindowsAgent",
                          "representation": "success",
                          "text": "Windows Agent"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "stopped",
                          "text": "No Agent"
                        }
                      ],
                      "armActionContext": {
                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                        "headers": [],
                        "params": [],
                        "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}",
                        "httpMethod": "POST",
                        "title": "Install Agent",
                        "description": "# Installing agent(s) for the following machine(s):\n\n{vmstoinstall}\n",
                        "actionName": "InstallAgent",
                        "runLabel": "InstallAgent"
                      },
                      "customColumnWidthSetting": "20ch"
                    },
                    "tooltipFormat": {
                      "tooltip": "Click To Install Agent"
                    }
                  },
                  {
                    "columnMatch": "Install",
                    "formatter": 18,
                    "formatOptions": {
                      "linkTarget": "ArmAction",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "success",
                          "text": "Ok"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Unhealthy",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Add",
                          "text": "{0}{1}"
                        }
                      ],
                      "armActionContext": {
                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                        "headers": [],
                        "params": [],
                        "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}\n",
                        "httpMethod": "POST",
                        "title": "Install Agent",
                        "description": "# Installing agent(s) for the following machine(s):\n\n\n{vmstoinstall}\n",
                        "actionName": "Install Agent",
                        "runLabel": "Install Agent"
                      }
                    }
                  },
                  {
                    "columnMatch": "Uninstall",
                    "formatter": 18,
                    "formatOptions": {
                      "linkTarget": "ArmAction",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "3",
                          "text": "Not Installed"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Warning",
                          "representation": "1",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "warning",
                          "text": "{0}{1}"
                        }
                      ],
                      "armActionContext": {
                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                        "headers": [],
                        "params": [],
                        "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}\n",
                        "httpMethod": "POST",
                        "title": "Remove Agent",
                        "description": "# Removing agent(s) for the following machine(s):\n\n## <span style=\"color:red\">Warning! </span> Removing the agent from the machine(s) may result in data not being collected.\n\n\n{vmstoinstall}\n",
                        "actionName": "RemoveAgent",
                        "runLabel": "RemoveAgent"
                      }
                    }
                  }
                ],
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_link_id_0",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_link_id_0",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "75",
            "showPin": false,
            "name": "query - agent install status",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.storageProfile.osDisk.osType)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.osType)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| summarize count() by ExtensionName",
              "size": 1,
              "title": "Agent Install Status",
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "ExtensionName",
                    "formatter": 18,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkIsContextBlade": true,
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "AzureMonitorLinuxAgent",
                          "representation": "success",
                          "text": "Linux Agent"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "AzureMonitorWindowsAgent",
                          "representation": "success",
                          "text": "Windows Agent"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "stopped",
                          "text": "No Agent"
                        }
                      ],
                      "customColumnWidthSetting": "20ch"
                    }
                  }
                ],
                "filter": true
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "",
                    "label": "No Agent",
                    "color": "red"
                  }
                ]
              }
            },
            "customWidth": "25",
            "name": "query - agent install status - graph",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Heartbeat | where Category == \"Azure Monitor Agent\"\n| summarize arg_max(TimeGenerated, *) by Computer\n| project  Computer,LastHeartbeat=TimeGenerated, ['SecondsAgo']=datetime_diff('second',now(),TimeGenerated)\n| sort by SecondsAgo asc",
              "size": 4,
              "title": "Last Heartbeat (24 hours)",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "SecondsAgo",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "<=",
                          "thresholdValue": "600",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": ">",
                          "thresholdValue": "600",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "50",
            "name": "query - active alerts",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "agentmgmt"
      },
      "name": "AgentMGMTGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Auto Discovery",
        "loadType": "always",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "6346adc4-5e50-4b56-ab9d-0d8b17b8a86f",
                  "cellValue": "discTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Discovery Results",
                  "subTarget": "discResults",
                  "preText": "",
                  "style": "link"
                },
                {
                  "id": "a914f6ed-4d20-4895-bed4-48a32f3a5c21",
                  "cellValue": "discTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Discovery Config",
                  "subTarget": "discConfig",
                  "style": "link"
                },
                {
                  "id": "2c17bf03-2295-4b97-850f-3208602c9e50",
                  "cellValue": "discTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Discovery Policies",
                  "subTarget": "discPolicies",
                  "style": "link"
                },
                {
                  "id": "d8862da2-59ce-4e61-93a3-5bc5a46149a8",
                  "cellValue": "discTab",
                  "linkTarget": "parameter",
                  "linkLabel": "VM Apps Status",
                  "subTarget": "discVMApps",
                  "style": "link"
                },
                {
                  "id": "3a11d108-b694-4989-9302-48010831377a",
                  "cellValue": "discTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Discovery Data",
                  "subTarget": "discData",
                  "style": "link"
                }
              ]
            },
            "name": "links - 10"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let windowsApps = datatable(Tag:string, name:string)\n[\n   \"ADDS\", \"AD-Domain-Services\",\n   \"DNS\", \"DNS\",\n   \"FS\", \"FS-FileServer\",\n   \"IIS\", \"Web-Server\",\n   \"STSVC\", \"Storage-Services\",\n   \"Nginx\", \"nginx-core\"\n];\nDiscovery_CL\n| extend Computer=tostring(split(_ResourceId,'/')[8])//,timestamp=todatetime(timestamp)\n| extend fields=split(RawData,\",\")\n| extend timestamp=todatetime(fields[0])\n| extend type=tostring(fields[1])\n| extend platform=tostring(fields[2])\n| extend name=tostring(fields[3])\n| extend othertype=tostring(fields[4])\n| extend vendor=tostring(fields[5])\n| project timestamp,Computer,type,name,platform,othertype,vendor\n| join kind=inner (windowsApps) on name\n| summarize arg_max(timestamp,Computer) by name, Tag",
              "size": 0,
              "title": "Discovered Applications",
              "timeContext": {
                "durationMs": 172800000
              },
              "exportedParameters": [
                {
                  "parameterName": "vmsDiscoveryTag",
                  "parameterType": 1
                },
                {
                  "fieldName": "Tag",
                  "parameterName": "vmsDiscoveryTagValueOld",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Tag",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "ArmAction",
                      "linkIsContextBlade": true,
                      "armActionContext": {
                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                        "headers": [],
                        "params": [],
                        "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{vmsDiscoveryTag}],\n    \"Pack\": \"{vmsDiscoveryTagValue}\"\n  }\n}",
                        "httpMethod": "POST",
                        "title": "TagDiscovery",
                        "description": "# Adding Tag(s) To VMs\n\n\"Resources\": [{vmsDiscoveryTag}]\n\n\n\"Pack\": \"{vmsDiscoveryTagValue}\"",
                        "actionName": "TagDiscovery",
                        "runLabel": "TagDiscovery"
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Click to Enable monitoring"
                    }
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "showHidden",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "discoveryQuery"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Discovery_CL\n| extend Computer=tostring(split(_ResourceId,'/')[8])//,timestamp=todatetime(timestamp)\n| extend fields=split(RawData,\",\")\n| extend timestamp=todatetime(fields[0])\n| extend type=tostring(fields[1])\n| extend platform=tostring(fields[2])\n| extend name=tostring(fields[3])\n| extend othertype=tostring(fields[4])\n| extend vendor=tostring(fields[5])\n| project timestamp,Computer,type,name,platform,othertype,vendor",
              "size": 0,
              "timeContext": {
                "durationMs": 172800000
              },
              "exportedParameters": [
                {
                  "parameterName": "vmsDiscoveryTag",
                  "parameterType": 1
                },
                {
                  "fieldName": "Tag",
                  "parameterName": "vmsDiscoveryTagValue",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Tag",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "ArmAction",
                      "linkIsContextBlade": true,
                      "armActionContext": {
                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                        "headers": [],
                        "params": [],
                        "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{vmsDiscoveryTag}],\n    \"Pack\": \"{vmsDiscoveryTagValue}\"\n  }\n}",
                        "httpMethod": "POST",
                        "title": "TagDiscovery",
                        "description": "# Adding Tag(s) To VMs\n\n\"Resources\": [{vmsDiscoveryTag}]\n\n\n\"Pack\": \"{vmsDiscoveryTagValue}\"",
                        "actionName": "TagDiscovery",
                        "runLabel": "TagDiscovery"
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Click to Enable monitoring"
                    }
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "showHidden",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "discoveryQuery part1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getDiscoveryMappings\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
              "size": 0,
              "queryType": 10
            },
            "conditionalVisibility": {
              "parameterName": "showHidden",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "queryApplicationTags"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"e3f6e021-18e8-4ca6-83cb-657ee80e7a90\",\"mergeType\":\"innerunique\",\"leftTable\":\"discoveryQuery part1\",\"rightTable\":\"queryApplicationTags\",\"leftColumn\":\"name\",\"rightColumn\":\"application\"}],\"projectRename\":[{\"originalName\":\"[discoveryQuery part1].timestamp\",\"mergedName\":\"timestamp\",\"fromId\":\"e3f6e021-18e8-4ca6-83cb-657ee80e7a90\"},{\"originalName\":\"[discoveryQuery part1].Computer\",\"mergedName\":\"Computer\",\"fromId\":\"e3f6e021-18e8-4ca6-83cb-657ee80e7a90\"},{\"originalName\":\"[discoveryQuery part1].type\",\"mergedName\":\"type\",\"fromId\":\"e3f6e021-18e8-4ca6-83cb-657ee80e7a90\"},{\"originalName\":\"[discoveryQuery part1].name\",\"mergedName\":\"name\",\"fromId\":\"e3f6e021-18e8-4ca6-83cb-657ee80e7a90\"},{\"originalName\":\"[discoveryQuery part1].platform\",\"mergedName\":\"platform\",\"fromId\":\"e3f6e021-18e8-4ca6-83cb-657ee80e7a90\"},{\"originalName\":\"[discoveryQuery part1].vendor\",\"mergedName\":\"vendor\",\"fromId\":\"e3f6e021-18e8-4ca6-83cb-657ee80e7a90\"},{\"originalName\":\"[queryApplicationTags].tag\",\"mergedName\":\"tag\",\"fromId\":\"e3f6e021-18e8-4ca6-83cb-657ee80e7a90\"},{\"originalName\":\"[queryApplicationTags].application\",\"mergedName\":\"application\",\"fromId\":\"e3f6e021-18e8-4ca6-83cb-657ee80e7a90\"},{\"originalName\":\"[discoveryQuery part1].othertype\"}]}",
              "size": 0,
              "exportedParameters": [
                {
                  "fieldName": "",
                  "parameterName": "vmsDiscoveryTag",
                  "parameterType": 1
                },
                {
                  "fieldName": "tag",
                  "parameterName": "vmsDiscoveryTagValue",
                  "parameterType": 1
                }
              ],
              "queryType": 7,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "tag",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "ArmAction",
                      "linkIsContextBlade": true,
                      "armActionContext": {
                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                        "headers": [],
                        "params": [],
                        "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{vmsDiscoveryTag}],\n    \"Pack\": \"{vmsDiscoveryTagValue}\"\n  }\n}",
                        "httpMethod": "POST",
                        "title": "TagDiscovery",
                        "description": "# Adding Tag(s) To VMs\n\n\"Resources\": [{vmsDiscoveryTag:$.Computer}]\n\n\n\"Pack\": \"{vmsDiscoveryTagValue}\"",
                        "actionName": "TagDiscovery",
                        "runLabel": "TagDiscovery"
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Click to Enable monitoring"
                    }
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "discTab",
              "comparison": "isEqualTo",
              "value": "discResults"
            },
            "name": "query - 9"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "VM Discovery",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "When Discovery is first enabled, the Azure Monitoring Agent will also be installed to the selected servers along with a VM Application agent to collect discovery data. Data will be sent to the Log Analytics agent.",
                    "style": "info"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId=tostring(resourceId)//ruleId=properties.dataCollectionRuleId\n| join kind= inner  (\nresources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) and (MPs =~ 'WinDisc' or MPs =~ 'LxDisc')//or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| summarize by resourceId, Pack\n| summarize Packs=make_list(Pack) by resourceId",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Packs",
                          "formatter": 1
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "test",
                    "comparison": "isEqualTo",
                    "value": "1"
                  },
                  "showPin": false,
                  "name": "query - associatedVMs"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources | where type =~ 'microsoft.compute/virtualmachines' \n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) and (MPs contains 'WinDisc' or MPs contains 'LxDisc')\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resources/tenants",
                    "crossComponentResources": [
                      "value::tenant"
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "showHidden",
                    "comparison": "isEqualTo",
                    "value": "yes"
                  },
                  "showPin": false,
                  "name": "query - taggedVMs"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\",\"mergeType\":\"outer\",\"leftTable\":\"query - taggedVMs\",\"rightTable\":\"query - associatedVMs\",\"leftColumn\":\"Resource\",\"rightColumn\":\"resourceId\"}],\"projectRename\":[{\"originalName\":\"[query - taggedVMs].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Resource Group\",\"mergedName\":\"Resource Group\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Packs\",\"mergedName\":\"Packs\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].OS\",\"mergedName\":\"OS\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Location\",\"mergedName\":\"Location\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].Packs\",\"mergedName\":\"Associated\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].resourceId\"}]}",
                          "size": 0,
                          "title": "Discoverable Machines",
                          "exportMultipleValues": true,
                          "exportedParameters": [
                            {
                              "fieldName": "",
                              "parameterName": "taggedVMsDiscovery",
                              "parameterType": 1,
                              "quote": ""
                            }
                          ],
                          "queryType": 7,
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Associated Packs",
                                "formatter": 1
                              }
                            ],
                            "filter": true
                          }
                        },
                        "showPin": false,
                        "name": "query-mergeVMsDiscovery",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{Workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "54f2c7fb-7251-43b6-aa4d-fd94647cac4a",
                              "version": "KqlParameterItem/1.0",
                              "name": "PackTagsLeftDiscovery",
                              "label": "Add/Remove",
                              "type": 2,
                              "isGlobal": true,
                              "multiSelect": true,
                              "quote": "",
                              "delimiter": ",",
                              "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.MonitoringPackType=~'discovery'\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs",
                              "crossComponentResources": [
                                "{Workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "queryType": 1,
                              "resourceType": "microsoft.resourcegraph/resources"
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources"
                        },
                        "customWidth": "25",
                        "conditionalVisibility": {
                          "parameterName": "taggedVMsDiscovery",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "param-IaaS-tagged"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                              "cellValue": "",
                              "linkTarget": "ArmAction",
                              "linkLabel": "Remove Discovery {PackTagsLeftDiscovery} Pack(s)",
                              "preText": "",
                              "style": "primary",
                              "linkIsContextBlade": true,
                              "armActionContext": {
                                "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                "headers": [],
                                "params": [
                                  {
                                    "key": "action",
                                    "value": "removeTag"
                                  }
                                ],
                                "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMsDiscovery}],\n    \"Pack\": \"{PackTagsLeftDiscovery}\",\n    \"PackType\":\"Discovery\"\n  }\n}",
                                "httpMethod": "POST",
                                "title": "Remove Monitoring",
                                "description": "# Please confirm the change.\n\nRemove Monitoring for {PackTagsLeftDiscovery} Pack(s) \n\nServers:\n\n{taggedVMsDiscovery}",
                                "runLabel": "Confirm"
                              }
                            },
                            {
                              "id": "550df977-06a8-4c40-9cd3-aba6286ebcdf",
                              "linkTarget": "ArmAction",
                              "linkLabel": "Add Discovery for {PackTagsLeftPackTagsLeftDiscovery} Pack(s)",
                              "style": "primary",
                              "linkIsContextBlade": true,
                              "armActionContext": {
                                "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                "headers": [],
                                "params": [],
                                "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{\"taggedVMsDiscovery\"}],\n    \"Pack\": \"{PackTagsLeftDiscovery}\",\n    \"PackType\":\"Discovery\"\n  }\n}",
                                "httpMethod": "POST",
                                "title": "Add Monitoring",
                                "description": "# Please confirm the change.\n\nAdd Monitoring for {PackTagsLeftDiscovery} Pack(s)\n\nto VMs:\n\n{taggedVMsDiscovery}\n",
                                "actionName": "AddMonitoringPack",
                                "runLabel": "Confirm"
                              }
                            }
                          ]
                        },
                        "customWidth": "75",
                        "conditionalVisibility": {
                          "parameterName": "taggedVMsDiscovery",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "links - 1"
                      }
                    ],
                    "exportParameters": true
                  },
                  "customWidth": "50",
                  "name": "TaggedGroupDiscovery"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources | where type =~ 'microsoft.compute/virtualmachines' \n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isempty(MPs) or (MPs notcontains 'WinDisc' and MPs notcontains 'LxDisc')//and subscriptionId in split('{Subscriptions:subscriptionId}',',')\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
                          "size": 0,
                          "title": "Non-monitored Machines",
                          "exportMultipleValues": true,
                          "exportedParameters": [
                            {
                              "parameterName": "vmstotagDiscovery",
                              "parameterType": 1,
                              "quote": ""
                            }
                          ],
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscriptions}"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "$gen_link_Resource_0",
                                "sortOrder": 1
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "$gen_link_Resource_0",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "name": "Non Discoverable Servers",
                        "styleSettings": {
                          "margin": "400",
                          "padding": "400",
                          "showBorder": true
                        }
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "value::tenant"
                          ],
                          "parameters": [
                            {
                              "id": "8a177eab-edac-41cc-84f9-a5b7de931bea",
                              "version": "KqlParameterItem/1.0",
                              "name": "PackTagsDiscovery",
                              "label": "Select Pack to Enable",
                              "type": 2,
                              "isGlobal": true,
                              "multiSelect": true,
                              "quote": "",
                              "delimiter": ",",
                              "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.MonitoringPackType=~'Discovery'\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs",
                              "crossComponentResources": [
                                "value::tenant"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [],
                                "showDefault": false
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "queryType": 1,
                              "resourceType": "microsoft.resources/tenants",
                              "value": null
                            }
                          ],
                          "style": "pills",
                          "queryType": 1,
                          "resourceType": "microsoft.resources/tenants"
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "vmstotagDiscovery",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "param-IaaS-vmstotag"
                      },
                      {
                        "type": 11,
                        "content": {
                          "version": "LinkItem/1.0",
                          "style": "paragraph",
                          "links": [
                            {
                              "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                              "linkTarget": "ArmAction",
                              "linkLabel": "Enable Monitoring for {PackTagsDiscovery} Pack",
                              "preText": "",
                              "style": "primary",
                              "linkIsContextBlade": true,
                              "armActionContext": {
                                "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                "headers": [],
                                "params": [
                                  {
                                    "key": "action",
                                    "value": "addTag"
                                  }
                                ],
                                "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{vmstotagDiscovery}],\n    \"Pack\": \"{PackTagsDiscovery}\",\n    \"PackType\": \"Discovery\"\n  }\n}",
                                "httpMethod": "POST",
                                "title": "Enable Monitoring Packs",
                                "description": "# This will enable the pack for the following servers:\n{vmstotagDiscovery}\n\nby adding the {PackTagsDiscovery} Pack(s) to the resource(s).",
                                "actionName": "EnableMonitoring",
                                "runLabel": "Confirm"
                              }
                            }
                          ]
                        },
                        "customWidth": "50",
                        "conditionalVisibility": {
                          "parameterName": "vmstotagDiscovery",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "links - 1 - Copy"
                      }
                    ],
                    "exportParameters": true
                  },
                  "customWidth": "50",
                  "name": "NonTaggedGroupDiscovery"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "discTab",
              "comparison": "isEqualTo",
              "value": "discConfig"
            },
            "name": "Servers - Discovery",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "policyresources | where type == \"microsoft.policyinsights/policystates\" | extend policyName=tostring(properties.policyDefinitionName),complianceState=properties.complianceState\n| join \n    (policyresources | where type == \"microsoft.authorization/policydefinitions\" and properties.metadata.MonitoringPackType == 'Discovery'  \n        | project policyId=id, policyName=name) \n        on policyName\n| project Name=policyName, State=tostring(complianceState), type='Policy',policyId\n| union( policyresources\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\n| extend complianceState = tostring(properties.complianceState)\n| extend\n\tresourceId = tostring(properties.resourceId),\n\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\n\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\n\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\n\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\n\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\n\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\n| summarize overallStateWeight = max(max_stateWeight),\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\ncompliantCount = sumif(counts, max_stateWeight == 200),\nconflictCount = sumif(counts, max_stateWeight == 100),\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\ncompliancePercentage,\ncompliantCount,\nnonCompliantCount,\nconflictCount,\nexemptCount\n| where isnotempty(policySetDefinitionId)\n| join (policyresources\n| where type =~ 'microsoft.authorization/policysetdefinitions' and properties.metadata.MonitoringPackType=='Discovery'\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\n| project Name=name,State=complianceState, type='Set',policyId=policySetDefinitionId)",
              "size": 0,
              "title": "Assignment Status (Compliance) - Discovery",
              "exportedParameters": [
                {
                  "parameterName": "policiesToRemediate",
                  "parameterType": 5
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "State",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "NonCompliant",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "nonCompliant",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "filter": true
              }
            },
            "customWidth": "75",
            "conditionalVisibility": {
              "parameterName": "discTab",
              "comparison": "isEqualTo",
              "value": "discPolicies"
            },
            "name": "Query DiscoveryPolicies",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "list",
                    "links": [
                      {
                        "id": "b3bb5a4d-0f95-4e9a-8634-9cb027f860aa",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Remediate (all policies)",
                        "preText": "",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [],
                          "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Remediate\"\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Rmediate policies",
                          "description": "# Please confirm remediation\n\nThis button will trigger a global policy remeadiation. \n\nThe backend script will go through the policies and initiatives, finding the ones that are not compliant, and will trigger remediation. \n\nIt is not restricted to the ones in this screen.",
                          "actionName": "Remediate",
                          "runLabel": "Confirm"
                        }
                      },
                      {
                        "id": "8dfc5afa-108a-4713-8a0c-651c3a32c5f1",
                        "linkTarget": "ArmAction",
                        "linkLabel": "Check Compliance",
                        "style": "primary",
                        "linkIsContextBlade": true,
                        "armActionContext": {
                          "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                          "headers": [],
                          "params": [],
                          "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Scan\"\n  }\n}",
                          "httpMethod": "POST",
                          "title": "Check Policy Compliance",
                          "description": "# Please confirm the scan.",
                          "runLabel": "Confirm"
                        }
                      }
                    ]
                  },
                  "name": "links - 3"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Policy Compliance Check\nThis task will trigger a tenant wide check for policy compliance.\n\n## Policy Remediation\n\nThis Task will trigger remediation for the policies in the list that are considered not compliant at this time.",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "tabSelection",
                      "comparison": "isEqualTo",
                      "value": "policystatus"
                    },
                    {
                      "parameterName": "showHelp",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    }
                  ],
                  "name": "text - 7"
                }
              ]
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "discTab",
              "comparison": "isEqualTo",
              "value": "discPolicies"
            },
            "name": "ComplianceButtons - Copy"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "079a4550-40c9-44cd-a223-40097e453659",
                  "version": "KqlParameterItem/1.0",
                  "name": "Computer",
                  "type": 2,
                  "query": "\nDiscovery_CL\n| parse RawData with timestamp \",\" rest1\n| extend Computer=split(_ResourceId,'/')[8],timestamp=todatetime(timestamp)\n| summarize by tostring(Computer)\n\n",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "value": null,
                  "label": "Select Server"
                },
                {
                  "id": "d1f20750-4a22-4433-9c5d-a4d9a4f62f9d",
                  "version": "KqlParameterItem/1.0",
                  "name": "discoveryPeriod",
                  "label": "Period",
                  "type": 4,
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      }
                    ]
                  },
                  "value": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "discTab",
              "comparison": "isEqualTo",
              "value": "discData"
            },
            "name": "param-discovery-period"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Discovery_CL\n| extend Computer=split(_ResourceId,'/')[8]//,timestamp=todatetime(timestamp)\n| extend fields=split(RawData,\",\")\n| extend timestamp=todatetime(fields[0])\n| extend type=tostring(fields[1])\n| extend platform=tostring(fields[2])\n| extend name=tostring(fields[3])\n| extend othertype=tostring(fields[4])\n| extend vendor=tostring(fields[5])\n//| where Computer == 'server2'\n| project Computer,type,name,platform,othertype,vendor\n| where Computer == '{Computer}'",
              "size": 0,
              "title": "All Discovery Data",
              "timeContextFromParameter": "discoveryPeriod",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "rowLimit": 1000,
                "filter": true
              }
            },
            "conditionalVisibility": {
              "parameterName": "discTab",
              "comparison": "isEqualTo",
              "value": "discData"
            },
            "name": "query - discovery - all"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\n| where type =~ \"microsoft.compute/virtualmachines\"\n| mvexpand with_itemindex=i apps=properties.applicationProfile.galleryApplications\n| where apps != ''\n| project Computer=name, ['Application Name']=tostring(split(apps.packageReferenceId,\"/\")[10]), Gallery=tostring(split(apps.packageReferenceId,\"/\")[8])\n| summarize by Gallery,['Application Name'], Computer\n| sort by Gallery asc",
              "size": 0,
              "title": "Client Status (VM Applications)",
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "Computer",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Computer",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "discTab",
              "comparison": "isEqualTo",
              "value": "discVMApps"
            },
            "name": "query - vmapplications",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "autodiscovery"
      },
      "name": "AutoDiscoveryGroup"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' \n| where isnotempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.osType, subscriptionId, Location=location\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| where isnotempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location)\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
        "size": 0,
        "title": "Monitored Machines (old)",
        "exportMultipleValues": true,
        "exportedParameters": [
          {
            "fieldName": "",
            "parameterName": "taggedVMsOld",
            "parameterType": 5,
            "quote": ""
          }
        ],
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "visualization": "table",
        "gridSettings": {
          "filter": true
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "ew",
        "comparison": "isEqualTo",
        "value": "w"
      },
      "name": "Monitored Servers",
      "styleSettings": {
        "margin": "400",
        "padding": "400",
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{appInsightsName}"
              ],
              "parameters": [
                {
                  "id": "dffde712-0ef1-4c46-922a-47a42643130c",
                  "version": "KqlParameterItem/1.0",
                  "name": "appInsightsTimeframe",
                  "label": "Time Range",
                  "type": 4,
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      }
                    ]
                  },
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "value": {
                    "durationMs": 2419200000
                  }
                },
                {
                  "id": "70107de5-d9cd-46ea-9027-43d83053dac3",
                  "version": "KqlParameterItem/1.0",
                  "name": "FunctionApp",
                  "label": "Function App",
                  "type": 2,
                  "query": "requests\n| project\n    timestamp,\n    id,\n    operation_Name,\n    success,\n    resultCode,\n    duration,\n    operation_Id,\n    cloud_RoleName,\n    invocationId=customDimensions['InvocationId']\n| order by timestamp desc\n| take 20\n| summarize by Functions=operation_Name\n",
                  "crossComponentResources": [
                    "{appInsightsName}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "value": "config"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.insights/components"
            },
            "name": "parameters - 18"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "requests\n| project\n    timestamp,\n    id,\n    operation_Name,\n    success,\n    resultCode,\n    duration,\n    operation_Id,\n    cloud_RoleName,\n    invocationId=customDimensions['InvocationId']\n| where operation_Name =~ '{FunctionApp}'\n| order by timestamp desc\n| take 20",
              "size": 0,
              "title": "Invocations",
              "timeContextFromParameter": "appInsightsTimeframe",
              "exportedParameters": [
                {
                  "fieldName": "invocationId",
                  "parameterName": "invocationid",
                  "parameterType": 1
                },
                {
                  "fieldName": "operation_Id",
                  "parameterName": "operationid",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "crossComponentResources": [
                "{appInsightsName}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "id",
                    "formatter": 5
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "queryInvocations"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "union traces\n| union exceptions\n| where operation_Id == '{operationid}'\n| where customDimensions['InvocationId'] == '{invocationid}'\n| order by timestamp asc\n| project\n    timestamp,\n    message = iff(message != '', message, iff(innermostMessage != '', innermostMessage, customDimensions.[strcat('prop__{','OriginalFormat}')])),\n    logLevel = customDimensions.['LogLevel']",
              "size": 0,
              "title": "Invocation Details",
              "noDataMessage": "No Invocation Selected",
              "timeContextFromParameter": "appInsightsTimeframe",
              "exportFieldName": "invocationId",
              "exportParameterName": "invocationid",
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "crossComponentResources": [
                "{appInsightsName}"
              ]
            },
            "customWidth": "70",
            "name": "queryInvocationDetails"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "tabSelection",
        "comparison": "isEqualTo",
        "value": "logs"
      },
      "name": "groupLogs"
    }
  ],
  "fallbackResourceIds": [
    "azure monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}