{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "16842131678698998359"
    }
  },
  "parameters": {
    "mgname": {
      "type": "string"
    },
    "subscriptionId": {
      "type": "string"
    },
    "resourceGroupId": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "location for the deployment."
      }
    },
    "actionGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Action Group to be used or created."
      }
    },
    "emailreceiver": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Email receiver names to be used for the Action Group if being created."
      }
    },
    "emailreiceversemail": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Email addresses to be used for the Action Group if being created."
      }
    },
    "useExistingAG": {
      "type": "bool",
      "metadata": {
        "description": "If set to true, a new Action group will be created"
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "Full resource ID of the log analytics workspace to be used for the deployment."
      }
    },
    "solutionTag": {
      "type": "string"
    },
    "solutionVersion": {
      "type": "string"
    },
    "dceId": {
      "type": "string",
      "metadata": {
        "description": "Full resource ID of the data collection endpoint to be used for the deployment."
      }
    },
    "userManagedIdentityResourceId": {
      "type": "string",
      "metadata": {
        "description": "Full resource ID of the user managed identity to be used for the deployment"
      }
    },
    "assignmentLevel": {
      "type": "string"
    },
    "grafanaResourceId": {
      "type": "string"
    },
    "customerTags": {
      "type": "object"
    },
    "existingActionGroupResourceId": {
      "type": "string"
    }
  },
  "variables": {
    "solutionTagComponents": "MonitorStarterPacksComponents",
    "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
    "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', variables('solutionTagComponents')), 'BackendComponent', 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', variables('solutionTagComponents')), 'BackendComponent', 'solutionVersion', parameters('solutionVersion')), parameters('customerTags').All))]"
  },
  "resources": [
    {
      "condition": "[not(parameters('useExistingAG'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deployAG-new",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "emailreceiver": {
            "value": "[parameters('emailreceiver')]"
          },
          "emailreiceversemail": {
            "value": "[parameters('emailreiceversemail')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "groupshortname": {
            "value": "[parameters('actionGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "8845367747806037990"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "groupshortname": {
              "type": "string"
            },
            "emailreceiver": {
              "type": "string"
            },
            "emailreiceversemail": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2023-01-01",
              "name": "New-AG",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "groupShortName": "[parameters('groupshortname')]",
                "enabled": true,
                "emailReceivers": [
                  {
                    "name": "[parameters('emailreceiver')]",
                    "emailAddress": "[parameters('emailreiceversemail')]",
                    "useCommonAlertSchema": false
                  }
                ]
              }
            }
          ],
          "outputs": {
            "agGroupId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/actionGroups', 'New-AG')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "WinOSPack",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": "[if(parameters('useExistingAG'), createObject('value', parameters('existingActionGroupResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new'), '2022-09-01').outputs.agGroupId.value))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "11163668191355775506"
            }
          },
          "parameters": {
            "packtag": {
              "type": "string",
              "defaultValue": "WinOS",
              "metadata": {
                "description": "The Tag value for this pack"
              }
            },
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-Windows-OS",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "actionGroupResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string"
            },
            "userManagedIdentityResourceId": {
              "type": "string"
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            }
          },
          "variables": {
            "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), parameters('customerTags').All))]",
            "ruleshortname": "VMI-OS",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('vmInsightsDCR-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceResourceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "ruleName": {
                    "value": "[parameters('rulename')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "16579881467422974035"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "ruleName": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2021-09-01-preview",
                      "name": "[format('{0}-VMI', parameters('ruleName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "description": "Data collection rule for VM Insights.",
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "dataSources": {
                          "performanceCounters": [
                            {
                              "name": "VMInsightsPerfCounters",
                              "streams": [
                                "Microsoft-InsightsMetrics"
                              ],
                              "samplingFrequencyInSeconds": 60,
                              "counterSpecifiers": [
                                "\\VmInsights\\DetailedMetrics"
                              ]
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                              "name": "[variables('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-InsightsMetrics"
                            ],
                            "destinations": [
                              "[variables('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "VMIRuleId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-VMI', parameters('ruleName')))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "13807474782643765134"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "moduleprefix": "AMSP-Win-VMI",
                    "alertlist": [
                      {
                        "alertRuleDescription": "Alert for Memory over 90%",
                        "alertRuleDisplayName": "Memory over 90%",
                        "alertRuleName": "MemoveryOverPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "Aggregated",
                        "metricMeasureColumn": "AvgMemUse",
                        "operator": "GreaterThan",
                        "threshold": 90,
                        "query": "InsightsMetrics | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend memorySizeMB = todouble(parse_json(Tags).[\"vm.azm.ms/memorySizeMB\"]) | extend PercentageBytesinUse = Val/memorySizeMB*100    | summarize AvgMemUse = avg(PercentageBytesinUse) by bin(TimeGenerated, 15m), _ResourceId,Computer"
                      },
                      {
                        "alertRuleDescription": "Alert for disk space under 10%",
                        "alertRuleDisplayName": "Disk space under 10%",
                        "alertRuleName": "DiskSpaceUnderPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 10 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                      },
                      {
                        "alertRuleDescription": "Alert for disk space under 5%",
                        "alertRuleDisplayName": "Disk space under 5%",
                        "alertRuleName": "DiskSpaceUnderPercentCritical",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 5 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                      },
                      {
                        "alertRuleDescription": "Heartbeat alert for VMs - 5 minutes",
                        "alertRuleDisplayName": "Heartbeat alert for VMs",
                        "alertRuleName": "HeartbeatAlert",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT5M",
                        "windowSize": "PT5M",
                        "alertType": "rows",
                        "query": "InsightsMetrics| where Namespace == 'Computer' and Name == 'Heartbeat'| summarize arg_max(TimeGenerated, *) by _ResourceId, Computer| where TimeGenerated < ago(5m)"
                      },
                      {
                        "alertRuleDescription": "Alert for CPU usage over 90%",
                        "alertRuleDisplayName": "CPU usage over 90%",
                        "alertRuleName": "CPUUsageOverPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 90 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                      },
                      {
                        "alertRuleDescription": "Alert for CPU usage over 95%",
                        "alertRuleDisplayName": "CPU usage over 95%",
                        "alertRuleName": "CPUUsageOverPercentcritical",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 95 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[variables('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag'))), '2022-09-01').outputs.VMIRuleId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[variables('ruleshortname')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "LxOSPack-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": "[if(parameters('useExistingAG'), createObject('value', parameters('existingActionGroupResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new'), '2022-09-01').outputs.agGroupId.value))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "3525498024429584226"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-VMI-Linux",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "actionGroupResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "LxOS"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            }
          },
          "variables": {
            "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), parameters('customerTags').All))]",
            "ruleshortname": "VMI-LxOS",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('vmInsightsDCR-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceResourceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "ruleName": {
                    "value": "[parameters('rulename')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "16579881467422974035"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "ruleName": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2021-09-01-preview",
                      "name": "[format('{0}-VMI', parameters('ruleName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "description": "Data collection rule for VM Insights.",
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "dataSources": {
                          "performanceCounters": [
                            {
                              "name": "VMInsightsPerfCounters",
                              "streams": [
                                "Microsoft-InsightsMetrics"
                              ],
                              "samplingFrequencyInSeconds": 60,
                              "counterSpecifiers": [
                                "\\VmInsights\\DetailedMetrics"
                              ]
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                              "name": "[variables('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-InsightsMetrics"
                            ],
                            "destinations": [
                              "[variables('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "VMIRuleId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-VMI', parameters('ruleName')))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "9423000554671818874"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "moduleprefix": "AMSP-Lx-VMI",
                    "alertlist": [
                      {
                        "alertRuleDescription": "Alert for Memory over 90%",
                        "alertRuleDisplayName": "Memory over 90%",
                        "alertRuleName": "MemoveryOverPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "Aggregated",
                        "metricMeasureColumn": "AvgMemUse",
                        "operator": "GreaterThan",
                        "threshold": 90,
                        "query": "InsightsMetrics | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend memorySizeMB = todouble(parse_json(Tags).[\"vm.azm.ms/memorySizeMB\"]) | extend PercentageBytesinUse = Val/memorySizeMB*100    | summarize AvgMemUse = avg(PercentageBytesinUse) by bin(TimeGenerated, 15m), _ResourceId,Computer"
                      },
                      {
                        "alertRuleDescription": "Alert for disk space under 10%",
                        "alertRuleDisplayName": "Disk space under 10%",
                        "alertRuleName": "DiskSpaceUnderPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 10 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                      },
                      {
                        "alertRuleDescription": "Alert for disk space under 5%",
                        "alertRuleDisplayName": "Disk space under 5%",
                        "alertRuleName": "DiskSpaceUnderPercentCritical",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 5 \n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                      },
                      {
                        "alertRuleDescription": "Heartbeat alert for VMs - 5 minutes",
                        "alertRuleDisplayName": "Heartbeat alert for VMs",
                        "alertRuleName": "HeartbeatAlert",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT5M",
                        "windowSize": "PT5M",
                        "alertType": "rows",
                        "query": "InsightsMetrics| where Namespace == 'Computer' and Name == 'Heartbeat'| summarize arg_max(TimeGenerated, *) by _ResourceId, Computer| where TimeGenerated < ago(5m)"
                      },
                      {
                        "alertRuleDescription": "Alert for CPU usage over 90%",
                        "alertRuleDisplayName": "CPU usage over 90%",
                        "alertRuleName": "CPUUsageOverPercentWarning",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 90 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                      },
                      {
                        "alertRuleDescription": "Alert for CPU usage over 95%",
                        "alertRuleDisplayName": "CPU usage over 95%",
                        "alertRuleName": "CPUUsageOverPercentcritical",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 95 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[variables('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag'))), '2022-09-01').outputs.VMIRuleId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[variables('ruleshortname')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "IISPack-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": "[if(parameters('useExistingAG'), createObject('value', parameters('existingActionGroupResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new'), '2022-09-01').outputs.agGroupId.value))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "13974476155752907156"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-IIS-Server",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "IIS"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            },
            "actionGroupResourceId": {
              "type": "string"
            }
          },
          "variables": {
            "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), parameters('customerTags').All))]",
            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
            "ruleshortname": "IIS1",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "kind": "Windows",
            "xPathQueries": [
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2216)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2221)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5152)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5010 or EventID=5011 or EventID=5012 or EventID=5013)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5009)]]",
              "Application!*[System[Provider[@Name='Active Server Pages'] and (EventID=500 or EventID=499 or EventID=23 or EventID=22 or EventID=21 or EventID=20 or EventID=19 or EventID=18 or EventID=17 or EventID=16 or EventID=9 or EventID=8 or EventID=7 or EventID=6 or EventID=5)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1037)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2208)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2206)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2201)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2203)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2204)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2274 or EventID=2268 or EventID=2220 or EventID=2219 or EventID=2214)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5088 or EventID=5061 or EventID=5060)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2296)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2295)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2293)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1133)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2261)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5036)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2264)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2298)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2218)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2258)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2227)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2233)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2226 or EventID=2230 or EventID=2231 or EventID=2232)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5174 or EventID=5179 or EventID=5180)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5085)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5054 or EventID=5091)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5063)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5058)]]"
            ],
            "performanceCounters": [
              "\\Web Service(_Total)\\Bytes Received/sec",
              "\\Web Service(_Total)\\Bytes Sent/sec",
              "\\Web Service(_Total)\\Bytes Total/sec",
              "\\Web Service(_Total)\\Connection Attempts/sec",
              "\\Web Service(_Total)\\Current Connections",
              "\\Web Service(_Total)\\Total Method Requests/sec",
              "\\Microsoft FTP Service(_Total)\\Bytes Total/sec",
              "\\Microsoft FTP Service(_Total)\\Current Connections",
              "\\SMTP Server(_Total)\\Bytes Received/sec",
              "\\SMTP Server(_Total)\\Bytes Sent/sec",
              "\\SMTP Server(_Total)\\Bytes Total/sec",
              "\\SMTP Server(_Total)\\Inbound Connections Current",
              "\\SMTP Server(_Total)\\Message Bytes Received/sec",
              "\\SMTP Server(_Total)\\Message Bytes Sent/sec",
              "\\SMTP Server(_Total)\\Messages Delivered/sec",
              "\\SMTP Server(_Total)\\Messages Received/sec",
              "\\SMTP Server(_Total)\\Messages Sent/sec",
              "\\SMTP Server(_Total)\\Outbound Connections Current",
              "\\SMTP Server(_Total)\\Total Messages Submitted",
              "\\SMTP Server(SMTP 1)\\Bytes Received/sec",
              "\\SMTP Server(SMTP 1)\\Bytes Sent/sec",
              "\\SMTP Server(SMTP 1)\\Bytes Total/sec",
              "\\SMTP Server(SMTP 1)\\Inbound Connections Current",
              "\\SMTP Server(SMTP 1)\\Message Bytes Received/sec",
              "\\SMTP Server(SMTP 1)\\Message Bytes Sent/sec",
              "\\SMTP Server(SMTP 1)\\Messages Delivered/sec",
              "\\SMTP Server(SMTP 1)\\Messages Received/sec",
              "\\SMTP Server(SMTP 1)\\Messages Sent/sec",
              "\\SMTP Server(SMTP 1)\\Outbound Connections Current",
              "\\SMTP Server(SMTP 1)\\Total Messages Submitted"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "7801460712043596894"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "moduleprefix": {
                      "type": "string",
                      "defaultValue": "AMSP-IIS"
                    }
                  },
                  "variables": {
                    "alertlist": [
                      {
                        "alertRuleDescription": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                        "alertRuleDisplayName": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                        "alertRuleName": "AlertRule-IIS-2012-1",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2221) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                        "alertRuleDisplayName": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                        "alertRuleName": "AlertRule-IIS-2012-2",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5152) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Application Pool worker process is unresponsive",
                        "alertRuleDisplayName": "Application Pool worker process is unresponsive",
                        "alertRuleName": "AlertRule-IIS-2012-3",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5010,5011,5012,5013) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Application Pool worker process terminated unexpectedly",
                        "alertRuleDisplayName": "Application Pool worker process terminated unexpectedly",
                        "alertRuleName": "AlertRule-IIS-2012-4",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5009) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "ASP application error occurred",
                        "alertRuleDisplayName": "ASP application error occurred",
                        "alertRuleName": "AlertRule-IIS-2012-5",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (500,499,23,22,21,20,19,18,17,16,9,8,7,6,5) and EventLog == 'Application' and Source == 'Active Server Pages'"
                      },
                      {
                        "alertRuleDescription": "HTTP control channel for the WWW Service did not open",
                        "alertRuleDisplayName": "HTTP control channel for the WWW Service did not open",
                        "alertRuleName": "AlertRule-IIS-2012-6",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1037) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not create a client connection object for user",
                        "alertRuleDisplayName": "HTTP Server could not create a client connection object for user",
                        "alertRuleName": "AlertRule-IIS-2012-7",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2208) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not create the main connection socket",
                        "alertRuleDisplayName": "HTTP Server could not create the main connection socket",
                        "alertRuleName": "AlertRule-IIS-2012-8",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2206) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not initialize its security",
                        "alertRuleDisplayName": "HTTP Server could not initialize its security",
                        "alertRuleName": "AlertRule-IIS-2012-9",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2201) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not initialize the socket library",
                        "alertRuleDisplayName": "HTTP Server could not initialize the socket library",
                        "alertRuleName": "AlertRule-IIS-2012-10",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2203) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server was unable to initialize due to a shortage of available memory",
                        "alertRuleDisplayName": "HTTP Server was unable to initialize due to a shortage of available memory",
                        "alertRuleName": "AlertRule-IIS-2012-11",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2204) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "ISAPI application error detected",
                        "alertRuleDisplayName": "ISAPI application error detected",
                        "alertRuleName": "AlertRule-IIS-2012-12",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2274,2268,2220,2219,2214) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Job object associated with the application pool encountered an error",
                        "alertRuleDisplayName": "Job object associated with the application pool encountered an error",
                        "alertRuleName": "AlertRule-IIS-2012-13",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5088,5061,5060) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Module has an invalid precondition",
                        "alertRuleDisplayName": "Module has an invalid precondition",
                        "alertRuleName": "AlertRule-IIS-2012-14",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2296) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Module registration error detected (failed to find RegisterModule entrypoint)",
                        "alertRuleDisplayName": "Module registration error detected (failed to find RegisterModule entrypoint)",
                        "alertRuleName": "AlertRule-IIS-2012-15",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2295) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Module registration error detected (module returned an error during registration)",
                        "alertRuleDisplayName": "Module registration error detected (module returned an error during registration)",
                        "alertRuleName": "AlertRule-IIS-2012-16",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2293) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Only one type of logging can be enabled at a time",
                        "alertRuleDisplayName": "Only one type of logging can be enabled at a time",
                        "alertRuleName": "AlertRule-IIS-2012-17",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1133) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                      },
                      {
                        "alertRuleDescription": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                        "alertRuleDisplayName": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                        "alertRuleName": "AlertRule-IIS-2012-18",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2261) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The configuration manager for WAS did not initialize",
                        "alertRuleDisplayName": "The configuration manager for WAS did not initialize",
                        "alertRuleName": "AlertRule-IIS-2012-19",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5036) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "The directory specified for caching compressed content is invalid",
                        "alertRuleDisplayName": "The directory specified for caching compressed content is invalid",
                        "alertRuleName": "AlertRule-IIS-2012-20",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2264) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The Global Modules list is empty",
                        "alertRuleDisplayName": "The Global Modules list is empty",
                        "alertRuleName": "AlertRule-IIS-2012-21",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2298) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The HTTP server encountered an error processing the server side include file",
                        "alertRuleDisplayName": "The HTTP server encountered an error processing the server side include file",
                        "alertRuleName": "AlertRule-IIS-2012-22",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2218) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server failed to close client connections to URLs during shutdown",
                        "alertRuleDisplayName": "The server failed to close client connections to URLs during shutdown",
                        "alertRuleName": "AlertRule-IIS-2012-23",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2258) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to acquire a license for a SSL connection",
                        "alertRuleDisplayName": "The server was unable to acquire a license for a SSL connection",
                        "alertRuleName": "AlertRule-IIS-2012-24",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2227) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to allocate a buffer to read a file",
                        "alertRuleDisplayName": "The server was unable to allocate a buffer to read a file",
                        "alertRuleName": "AlertRule-IIS-2012-25",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2233) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to read a file",
                        "alertRuleDisplayName": "The server was unable to read a file",
                        "alertRuleName": "AlertRule-IIS-2012-26",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2226,2230,2231,2232) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "WAS detected invalid configuration data",
                        "alertRuleDisplayName": "WAS detected invalid configuration data",
                        "alertRuleName": "AlertRule-IIS-2012-27",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5174,5179,5180) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[parameters('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "wsfriendlyname": {
                    "value": "[variables('workspaceFriendlyName')]"
                  },
                  "kind": {
                    "value": "[variables('kind')]"
                  },
                  "xPathQueries": {
                    "value": "[variables('xPathQueries')]"
                  },
                  "counterSpecifiers": {
                    "value": "[variables('performanceCounters')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15586190674869500289"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "Windows"
                    },
                    "wsfriendlyname": {
                      "type": "string",
                      "defaultValue": "TBD"
                    },
                    "xPathQueries": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "counterSpecifiers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "samplingFrequencyInSeconds": {
                      "type": "int",
                      "defaultValue": 300
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('rulename')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceId')]",
                              "name": "[parameters('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataSources": {
                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), json('null'), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                          "performanceCounters": [
                            {
                              "streams": [
                                "Microsoft-Perf"
                              ],
                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                              "name": "PerfCountersDataSource"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-Event",
                              "Microsoft-Perf"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrIISLogs-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "ruleName": {
                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "endpointResourceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "tableName": {
                    "value": "IISLogs"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "926628126860187676"
                    }
                  },
                  "parameters": {
                    "ruleName": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the name of the data collection rule to create."
                      }
                    },
                    "endpointResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the resource id of the data collection endpoint."
                      }
                    },
                    "tableName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the table."
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the location in which to create the data collection rule."
                      }
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('ruleName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "Windows",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                        "dataSources": {
                          "iisLogs": [
                            {
                              "streams": [
                                "Microsoft-W3CIISLog"
                              ],
                              "name": "iisLogsDataSource"
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('lawResourceId')]",
                              "name": "[variables('lawFriendlyName')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-W3CIISLog"
                            ],
                            "destinations": [
                              "[variables('lawFriendlyName')]"
                            ],
                            "transformKql": "source",
                            "outputStream": "Microsoft-W3CIISLog"
                          }
                        ],
                        "streamDeclarations": {
                          "Custom-MyTable_CL": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "RawData",
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}-IISLogs', parameters('packtag'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-2', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "IIS2016-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": "[if(parameters('useExistingAG'), createObject('value', parameters('existingActionGroupResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new'), '2022-09-01').outputs.agGroupId.value))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "12312357570981963690"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-IIS2016-Server",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "actionGroupResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "IIS2016"
            },
            "solutionTag": {
              "type": "string",
              "defaultValue": "MonitorStarterPacks"
            },
            "solutionVersion": {
              "type": "string",
              "defaultValue": "0.1.0"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            }
          },
          "variables": {
            "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), parameters('customerTags').All))]",
            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
            "ruleshortname": "IIS2016",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "kind": "Windows",
            "xPathQueries": [
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1071 or EventID=1073)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1135 or EventID=1134)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2226 or EventID=2230 or EventID=2231 or EventID=2232)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2274 or EventID=2268 or EventID=2220 or EventID=2219 or EventID=2214)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5172 or EventID=5173)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5174 or EventID=5179 or EventID=5180)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5152)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1037)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1062)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1126)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1133)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1173)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1175)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2201)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2203)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2204)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2206)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2208)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2218)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2227)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2233)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2258)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2261)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2264)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2281)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2293)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2295)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2296)]]",
              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2298)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5005)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5030)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5036)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5053)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5063)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5066)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5067)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5153)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6001)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6002)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6003)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6004)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6005)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6006)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6007)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6008)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6009)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6010)]]",
              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6011)]]",
              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7023 or EventID=7024)]]",
              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7031)]]",
              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7034)]]",
              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7043)]]"
            ],
            "performanceCounters": [
              "\\Web Service(_Total)\\Bytes Received/sec",
              "\\Web Service(_Total)\\Bytes Sent/sec",
              "\\Web Service(_Total)\\Bytes Total/sec",
              "\\Web Service(_Total)\\Connection Attempts/sec",
              "\\Web Service(_Total)\\Current Connections",
              "\\Web Service(_Total)\\Total Method Requests/sec",
              "\\Microsoft FTP Service(_Total)\\Bytes Total/sec",
              "\\Microsoft FTP Service(_Total)\\Current Connections",
              "\\SMTP Server(_Total)\\Bytes Received/sec",
              "\\SMTP Server(_Total)\\Bytes Sent/sec",
              "\\SMTP Server(_Total)\\Bytes Total/sec",
              "\\SMTP Server(_Total)\\Inbound Connections Current",
              "\\SMTP Server(_Total)\\Message Bytes Received/sec",
              "\\SMTP Server(_Total)\\Message Bytes Sent/sec",
              "\\SMTP Server(_Total)\\Messages Delivered/sec",
              "\\SMTP Server(_Total)\\Messages Received/sec",
              "\\SMTP Server(_Total)\\Messages Sent/sec",
              "\\SMTP Server(_Total)\\Outbound Connections Current",
              "\\SMTP Server(_Total)\\Total Messages Submitted",
              "\\SMTP Server(SMTP 1)\\Bytes Received/sec",
              "\\SMTP Server(SMTP 1)\\Bytes Sent/sec",
              "\\SMTP Server(SMTP 1)\\Bytes Total/sec",
              "\\SMTP Server(SMTP 1)\\Inbound Connections Current",
              "\\SMTP Server(SMTP 1)\\Message Bytes Received/sec",
              "\\SMTP Server(SMTP 1)\\Message Bytes Sent/sec",
              "\\SMTP Server(SMTP 1)\\Messages Delivered/sec",
              "\\SMTP Server(SMTP 1)\\Messages Received/sec",
              "\\SMTP Server(SMTP 1)\\Messages Sent/sec",
              "\\SMTP Server(SMTP 1)\\Outbound Connections Current",
              "\\SMTP Server(SMTP 1)\\Total Messages Submitted"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "5107644619156935321"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "moduleprefix": {
                      "type": "string",
                      "defaultValue": "AMSP-IIS2016"
                    }
                  },
                  "variables": {
                    "alertlist": [
                      {
                        "alertRuleDescription": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                        "alertRuleDisplayName": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                        "alertRuleName": "AlertRule-IIS-2012-1",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2221) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                        "alertRuleDisplayName": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                        "alertRuleName": "AlertRule-IIS-2012-2",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5152) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Application Pool worker process is unresponsive",
                        "alertRuleDisplayName": "Application Pool worker process is unresponsive",
                        "alertRuleName": "AlertRule-IIS-2012-3",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5010,5011,5012,5013) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Application Pool worker process terminated unexpectedly",
                        "alertRuleDisplayName": "Application Pool worker process terminated unexpectedly",
                        "alertRuleName": "AlertRule-IIS-2012-4",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5009) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "ASP application error occurred",
                        "alertRuleDisplayName": "ASP application error occurred",
                        "alertRuleName": "AlertRule-IIS-2012-5",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (500,499,23,22,21,20,19,18,17,16,9,8,7,6,5) and EventLog == 'Application' and Source == 'Active Server Pages'"
                      },
                      {
                        "alertRuleDescription": "HTTP control channel for the WWW Service did not open",
                        "alertRuleDisplayName": "HTTP control channel for the WWW Service did not open",
                        "alertRuleName": "AlertRule-IIS-2012-6",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1037) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not create a client connection object for user",
                        "alertRuleDisplayName": "HTTP Server could not create a client connection object for user",
                        "alertRuleName": "AlertRule-IIS-2012-7",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2208) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not create the main connection socket",
                        "alertRuleDisplayName": "HTTP Server could not create the main connection socket",
                        "alertRuleName": "AlertRule-IIS-2012-8",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2206) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not initialize its security",
                        "alertRuleDisplayName": "HTTP Server could not initialize its security",
                        "alertRuleName": "AlertRule-IIS-2012-9",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2201) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server could not initialize the socket library",
                        "alertRuleDisplayName": "HTTP Server could not initialize the socket library",
                        "alertRuleName": "AlertRule-IIS-2012-10",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2203) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "HTTP Server was unable to initialize due to a shortage of available memory",
                        "alertRuleDisplayName": "HTTP Server was unable to initialize due to a shortage of available memory",
                        "alertRuleName": "AlertRule-IIS-2012-11",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2204) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "ISAPI application error detected",
                        "alertRuleDisplayName": "ISAPI application error detected",
                        "alertRuleName": "AlertRule-IIS-2012-12",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2274,2268,2220,2219,2214) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Job object associated with the application pool encountered an error",
                        "alertRuleDisplayName": "Job object associated with the application pool encountered an error",
                        "alertRuleName": "AlertRule-IIS-2012-13",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5088,5061,5060) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "Module has an invalid precondition",
                        "alertRuleDisplayName": "Module has an invalid precondition",
                        "alertRuleName": "AlertRule-IIS-2012-14",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2296) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Module registration error detected (failed to find RegisterModule entrypoint)",
                        "alertRuleDisplayName": "Module registration error detected (failed to find RegisterModule entrypoint)",
                        "alertRuleName": "AlertRule-IIS-2012-15",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2295) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Module registration error detected (module returned an error during registration)",
                        "alertRuleDisplayName": "Module registration error detected (module returned an error during registration)",
                        "alertRuleName": "AlertRule-IIS-2012-16",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2293) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "Only one type of logging can be enabled at a time",
                        "alertRuleDisplayName": "Only one type of logging can be enabled at a time",
                        "alertRuleName": "AlertRule-IIS-2012-17",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1133) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                      },
                      {
                        "alertRuleDescription": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                        "alertRuleDisplayName": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                        "alertRuleName": "AlertRule-IIS-2012-18",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2261) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The configuration manager for WAS did not initialize",
                        "alertRuleDisplayName": "The configuration manager for WAS did not initialize",
                        "alertRuleName": "AlertRule-IIS-2012-19",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5036) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      },
                      {
                        "alertRuleDescription": "The directory specified for caching compressed content is invalid",
                        "alertRuleDisplayName": "The directory specified for caching compressed content is invalid",
                        "alertRuleName": "AlertRule-IIS-2012-20",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2264) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The Global Modules list is empty",
                        "alertRuleDisplayName": "The Global Modules list is empty",
                        "alertRuleName": "AlertRule-IIS-2012-21",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2298) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The HTTP server encountered an error processing the server side include file",
                        "alertRuleDisplayName": "The HTTP server encountered an error processing the server side include file",
                        "alertRuleName": "AlertRule-IIS-2012-22",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2218) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server failed to close client connections to URLs during shutdown",
                        "alertRuleDisplayName": "The server failed to close client connections to URLs during shutdown",
                        "alertRuleName": "AlertRule-IIS-2012-23",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2258) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to acquire a license for a SSL connection",
                        "alertRuleDisplayName": "The server was unable to acquire a license for a SSL connection",
                        "alertRuleName": "AlertRule-IIS-2012-24",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2227) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to allocate a buffer to read a file",
                        "alertRuleDisplayName": "The server was unable to allocate a buffer to read a file",
                        "alertRuleName": "AlertRule-IIS-2012-25",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2233) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "The server was unable to read a file",
                        "alertRuleDisplayName": "The server was unable to read a file",
                        "alertRuleName": "AlertRule-IIS-2012-26",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2226,2230,2231,2232) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                      },
                      {
                        "alertRuleDescription": "WAS detected invalid configuration data",
                        "alertRuleDisplayName": "WAS detected invalid configuration data",
                        "alertRuleName": "AlertRule-IIS-2012-27",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5174,5179,5180) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[parameters('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "wsfriendlyname": {
                    "value": "[variables('workspaceFriendlyName')]"
                  },
                  "kind": {
                    "value": "[variables('kind')]"
                  },
                  "xPathQueries": {
                    "value": "[variables('xPathQueries')]"
                  },
                  "counterSpecifiers": {
                    "value": "[variables('performanceCounters')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15586190674869500289"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "Windows"
                    },
                    "wsfriendlyname": {
                      "type": "string",
                      "defaultValue": "TBD"
                    },
                    "xPathQueries": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "counterSpecifiers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "samplingFrequencyInSeconds": {
                      "type": "int",
                      "defaultValue": 300
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('rulename')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceId')]",
                              "name": "[parameters('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataSources": {
                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), json('null'), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                          "performanceCounters": [
                            {
                              "streams": [
                                "Microsoft-Perf"
                              ],
                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                              "name": "PerfCountersDataSource"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-Event",
                              "Microsoft-Perf"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrIISLogs-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "ruleName": {
                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "endpointResourceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "tableName": {
                    "value": "IISLogs"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "926628126860187676"
                    }
                  },
                  "parameters": {
                    "ruleName": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the name of the data collection rule to create."
                      }
                    },
                    "endpointResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the resource id of the data collection endpoint."
                      }
                    },
                    "tableName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the table."
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the location in which to create the data collection rule."
                      }
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('ruleName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "Windows",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                        "dataSources": {
                          "iisLogs": [
                            {
                              "streams": [
                                "Microsoft-W3CIISLog"
                              ],
                              "name": "iisLogsDataSource"
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('lawResourceId')]",
                              "name": "[variables('lawFriendlyName')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-W3CIISLog"
                            ],
                            "destinations": [
                              "[variables('lawFriendlyName')]"
                            ],
                            "transformKql": "source",
                            "outputStream": "Microsoft-W3CIISLog"
                          }
                        ],
                        "streamDeclarations": {
                          "Custom-MyTable_CL": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "RawData",
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}-IISLogs', parameters('packtag'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-2', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "DNS2016-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": "[if(parameters('useExistingAG'), createObject('value', parameters('existingActionGroupResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new'), '2022-09-01').outputs.agGroupId.value))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "2114410730523550356"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-DNS2016-Server",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "DNS2016"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            },
            "actionGroupResourceId": {
              "type": "string"
            }
          },
          "variables": {
            "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), parameters('customerTags').All))]",
            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
            "ruleshortname": "DNS2016",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "kind": "Windows",
            "xPathQueries": [
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=10)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1000)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1004)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1200)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1201)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1203)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=131)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=140)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=150)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1540)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4000)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4006)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4007)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4010)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4011)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4012)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4014)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4015)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4016)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4017)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=408)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=409)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=410)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=414)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4510)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4511)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4512)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=501)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=502)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=503)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=504)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=5051)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=6527)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=6702)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=706)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7060)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7616)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7636)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7642)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7644)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=777)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=111 or EventID=6533)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4018 or EventID=4019)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4513 or EventID=4514)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4520 or EventID=4521)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=707 or EventID=1003)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7692 or EventID=790)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=796 or EventID=799)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=2200 or EventID=2202 or EventID=2203)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7502 or EventID=7503 or EventID=7504)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=792 or EventID=795 or EventID=797)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1001 or EventID=1008 or EventID=3151 or EventID=3152 or EventID=3153)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=403 or EventID=404 or EventID=405 or EventID=406 or EventID=407)]]",
              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=500 or EventID=505 or EventID=506 or EventID=507 or EventID=2204)]]"
            ],
            "performanceCounters": [
              "\\DNS\\AXFR Request Received",
              "\\DNS\\AXFR Request Sent",
              "\\DNS\\AXFR Response Received",
              "\\DNS\\AXFR Success Received",
              "\\DNS\\AXFR Success Sent",
              "\\DNS\\Caching Memory",
              "\\DNS\\Data Flush Pages/sec",
              "\\DNS\\Data Flushes/sec",
              "\\DNS\\Database Node Memory",
              "\\DNS\\Dynamic Update NoOperation",
              "\\DNS\\Dynamic Update NoOperation/sec",
              "\\DNS\\Dynamic Update Queued",
              "\\DNS\\Dynamic Update Received",
              "\\DNS\\Dynamic Update Received/sec",
              "\\DNS\\Dynamic Update Rejected",
              "\\DNS\\Dynamic Update TimeOuts",
              "\\DNS\\Dynamic Update Written to Database",
              "\\DNS\\Dynamic Update Written to Database/sec",
              "\\DNS\\IXFR Request Received",
              "\\DNS\\IXFR Request Sent",
              "\\DNS\\IXFR Response Received",
              "\\DNS\\IXFR Success Received",
              "\\DNS\\IXFR Success Sent",
              "\\DNS\\IXFR TCP Success Received",
              "\\DNS\\IXFR UDP Success Received",
              "\\DNS\\Nbstat Memory",
              "\\DNS\\Notify Received",
              "\\DNS\\Notify Sent",
              "\\DNS\\Query Dropped Bad Socket",
              "\\DNS\\Query Dropped Bad Socket/sec",
              "\\DNS\\Query Dropped By Policy",
              "\\DNS\\Query Dropped By Policy/sec",
              "\\DNS\\Query Dropped By Response Rate Limiting",
              "\\DNS\\Query Dropped By Response Rate Limiting/sec",
              "\\DNS\\Query Dropped Send",
              "\\DNS\\Query Dropped Send/sec",
              "\\DNS\\Query Dropped Total",
              "\\DNS\\Query Dropped Total/sec",
              "\\DNS\\Record Flow Memory",
              "\\DNS\\Recursive Queries",
              "\\DNS\\Recursive Queries/sec",
              "\\DNS\\Recursive Query Failure",
              "\\DNS\\Recursive Query Failure/sec",
              "\\DNS\\Recursive Send TimeOuts",
              "\\DNS\\Recursive TimeOut/sec",
              "\\DNS\\Responses Suppressed",
              "\\DNS\\Responses Suppressed/sec",
              "\\DNS\\Secure Update Failure",
              "\\DNS\\Secure Update Received",
              "\\DNS\\Secure Update Received/sec",
              "\\DNS\\TCP Message Memory",
              "\\DNS\\TCP Query Received",
              "\\DNS\\TCP Query Received/sec",
              "\\DNS\\TCP Response Sent",
              "\\DNS\\TCP Response Sent/sec",
              "\\DNS\\Total Query Received",
              "\\DNS\\Total Query Received/sec",
              "\\DNS\\Total Remote Inflight Queries",
              "\\DNS\\Total Response Sent",
              "\\DNS\\Total Response Sent/sec",
              "\\DNS\\UDP Message Memory",
              "\\DNS\\UDP Query Received",
              "\\DNS\\UDP Query Received/sec",
              "\\DNS\\UDP Response Sent",
              "\\DNS\\UDP Response Sent/sec",
              "\\DNS\\Unmatched Responses Received",
              "\\DNS\\WINS Lookup Received",
              "\\DNS\\WINS Lookup Received/sec",
              "\\DNS\\WINS Response Sent",
              "\\DNS\\WINS Response Sent/sec",
              "\\DNS\\WINS Reverse Lookup Received",
              "\\DNS\\WINS Reverse Lookup Received/sec",
              "\\DNS\\WINS Reverse Response Sent",
              "\\DNS\\WINS Reverse Response Sent/sec",
              "\\DNS\\Zone Transfer Failure",
              "\\DNS\\Zone Transfer Request Received",
              "\\DNS\\Zone Transfer SOA Request Sent",
              "\\DNS\\Zone Transfer Success"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "3090517007237896765"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "moduleprefix": {
                      "type": "string",
                      "defaultValue": "AMSP-DNS2016"
                    }
                  },
                  "variables": {
                    "alertlist": [
                      {
                        "alertRuleDescription": "Service.DependencyFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.DependencyFailed",
                        "alertRuleName": "AlertRule-Dns-2016-10",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (10) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.FileOpenError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.FileOpenError",
                        "alertRuleName": "AlertRule-Dns-2016-1000",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1000) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.CouldNotOpenDatabase",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.CouldNotOpenDatabase",
                        "alertRuleName": "AlertRule-Dns-2016-1004",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1004) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.BootFileNotFound",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.BootFileNotFound",
                        "alertRuleName": "AlertRule-Dns-2016-1200",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1200) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.ZoneCreationFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.ZoneCreationFailed",
                        "alertRuleName": "AlertRule-Dns-2016-1201",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1201) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.NoForwardingAddresses",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.NoForwardingAddresses",
                        "alertRuleName": "AlertRule-Dns-2016-1203",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1203) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "WINSConnector.Initialize.Failed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.WINSConnector.Initialize.Failed",
                        "alertRuleName": "AlertRule-Dns-2016-131",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (131) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "RPC.Initialize.Failed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RPC.Initialize.Failed",
                        "alertRuleName": "AlertRule-Dns-2016-140",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (140) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.PluginInitFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.PluginInitFailed",
                        "alertRuleName": "AlertRule-Dns-2016-150",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (150) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.DomainNodeCreationError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.DomainNodeCreationError",
                        "alertRuleName": "AlertRule-Dns-2016-1540",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1540) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.OpenFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.OpenFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4000",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4000) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.LoadFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.LoadFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4006",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4006) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.OpenPartitionFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.OpenPartitionFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4007",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4007) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.RecordLoadFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.RecordLoadFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4010",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4010) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.WriteFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.WriteFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4011",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4011) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.WriteTimeout",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.WriteTimeout",
                        "alertRuleName": "AlertRule-Dns-2016-4012",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4012) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.SecurityInterfaceFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.SecurityInterfaceFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4014",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4014) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.InterfaceError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.InterfaceError",
                        "alertRuleName": "AlertRule-Dns-2016-4015",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4015) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.LDAPTimeout",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.LDAPTimeout",
                        "alertRuleName": "AlertRule-Dns-2016-4016",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4016) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.DNSAdminsError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.DNSAdminsError",
                        "alertRuleName": "AlertRule-Dns-2016-4017",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4017) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.OpenSocketForAddress",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.OpenSocketForAddress",
                        "alertRuleName": "AlertRule-Dns-2016-408",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (408) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.UpdateListenAddresses",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.UpdateListenAddresses",
                        "alertRuleName": "AlertRule-Dns-2016-409",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (409) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.InvalidListenAddresses",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidListenAddresses",
                        "alertRuleName": "AlertRule-Dns-2016-410",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (410) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.SingleLabelHostname",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.SingleLabelHostname",
                        "alertRuleName": "AlertRule-Dns-2016-414",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (414) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.FSMOUnavailable",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.FSMOUnavailable",
                        "alertRuleName": "AlertRule-Dns-2016-4510",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4510) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.DeleteError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.DeleteError",
                        "alertRuleName": "AlertRule-Dns-2016-4511",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4511) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.PartitionCreateError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.PartitionCreateError",
                        "alertRuleName": "AlertRule-Dns-2016-4512",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4512) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.InvalidZoneType",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidZoneType",
                        "alertRuleName": "AlertRule-Dns-2016-501",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (501) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.NoZoneFile",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.NoZoneFile",
                        "alertRuleName": "AlertRule-Dns-2016-502",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (502) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.SecondaryRequiresMasters",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.SecondaryRequiresMasters",
                        "alertRuleName": "AlertRule-Dns-2016-503",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (503) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.RegZoneCreationFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.RegZoneCreationFailed",
                        "alertRuleName": "AlertRule-Dns-2016-504",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (504) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.Memory.Warning",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.Memory.Warning",
                        "alertRuleName": "AlertRule-Dns-2016-5051",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (5051) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.ZoneExpiration",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.ZoneExpiration",
                        "alertRuleName": "AlertRule-Dns-2016-6527",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (6527) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.UpdateDSPeersFailure",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.UpdateDSPeersFailure",
                        "alertRuleName": "AlertRule-Dns-2016-6702",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (6702) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "RootHints.NoRootNameServer",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RootHints.NoRootNameServer",
                        "alertRuleName": "AlertRule-Dns-2016-706",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (706) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.ConnectionError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.ConnectionError",
                        "alertRuleName": "AlertRule-Dns-2016-7060",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7060) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "DNSSEC.TALoadFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TALoadFailed",
                        "alertRuleName": "AlertRule-Dns-2016-7616",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7616) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "DNSSEC.TPDeleted",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TPDeleted",
                        "alertRuleName": "AlertRule-Dns-2016-7636",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7636) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "DNSSEC.InvalidTA",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.InvalidTA",
                        "alertRuleName": "AlertRule-Dns-2016-7642",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7642) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "DNSSEC.TARefreshFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TARefreshFailed",
                        "alertRuleName": "AlertRule-Dns-2016-7644",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7644) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "DNSSEC.ZoneUnSignFailure",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.ZoneUnSignFailure",
                        "alertRuleName": "AlertRule-Dns-2016-777",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (777) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.ThreadCreationFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.ThreadCreationFailed",
                        "alertRuleName": "AlertRule-Dns-2016-111",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (111,6533) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.BackgroundLoadFailure",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.BackgroundLoadFailure",
                        "alertRuleName": "AlertRule-Dns-2016-4018",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4018,4019) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.EnlistmentFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.EnlistmentFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4513",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4513,4514) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ADI.RetryableZoneOperationFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.RetryableZoneOperationFailed",
                        "alertRuleName": "AlertRule-Dns-2016-4520",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (4520,4521) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "RootHints.CacheFileError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RootHints.CacheFileError",
                        "alertRuleName": "AlertRule-Dns-2016-707",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (707,1003) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Server.EDNS0.ZoneTransfer.OptionInvalid",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.Server.EDNS0.ZoneTransfer.OptionInvalid",
                        "alertRuleName": "AlertRule-Dns-2016-7692",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7692,790) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "ClientSubnet.LoadFail",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.ClientSubnet.LoadFail",
                        "alertRuleName": "AlertRule-Dns-2016-796",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (796,799) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.RegistryOperationFailed",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.RegistryOperationFailed",
                        "alertRuleName": "AlertRule-Dns-2016-2200",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (2200,2202,2203) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.Memory.Error",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.Memory.Error",
                        "alertRuleName": "AlertRule-Dns-2016-7502",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (7502,7503,7504) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Policy.ServerLevel.LoadFail",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.Policy.ServerLevel.LoadFail",
                        "alertRuleName": "AlertRule-Dns-2016-792",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (792,795,797) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.FileError",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.FileError",
                        "alertRuleName": "AlertRule-Dns-2016-1001",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (1001,1008,3151,3152,3153) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Service.SocketFailure",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.SocketFailure",
                        "alertRuleName": "AlertRule-Dns-2016-403",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (403,404,405,406,407) and EventLog == 'DNS Server'"
                      },
                      {
                        "alertRuleDescription": "Configuration.InvalidRegistrySetting",
                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidRegistrySetting",
                        "alertRuleName": "AlertRule-Dns-2016-500",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (500,505,506,507,2204) and EventLog == 'DNS Server'"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[parameters('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "wsfriendlyname": {
                    "value": "[variables('workspaceFriendlyName')]"
                  },
                  "kind": {
                    "value": "[variables('kind')]"
                  },
                  "xPathQueries": {
                    "value": "[variables('xPathQueries')]"
                  },
                  "counterSpecifiers": {
                    "value": "[variables('performanceCounters')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15586190674869500289"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "Windows"
                    },
                    "wsfriendlyname": {
                      "type": "string",
                      "defaultValue": "TBD"
                    },
                    "xPathQueries": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "counterSpecifiers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "samplingFrequencyInSeconds": {
                      "type": "int",
                      "defaultValue": 300
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('rulename')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceId')]",
                              "name": "[parameters('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataSources": {
                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), json('null'), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                          "performanceCounters": [
                            {
                              "streams": [
                                "Microsoft-Perf"
                              ],
                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                              "name": "PerfCountersDataSource"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-Event",
                              "Microsoft-Perf"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "PS2016-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": "[if(parameters('useExistingAG'), createObject('value', parameters('existingActionGroupResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new'), '2022-09-01').outputs.agGroupId.value))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "6844430797689252877"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-Windows-PS2016",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "PS2016",
              "metadata": {
                "description": "The tag to be used for the solution."
              }
            },
            "actionGroupResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            }
          },
          "variables": {
            "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), parameters('customerTags').All))]",
            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
            "ruleshortname": "PS2016",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "kind": "Windows",
            "xPathQueries": [
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=83) and (Provider[@Name='Microsoft-Windows-PrintBRM' or @Name='PrintBrm'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=360) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Operational!*[System[(EventID=701 or EventID=702 or EventID=703 or EventID=704) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=364 or EventID=365 or EventID=367) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=315) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=371) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=356) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=513 or EventID=514) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=600 or EventID=601) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=515 or EventID=516 or EventID=517 or EventID=518 or EventID=519 or EventID=520) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=502 or EventID=503 or EventID=504 or EventID=505 or EventID=506 or EventID=507 or EventID=508 or EventID=509 or EventID=510 or EventID=511 or EventID=512) and (Provider[@Name='Microsoft-Windows-PrintService'])]]"
            ],
            "performanceCounters": [
              "\\Print Queue(_Total)\\Jobs",
              "\\Print Queue(_Total)\\Jobs Spooling",
              "\\Print Queue(_Total)\\Total Jobs Printed",
              "\\Print Queue(_Total)\\Total Pages Printed"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "wsfriendlyname": {
                    "value": "[variables('workspaceFriendlyName')]"
                  },
                  "kind": {
                    "value": "[variables('kind')]"
                  },
                  "xPathQueries": {
                    "value": "[variables('xPathQueries')]"
                  },
                  "counterSpecifiers": {
                    "value": "[variables('performanceCounters')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15586190674869500289"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "Windows"
                    },
                    "wsfriendlyname": {
                      "type": "string",
                      "defaultValue": "TBD"
                    },
                    "xPathQueries": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "counterSpecifiers": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "samplingFrequencyInSeconds": {
                      "type": "int",
                      "defaultValue": 300
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "dceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('rulename')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceId')]",
                              "name": "[parameters('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataSources": {
                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), json('null'), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                          "performanceCounters": [
                            {
                              "streams": [
                                "Microsoft-Perf"
                              ],
                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                              "name": "PerfCountersDataSource"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-Event",
                              "Microsoft-Perf"
                            ],
                            "destinations": [
                              "[parameters('wsfriendlyname')]"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "dcrId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "1280429823884943158"
                    }
                  },
                  "parameters": {
                    "moduleprefix": {
                      "type": "string",
                      "defaultValue": "AMSP-Win-PS2016"
                    },
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "alertlist": [
                      {
                        "alertRuleDescription": "Ensure the server is accessible.",
                        "alertRuleDisplayName": "Ensure the server is accessible.",
                        "alertRuleName": "AlertRule-PS-2016-1",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (83) and EventLog == 'Microsoft-Windows-PrintService/Admin' and (Source == 'Microsoft-Windows-PrintBRM' or Source == 'PrintBrm')"
                      },
                      {
                        "alertRuleDescription": "Manually install the color profile.",
                        "alertRuleDisplayName": "Manually install the color profile.",
                        "alertRuleName": "AlertRule-PS-2016-2",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (360) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Retry printing or restart the print server.",
                        "alertRuleDisplayName": "Retry printing or restart the print server.",
                        "alertRuleName": "AlertRule-PS-2016-3",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (701,702,703,704) and EventLog == 'Microsoft-Windows-PrintService/Operational!*' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Install the Printer Driver.",
                        "alertRuleDisplayName": "Install the Printer Driver.",
                        "alertRuleName": "AlertRule-PS-2016-4",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (364,365,367) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Restart the print spooler fix sharing problems and check Group Policy.",
                        "alertRuleDisplayName": "Restart the print spooler fix sharing problems and check Group Policy.",
                        "alertRuleName": "AlertRule-PS-2016-5",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (315) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Restart the print spooler and unshare the printer.",
                        "alertRuleDisplayName": "Restart the print spooler and unshare the printer.",
                        "alertRuleName": "AlertRule-PS-2016-6",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (371) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Update the printer driver.",
                        "alertRuleDisplayName": "Update the printer driver.",
                        "alertRuleName": "AlertRule-PS-2016-7",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (356) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Check Group Policy and network connectivity.",
                        "alertRuleDisplayName": "Check Group Policy and network connectivity.",
                        "alertRuleName": "AlertRule-PS-2016-8",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (513,514) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Try again or install an updated printer driver.",
                        "alertRuleDisplayName": "Try again or install an updated printer driver.",
                        "alertRuleName": "AlertRule-PS-2016-9",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (600,601) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Check network connectivity and Group Policy.",
                        "alertRuleDisplayName": "Check network connectivity and Group Policy.",
                        "alertRuleName": "AlertRule-PS-2016-10",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (515,516,517,518,519,520) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      },
                      {
                        "alertRuleDescription": "Check resource availability.",
                        "alertRuleDisplayName": "Check resource availability.",
                        "alertRuleName": "AlertRule-PS-2016-11",
                        "alertRuleSeverity": 2,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Event | where  EventID in (502,503,504,505,506,507,508,509,510,511,512) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[parameters('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Nginx-deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupId": {
            "value": "[parameters('resourceGroupId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "actionGroupResourceId": {
            "value": "[parameters('existingActionGroupResourceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "13748505759492596150"
            }
          },
          "parameters": {
            "rulename": {
              "type": "string",
              "defaultValue": "AMSP-Linux-Nginx",
              "metadata": {
                "description": "Name of the DCR rule to be created"
              }
            },
            "actionGroupResourceId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "packtag": {
              "type": "string",
              "defaultValue": "Nginx"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            }
          },
          "variables": {
            "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('packtag'), 'solutionVersion', parameters('solutionVersion')), parameters('customerTags').All))]",
            "ruleshortname": "Nginx",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "facilityNames": [
              "daemon"
            ],
            "logLevels": [
              "Debug",
              "Info",
              "Notice",
              "Warning",
              "Error",
              "Critical",
              "Alert",
              "Emergency"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('filecollectionrule-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "endpointResourceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "ruleName": {
                    "value": "[parameters('rulename')]"
                  },
                  "filepatterns": {
                    "value": [
                      "/var/log/nginx/access.log"
                    ]
                  },
                  "lawResourceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "tableName": {
                    "value": "NginxLogs"
                  },
                  "facilityNames": {
                    "value": "[variables('facilityNames')]"
                  },
                  "logLevels": {
                    "value": "[variables('logLevels')]"
                  },
                  "syslogDataSourceName": {
                    "value": "NginxLogs-1238219"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "6845190083190442520"
                    }
                  },
                  "parameters": {
                    "ruleName": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the name of the data collection rule to create."
                      }
                    },
                    "endpointResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the resource id of the data collection endpoint."
                      }
                    },
                    "tableName": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the table."
                      }
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Specifies the location in which to create the data collection rule."
                      }
                    },
                    "filepatterns": {
                      "type": "array"
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "facilityNames": {
                      "type": "array"
                    },
                    "logLevels": {
                      "type": "array"
                    },
                    "syslogDataSourceName": {
                      "type": "string",
                      "defaultValue": "sysLogsDataSource-1688419672"
                    }
                  },
                  "variables": {
                    "tableNameToUse": "[format('CustomAzMA{0}_CL', parameters('tableName'))]",
                    "streamName": "[format('Custom-{0}', variables('tableNameToUse'))]",
                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]",
                    "lawResourceGroup": "[split(parameters('lawResourceId'), '/')[4]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('ruleName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "Linux",
                      "properties": {
                        "dataSources": {
                          "syslog": [
                            {
                              "streams": [
                                "Microsoft-Syslog"
                              ],
                              "facilityNames": "[parameters('facilityNames')]",
                              "logLevels": "[parameters('logLevels')]",
                              "name": "[parameters('syslogDataSourceName')]"
                            }
                          ],
                          "logFiles": [
                            {
                              "streams": [
                                "[variables('streamName')]"
                              ],
                              "filePatterns": "[parameters('filepatterns')]",
                              "format": "text",
                              "settings": {
                                "text": {
                                  "recordStartTimestampFormat": "ISO 8601"
                                }
                              },
                              "name": "[variables('tableNameToUse')]"
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('lawResourceId')]",
                              "name": "[variables('lawFriendlyName')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-Syslog"
                            ],
                            "destinations": [
                              "[variables('lawFriendlyName')]"
                            ],
                            "transformKql": "source | where SyslogMessage == \"Stopped A high performance web server and a reverse proxy server.\" or SyslogMessage == \"Started A high performance web server and a reverse proxy server.\"",
                            "outputStream": "Microsoft-Syslog"
                          },
                          {
                            "streams": [
                              "[variables('streamName')]"
                            ],
                            "destinations": [
                              "[variables('lawFriendlyName')]"
                            ],
                            "transformKql": "source",
                            "outputStream": "[variables('streamName')]"
                          }
                        ],
                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                        "streamDeclarations": {
                          "[format('{0}', variables('streamName'))]": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "RawData",
                                "type": "string"
                              }
                            ]
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('lawResourceGroup')), 'Microsoft.Resources/deployments', variables('tableNameToUse'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('tableNameToUse')]",
                      "resourceGroup": "[variables('lawResourceGroup')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parentname": {
                            "value": "[variables('lawFriendlyName')]"
                          },
                          "tableName": {
                            "value": "[variables('tableNameToUse')]"
                          },
                          "retentionDays": {
                            "value": 31
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "8927710276797462866"
                            }
                          },
                          "parameters": {
                            "parentname": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "retentionDays": {
                              "type": "int",
                              "defaultValue": 31
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.OperationalInsights/workspaces/tables",
                              "apiVersion": "2022-10-01",
                              "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                              "properties": {
                                "totalRetentionInDays": "[parameters('retentionDays')]",
                                "plan": "Analytics",
                                "schema": {
                                  "name": "[parameters('tableName')]",
                                  "columns": [
                                    {
                                      "name": "TimeGenerated",
                                      "type": "datetime"
                                    },
                                    {
                                      "name": "RawData",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "retentionInDays": "[parameters('retentionDays')]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "ruleId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Alerts-{0}', parameters('packtag'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "AGId": {
                    "value": "[parameters('actionGroupResourceId')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "5189601493643777727"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "moduleprefix": "AMSP-LxOS-Nginx",
                    "alertlist": [
                      {
                        "alertRuleDescription": "Nginx stopped.",
                        "alertRuleDisplayName": "Nginx service stopped.",
                        "alertRuleName": "AlertRule-Nginx-1",
                        "alertRuleSeverity": 1,
                        "autoMitigate": true,
                        "evaluationFrequency": "PT15M",
                        "windowSize": "PT15M",
                        "alertType": "rows",
                        "query": "Syslog | where SyslogMessage == \"Stopped A high performance web server and a reverse proxy server.\""
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "alertlist": {
                            "value": "[variables('alertlist')]"
                          },
                          "AGId": {
                            "value": "[parameters('AGId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "moduleprefix": {
                            "value": "[variables('moduleprefix')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "75933667383542312"
                            }
                          },
                          "parameters": {
                            "alertlist": {
                              "type": "array"
                            },
                            "location": {
                              "type": "string"
                            },
                            "workspaceId": {
                              "type": "string"
                            },
                            "AGId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "moduleprefix": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "Alerts",
                                "count": "[length(parameters('alertlist'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('AGId')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                  },
                                  "alertRuleName": {
                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                  },
                                  "scope": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "query": {
                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[parameters('Tags')]"
                                  },
                                  "alertType": {
                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                  },
                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1955376536405090411"
                                    }
                                  },
                                  "parameters": {
                                    "alertType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "rows",
                                        "Aggregated"
                                      ]
                                    },
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "threshold": {
                                      "type": "int",
                                      "defaultValue": 0
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "operator": {
                                      "type": "string",
                                      "defaultValue": "GreaterThan",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "5611522469594456278"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Count",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "GreaterThan",
                                                      "threshold": 0,
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertRuleName": {
                                            "value": "[parameters('alertRuleName')]"
                                          },
                                          "alertRuleDisplayName": {
                                            "value": "[parameters('alertRuleDisplayName')]"
                                          },
                                          "alertRuleDescription": {
                                            "value": "[parameters('alertRuleDescription')]"
                                          },
                                          "scope": {
                                            "value": "[parameters('scope')]"
                                          },
                                          "actionGroupResourceId": {
                                            "value": "[parameters('actionGroupResourceId')]"
                                          },
                                          "alertRuleSeverity": {
                                            "value": "[parameters('alertRuleSeverity')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "windowSize": {
                                            "value": "[parameters('windowSize')]"
                                          },
                                          "evaluationFrequency": {
                                            "value": "[parameters('evaluationFrequency')]"
                                          },
                                          "autoMitigate": {
                                            "value": "[parameters('autoMitigate')]"
                                          },
                                          "query": {
                                            "value": "[parameters('query')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "threshold": {
                                            "value": "[parameters('threshold')]"
                                          },
                                          "metricMeasureColumn": {
                                            "value": "[parameters('metricMeasureColumn')]"
                                          },
                                          "operator": {
                                            "value": "[parameters('operator')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1486731342993087831"
                                            }
                                          },
                                          "parameters": {
                                            "alertRuleName": {
                                              "type": "string"
                                            },
                                            "alertRuleDisplayName": {
                                              "type": "string"
                                            },
                                            "alertRuleDescription": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "actionGroupResourceId": {
                                              "type": "string"
                                            },
                                            "alertRuleSeverity": {
                                              "type": "int"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "windowSize": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "evaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT15M"
                                            },
                                            "autoMitigate": {
                                              "type": "bool",
                                              "defaultValue": false
                                            },
                                            "query": {
                                              "type": "string"
                                            },
                                            "threshold": {
                                              "type": "int"
                                            },
                                            "metricMeasureColumn": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GreaterThan",
                                                "GreaterThanOrEqual",
                                                "LessThan",
                                                "LessThanOrEqual",
                                                "Equal",
                                                "NotEqual"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                              "apiVersion": "2023-03-15-preview",
                                              "name": "[parameters('alertRuleName')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('Tags')]",
                                              "properties": {
                                                "description": "[parameters('alertRuleDescription')]",
                                                "ruleResolveConfiguration": {},
                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                "enabled": true,
                                                "scopes": [
                                                  "[parameters('scope')]"
                                                ],
                                                "targetResourceTypes": [
                                                  "Microsoft.OperationalInsights/workspaces"
                                                ],
                                                "windowSize": "[parameters('windowSize')]",
                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                "severity": "[parameters('alertRuleSeverity')]",
                                                "criteria": {
                                                  "allOf": [
                                                    {
                                                      "query": "[parameters('query')]",
                                                      "timeAggregation": "Average",
                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                      "dimensions": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ],
                                                      "resourceIdColumn": "_ResourceId",
                                                      "operator": "[parameters('operator')]",
                                                      "threshold": "[parameters('threshold')]",
                                                      "failingPeriods": {
                                                        "numberOfEvaluationPeriods": 1,
                                                        "minFailingPeriodsToAlert": 1
                                                      }
                                                    }
                                                  ]
                                                },
                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                "actions": {
                                                  "actionGroups": [
                                                    "[parameters('actionGroupResourceId')]"
                                                  ],
                                                  "customProperties": {}
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('policysetup-{0}', parameters('packtag'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dcrId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('filecollectionrule-{0}', parameters('packtag'))), '2022-09-01').outputs.ruleId.value]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "rulename": {
                    "value": "[parameters('rulename')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "ruleshortname": {
                    "value": "[variables('ruleshortname')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12301075469741441796"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "dcrId": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "rulename": {
                      "type": "string"
                    },
                    "ruleshortname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string",
                      "defaultValue": "managementGroup"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roledefinitionIds": [
                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                    ],
                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "7060261485268467714"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "policyDescription": {
                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                          },
                          "policyName": {
                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                          },
                          "DCRId": {
                            "value": "[parameters('dcrId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roledefinitionIds": {
                            "value": "[variables('roledefinitionIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13782378815920433053"
                            }
                          },
                          "parameters": {
                            "DCRId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "DCRid": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "DCRId",
                                      "description": "The value of the DCRId."
                                    },
                                    "defaultValue": "[parameters('DCRId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.HybridCompute/Machines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "resourceGroup": {
                                                "type": "string"
                                              },
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "DCRId2": {
                                                "type": "string"
                                              },
                                              "packTag": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "locationLongNameToShortMap": {
                                                "canadacentral": "CCA",
                                                "canadaeast": "CCA",
                                                "centralus": "CUS",
                                                "eastus2euap": "eus2p",
                                                "eastus": "EUS",
                                                "eastus2": "EUS2",
                                                "southcentralus": "SCUS",
                                                "westcentralus": "WCUS",
                                                "westus": "WUS",
                                                "westus2": "WUS2"
                                              },
                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                              "subscriptionId": "[[subscription().subscriptionId]",
                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                            },
                                            "resources": [
                                              {
                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                "name": "[[variables('dcraName')]",
                                                "apiVersion": "2021-04-01",
                                                "properties": {
                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "resourceGroup": {
                                              "value": "[[resourceGroup().name]"
                                            },
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "DCRId2": {
                                              "value": "[[parameters('DCRId')]"
                                            },
                                            "packTag": {
                                              "value": "[[parameters('tagValue')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('filecollectionrule-{0}', parameters('packtag')))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "grafana",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "fileName": {
            "value": "grafana.zip"
          },
          "grafanaResourceId": {
            "value": "[parameters('grafanaResourceId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[variables('resourceGroupName')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "packsManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "2200113159684660909"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "grafanaResourceId": {
              "type": "string"
            },
            "fileName": {
              "type": "string"
            },
            "packsManagedIdentityResourceId": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            }
          },
          "variables": {
            "$fxv#0": "UEsDBBQAAAAIANNdgVcUKvuyvhMAAGyhAABGAAAAQXp1cmUgTW9uaXRvciBTdGFydCBQYWNrIC0gV2luZG93cyBPcGVyYXRpbmcgU3lzdGVtLTE2OTIwODY4NTM1ODkuanNvbu1d63Ibt5L+76dAcb1HlJeiRDnOSbJRqmQ7F1VFlkqS7cpGXhU4A5KI5sIzwEimszoPsVX7e19xH2G7gbkAM5ghdTXl0D9scwA0gEZ342ugp+fPJ4R0zs54NE2l6HxHfoffhPyp/oaSiIYMnnZeH5/t/sfbox/P9g/e7J0cHHV6eY2ADlmAVXY/pQkj+3HEZZyU5T4TXsKnkscR1ioL5GyqSPtUUhGnicfKsmmQjnm052P5OKEjGtENivQ3Qk1/o7nVm2zI9nhUnSv4+0NPz5gFLGSRmvOfV9mzhP0j5Qlz8CEf7JRGMNuiR65HSNOxMYycZz/bjy9YInIm6NH03H1kE671Un1c9FMtMHr6tv+iP3je3p+LlfyarI+cTHeNaNDf6m+1D8jJ5Cln3oQmst7nIWekUrQwr51dSToMHHM7sR/fsg/20TGVE+tpvYdCfmkUxZKiUikBVqWdgAtZiG45ECgZpjyQe0hp0CufGgv5nVG7RRRVYapnsLFBMskjGxudosKV0QGLFMu+IzJJmfF8wn3HU+7F0as4ALkB6sl4SLtbPbI9GMBfL170yGDdGEYpcCUjyN/IbsASUGmjnqTJmMnq/AIecnw42NqyphZS6U12oxkUjWggmFUo6VhZhg89F6t8KibDmCa+mxWN1a7Uvx+eZNWr9vJkwgUpGpFpEl8A8wShEYlBPi44uyTxiMgJIxNGAzmBEqjGklGchDTyWF4KZk0ttSCZHjOf8IhYCkv0gvlkOFNt3vPIjy8FOQB6wONoTI5nQrIQ6x8DZw+pd66Y3WE+l5W17oy48GjwG6MJ1pXQRk6gXHEcJWs6OYnjQPJp8VAJVpQGgfoV8Oi8ZDj8vGBv4ktzabRqOcx1g2S3mbxSsHOhzxeo0Mdxwv3DWNgkcUrbBhEc4LYhVZ2P+fSy3yhcWzXaquvtb4rf8dRWbvXQi/2aqgY0Gqd0rC1NQHlkWRZVRUziy195xN6k4RBMilO4sc4+j/g+neblTjkGHZWwbWJv34t0+MOzN7Fk35G9EZnFKZnQC0bCFBc1YOQyTs7FlILM9ZRUYg0K0gYaSwRjKE+4ECiGKG0XXKQUbFimzQAr4sseAUJUMDLiicBWAfOkql0Qh19Ulr2nQgs21oHBjvg4TRTFXBFsiVeiyRKCoizydhnzCR2CjvWffb+JMzUlJdQLAfYiOQcNieqyorHIu9pOXIM/armc+8eyC/G2W4i/fkwy/C/NNu4gM69Lt+4Lo7JSGp7+WQXwV/WhjzgL/FdKZeyOfTaioNOiumxetlmbDw0mTWnApGQbXkCF4F7HqHVlrZuXChmHdUIIE35KHCUoMmzMIt8lBppXxc7iLr/gn2oiogbWOMiQTqcgHXpDcooV7scJbs5mlQUU79uK4r2Yo3dfNWwe7XrncwGqNfsV3bUqjCm5aa1v1mQ/W08bFqsaUOwpNwrLh7HEZayrbU7cxnu4CjRIDW/Lfm7Ki5vh4BKc5LYwjlLTYnQA3qQeO3BwAgWOBp6jW5BTCdvZGwAgVufWmJWWYOPO5n96cRrJs6ebHfescL5uMFhIpzWsXHEEyFmV0yJOFJOjODI4c1UTBY137clZnSirkTtoNZWjAWy6zD/hIQNwzyOxX4e82EtejkOiqYyblVv1d5SBz58R9dV7/UfKkplC/TlIPU1Oo/8iYCJBcgj3yQ6RMY4s6XJ/XRdeThjs41xt9t2neQ9iXUENtJWq4LQTci+JRTyS/clsCDroxeE0lWwzpN4ENhRx2ukRs1ZefsETCXikrLZuDSrvECUQhucBSOmqXnd2FiOHvWos8k4XkX1dBkXYE3LGRbBtFruJR37MMHydKlQ4AHiTFFMRaQg7Gf+ESAkkubuOwN+cWPOyNvqON9uoVLv5m1V9HEp0ciug2ZlPgGhps6onbKRPlXYr6pUOC7fLYRmeHlvlbsuU/e9DqYtcKo+oU4xICcvLhFGNHsqaCY2E8tiKARhk8nOE/ARkhRrICjXMQw3m7xbU8NUKNdwSNSjTucILK7zQjhdicXyeqnEJmcCCdadJDC6n5Ez0Vdl6sevHAu8wGupqcszvA7MlHvC9Ax+1r5vYPRYebebQ7hA+GnW5YOFUzrpZi54eWI9YFJzAoEJvhQ108S2xQYEGLBZnhxD1Y4MvGwSM+EfmF3cA44SxqCoIK5xwtzhhsOjxwpxzvRVSKOk3IAXYLN/pES2AFpYIIzjPNL82bNOjxhBU3RmGYBbHStQqmELDBpcjXm24qR+cdqxdOCe35zds6Oo0+qMs/i0blIggs9RgYX2u7jIasIEQMA4OdqdfbVHSEnjj8ZpKhgxXhMD+M+RuAymrQUkHT8tAdTmIrH8dcq52FkQzOFaBai3gpDrfFTrRxbdEJ/pCHRl8LKlMxV8NkKzQxh2jjQWPJbb/vkIbK7SxQhufBW0IBtrP5UyR4LDDtrTP635B+CJj5XHJBXW5U3Jlh2zhEdAr+MVB+Yz7Gpt7O2SA9X5MkjhpqbSNld7TJIKlaqn2HKvtRcUtQWvHX2Fl0KFhLBa/+clnvMJOuvjusFPO2DtGT587Amjw3L17D+bcKixbDNAvZeTk7gXlAR3ywFwusor8uRZalhOwsZMYscW1gTIN+LjcdCu2wmNB4EZBFp+q+3WlbxTTSEyZJx24uQUpWyXGHBv5QIciDlJZM3lCsmnd3pDahAxOOw9DVQ0NL3XcbKX0qlq9rQPAmG3kv9mqErd+f3jiKml0KYzaVd5hCDarC1duWzrDmXrDo+YGlZam8ytAAAyHTuSQUdkuCSWIWGxB9CC09PZNeWzhXZ2MIax/iDjaUIGGtVpXi7O8d78czXfXvwQvn1SfLrB3Dqqb57wovsGLhr1zThwfsukXxscTtXcJ00PtjOJY1hZaX1AfxZfuDbPJB9QuZ1JHRQAdmz1K3H5b991RAqK2F/msyhNsCfuwr7qsvBmCruPLWbvdwPcmHF556fjn74W5RLltyefv6ws5pL/G413A7DNwGRw7RuEf/pJbLdNjOTta+EgUTZ+i8RJogOsCYzsL6ceu8ndZhNeLzO+RZwrwG3Qt1wcr42HVm/gSSETxJfgHGzZpq/7vpx1ssjuOTzsfoAW4nR6VXeU2mbS+J9thLy/VrqVZvEkGYr1H1sCTAXjmizX4UWk+aW8equYhj2DTdTX325tPVPMJsEQ1bqvqq6o+nUFN9V86jtey1QAz+Ae+pvBKRwYkvZxBwJ2djOja//3v//w3WdMjBMatVzFCcTDgMKWdp+/ztx9sQ9e4JTz4ociyeIrZq2Z1u+dwIUFFSamjbg/yZf3oyuH6KQBSqDL4ph7jF0y9l1U4qteM/tPnlSu3YeU2rNyG+pjuBOSqd0rvAeCaAKSFVQ0ge7H1WFIofc9uiXodFnEZRqVJgDafc/myG9IbL15hNFo6qQ7aTVA1cXkPlSqnnZ8oD5h/2mmpZSq7SIF/GwF6Hxsx7FpjF0fKaWUwf9BSRx2GAeU3sczP3oKaAuR/arw0ZnKceh5j/g0n02Qma3PZWmAu8+fhfN4wu0Ija/eIzeQ+3FgI78CC5NvYkOJNuWtSxZTUWmwMqXc+TsBL9ZfPba/eVze67YVgfJFue807r3HhYd3kL8xbevCgd6tpbRcFSsbdaq3Y9nIRNfXqNJbfNXwUl4jFiGrxVyunMdtCIsmjNE7FxpH/W/Bzsqy+44gHYOWzJCmOSK6FnUufeTykKuxp2ypo9jpDqkO9K9lulGmyny3in4Jh8FgkaQ39PZyHuqAdTyOV5icfsTs1zwN6mMaB6z3epEy477ez1IrrykawGEvvgSnUuHI/Sz6zE2fe/5Oj2mA+E5QOPNchi2mtVa65z46eB9WIkdrbJQ78jEe0iKUOMj3s2Lc4Gb6el1bmcePrz38tll9WLOe1WMCkDiw8Q1S9o/4bj0JMKdbN4wHPqO9319Sztd7GoKfurdbX/x3hKrYHqKtbw3+u0/ZmV3K6mnXtRn4w5qCijezi74shVm/1iliGMzB9Z3hBtWPE7Q15dEZl9Yrvhbpqy7tb75lD7hV3U5YjQPODi7IbfGW03vsPWz0tUlqka7eQMpY0OCvJqSs1PWQ+6jq62UFq1TvJhlFq4pEKAjuLR2fD1DsHQdtRJwjdbs7DDWPymy/C9X8buOZa7jo7zkE/A9C02dCj7Qc5B96r9/OFua7L4s098EVfmL/N0Xm+5RtGrwj+NHEEuGkqrxyGJpPnW+raeOXJ5Y9X1382H+7DvboBDly5SMvjIr3m4vwnWMjj+k7wsO7RvxIcBnGM48v1jO55bfeyPB73KO2X3JeTNhZ/O/jcjmItuejfa9S1HzgvRe4X5AeauboX8wM/t5sGsoysF/tMJlDzDhwmOo67219NrDqoUjr1r3pHDsaGr2Ghjczfhivr6SqF7Tws9tbKi3O5FlqvzdFEsDMMhOie0LFY7/9+2rkI+/RT2A/FZohys+efdj7U3B/LXGMQ5sW4+44Gzf5Nr+h/IZ8ir9yze9JtZTwF9cKu7GFQUb2MvaHrUScCYO8nhV8rSLUm3yv/5IEDEU+0MKAkCJKkEV7PkTiVmAxbr+3KDckeX8cNWX6AvwAW+xJD+E7wpGYZYvhuEQem1+W6gNhOneXT5HxjiNWd4DiXRNVomcHxm5i8neIhrfpSwL1A5Btx23H7/HPyW3C01Mw8BKCD9v+IDQEJr5h5J8zU4im+dG4+qT69n+vBJrdve054XZxw3FHzr+ZUTgEfIht8QwaV9pC6kxwtFIlsKvjQrrUPVl2/+H6fIXjLGve2ubknySUPAvJHDB7kJZcT46tGCpnqjx+hdlMhmBC1DCvdbtlic1PRASScpW4lee7WnvqcjEcjgnu+7gmcQRoK8KJUmWD4SRrZXzgET6d0+edimWPVNOYE7eG3bbKUrkasnoCFA1x5mMQjHrB+LBD5wz8nRfeX+nsnmBTEykCbN8nKX5mfzukrlh4zialJhf6FeZQaSARgdj4uRMBikZoRj/5Jumu7IDXoh3gvZwfHaz3z92FAJXop8HQvhKm+1igffu7TCLi4Vk27a6yJKyFOG8fWbVpCheDtzE3GO8XOVBBkP4ONOnjP9u05uPQ6djIGgcPJ97IeeoVYHxZdGb1mg0ojYKySaVOk1VMtsTTxQE4T/IrcdQW6WWabciIvIrLc36lpR7FMO22LlCUnnrccYi6bF2Nw1o8yD+egDzsBG8kYz16AwyMOnnkw64G1OEcAQAmWEl2smsiYjBhIOEk1NiA+k5QHgoySOKyaJ22V2myWtRxKPxYwIpt1iugLV5NXu5ezsbGlrzXG67M240WMhtqJwp85gNIajxvaWo+sqf2veJEWD+BQqixbv+dDL3qIu8UQj/IhkmcNCbEKATNSXtmikhiHbXryLeIBWvYUF76PVn+HPE3w4NNIp1VsL5GxSUHdv1UFAB+qT5hxoSfs9yvnifhTObaYiiqLoRio9FI6W9bvpxU/Sb+FnVflAiMou9UZrSMFFXaRE7H9gxqRWDbQQdWvPq0sspIM7AxkqNpdhqBv2Z+5x73P9zhVtUahX8R4HOJSvMIuX85eqdSOI+7pHcvLsnv9sEXipN7dIiQE81JM+3QLEtqCHMVBkE5vQWbEQD8Thh+5u9V8kgvu3ZaKz8CCqhyttyCC+QfFrfkKFNbXl//o+FG8qJB/Ry/TZpJpdz39lXEh+9jynT3/tsE7nZezZcnynR2Wn4f9y+Q4a/wO+SqMqWmUq1uO8s/qHZNHHUBVhAysWJKzZPdivM/Ct2JZc7o9undfzHAd53dbBzXqGj3My5b6uEOalu3V8ZvFKJGWACRQoziZNcUeFdkg9l9WYo5C1e4YPPz9lzqzdZxCvXlxR0arMvgoI1nGN72cAQrnEeg3kH5HA6sdvtVQDVoihUHIIpZctFQIUzH91ndKyjik0tKs4o9sMn+V+COtIeSt5AEX+pbu0ccdrRyKouZjTYu2cidW7kR9SCt3ojakxdyJV4dvTQu/ciuqT2/iVphfVPpYdTNa3YoiddXKrXiUbsVhEkMVgd+OcXsWStk+KWWrv9dQAvuaZlbeSJgH54kDz1dUfYXrbTJ/FVxfiOgdQfsnWWc4HASEhTWBBzq9WCd7LaojYMcKaandz7/Rj+UsyO6KknPdFLSi7LojWTgN1DeWi3XrwMilIaqmkUyTRF+bWIZBsADwLnN+Bi7LAlkxdnoBcvlsNHvuPJ8trZ22MZMJ8wCKR16Q+mw3COrC0gkw+hCZ9trpFYWgh7w2VZ0ut7FRuedY3+Yr7OV13LJSGgbW07F6Tc7cbzrinE/fJsHxLPIcE3VcJFa3Dffim9xt1Pyb6f1CWm/1X1ygq43burW9hhBUVrOQgeMmgnPEoLHdHEm48Y7buus0O1gOu9g0dGJdpjsX485EM/s84pZDWvWMH7ug3oVsFtChK9avIZol4nhUYlkMu1kmbcxsiLFaqIaIjpX8PrD8zhHP8p2x5RXPO8hQe4z5mFiC4WN42wGorJ8hGqPEcpzMFug4qci+g2MdxPre+E9vbw9+6MjALEzWjpJtClvuLRaQXwkUVSjNjvXvEWWk8HM5la8ILG0s1z1agRdzrcCTfDBXGpXzsFTyzihLrRTFlxtf5xzpgDemn3WsZlPuneuzivLZJ/zGcOE7lEmZTBitpYso4dokefjawRRTD2BY6vFMgK+gKWSWI6t0cAwksDW2fU2FHmHnovRFVLLCziVj56oTNZQnV/8PUEsDBBQAAAAIANNdgVdPdC8TWxIAAG+bAABEAAAAQXp1cmUgTW9uaXRvciBTdGFydCBQYWNrIF8gTGludXggT3BlcmF0aW5nIFN5c3RlbS0xNjkyMDkyMDM1ODEyLmpzb27tXetyG7eS/u+nwM5615SXulC2c5xslCrZTnJcZVkqSfapbORVgTMgiWguPAOMZNqr8xBbtb/3FfcRthuYCzCDGVKyJFMO88MRB41bo9H9NboH8/kBId7pKY+nmRTeD+R3+E3IZ/UvlMQ0YvDUe3V0uvsf7w5/Pt3bf/v6eP/Q6xcUIR2yEEl2P2UpI3tJzGWSVuUBE37Kp5InMVJVBXI2VU0HVFKRZKnPqrJpmI15/DrA8nFKRzSm6xTbX490++vttd7mQ7bHo2gu4d8PfT1jFrKIxWrOny/zZyn7e8ZT5uBDMdgpjWG2ZY9cj5BmY2MYBc9+tR+fs1QUTNCj6bv7yCfc6KX+uOynXmD09P3Gs43Bk+7+XKzkV2R97GS6a0SDja2Nre4BOZk85cyf0FQ2+zzgjNSKFua1sytJh6Fjbsf24y/sg310TOXYetrsoZRfGseJpLiplACrUi/kQpaiWw0ESoYZD+VrbGnQr54aC/mDQd0hiqow0zNYXye55JH1da8kuDQ6YLFi2Q9Ephkznk944HjK/SR+mYQgN9B6Oh7S3lafbA8G8M+zZ30yWDOGUQlcxQjyr2Q3ZClsaYNO0nTMZH1+IY84PhxsbVlTi6j0J7vxDIpGNBTMKpR0rDTDh76LVQEVk2FC08DNilayS/X/Dw9y8rq+PJ5wQcpKZJom58A8QWhMEpCPc84uSDIicsLIhNFQTqAEyFg6StKIxj4rSkGtqaUWJN/HLCA8JtaGJXrBAjKcqTpveJx9JPvQGnA4HpOjmZAsQuoj4OsB9c8Uqz0WcFlbaW/EhU/D3xhNkVZCHTmBcsVvlKvp5DhJQsmn5UMlVnEWhupXyOOzit3w85y9TS7MhdEby6GsW+S6S+FVYl2IfLE85W4cpzw4SITdJE5p22gEB7htyJT3sZhe/htFa6vRtup6+3n5O5naW1s99JOgsVFDGo8zOtZ6JqQ8tvSKIhGT5AIWkr3NoiEoFKdoI80ej/kenRblTimGHSrBaGJvP4ps+NPjt4lkP5DXIzJLMjKh54xEGS5qyMhFkp6JKQWJ6yuZRAoKsgb7lQjGUJ5wIVAIUdbOucgoaLB8LwOoSC76BBqigpERTwXWCpkvFXXZOPyisuo9E1qskQYGO+LjLFUtFtvAlnclmiwlKMqiqJczn9Ah7LCNxz9u4kxNSYn0QoC2SM+C5CJuyopGIu8bdrgBftRyOa3HsgvxtluIv7tPMvzPbRpuP1etS7fqCyOyShYefq6D98vm0EechcFLtWHsjgM2orCjRX3R/NxQmw8NJk1pyKRk635IheC+Z1BdWqvmZ0ImUbMhhAi/pI4SFBg2ZnHgEgLNq9KuuMvP+aeGgKiBtQ4yotMpSIc2R06hQlucomE2SRbYdt/Xtt2zObvuaYvp6N51ARewsWZv0FWrQ5iKm9b65lX28vW0IbGigGJfuVBYPkwkLmNz0xaN21gPV4GGmeFp2c9NeXEzHNyB40ITJnFm6gsPoE3ms30HJ1DgaOg7ugU5lWDM3gL8sDq3xqx2CVb2Nv/TT7JYnj7c9Nyzwvm6gWApndawio0jQM7qnBZJqpgcJ7HBmcuGKGisa0/O6kRpjcI5a2w5GoLJZcExjxgAex6LvSbcxV6KchwSzWTSvrlVf4c58PwVMV+z179nLJ0pxF8A1JP0JP4vAioSJIfwgOwQmeDI0h4P1nThxYSBFefK1PceFj2INQU0UFeqghMv4n6aiGQkNyazIexBP4mmmWSbEfUnYE7EidcnJlVRfs5TCWikIluzBlV0iBIIw/MBovRUrzs7izWHvWok8l4XkT1dBkXYE3LG1WDXLHZTn/yc4/dmq0CwD+AmLacisggsGf+EOAkkubeGoN+cWPuytvqN1zNUqt58Y9UchxKdQgtodhYTIFraLPKUjfSJ0m5te2XD0uVyaIaHR1a5WzPlf32o9iKXyh/yyhEpYXmRMqrRQ0WZ0lgob60cgNFMcYZQnH6sUANZoYZ5qMH83YEannajhhUwUI9RO64gwQoSdEOCRBydZWpcQqawYL1pmoBXKTkTG6psrTTsicAQRQutbo4FG8Bsied378EN3dBV7B5LpzX3WXcIH416XLBoKme9vEZfD6xPrBactr/W3sr86+IvNP+lwbdYnJ8zNE8GVnZ+ZefzKS5g5weLHg/MOZVbnQ9U7bfAALCE7/WIFoACSwQAnGeS3xmK514DBKrifRHovLEStRpg0JjA5UjXK27qByeeZWKL5l4HLdZanSV/lOX/qwqVuc/VMKjPgKtIRIvhFwLGwUHvbNRrVG0JjFe8opIhw1VDoNwZcrelKatC1Q6edsHW5SCywVWac9Wz8JfBsRoO60Ae9fmuoIcu/kLooYPhyOAjSWUmVmhjhTa+CG0seKyw/ZcV2rhLtLGUBw8r3PG1cYdgoAe4nKkmONjajvoF7TeENHJWHlVcUGGaiis7ZAtPel7CLw7b0Ii82NzbIQOk+zlNk7SDaBuJ/kbTGJaqg+wJkr2Oy/P+zo6fIjHsoWEiFo/hFDNeoShdfHMoqmDsDeOor53JM3jituODOfGBZcvl+WuV/7h7TnlIhzw0l4uscniuhJvlBHTsJEGUcWXITEM+roxuTVf4LAzdeMjiU91e1/pGMY3FlPnSgaA7MLNVYsyx3X9gsCixpOOG0hOSTZsahzSmZPAaVp+xuNaQotBQU2fA1kovrd8fHrhKWj0Ag7o+Qcx2Zk0JKBSAN5yplykaXkulDryXOjySdi9UZeMX45buXgvXhikuHXxrNmPI0h8iiddVRl+D6nJxZvdvl5eIcf4UfHxQf7qAWbPOutGufTfPrD1rMWtzkuWQTX9lfDxRZkWYbqQ3ShLZWGQdIj5MLty2rO1YWPuFaROwAKprd/vQMnaaxFEKYvY6DlidJ1gTTGSguqy9eoFe3YtZt7bAFxMcrnPlnRcvXhUYzltwyeeb3IV8xTfJeBfg9AzQvEOZl64bsCCVQ0al6UycHi58bvkGHBPVxgtoA7wKGNtpRD/2lCvKYgzwsaBPHissbrRreSVIjCdKb5MLaCJOLgC6r9tNW/S/nyjlsDtOTrwPUAM8Qp/KnvJozLZ+JNtRvyjVXp9ZvEkGYq1PHoGTAcgpEI/gR636pLt6pKpHPAad76oedFefqOoTYImq3EUaKNKAzoBS/UnHyaN8NUAN/oFvAhTGp18wCLizkzf66P/+93/+mzzSIwTGrdWNd+mzO1Sp9/BvxQsGtqJrNQd3fl6xLE5c/i5XU+85vDvYoqTao27n7kXzVMnhleFWIeVWBrfRZ/ycqRefSh/yiil2+lBxhej/BIieDkUSguL4ani+Tt7VAeCEruafb9UbX15nQb20eQsA1wQgHaxyIhPHKO4TlL5ll0S9b4q4DPPCJECbr7l8eRjz2otXKo2OTuqDdjeoqri8hxrJifcL5SELTrwOKnOziwz4tx6i97GegNVqnDnY08ph/qCDRp1TQctvE1kci4WNDVD81+ClMZOjzPcZC645mTY12ZjL1gJzmT8P5/OW2ZU7shHsa2/uw7WF8AY0SGHGhhTD2a5JlVNSa7E+pP7ZOAUvNVg+t9383em2lw19k257wztvcOFu3eRvzFu687Rzq2rDikJLRtizUWx7uYia+s02lt81vBfxvXJEjSSpldOYm5BY8jhLMrF+GPwW/pouq+844iFo+fweEke61cLOZcB8HlGVm7RtFbR7nRHV+di162SUarKf3fuIkzWbLFb36BQjdt99c4cepnHgeouRlAkPgm6WWilX+QgWY+ktMIUa0fDT9Cs7cWZonhw2BvOVoHTouw5ZTG2tLnP76uj5ufFbaRwz26MFPuMJLUKp/XwbenYQJ4fX8y5uud/w+utHxVyB8uWJioVM6pS/UwTVO+rPZBThpV29IlPvlAZB75F69qi/PuirsNXa2r8jWsX6gHR1bfjjKnWvF5HTZFbUjfxkzEHlAdnFP5ZDrAf1JsUQTkHznWJ8asfIqBvy+JTKeoTvmYq0Fd2t9c0h98vQlOUH0OLcouoG39ls9v7TVl+LlBbpRhBSJpKGp1VzKqKmh8xHPUc3O9haPSTZMkrdeKzSs06T0ekw889A0HbUAUKvV/Bw3Zj85rNo7d8GrrlWRmfHOejHgJk2W3q03SDnwPvNfr4xz3VZnLk7jvNFxRsX3pOtwFB6ZVqmCSPAS1M3t2HSMHmypaLGK0eueHzvHLn7m9Z3DTS4cpSWx1F6xcXZL7CQR02DcLdO0r8QHAZxjOPb9Y9ueW1f5/dp3KK0X/BATrpYvP3k6dLw4w4Sd+fzY3twDY15Ff+5/jLEYO61pm3hp3mX835D/rF5R/hi/vGC7uvzW/JeYW8j58UekylQ3oAfScdJb/vpxKLBLaXvHFYv9cHY8L0xtBnF63sVnSYpbclBiTVqb/oVWsl6z4+mgp1iekjvmI7F2sbvJ955tEE/RRuR2IxQbF4HJ94Ha3BlQ/+EMA89D+h/U8R0ull0WbmPlp3DHNbzce89Ddv9w37Z/kI+WUHct3vSdWUyhW2IXdnDoKIey76m69ZsBMDyLwr/15B+Yx+s/Ls7zuM81sKAkiBImsUY3SRJJvG6br22Kzcuf3yVJM7l94wWALHfYgbkMZ50LUMK5Bek0el1uaonMeIfWVB+3iOg6dn6EMmdXkUhiarSMnsVbxPyboqH3OpbBreCpa/FbceZz6/pb+HhUjPzABAR6v9DNgTEvGLmjTBTi6f41rn5oP70RrzDxgV7be7h9pzsxCTlaFGLr/rUjk/v4sb6lrthujMSjwu0UF7WU8OHNtUeaHX9Sv/iGYxX9gnvSdagkRj4j4bbublZEISJr79Pg87p5zf5r0s7f/CPBD+G50o/LBwxTaGf4d/kjMfBTshGMiniez38Z4qahQrBhOi+t0aNeoF7cDebLSKmrd+i675rt7WyPf2KwM6bLEOJB9jMS3SMX8xeqlu+Rlwz0loLEScSc516VYMFG9HlxsW64HJiXi0DPrQa425Z47AYI3nsWKOdYoWMG3mQbI3AEj/E9dgoFnOHPEzx1GLDXLvSR8ef+FIj4sXiGn+hX/4MdGi6fucPUB8xP1N3x+RKP39ZNIv4KH/Jspr5hsiJ1/qkV7GmYq++Odm6xlh/7+AfePiB380BHiCJq9GfttbWymGpS2sWGlOClDc6INWiGs3yu+D3Il9WfzEpX0ySo4zm9ShGPOC+3Yfz5C8tNn7exQFLdh/OQfURwBu4A+d5c42X7wqc1o/Nrt6kbRvl6qio+m+V53yvw/dlgGbFkoIlu+fjPRa9E8t6r9Cy5183TgjM2KgTPHzfAh7mXaZ3v+PH13x9cbkCwqQj2gu7KElnbYHe8oXkvRe1AG+k6h2BR7f3Qt97mmRANy/Ia9SqIr15k1Uw+cUMMDiPYXtD0+9paNXDzNp64JeU+iCP+rraUmHgcvotec2kHsytNM0qiGs382cJ4hanFCgNeruQd5IXn3S+/4HclXNRUt7Xa3pWrsXKtWgOaeVaNIa0mGvx8uCdqeFXLkb96XVcDPMzHB/rLkeni1F+n2PlYtxHF+MgTYBE4FcG3F6G2muf1F5rJpRWIL+xMWsZnteB9rWdvoL4djN/RohfiusNofwHecc4NMSGpWKBB/rmGy9PTfcEGK+IVhv9yXP9WM7CPIKUnumqsEOqrj3JommoPsBZrqEHI5eG2Jr6MktTHUyxlIRgIUBf5vyMUH5BWU3v6cUoZLVVA7qvoOuo7VSTuXyY51I89sMsYLth2BQcL8TMDmTaK6eDFMGe5I2p6pscWytV5sf6tlOpO6/ioVXSMLCejtWrCqbp8cQZn75Lw6NZ7Dsm6ggv1i2Ie/FN7rZqgevpgIU0gNU/G/GYFy6oHem9ghDUVrOUgaO2BueIQWu9OZJwbevbaYHafS2HjmwbOrEC7M7FuDHRzD+qteWQVj3j+y6oNyGbJYzoibUriGaFPu6VWJbDbpdJGz4bYqwWqiXLYyW/X0t+q8z7xYXXWWfJhPcGrlY8wptEWHpA/TOMkQBm28jxjlFiuVhmDeOFtzcf94/yJLA8i9FOYnSnIdaTFVtSHcu0xCLpUgE2OyuzT9R640cdanddL22q1y0qhGdzFcKDYjCXGqDzqNrv3ii/ASROLta/KzjigZOmn3lWtSn3z/QJRvXsE36ksnQjqrtDTEStRYkoSdokOrttf4ovgmL2/NFMgNOg6+cqRJHsH0F1rIn1XlGhR+edly7J4Il6cMHYmepADePB5f8DUEsDBBQAAAAIANNdgVfeIxOClQ4AAP6XAAAzAAAAQXp1cmUgTW9uaXRvciBTdGFydGVyIFBhY2sgXyBJSVMtMTY5MjM0MTcyNzIxNi5qc29u7Z3rbtw2FoD/+ykIbbCxi7HjcZqkDZoFHKfbGogdw+M22NZGwJE4M6x1mZKUnUnWL7HA/t5X3EfYQ0qUKIqaixOvY4f5kUTi4f3wnI8XDT+uIRS8e0fTaS548Bz9Ds8IfVR/Q0iKEwJvg1eDd7u//XL847uDN4f7J2+Og56WiPGQxFJk90POCDrIUioyVodHhIeMTgXNUilVB4jZVCUdYYF5lrOQ1GHTOB/TdD+S4WOGRzjFm1imv5kU6W92xzosi9wsj5K5gr/PekWNSUwSkqo6f7wq3zHyZ04ZcbSDLmxZmDpPGjlf63b7yQ64IIyXTfH91pOt/uOyZD13fq5q0hWbJXU2iKtE/a3tre35BZriFLrbKsuUknCCmWjneUQJsoKM/K6RFRfYkc2g8fbTchB4GDta76T5+hPzIO8dtThpvP3EHGhCOGEUlLmdD4QhO7CdXTVYcJpm0MAQqkaLCg1iykU1TupSQcgwp7HYlyn1e/VbQzOfG9JzxpYKzIvqbG6iciihzc2gErgyMiCp6qHnSLCcGO8nNHK8pWGW7mUxDARInY2HeH27h3b6ffjryZMe6m8YxahHUN0Q6K9oNyZMcFOuHrV8Mswwi3RJr9S/Z2tliW2jeDKhHFWR0JRlF1BojnCKMuiXC0ouUTZCYkLQhOBYTCAExAgbZSzBaUh0KNgu1cQclQaBRIimqDHyUdFQERrOVJz9/YEOoukYwVBigjB0hMNzVbeARFRYTRuMKA9x/A+CmZKH+GIC4dsqEDpyOjnJsljQafVS9WOax7F6iml6rszsWfl4QQ6zS3gxwjEvslBq7TDFHYo0z2TWeqR1TPdLpf5jRqOjjDeTlFXaMRKRBdwxlfq9rl75PJPPrbRV1v0n1XM2bY4l9TLMotbIiHE6zvG4GOUxpmnDbigRPskuX9OUHObJEEaw2YINmQOa0gM81eHOEQRDQoBLlLn9wPPh3745zAR5jvZHaJblaIIvCEpy2akxQZcZO+dTDKrWU8ooJTAoGQwQMC1EapLsCKl9UskuKM8xmIxy8AAyZJc9BAlhTtCIMi5jxSQUSrpKHJ6wqHPPeaHPUgYKO6LjnKkUtf43Fd1UZa7jlY2P8BCG1tY3PzySNTU1JSk6IkgwO4+yy7StKwVn/Nry5C20Ud3ltN1fuhLvdCjxXdLhvyjT9qY0oF9cFy8NcHXHP/hoc/hVu+gjSuJoT42OZsYRGWEYvtzuobB0g+ZLo5HEBLzKJIsjHhgCV43eCXMusqSdBgz5sWo+nIus0ekyEonjNw41stpJRW0EXlkJ0ZRPwXS09MIuZYKnUzBMtd+p86rr2NkOeMizOBfErgYXZFq7qfqPXSGjpaHvCUmthJTEBY5zUjpKK/TKFp+XATj+ecl/t20n3ng+W3OFmMNMYgmTjGJV3G47LMIJaStXhanDmZqu2UU1zEuwlyUwNyVsvg4AMwEPCdoqUbtURvaF3m5d0gjwZU577Tx9do0G02+XMNDfWwb62QL7/K3bPu8ssM8w4n4mdDxR9pEnpokZZZlo9RQoVJ6K4+zSbZSVqeGNab16D9qXhyqxZk8EPE/Mbjxrmfi5tl0K/ExwpFK2eJ5nTLycqZF9DWOO2ZiIpuY0mkHZ6NfZeDfF8UzQ0GEm/swJk/kHUEImhgSLU3aa/hNdgv4T9O64JPN9BTDrD/Qz3yjEoGXAG9EPBL3GXKg0XkIa6AVQ1fhdgt+vy1nbTyQlQDwk6qFvNiTAG+kW6YA7IoBjUvjvLEsAqiGJNLtc30CbzaQb8r+fqlnh7jg7Dc4gBhcsxGI9BDxbN9P6Ae0kPR0qMvDmjeBHqM83eughwBw44og/hAcr+mR+9ERFT2gKQ94VPZoffaKiT6BJVOR5opESjfAMJNV/8Th7WPYGWJM/JIxq29PTDQSt86JM9OF///Pvf6GHRQmh4TZsx1BNxhwWKXjwVjNu0G1Jei0d1Ks3Dk8LRE0ipSQMKIsftN0cKpYFVLjLszbz65ywX49hVLzFHNMuhxpYJ2WGBeDDSET1ULRMz6hYNtw1VgnK/53VA54KNZ+tBysaSQJICecOxlOz33sNeVMcEyHIZhhjzmm4OunJVRY5uFyuPiZjsDEuD1K0VbVS4A6/oB8caNd0wXNAbzG/fEY//Ww5P91/PN9RR5TDXGn2Wq6t2+O4bs5GB5dRDjS1N5YrlQQEh2rNW4FXJmQ/tudhOvGmf9Us1LZlJSOZXt3Z4lNK9CCOMrDupuYXvOCeCwQhjkNHtqCo4jAThwDK3UjRBShVXWQtncWtlbJRGD1eOKiX3b4SQWRYmqWkbXxqDViONv6Pll7lp0HiJ7l4NwdvsFr1TMCojZUyVV7OxB1p/tCLF+g0SGjIMp6NxJYd8VHx4jRogAirOekFEhn4Wmjp9Zrut9QE/72o/q0jbPRkSrK0pZ0F+xhRtTzkTgqMPZSDgmHZsmPUaXG5iPQKmEutmsuEwHoT2bodSTUi1OlIfYXBSUElo1WSc8XbMNuaLU2WCubXFTfa9b2TGKBrigqd7eKA5iDNh9XSu8OqPBg0wt1WrRsnii0B2cByRyp3sES1VfZF4UTnJq3njM/IGUbUG1gnGRDIi4rZTayTVBWds0ZiJ+ZO0Cq1WwBEfmTMoUcNkWqxK8LsfDNjOB23W8isShoRay2lJaOWc5/r7DvkWitxVfS3mKXQTquUe0akP1+m3P0lyq0L0FVy5/uO+lRWp0V43cmdrc2TuPFlsv63S/J3Jef5+6vjb+dy4NNVVwM9n1+fz3npqlQScmluTnwte4+IvGzKQd0Kap21bpUX4KOgb/bgicLwOw2qMjdb7wX4BJBTzmqO0I4UKj3DHLHHUmw/VWdKpCWYm/G3UhjG0DDjBMTg4Y2Ayp8G82YdLkTxs43PMdvQDfuZ5xu3fQyh/9jtvxcsn31p5xCO6pNa/hjCDR5D8Bv8N7PBvwKhf7fiRnb/iXuELwB01Q6atYtKGwmrA4g6FDNinikN/si5oKMK1K2TKUHGKIxbrJdC7ODroHJCcPoJjNxtZOSob9TjGgbkc259Szu30q53IfZmKDdb5QJHwaRvyRA8GrugIaCFOl24JxmCsFpkL2cMugkC0hTiys7QoFqTx2o753rP1wjoGRvAZY5GhsBtZbl+tRSw1BS//fulb/861KjtW9UnB963et/6pftWe/O5y7f2K8F74Fw/zzrU3fGxbx/v7e8PpAm85vkyfDFWHvEEn5PUH1q6g15rF+wHzGTVwTOkutE7LXc3+HPpX7NrNaRvYr9V7fCrGcANHk03lXFOw7m2GysNiUNXo5tDHudjxwafvb33mTfzFuFMazOvk2eeLuCZe3bs/a4TiDFy5N5HvT/AwyKoiJAxqHJ9lqYYaR5X7hyuyK/wii6EeXZE/AHrax18wu8p3yNytYlEvxGWuSyTFjPnb61tjlLotf7dDlfgkXlUwcVIQ8x2JUOVMtaRmiBi+HIgZkX/xzRtKemISreGQ7ln1Y4OnRrJiaKug9rRt2Ru4yCYVQRZsX3ZI9Msrua0PAGPYn9MpkTfqq/MWud4gqncAh+AYYSwJ1aY/MqevKJym32Yl1l0EqnMBC/4Tk46kyOZIe/qWjCYqZxNO32f4kocnrsPOUHHZfk0aO2DqrDE7My5ZaypV+tQKyOdWDYaWWndGcq+Mxi9AtKZCLfM7s9Ox/7uAqBzn8CqFoiavWsdzFK/W9IQWP1clrPNbv2LgRU2aVYjt2vv0pxkAsfogIhJFqFjAkXggj/iJGzv1SjRQlILym8fL8br5h6LosQhTe0tnf62/G5Qb9ZY+NiQRZiHHiLvHkR2qpKDJuufPvJIiTxSqlCPlDrMI6VHSkcKdxUp7U3PLqRc8PNbHinvBlLWJzXQLji/ZNoFlOUmWS2vxT1WeqxsbaW61Grg4dLDZdW8Hi51mIdLD5e3B5eNlsjBfMr0X06NQyD/D+ps7U13YeeCo3YLsNPq27nnyG/iA1RPpctR6cuZILxYw5yzvKmkBp4/PX9ay5pKMfxipufNSsDzZh3medPz5tfGm31zp9y1c/6445qB6hdSPG/ee94cyF/p8LjpcXNp3GzqjadNT5tl83ra1GGeNj1tfnW0af8OT39Z3Ky+4fG4ee9x85iEhF6QyCOnR85VkdPUHY+dHjvL5vXYqcM8dnrs/Oqwc+Ei57NW4sUH3wvuOfPYiW4MO/dTLr+k5wcEzFHIr0OgEiyL610VXR4SIS981UhZyxTBxwRHCiIAeAfqWrE2fL5lVFJGwZ0AnB43Hfl9FbhZKhOSWuP31T1yeuT0yOmR0yMnWnqls4s5F9x97pkT3R/mVDzpodND52rQqTRiJepcK9OTOUpnUIEReOAJSXD9m16Pvytea7qRl0cVkgIbziWQHy9JKjAcZfGBYq0+htUKix9Ati0AJzEJQSFdrri6a6poRa1LDRHtECwZpxGSQGXN/WkaxnlEduO4XYAg1gD5ygnbCUAydURL5e/5dcaqTXrjqqfKAq2C+3VX9htvx+oWL5N7A35Op7+weDBLQ0eRHbdw2HbW3ZVm83YOwOsNv6UGXyN/MqIpbd0suETHWze8V/3evDTF0fVWRN3znfEWdP613dZcU95toh2mqqvoXabqJrSx9PzbDgUtaux1EwWVP17nGyuoZu3G75RaVsXu1skmPBpqrDqq4/4jr7+3pb8VPK+gvM44X5jyrnSFnnVlnr6uTd4iR9gRDs/lLXEAXVsl1xghjVv2zBjyPigJ1PKKtf1BedBCXcMnJy3mPXyT2RBms2ExXXiU4HBCUyiKumOtltLhF5SJHMe12EbzNhNFYupWO0n2bJ1GMBdR3Q0vVQ+uMuBv6w60W7UHa7owVwVg06Qe7sGoWAqE+fDl5lPdIjCxLt8FjWhTGp4XPzZcv/sgJ9IV9dc/TGCCs9YkpFTpEQINKsRLgwHPICmFpMArzIuCBBfV7KH4ieTgkpBzlZbKce3qf1BLAwQUAAAACADTXYFXLzISRZwMAAAoegAAKQAAAEF6dXJlIE1vbml0b3IgU3RhcnRlciBQYWNrIF8gRE5TMjAxNi5qc29u7V3rUtw4Fv6fp1B5UxtINYSGkMmkwlaxMMlQFS4VmKQ2gUqpbXW3BtvySDINyfISW7W/9xX3EfZIvsuyG3JZYFB+JLF1dCSd6ydLLX15gJD36RONk1QK7wX6CM8IfdF/Q0mMIwJvve3DT5sffnv7y6fd/b2do/233qCgCPGIhIpk83PKCdplMZWMV+UBET6niaQsVlRVgbxINOsASyxYyn1SlSVhOqHxTqDKJxyPcYyXsOK/FGX8l7pr7eVdbvZH01zC3yeDbMQkJBGJ9Zi/XObvOPkjpZxY5FB0Nu9M1SYNrK8Lub02C84IF7kofl5eXx6u5T0b2NuzDZNeUyyxVSC2Hg2XV5ZX+juU4BjUbfQlocSfYi7bbR5QgoyiWntf0ZSQ2NLMYePtt7Ug8Si0SO+o+fob2yDnllEcNd5+Yws0IoJwCsbcbgfKkFnYbq50FhzHDAQMpdpbdKkXUiFLP6l6BSWjlIZyR3EaDqq3Nct8UaPu8S1dmGbDWVpCuSuhpSWvJLisNUBiraEXSPKU1N5PaWB5S30Wb7EQHAG488kIL6wM0OpwCH+trw/QcLHWjcqDKkGgv6LNkHAp6nSV14rpiGEeFD291P+ePMh7bAbFoykVqKyEEs7OoNMC4Rgx0MsZJTPExkhOCZoSHMoplAAZ4WPGIxz7pCiF2KVFLFAeEEiAaIwano8yQQVodKHrbO8dotWV4bOinMYTBP7EJeHoAPuneoAeCag05OuNqfBx+A+CuaaH+nIK5Su6ELSZTI8YCyVNypdamXEahvoppPGpjrUn+eMZ2WMzeDHGocia0LZticcd1tQXNytjKgytUE7pAxNOgwMmmizVkFZrTFQHV1dqL86L4eXPF+q5xVs3XfLxWNL0J/3SZ0HLO0IcT1I8yTw9xDRuxA5NIqZs9obGZC+NRuDFdQE2aHZpTHdxUpRbvQjcQkJaVK29FOnob4/3mCQv0M4YXbAUTfEZQVGqdBoSNGP8VCQYzG2gDVJRYDA0cBIIL0QZktKDskBlaGdUpBjCRu5AABvYbICAERYEjSkXqlZIfKmpS+bwhGXVeioym1Y00NkxnaRccyx8oGnsdUsWRb1c+AiPwL2WH798okZaN5QoU4QXYX4asFncNpUMa7xrZfMWvNHqssbv227Dq3YbHt4lG/6LDm/7eRC9dSq+MoirFP/wi4nFL9tdH1MSBlvaO5oNB2SMwX2FqSE/T4X1lzUhySlklikLA+HVCC4b2vFTIVnU5gEuP9Hiw6lkDaWrSiQM9y1mZMhJV20UXhqMaCwSCB0tuzB7GeEkgcBUpZ2qrWqMnXLAI8HCVBJzGEKSpMpS1R9zQDVJg+4JiQ1GmuIMhynJ86RRemmS9zUAyb+P/fMVk3nj+eSBraTuZgqacIVTtCyvHoh+NgLRszlx6Kk9Dq3NiUNgWb8SOpnqOCCiuiuNGSQ109xBcGks37KZPfholxKNKax+D1JOfc3so2ETaVQ32ZNWKOuNYYrgV4IDzVkhrq8IT5hPiGyaZWPAOuq8YZPNGIcXkvoWw/8jJVzpwIO+cDkiWB7z4/ifaDYlkGQ/vc3x5o5OyQsPi2exmJGBDCC+0s8EvcFCah5/Bx5oA3DC5FOEzxfUXOQ1iQnkcBIM0ONFBUtrfDM+EGAJAAxF/IqzCFAisIjZbGERLTVZN+g/Huu5zuaEHXsnUENI7mO54APgWKjzeolWo0FRKhnkp0bxEzQUiwP0COAJpJZAPIIHo/q0v3qkq0c0hthhqx70V5/q6lMQia7cRxpo0gBfAKX+L56wR7k2YF7xu4JXWyxKoCN8UAgIpLORM3303//8+1/oUdZDENyiGerKKYYl3HkP3xeozesOJoOWDRbfJCy5AzAiCbSRcMANYrcduFE22dXltlzRbK9zGvp1WVnXm5+Z2/3QjnWUN5hBVvBEVLmiEWTG2cewzdrcN//fSeXwVOoJWuWsaKxyWkyEsKAWPZ37U8OWBIdESrLkh1gI6l8fu6hvB8q5bNgkJBOIMbZckcmqnPray8/oZwtYaWbhHujyQzPyT0ZGfna1jPy0PyOXAmuoMKACpgQXuwXSbHxm0xRQ7Otvtap8xKTSVHvuUDBvfucp8E47WuU4qJ6hrTJNKCncNGAQv+u2neV+O371fBz6lmbBFCXMqfcA3HXDgy6wUY6lhgia3a3MrtGZwiMEGJApX8G4Fm3MYtIOL5WOr4Yn/o+xXLdXQIXX6ntTD4DB+mtdBGFroo2pzGN1QKMCHNrYQMdeRH3OBBvLZbPik+zFsdeAGrxCQhtIMsimIOkFyLgJEFMilvWk9FyW/1YVFgeKk+ptHkkhAgZUf9Kws4JwDv2gEDqWzRoVL6E+fGwDqtJfexUjiM9ESbeDVaNCxUfZKzgnBZMMrsPOVm+xLmt+ZeyogfmCRobmeO9koi9GijKb7cr0TSdNR+UnY0tUeXjYKLdHtW7AkH3KVgJWKympBS2USzwOMCAHGOYBhuFa7UUPYljvRww5NnijlpjNZOHgRCYFByccnOiAE4KAe1N5oVmobwU99QvaPxGAyEV5WElBf/ippLKBVgagmy14ouBex17Z56b0NtBQ0f3COeM9RKuK6D3mMaiqh2xNke3EeulWeXpvw08V8TvCR0wQIIOHfQmDP/b6QFIxYgeOsuLvB44KwX5neHTTK33DNXt6ftafnm/bUt8HyDjoiONYjBVft9j34xb73DLajS+jrRtevj7PydftTv7TPCcHORRwOht0jbHe5VOUYk7qu7e832GSRMclFjfWfz3GKbguLjZBmcU3h4a7w41y/sZwviKOfM9VuQPCx+haK3IZ2f5ILQSpnbIZPN3eOzz29B6eLQUjCK+KGkEVsjO0LST86xN6RoICtho4RC3wnU0WcmbvlGDdQtIdXEiyKl+U2m9nR70912VHlx1ve3asP/dlx+cuO2bvXXacnx0P9zfLDHkI2nPZ8R5lR1P5LjnaVeKS461PjsOrzh3LdSCXHV12nJcdX2EaQvdcUrxHSTHXucuFdk24XHj7c+FVZ4pV0nTJ0CXDuVPF1AdewiXDe5QMc51/z2R40yvHqx0/dB7esV+JHlS/pXfrxje1eRKfU7FFVMQjwQfCmU29BVk9mbbsJCd6UxxNYys8qG8DtP00dYT5pvrpak6zYhQHHM8O5UXm5yHYpFl/TNVPW7Gv9ou0q4NSA5W1izHo3XIGzU1sJjW6oAa2ozSSsLAEGCJiTE7N3irS9zTQR0AMjbJEbT87hPTWBFi6TJ0hQbap2uI2SvMmWsMtfEE1gnn/T4FVADhQDYou1UJijBW0sQYQDaCxfwq43NaTCWdp4rX2IOmyqK7M3j5W8L6woVZDBTM2Hhu87sx04s84X3he4zHzjG9l1hTZdY7CnMNA7PubS7ze1K+x7VkfztMguP6uZztuv+n9wDeB5+sELVi/hf2pOulkl0SMX1wDz6sNhSMam7+AHq5EDurfQajftAML/qsO5HIoEDkUqEsdCizKHAp0KNDC4c6iwNYSaicMnPMbOAcD7wQM3IZEPFIH2e2BDBwYvOdg0GYNDhI6SJiL10HCosxBQgcJ7wskNBHhWtfa2Vedo+QQ4S1EhOhVmIopOsATIp4I4jtEaGnv3iBC0xocInSIMBevQ4RFmUOEDhHeF0TY+kjYCQnnHHbtIOEdg4QODjo4WLeEK0DBB8V1TNCUitAlWoG0OCURrvYgrj3PXheQI8A8v8VH4lrEBzAUJSpV17JXz7VOfsp5FhManpZd2UKs+CKDW6X4zKvHNEkRpW33tRlKKa5yqkdNGvthGpDNMGx3oLqbbtuKgPVFNpZq5aV31lpVAG4cR1iGk+tg8EqVw8bbCTk3wKgnTmnyGw8PL2Lf0mXLfmAzaNpVWRfvla/ouprfXcnrGu2TMY1p66bAKyjeuNyr1Hvz4C+L6o2K5X1yXfXmKP+rc1BvDO+OzZYY1dX1rhj1I6wxT+MrFgPNRuxsE3llIl4Qi9cwzSp/3ymzLLvdbZNNJFgzY62ojjP8nP3elP2WoPgaxmutc8uM91rHwBrHvhZHjmaXzqk759RJpwC6lnNcUytpnBRbr6F+mKKQdOPnZPooWTUZqZ8lO70YwdzTz65zeRLpHYjQFX1OaEVVlJ9RLlMcVmTGtTAaiemTWRWk5wtU3SWj1a0u21EavI7D39Q5njcaDx4UnbnMADaNKnf3xtn3OZjczpaeFRKBWXL+zmtUS6h/ml1RVb37rGbFJeqvziftvPAQPVHX32XkecCAZ6BURIpgG4usI7XrX/V5gN6MkFPNSjf44PJ/UEsDBBQAAAAIANNdgVdRdDtoRA4AAG9wAAA1AAAAQXp1cmUgTW9uaXRvciBTdGFydGVyIFBhY2sgXyBOR0lOWC0xNjkyMzQxNzA3MjAyLmpzb27tXetS5DYW/s9TqJypHUh10/RMJpepsFsMJBOqgKGAZDYJ1JTaVncr2JYjyd30zPISW7W/9xX3EfZIvsuyaRgYYGJ+ALaObkfn8h3d/GEFIefdOxpGsRTOS/Q7PCP0Qf+GlBAHBN46O8fvtn77+eiHd/tvDnZP3hw5vYzCxyPiK5Kt9zEnaJ+FVDJepHtEuJxGkrJQURUJchHpoj0ssWAxd0mRFvnxhIa7nkqfcDzGIe5jVX4/SMrvN+c6SJtcbY+muYTfZ72kx8QnAQl1nz9cpu84+TOmnFj4kDU2bUxRJ/WsrzO+vTYTZoSLlBXfrb9YHz5PW9az12frJr0mW0IrQ2wtGq5vrG+0NyjCIQy30ZaIEneKuazXeUgJMpJK9d2gKolHvqVvJ9XXH1kHubB05aTy9iNroAERhFMQtXo9kIbMxHp1uSjjMGQSK/3SsqxTHZ8KmUtx0SpIGcXUl7uqpGGveFuSm5cl6hbJ14lx0p1+H6WCjvp9Jye4LFVAQj1CL5HkMSm9n1LP8pa6LNxmPogplM4nI7y60UPPhkP49eJFDw3XSs0o5LtgBPob2vIJl6JMV+iUmI4Y5l7W0kv992wlbbFpsk6mVKA8E4o4m0GjBcIhYjAuM0rmiI2RnBI0JdiXU0gBMsLHjAc4dEmWCpZFs1igVF2Jh2iIKnqJEkZ5aLTQeQ5e7x78Ex1LUCHC0SF2z3WXHOJRaXDUGVPhYv9XgrmmhxLlFNI3dCKMXzQ9YcyXNMpf6uELY9/XTz4Nz7XtO0sfZ+SAzeHFGPsiqUJLs8U+NshPmx0rxCcTrWw4cqmfcOodMlEtUnXpWakQ1cBnG6UXF1n30ueFeq6Vrase5jrgsKiqQvqly7yaQvg4nMR4kii3j2lYMReaREzZfI+G5CAORqC4ZQ5WaPZpSPdxlKVbFQc0QYKfUrV9L+LR3788YJK8RLtjtGAxmuIZQUGsBtUnaM74uYgwSFhPy6CiwCBboBdgUQgNJ0gNhBI6JVszKmIMliLVGfDjbN5DUBAWBI0pFyqXT1ypqfPC4QnLovZYJGKsaKCxYzqJuS4xE/uqfJdFWWT5UuYjPAKNWv/y+4HqaVlSgmQgnADzc4/Nw7qsJM7/l5p7reENPVxWk/3QhfhZgxA/Jhn+IrVob1LL+eAGeWlcVQz9kw8mPL6sN31Mie9ta/2oVuyRMQYFFuYYuan/K78sMUlOwZ1Mme8Jp0RwWRkfNxaSBfUyQOknmn04lqwy7CoT8f03FkEy+KSzVhIvjYJoKCIwHjXJMFsZ4CgC01R4nqKuoo+NfMAjwfxYErMbQpKocFTFj9mhEqdh7AkJjYI0xQz7MUldpZF6aZK3VQAev634bzfMwivPZyu2lLKiKTzCFTjRvFzeFH1rmKIXV1iir+yW6PkVlggk6ydCJ1NtCURQVqUxA7dmijswLg7lEZvbzY9WKVGJKvV74HLs6sJ+N2QiDsoie1YzZq1WTBH8RLCnS1ag6wbmCfMJkVWxrHRYW509NtkKsb+Q1LUI/p8x4WoMHGgLlyOC5Sk/Df+F5lMCbvbdUQoyd7VTXn2SPYu1hAx4APaVvidoDwupy3gFZaBNQAqTdwG+WFUByGsSEvDixOuhL9cUFi2Vm5QDBpYAxFDEP3IWAFCEIkI2X11D/WrRFfrfT3WAszVhp84Z5BCSu1iuugA5VstlfY+eBb0sVTLwUJXkARqKtR56CgAFnIsnnsKDkX3anj3Q2QMagu2wZffas0919imwRGduI/U0qYcXQKn/xRP2NB0NCCb+UABrmwURNIT3MgYBdzbTQp/+77//+Td6mrQQGLdmmro8rrCYO+fJ2wy3Oc3GpFeTwWyawOI7ACUSTwsJB+Qg9uuGGyURrk63+YpqfY2x5828ss53tWeut0Mr1klaYQJaQRNRoYqGkRkn81NbpYA3/e+sUHgqdYzmKI1AucaiI+ISCK90mIgy1bLAGB3iPSgcYwuOdVSIlH0UGs4LCMNjkeH/BPB5mEAjxDr6FQKHOfV9FBLov2RpxIu2pwBKCTrhEBioSEUFMLvhDHAj4wtFx0nEuERMhQxQaR9NpYzEy8EAAhYergfU5UywsVx3WTAgYT8WA935gRK/QIckA1dX0pdpJYMsgM8YBO/6gItD+Q9gvdic0xAY2J8VrqrDcR2O+8Q4rkRt8g5Ld1pDTTop0ejRQs+Gm00twTOn5NjbxQBcFRgrSa1uxsKspAWJ6K5Pqee1D0kJUNV5o34aHdYdMOV45h6DDSN3wZFcTVqYYRZmL9BotZ0ASI7iMIQaW0iWUZ6iG6FHLkpzauZPTZPynMeSRRHxlmwI48pWL9OSYVNLrO8b2pdbxGQQLDT14s5MiV3CiFT0omykW+TBxq7ccoKn96iaXrH1K++VZmt/BH5vwiGq8uodNLt3r+qnaTp7lDKkEpLdBVtiQD9t3FBwk+j4Q+wxF/um9Fxb8OfUk9O2GofDrx8M+7Po7A4Fcgl+fHMDUHGLc0Dl55Y5oHxW+68xB1ROg+jk1cI+8/ZpZ4a2y8swO2rF51pTRAlZUojKrWJitLmJTp2dJIg7dcqEqbVOKELo5kWWXsw1tc4tZepVnRIpNTOZ+ijlK6ZL0sr1Pwlk+7wmR3R9GSdeqzXcG4/7Yx3QRt48+omjqu2JR/nMSl1YnSfHpfSKBSsMVfqfZfop30YgY/Eopplue5olwj6RkvRdHwtB3evPtaiNKmpS1wYkfDIhoWfzTwmv8l0X9vQZfW+ZXKk6+JapFqujuquVoOGSS0F5OXYY4FER+XixpzYPmiayYGdlgNMs+9m8WWXHl6aAZFdv6tOwjkk1jvU17azwqvfOkJZF82rxoJ3jESWZDfBYGJfhdIpG7LNxDsBp11ItCKo8YPIg9v1mwNIEf/K+VMKYcnMLoaw0JtMXAeJl8lcBHJUWspDUJ70LAVgOyzxUJ4r1xrEAjNpEC1MOIMouUuYetJh2NjMOkheZ70wXwHgBvjaRZEKqOefVInZY15slLmT+t8iw1lMlqdamdhbso0f1Vht7UUQIaAcFw7Ju5ijKEmpDzk4a3umCVKynuNtQVCVDUY6SV1BOCiLpXac4W74KEOVLr2jqUGFVQxCzv48SRWQ9RYnM3j+MSDZVKv42QYl8K3CHJlCHJq5EE0tOKnzXoYkOTXRo4o7QhCCg3lQudBFqA0tL/oz2M8IPKSuPCy7o3UgFVzbRRg/GZhueKKjXqZO3ucq9TTRUdD9wzngL0TNF9BZztSbXQvZcke2G+hCB0vTWir9SxL8QPmKCABk8vJHQ+VOnDSNlPe6wUZJ8a9go4+sto6P73n8+bNqAvtHunh/aDvSfilM6h8UpnW4nereD6XHvYKo8P6hNRj+obXzbyvPc4RLqbeyl8F3bxq6yUuK4YU9KUsGOEVfk2l/p9vIjd8cr2z9il/oGBHhAw5Jx/Q/Bwr4+LvSAeZm5/T346/8lGLpivr3BlMDwStTRMCfw1RWg4zPbaHADBHKbWwqOF8JnExVMDAbo2jsJksXd0oJyf7qIZv2NYX1huXAVKhArgpXMUvVQRc+S7IwDo1qoeqViP7MNAg84RLu90xOJ9CWDKNArTnACy+tou1vJLsppwtwXVGwDI0E1vd8IZzZzl5GpplSwjIVoL7sBxpZ4WJ5FtYH8EeZbKghIaTaMZI/j+bFcJGLgQzRo5h9T5Q1B7eXCkj3bG5v1QU82GjT3MRdvNEF1bFeNSMR8nB2tEQG4KXNPoCZ9qzcLVm7w0GmRmr07BivqVKbadZq6GkKhU8npKE6raAypVCX4iu2OykMdqgpF09CC3QzVhLPVoerAKDmFY2uJ2qQc1adwdFpQHszWNhZhWyZDtYqywth4bJTVqFiPPEw0ydsqeCwHlmsosrZPpQlG5npih5H21aN8kaU6/Maikr6E5yPXlKxcu/fVlmuDxluFgiMamvsOhxvBmgEFKxQICxd1yO/xIT8tA+iovLG3AHvFLVod4kMd4tOpHeLL0jrE1yE+G48+GeKrMEqfMIPyX0WlZaJPAgVr12g1LGN+/VFI0Bh6gsPm2b+72Hz0qIHibijUTK3YJ2CsXHGT40pqej65nk5DywMi1YV1p45e5i2Os7zlVJJXC0nEIeHH+vKYOvDUREJdiTObrP6C/TbU2TNOuzTjzw5+Pj74mYpRJhFacAbJnUMdHu3waMreDo9maR0e7fBoQtHh0SY8WpuabAKk33SA9PMHpEcEex0e7fDo9fCokpprw9GV7JMBUKnyEjliAtc8JQEu9pI8/zZ5ncEeD/P03nmJS14HAFkQKbhQ8qAtnx5wY84TC1LRy+SOcWLFOAnke9n08QpNkt9RY/nihzE82ecGyhaYhq4fe2TL9+sNKL5usmNF4frmdUu2/LMp1lyFNa8cVMqNz3XigGIoh5W3E30xVhkQO+KcRj9z/3gRupYmWzaZmybWPpRl9i79GYnlNHAp/avUT8Y0pLVvzSwx8MZdLvm4V44EWEbeyJcNfFO2K4b+xv6q1ZY322iLrTqunJG42lbdhSymLn/DIp5JjzvJRE7ukFfF2jUks/Djj0os82bf4DYVPVD2sz2d+N6X+Gag+XrSm0PtByy91zofapwHzc4iJh9JUd9IUUcgAXOtp7CmlFI5QlrOoQ47KUitoo7k9iYdc+hTpipgKR8znS5GEMi6ScgwCLA7pSE0Rh8hrNyorNNnlMsY+wWZcY25hmL60KZC93yVqrvP9ZCry+GNKx0f6hG/ezUJK1ljLhOATYNC451xMkcIofC8/3XGEIip03dOJVtE3fNkk3vx7r2KoXPUXxxdbPxCDxok13cnGVKrod8AtSJURDtYJI0pfaZsqL8F4cwJOdfl6VpXLv8PUEsBAhQDFAAAAAgA012BVxQq+7K+EwAAbKEAAEYAAAAAAAAAAAAAAKSBAAAAAEF6dXJlIE1vbml0b3IgU3RhcnQgUGFjayAtIFdpbmRvd3MgT3BlcmF0aW5nIFN5c3RlbS0xNjkyMDg2ODUzNTg5Lmpzb25QSwECFAMUAAAACADTXYFXT3QvE1sSAABvmwAARAAAAAAAAAAAAAAApIEiFAAAQXp1cmUgTW9uaXRvciBTdGFydCBQYWNrIF8gTGludXggT3BlcmF0aW5nIFN5c3RlbS0xNjkyMDkyMDM1ODEyLmpzb25QSwECFAMUAAAACADTXYFX3iMTgpUOAAD+lwAAMwAAAAAAAAAAAAAApIHfJgAAQXp1cmUgTW9uaXRvciBTdGFydGVyIFBhY2sgXyBJSVMtMTY5MjM0MTcyNzIxNi5qc29uUEsBAhQDFAAAAAgA012BVy8yEkWcDAAAKHoAACkAAAAAAAAAAAAAAKSBxTUAAEF6dXJlIE1vbml0b3IgU3RhcnRlciBQYWNrIF8gRE5TMjAxNi5qc29uUEsBAhQDFAAAAAgA012BV1F0O2hEDgAAb3AAADUAAAAAAAAAAAAAAKSBqEIAAEF6dXJlIE1vbml0b3IgU3RhcnRlciBQYWNrIF8gTkdJTlgtMTY5MjM0MTcwNzIwMi5qc29uUEsFBgAAAAAFAAUAAQIAAD9RAAAAAA==",
            "grafanaName": "[split(parameters('grafanaResourceId'), '/')[8]]",
            "tempfilename": "[format('{0}.tmp', parameters('fileName'))]",
            "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('solutionTag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('solutionTag'), 'solutionVersion', parameters('solutionVersion')), parameters('customerTags').All))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "deployscript-MonstarPacks",
              "tags": "[variables('Tags')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('packsManagedIdentityResourceId'))]": {}
                }
              },
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "2.42.0",
                "timeout": "PT5M",
                "retentionInterval": "PT1H",
                "environmentVariables": [
                  {
                    "name": "CONTENT",
                    "value": "[variables('$fxv#0')]"
                  }
                ],
                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az extension add --name amg && az login --identity && unzip {3} && for file in *.json; do az grafana dashboard import -g {4} -n {5} --definition \"$file\" --overwrite true;done', variables('tempfilename'), variables('tempfilename'), parameters('fileName'), parameters('fileName'), parameters('resourceGroupName'), variables('grafanaName'))]"
              }
            }
          ]
        }
      }
    }
  ]
}