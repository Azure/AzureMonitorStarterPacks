{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "16130488380850935457"
    }
  },
  "parameters": {
    "mgname": {
      "type": "string"
    },
    "subscriptionId": {
      "type": "string"
    },
    "resourceGroupName": {
      "type": "string"
    },
    "createNewResourceGroup": {
      "type": "bool",
      "defaultValue": false
    },
    "location": {
      "type": "string"
    },
    "assignmentLevel": {
      "type": "string"
    },
    "newLogAnalyticsWSName": {
      "type": "string",
      "defaultValue": ""
    },
    "createNewLogAnalyticsWS": {
      "type": "bool"
    },
    "existingLogAnalyticsWSId": {
      "type": "string",
      "defaultValue": ""
    },
    "deployAMApolicy": {
      "type": "bool"
    },
    "grafanaLocation": {
      "type": "string",
      "defaultValue": ""
    },
    "grafanaName": {
      "type": "string",
      "defaultValue": ""
    },
    "newGrafana": {
      "type": "bool"
    },
    "existingGrafanaResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "storageAccountName": {
      "type": "string"
    },
    "createNewStorageAccount": {
      "type": "bool",
      "defaultValue": false
    },
    "resourceGroupId": {
      "type": "string",
      "defaultValue": ""
    },
    "instanceName": {
      "type": "string"
    },
    "actionGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Action Group to be used or created."
      }
    },
    "emailreceiver": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Email receiver names to be used for the Action Group if being created."
      }
    },
    "emailreiceversemail": {
      "type": "string",
      "metadata": {
        "description": "Email addresses to be used for the Action Group if being created."
      }
    },
    "useExistingAG": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "If set to true, a new Action group will be created"
      }
    },
    "customerTags": {
      "type": "object"
    },
    "existingActionGroupId": {
      "type": "string",
      "defaultValue": ""
    },
    "deployAllPacks": {
      "type": "bool"
    },
    "deployIaaSPacks": {
      "type": "bool",
      "defaultValue": false
    },
    "deployPaaSPacks": {
      "type": "bool",
      "defaultValue": false
    },
    "deployPlatformPacks": {
      "type": "bool",
      "defaultValue": false
    },
    "deployDiscovery": {
      "type": "bool",
      "defaultValue": false
    }
  },
  "variables": {
    "deployPacks": "[or(or(or(parameters('deployAllPacks'), parameters('deployIaaSPacks')), parameters('deployPaaSPacks')), parameters('deployPlatformPacks'))]",
    "solutionTag": "MonitorStarterPacks",
    "solutionTagComponents": "MonitorStarterPacksComponents",
    "solutionVersion": "0.1",
    "tempTags": {
      "[format('{0}', variables('solutionTagComponents'))]": "BackendComponent",
      "solutionVersion": "[variables('solutionVersion')]",
      "instanceName": "[parameters('instanceName')]"
    },
    "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
    "functionName": "[format('AMP-{0}-Function', parameters('instanceName'))]",
    "logicAppName": "[format('AMP-{0}-LogicApp', parameters('instanceName'))]",
    "ImageGalleryName": "[format('AMP-{0}-Gallery', parameters('instanceName'))]"
  },
  "resources": [
    {
      "condition": "[parameters('createNewResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "resourceGroup-Deployment",
      "subscriptionId": "[parameters('subscriptionId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "6729348131225601390"
            }
          },
          "parameters": {
            "resourceGroupName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2023-07-01",
              "name": "[parameters('resourceGroupName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]"
            }
          ],
          "outputs": {
            "newResourceGroupId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('createNewStorageAccount')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "newstorage-deployment",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "5225374560051968584"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'discovery')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'applications')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "supportsHttpsTrafficOnly": true
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', 'resourceGroup-Deployment')]"
      ]
    },
    {
      "condition": "[not(parameters('createNewStorageAccount'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "existingstorage-deployment",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "6223592964594707934"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'discovery')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": false
                }
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('createNewLogAnalyticsWS')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logAnalytics-Deployment",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('newLogAnalyticsWSName')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "createNewLogAnalyticsWS": {
            "value": "[parameters('createNewLogAnalyticsWS')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "9969421706703100542"
            }
          },
          "parameters": {
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "newLogAnalyticsWSName": {
              "type": "string",
              "defaultValue": ""
            },
            "createNewLogAnalyticsWS": {
              "type": "bool",
              "defaultValue": false
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            }
          ],
          "outputs": {
            "customerId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]"
            },
            "lawresourceid": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', 'resourceGroup-Deployment')]"
      ]
    },
    {
      "condition": "[parameters('deployAMApolicy')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "DeployAMAPolicy",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTagComponents')]"
          },
          "solutionVersion": {
            "value": "[variables('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "2796551102551530183"
            }
          },
          "parameters": {
            "solutionTag": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "variables": {
            "roledefinitionIds": [
              "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
              "48b40c6e-82e0-4eb3-90d5-19e40f49b624"
            ],
            "rulename": "[format('{0}-amaPolicy', parameters('solutionTag'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "amaPolicymg",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "initiativeDescription": {
                    "value": "[format('[{0}] This initiative deploys the AMA policy set', parameters('solutionTag'))]"
                  },
                  "initiativeDisplayName": {
                    "value": "[format('[{0}] Deploy agent with managed identity to Windows, Linux, VMs and Arc Servers and Scale Sets', parameters('solutionTag'))]"
                  },
                  "initiativeName": {
                    "value": "[format('[{0}]-DeployAMA', parameters('solutionTag'))]"
                  },
                  "category": {
                    "value": "Monitoring"
                  },
                  "version": {
                    "value": "1.0.0"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "4838987670497437880"
                    }
                  },
                  "parameters": {
                    "initiativeName": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "PolicySet name"
                      }
                    },
                    "initiativeDisplayName": {
                      "type": "string",
                      "maxLength": 128,
                      "metadata": {
                        "description": "PolicySet display Name"
                      }
                    },
                    "initiativeDescription": {
                      "type": "string",
                      "metadata": {
                        "description": "PolicySet description"
                      }
                    },
                    "solutionTag": {
                      "type": "string",
                      "minLength": 1,
                      "metadata": {
                        "description": "array of policy IDs"
                      }
                    },
                    "category": {
                      "type": "string",
                      "defaultValue": "Monitoring"
                    },
                    "version": {
                      "type": "string",
                      "defaultValue": "1.0.0"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policySetDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('initiativeName')]",
                      "properties": {
                        "description": "[parameters('initiativeDescription')]",
                        "displayName": "[parameters('initiativeDisplayName')]",
                        "metadata": {
                          "category": "[parameters('category')]",
                          "version": "[parameters('version')]",
                          "[format('{0}', parameters('solutionTag'))]": "Policy Set"
                        },
                        "parameters": {},
                        "policyDefinitions": [
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', 'ca817e41-e85a-4783-bc7f-dc532d36235e')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', 'a4034bc6-ae50-406d-bf76-50f4ee5a7811')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', '845857af-0333-4c5d-bbbc-6076697da122')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', '94f686d6-9a24-4e19-91f1-de937dc171a4')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', '4efbd9d8-6bc6-45f6-9be2-7fe9dd5d89ff')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', '17b3de92-f710-4cf4-aa55-0e7859f1ed7b')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {
                              "bringYourOwnUserAssignedManagedIdentity": {
                                "value": false
                              }
                            },
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', '59c3d93f-900b-4827-a8bd-562e7b956e7c')]",
                            "policyDefinitionReferenceId": ""
                          }
                        ],
                        "policyType": "Custom"
                      }
                    }
                  ],
                  "outputs": {
                    "policySetDefId": {
                      "type": "string",
                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('assignment-{0}', variables('rulename'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "policyDefinitionId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'amaPolicymg'), '2022-09-01').outputs.policySetDefId.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "assignmentName": {
                    "value": "[AMSP]AMA-Policies"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "18204016525654709950"
                    }
                  },
                  "parameters": {
                    "policyDefinitionId": {
                      "type": "string"
                    },
                    "assignmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "loc2": "[trim(parameters('location'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policyAssignments",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('assignmentName')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                        }
                      },
                      "location": "[variables('loc2')]",
                      "properties": {
                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                        "displayName": "[parameters('assignmentName')]",
                        "enforcementMode": "Default",
                        "metadata": {
                          "createdBy": "[parameters('solutionTag')]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'amaPolicymg')]",
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity')]"
              ]
            },
            {
              "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('assignment-{0}', variables('rulename'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "policyDefinitionId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'amaPolicymg'), '2022-09-01').outputs.policySetDefId.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "assignmentName": {
                    "value": "[format('assign-{0}', variables('rulename'))]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15632908880880169790"
                    }
                  },
                  "parameters": {
                    "policyDefinitionId": {
                      "type": "string"
                    },
                    "assignmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "loc2": "[trim(parameters('location'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policyAssignments",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('assignmentName')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                        }
                      },
                      "location": "[variables('loc2')]",
                      "properties": {
                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                        "displayName": "[parameters('assignmentName')]",
                        "enforcementMode": "Default",
                        "metadata": {
                          "createdBy": "[parameters('solutionTag')]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'amaPolicymg')]",
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AMAUserManagedIdentity",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('roledefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "AMAUserManagedIdentity"
                  },
                  "mgname": {
                    "value": "[managementGroup().name]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "17030408063704970586"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "addRGRoleAssignments": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "solutionTag": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "RGroleDefinitionIds": [
                      "b24988ac-6180-42a0-ab88-20f7382dd24c",
                      "22926164-76b3-42b3-bc55-97df8dab3e41"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('userIdentityName')]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "11471796101525841241"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('Tags')]"
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), copyIndex())]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "6314791387466906825"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignmentRG",
                        "count": "[length(variables('RGroleDefinitionIds'))]"
                      },
                      "condition": "[parameters('addRGRoleAssignments')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-RG', parameters('userIdentityName'), copyIndex())]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13765506848823263645"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "copy": {
                "name": "userIdentityRoleAssignments",
                "count": "[length(variables('roledefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMAUserManagedIdentityRoles-{0}', copyIndex())]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "resourcename": {
                    "value": "AMAUserManagedIdentity"
                  },
                  "principalId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('roledefinitionIds')[copyIndex()]]"
                  },
                  "roleShortName": {
                    "value": "[variables('roledefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "6314791387466906825"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', 'resourceGroup-Deployment')]"
      ]
    },
    {
      "condition": "[parameters('deployDiscovery')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('DeployDiscovery-{0}', parameters('instanceName'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[variables('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "dceId": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.dceId.value]"
          },
          "imageGalleryName": {
            "value": "[variables('ImageGalleryName')]"
          },
          "lawResourceId": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment'), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "storageAccountname": {
            "value": "[parameters('storageAccountName')]"
          },
          "tableName": {
            "value": "Discovery"
          },
          "userManagedIdentityResourceId": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.packsUserManagedResourceId.value]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "327748190088259151"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "storageAccountname": {
              "type": "string"
            },
            "imageGalleryName": {
              "type": "string"
            },
            "lawResourceId": {
              "type": "string"
            },
            "tableName": {
              "type": "string"
            },
            "userManagedIdentityResourceId": {
              "type": "string"
            },
            "mgname": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            },
            "dceId": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "instanceName": {
              "type": "string"
            }
          },
          "variables": {
            "tableNameToUse": "[format('Custom{0}_CL', parameters('tableName'))]",
            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('tableNameToUse')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parentname": {
                    "value": "[variables('lawFriendlyName')]"
                  },
                  "tableName": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "retentionDays": {
                    "value": 31
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "8927710276797462866"
                    }
                  },
                  "parameters": {
                    "parentname": {
                      "type": "string"
                    },
                    "tableName": {
                      "type": "string"
                    },
                    "retentionDays": {
                      "type": "int",
                      "defaultValue": 31
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                      "apiVersion": "2022-10-01",
                      "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                      "properties": {
                        "totalRetentionInDays": "[parameters('retentionDays')]",
                        "plan": "Analytics",
                        "schema": {
                          "name": "[parameters('tableName')]",
                          "columns": [
                            {
                              "name": "TimeGenerated",
                              "type": "datetime"
                            },
                            {
                              "name": "RawData",
                              "type": "string"
                            }
                          ]
                        },
                        "retentionInDays": "[parameters('retentionDays')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('WindowsDiscovery-{0}', parameters('instanceName'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "storageAccountname": {
                    "value": "[parameters('storageAccountname')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('lawResourceId')]"
                  },
                  "tableNameToUse": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "18136014869712289492"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "storageAccountname": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "instanceName": {
                      "type": "string"
                    },
                    "tableNameToUse": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "ruleshortname": "[format('amp{0}windisc', parameters('instanceName'))]",
                    "appName": "[format('{0}-windiscovery', parameters('instanceName'))]",
                    "appDescription": "Windows Workload discovery",
                    "OS": "Windows",
                    "appVersionName": "1.0.5"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appDescription": {
                            "value": "[variables('appDescription')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "osType": {
                            "value": "[variables('OS')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "16298643752623576341"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "aigname": {
                              "type": "string"
                            },
                            "osType": {
                              "type": "string"
                            },
                            "appDescription": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications",
                              "apiVersion": "2022-03-03",
                              "name": "[format('{0}/{1}', parameters('aigname'), parameters('appName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "supportedOSType": "[parameters('osType')]",
                                "description": "[parameters('appDescription')]"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('upload-discovery-{0}', variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "containerName": {
                            "value": "discovery"
                          },
                          "filename": {
                            "value": "discover.zip"
                          },
                          "storageAccountName": {
                            "value": "[parameters('storageAccountname')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13896989948264489348"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "storageAccountName": {
                              "type": "string"
                            },
                            "sasExpiry": {
                              "type": "string",
                              "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                            },
                            "filename": {
                              "type": "string"
                            },
                            "containerName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "$fxv#0": "UEsDBBQAAAAIACM5KViAZr56yQIAAL4HAAAMAAAAZGlzY292ZXIucHMxxVRNb9pAEL0j8R9GBgksea2qvVRIOSAaClUJKKDkEinaeNewydrr7q7T0IRf1kN/Uv9CZ/1BEkiURDnUB4Rnd96bN/PGf3//acGMappwyzWsuMyAcRNpkVmh0majrfN0IRJ+sOSWMGo5kKHSCbXgKa/ZaHXruB9aZawW6bLrrfEhkwlhDEajXpL0jPH8ZgPRmDCRuuZ6PVSScX3gRb2zU5Ey9dP0f+Wan32pLzjwLfmzLJMJY6ORAxcxdItrwvIEdomAHGqtdD9yqmAuJE+tXA9UakWac9+HW2g2AB+v5oQeTK/CKptKzSlbA78RxhoP7kDllsQIA3XB39UytDcWSD/LeMqajQ0icmk43O4jDxAOmZcQl/h75dKUgckvymMTevAqSkeTXDHxBGB52CpPvd3jM6mWxnvhDv7ilU0xxxjrx3GZg6/Y8WqAwzJ2B6crrjmZXlzyyMJt+zwcp8ZSKee28A//AZ0qwllng8rmXOLVOuMIzRg4kZmk6/Klgl6sM3fCM7uC1h02D9sYrXB2971td5HPJflB8fcBTBV5gFXfcYC+B5vSRVtxYaTyFNu7tPDBr8fYgmMMIlVQVjOdB2XFA1qsTAAnOAulHxVdpm6BUTIu0SHWvu3SvYTgWEnErZoa7AqqaPxgIiKtjIrtviyUghRT9MvQ+WV/lKJu/3Ar1Vx7tZFwWdJIMefP3Mafi5k/5+QjBYUqFBVjt1j4yuVw2/2gHX3GyIQnF25Tj5TlM60yrm0xN+gcl3Sdx2cnVOY48LoWMqPGLFY6R7jDm0xpS1CUC6Nb3tGC/nwwHgPZKRg/HQhmF4p8M/hFeWO3LzEHd6lNs6xaoURUTiADiTrc+D99PEepLMfg0ytSG62yBFT2daDvsm7lVofzhFPvjYqtkiKiReqLdi3eSnzfe609kcGcTsbvcWeh4s3WrLT/R1u+IL1w5T9QSwMEFAAAAAgAIzkpWF3kd4rAAwAAQA4AABEAAABEaXNjb3ZlcnlUYXNrLnhtbJ1X207bQBCd50r9hyjvxOHS0qI0KAQokSggEsRLXig2ISIXZBtC+vFtz5y1E6/XSQyybK937mdmZ9f//jbkUN5kLCOpyKsEEkokQ5nKRH5IVbalJnW8K6BM5B7zPqgTGZB6Iz05lS1wfcXXoTTls3ySBmbvoOVppcYdajRWJ6Dq/KPEuJ7lQDxcEWw9QnZMTTW8h5gJoSXC/QDOGr0Zg3dGj3x8zUD1oL2Oaw+jOsYeZWO848SrauJnBVdDrmFlAI4I9BAcceJrB/cDRktew39MngDzO9S/y/i38dSvHkZ1xLAN+wegfYefX0ip42sP8l5Gg625JS+Yf4TNEDTltGds7ht43sFsH/qGxGuaoD2nbEpfRuq9I1bNYQjqAJfJYN5+G/IjVoWPUZjjt7mNRJcZCPE8gq2XheR8A5Y7fGpONYZ1WlybJ6DfyW966oND437BWDXlaUUemyr0IaNcR7Ci2SuytayOOdBSRGMi8UqcmoglzX0x3bXulbavvGXzobyrc9uQK9J0rQ+xGlWnm3uXp4KRz3WcrdlqYVw30Kh2O0S9y5xvYZXo+1tSu1kOV8M1834OHq14Re+M8ShWWtstojoEJc2vqf68VB5DNy4bt/XYaL0E7GKmQ7q4/WIeY0qrVx12P61n1am+XwG3EXud5rgDLRMiGcgF7hm9eK+WfP/S9a++j9gxl+upgx5wCR1H7AymOofUZ6+bj2mwvVCZKfxXiZ8YGcTKWH+fZL7Dpj6f0WMfK0G5x9SSduWstXISbmwGj1tW5KSgHpvw3tRPkOtq62RsO6aeNfIR8qx4XLD+ZqyYpxJWP6LB9kFXqM6vr3w755fccYzcCftVcYaL+Ip6QZBUv6KXlXGjXc2Z7wTl4spWVNfSfJycXdzoyknYVj66izXYF31cWlF5PGzaptpajepqTlvnLeSeMN9D9EYqr6uII4/EG+j33GPM2aWH9xhz53zrSa+J/teTfZwbzhKEysgU7XBTPmN20f3MDpCdz+4Pq6tFK+V+YT/CTJsj7R9veG7aOZeRF62BNk/Cy+pp47zUB5rZc3Ef3s1Z/1pnu0Anz3HFt3a3LnuQ1mkfHcD8A/SxIlN6tKDX6H+QnEBsL1w/W5AdIMoxay4mQlvoOVPiquf6ISunksye4x7gTr8nmXPTXYLna8LvZjm7C1Z4dnrmH0BE/tOFrWohXi35A1268xadsN25GrRHwKqarHI3UheP26TPmnpRjSFjiDk/X5HJ9Z6ZdbRJb77fudVlosjWbPp35y3+75ryH1BLAwQUAAAACAAjOSlYD6NjQTMBAADbAQAACwAAAGluc3RhbGwucHMxbZC9bsIwFIX3SHmHK8MAg111ReoQUZj6gwqVOmSx7Euw4tiR7UAC7ZN16CP1FWpCoWrVO16dc3TO9/n+MYCpQx4QpPLCbtF1sLZaokuT4e35Ne8/N0RM8p0y0u58tm8c5hcBSRO1htGowEBVwAqG8rcX6Mw56zIRlDWwVBpN0N3UmqBMg+MxHCBNIB4ZusasVIUwgceSfbu5jiVlB9gqHzyBV7BNoOsYA+cOd7ZgoQ1As7pGI9PkLU1Qe4TDKbgqpXLwd1MvG8zamhtJMyc2aovA8nN7tld1mghbdxc+rPbX/8Q8YRGroaNLsUHZaJQr7kugL5WGHouIW+NoYFcX71HB2ig4zfHBKVOMgR7/DzwiIPfW+MAdLLgoPfzgBjq3TiDQZx/pLDt/ZN77FjxsgOTkC1BLAQIUAxQAAAAIACM5KViAZr56yQIAAL4HAAAMAAAAAAAAAAAAAACkgQAAAABkaXNjb3Zlci5wczFQSwECFAMUAAAACAAjOSlYXeR3isADAABADgAAEQAAAAAAAAAAAAAApIHzAgAARGlzY292ZXJ5VGFzay54bWxQSwECFAMUAAAACAAjOSlYD6NjQTMBAADbAQAACwAAAAAAAAAAAAAApIHiBgAAaW5zdGFsbC5wczFQSwUGAAAAAAMAAwCyAAAAPggAAAAA",
                            "discoveryContainerName": "discovery",
                            "tempfilename": "download.tmp",
                            "sasConfig": {
                              "signedResourceTypes": "sco",
                              "signedPermission": "r",
                              "signedServices": "b",
                              "signedExpiry": "[parameters('sasExpiry')]",
                              "signedProtocol": "https",
                              "keyToSign": "key2"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "deployscript-windiscover",
                              "tags": "[parameters('tags')]",
                              "location": "[parameters('location')]",
                              "kind": "AzureCLI",
                              "properties": {
                                "azCliVersion": "2.42.0",
                                "timeout": "PT5M",
                                "retentionInterval": "PT1H",
                                "environmentVariables": [
                                  {
                                    "name": "AZURE_STORAGE_ACCOUNT",
                                    "value": "[parameters('storageAccountName')]"
                                  },
                                  {
                                    "name": "AZURE_STORAGE_KEY",
                                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                                  },
                                  {
                                    "name": "CONTENT",
                                    "value": "[variables('$fxv#0')]"
                                  }
                                ],
                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                              }
                            }
                          ],
                          "outputs": {
                            "fileURL": {
                              "type": "string",
                              "value": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "appVersionName": {
                            "value": "[variables('appVersionName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "targetRegion": {
                            "value": "[parameters('location')]"
                          },
                          "mediaLink": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}', variables('OS'))), '2022-09-01').outputs.fileURL.value]"
                          },
                          "installCommands": {
                            "value": "powershell -command \"ren windiscovery discover.zip; expand-archive ./discover.zip . ; ./install.ps1\""
                          },
                          "removeCommands": {
                            "value": "Unregister-ScheduledTask -TaskName \"Monstar Packs Discovery\" \"\\\""
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "1739221338810218216"
                            }
                          },
                          "parameters": {
                            "aigname": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "appVersionName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "targetRegion": {
                              "type": "string"
                            },
                            "mediaLink": {
                              "type": "string"
                            },
                            "installCommands": {
                              "type": "string"
                            },
                            "removeCommands": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications/versions",
                              "apiVersion": "2022-03-03",
                              "name": "[format('{0}/{1}/{2}', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "publishingProfile": {
                                  "source": {
                                    "mediaLink": "[parameters('mediaLink')]"
                                  },
                                  "manageActions": {
                                    "install": "[parameters('installCommands')]",
                                    "remove": "[parameters('removeCommands')]"
                                  },
                                  "settings": {},
                                  "enableHealthCheck": false,
                                  "targetRegions": [
                                    {
                                      "name": "[parameters('targetRegion')]",
                                      "regionalReplicaCount": 1,
                                      "storageAccountType": "Standard_LRS"
                                    }
                                  ],
                                  "replicaCount": 1,
                                  "excludeFromLatest": false,
                                  "storageAccountType": "Standard_LRS"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "appVersionId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Compute/galleries/applications/versions', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}', variables('OS')))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('applicationPolicy-{0}', variables('appName'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "WinOS"
                          },
                          "policyDescription": {
                            "value": "[format('Install {0} to {1} VMs', variables('appName'), variables('OS'))]"
                          },
                          "policyName": {
                            "value": "[format('Install {0}', variables('appName'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Install {0} to {1} VMs', variables('appName'), variables('OS'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "vmapplicationResourceId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS'))), '2022-09-01').outputs.appVersionId.value]"
                          },
                          "roledefinitionIds": {
                            "value": [
                              "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                            ]
                          },
                          "packtype": {
                            "value": "Discovery"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "14528133095756415505"
                            }
                          },
                          "parameters": {
                            "vmapplicationResourceId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "variables": {
                            "vmApplicationName": "[split(parameters('vmapplicationResourceId'), '/')[10]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                  "MonitoringPackType": "[parameters('packtype')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "vmapplicationId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "applicationId",
                                      "description": "the VM application ID to assign to the VM"
                                    },
                                    "defaultValue": "[parameters('vmapplicationResourceId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Compute/virtualMachines",
                                      "name": "[[field('name')]",
                                      "existenceCondition": {
                                        "allOf": [
                                          {
                                            "count": {
                                              "field": "Microsoft.Compute/virtualMachines/applicationProfile.galleryApplications[*]",
                                              "where": {
                                                "field": "Microsoft.Compute/virtualMachines/applicationProfile.galleryApplications[*].packageReferenceId",
                                                "equals": "[[parameters('vmapplicationId')]"
                                              }
                                            },
                                            "greater": 0
                                          }
                                        ]
                                      },
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "location": {
                                                "type": "string"
                                              },
                                              "vmapplicationId": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "vmApplicationName": "[variables('vmApplicationName')]"
                                            },
                                            "resources": [
                                              {
                                                "apiVersion": "2021-07-01",
                                                "type": "Microsoft.Compute/virtualMachines/VMapplications",
                                                "name": "[[concat(parameters('vmName'), '/',variables('vmApplicationName'))]",
                                                "location": "[[parameters('location')]",
                                                "properties": {
                                                  "packageReferenceId": "[[parameters('vmapplicationId')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "location": {
                                              "value": "[[field('location')]"
                                            },
                                            "vmapplicationId": {
                                              "value": "[[parameters('vmapplicationId')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}', variables('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', variables('appName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-application', variables('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', variables('appName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}', variables('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', variables('appName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-application', variables('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', variables('appName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-DCR-{1}Discovery', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "endpointResourceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "filepatterns": {
                            "value": [
                              "C:\\WindowsAzure\\Discovery\\*.csv"
                            ]
                          },
                          "kind": {
                            "value": "Windows"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "lawResourceId": {
                            "value": "[parameters('lawResourceId')]"
                          },
                          "OS": {
                            "value": "Windows"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "tableName": {
                            "value": "[parameters('tableNameToUse')]"
                          },
                          "packtag": {
                            "value": "windiscovery"
                          },
                          "packtype": {
                            "value": "Discovery"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15764954877562432804"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "lawResourceId": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "filepatterns": {
                              "type": "array"
                            },
                            "OS": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "endpointResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the resource id of the data collection endpoint."
                              }
                            }
                          },
                          "variables": {
                            "tableNameToUse": "[parameters('tableName')]",
                            "streamName": "[format('Custom-{0}', variables('tableNameToUse'))]",
                            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/dataCollectionRules",
                              "apiVersion": "2022-06-01",
                              "name": "[format('AMSP-FileColl-{0}-{1}', parameters('packtag'), parameters('OS'))]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                "MonitoringPackType": "[parameters('packtype')]"
                              },
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "dataSources": {
                                  "logFiles": [
                                    {
                                      "streams": [
                                        "[variables('streamName')]"
                                      ],
                                      "filePatterns": "[parameters('filepatterns')]",
                                      "format": "text",
                                      "settings": {
                                        "text": {
                                          "recordStartTimestampFormat": "ISO 8601"
                                        }
                                      },
                                      "name": "[variables('tableNameToUse')]"
                                    }
                                  ]
                                },
                                "destinations": {
                                  "logAnalytics": [
                                    {
                                      "workspaceResourceId": "[parameters('lawResourceId')]",
                                      "name": "[variables('lawFriendlyName')]"
                                    }
                                  ]
                                },
                                "dataFlows": [
                                  {
                                    "streams": [
                                      "[variables('streamName')]"
                                    ],
                                    "destinations": [
                                      "[variables('lawFriendlyName')]"
                                    ],
                                    "transformKql": "source",
                                    "outputStream": "[variables('streamName')]"
                                  }
                                ],
                                "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                "streamDeclarations": {
                                  "[format('{0}', variables('streamName'))]": {
                                    "columns": [
                                      {
                                        "name": "TimeGenerated",
                                        "type": "datetime"
                                      },
                                      {
                                        "name": "RawData",
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ruleId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('AMSP-FileColl-{0}-{1}', parameters('packtag'), parameters('OS')))]"
                            },
                            "ruleName": {
                              "type": "string",
                              "value": "[format('AMSP-FileColl-{0}-{1}', parameters('packtag'), parameters('OS'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "policysetup-windoscovery",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dcrId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-DCR-{1}Discovery', parameters('instanceName'), variables('OS'))), '2022-09-01').outputs.ruleId.value]"
                          },
                          "packtag": {
                            "value": "WinOS"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "rulename": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-DCR-{1}Discovery', parameters('instanceName'), variables('OS'))), '2022-09-01').outputs.ruleName.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "ruleshortname": {
                            "value": "[variables('ruleshortname')]"
                          },
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "packtype": {
                            "value": "Discovery"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "14091341730586965810"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string"
                            },
                            "dcrId": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "rulename": {
                              "type": "string"
                            },
                            "ruleshortname": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string",
                              "defaultValue": "managementGroup"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "roledefinitionIds": [
                              "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                              "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                            ],
                            "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName'))]",
                              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "policyDescription": {
                                    "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                  },
                                  "policyDisplayName": {
                                    "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                  },
                                  "policyName": {
                                    "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                  },
                                  "DCRId": {
                                    "value": "[parameters('dcrId')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "roledefinitionIds": {
                                    "value": "[variables('roledefinitionIds')]"
                                  },
                                  "packtype": {
                                    "value": "[parameters('packtype')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "6542040609382835659"
                                    }
                                  },
                                  "parameters": {
                                    "DCRId": {
                                      "type": "string"
                                    },
                                    "policyName": {
                                      "type": "string"
                                    },
                                    "policyDisplayName": {
                                      "type": "string"
                                    },
                                    "policyDescription": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "packtype": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "roledefinitionIds": {
                                      "type": "array",
                                      "defaultValue": [
                                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/policyDefinitions",
                                      "apiVersion": "2021-06-01",
                                      "name": "[parameters('policyName')]",
                                      "properties": {
                                        "description": "[parameters('policyDescription')]",
                                        "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                        "metadata": {
                                          "category": "Monitoring",
                                          "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                          "MonitoringPackType": "[parameters('packtype')]"
                                        },
                                        "policyType": "Custom",
                                        "mode": "Indexed",
                                        "parameters": {
                                          "tagName": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "Tag name",
                                              "description": "A tag to apply the association conditionally."
                                            },
                                            "defaultValue": "[parameters('solutionTag')]"
                                          },
                                          "tagValue": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "Tag value",
                                              "description": "The value of the tag."
                                            },
                                            "defaultValue": "[parameters('packtag')]"
                                          },
                                          "effect": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "Effect",
                                              "description": "Enable or disable the execution of the policy"
                                            },
                                            "allowedValues": [
                                              "DeployIfNotExists",
                                              "Disabled"
                                            ],
                                            "defaultValue": "DeployIfNotExists"
                                          },
                                          "DCRid": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "DCRId",
                                              "description": "The value of the DCRId."
                                            },
                                            "defaultValue": "[parameters('DCRId')]"
                                          }
                                        },
                                        "policyRule": {
                                          "if": {
                                            "allOf": [
                                              {
                                                "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                "contains": "[[parameters('tagValue')]"
                                              },
                                              {
                                                "field": "type",
                                                "equals": "Microsoft.Compute/virtualMachines"
                                              }
                                            ]
                                          },
                                          "then": {
                                            "effect": "[[parameters('effect')]",
                                            "details": {
                                              "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                              "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                              "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                              "deployment": {
                                                "properties": {
                                                  "mode": "incremental",
                                                  "template": {
                                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                    "contentVersion": "1.0.0.0",
                                                    "parameters": {
                                                      "resourceGroup": {
                                                        "type": "string"
                                                      },
                                                      "vmName": {
                                                        "type": "string"
                                                      },
                                                      "DCRId2": {
                                                        "type": "string"
                                                      },
                                                      "packTag": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "variables": {
                                                      "locationLongNameToShortMap": {
                                                        "canadacentral": "CCA",
                                                        "canadaeast": "CCA",
                                                        "centralus": "CUS",
                                                        "eastus2euap": "eus2p",
                                                        "eastus": "EUS",
                                                        "eastus2": "EUS2",
                                                        "southcentralus": "SCUS",
                                                        "westcentralus": "WCUS",
                                                        "westus": "WUS",
                                                        "westus2": "WUS2"
                                                      },
                                                      "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                      "subscriptionId": "[[subscription().subscriptionId]",
                                                      "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                    },
                                                    "resources": [
                                                      {
                                                        "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                        "name": "[[variables('dcraName')]",
                                                        "apiVersion": "2021-04-01",
                                                        "properties": {
                                                          "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                          "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "parameters": {
                                                    "resourceGroup": {
                                                      "value": "[[resourceGroup().name]"
                                                    },
                                                    "vmName": {
                                                      "value": "[[field('name')]"
                                                    },
                                                    "DCRId2": {
                                                      "value": "[[parameters('DCRId')]"
                                                    },
                                                    "packTag": {
                                                      "value": "[[parameters('tagValue')]"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "policyId": {
                                      "type": "string",
                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-{1}-{2}-vm', parameters('instanceName'), parameters('packtag'), parameters('ruleshortname'))]",
                              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "policyDefinitionId": {
                                    "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                  },
                                  "assignmentName": {
                                    "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "18204016525654709950"
                                    }
                                  },
                                  "parameters": {
                                    "policyDefinitionId": {
                                      "type": "string"
                                    },
                                    "assignmentName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "loc2": "[trim(parameters('location'))]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/policyAssignments",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('assignmentName')]",
                                      "identity": {
                                        "type": "UserAssigned",
                                        "userAssignedIdentities": {
                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                        }
                                      },
                                      "location": "[variables('loc2')]",
                                      "properties": {
                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                        "displayName": "[parameters('assignmentName')]",
                                        "enforcementMode": "Default",
                                        "metadata": {
                                          "createdBy": "[parameters('solutionTag')]"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName')))]"
                              ]
                            },
                            {
                              "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-{1}-{2}-vm', parameters('instanceName'), parameters('packtag'), parameters('ruleshortname'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "policyDefinitionId": {
                                    "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                  },
                                  "assignmentName": {
                                    "value": "[format('{0}-{1}-{2}-vm', parameters('instanceName'), parameters('packtag'), parameters('ruleshortname'))]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "15632908880880169790"
                                    }
                                  },
                                  "parameters": {
                                    "policyDefinitionId": {
                                      "type": "string"
                                    },
                                    "assignmentName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "loc2": "[trim(parameters('location'))]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/policyAssignments",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('assignmentName')]",
                                      "identity": {
                                        "type": "UserAssigned",
                                        "userAssignedIdentities": {
                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                        }
                                      },
                                      "location": "[variables('loc2')]",
                                      "properties": {
                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                        "displayName": "[parameters('assignmentName')]",
                                        "enforcementMode": "Default",
                                        "metadata": {
                                          "createdBy": "[parameters('solutionTag')]"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName')))]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-DCR-{1}Discovery', parameters('instanceName'), variables('OS')))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('LinuxDiscovery-{0}', parameters('instanceName'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "storageAccountname": {
                    "value": "[parameters('storageAccountname')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('lawResourceId')]"
                  },
                  "tableNameToUse": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "17557935784768794995"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "storageAccountname": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "tableNameToUse": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "ruleshortname": "[format('amp{0}lxdisc', parameters('instanceName'))]",
                    "appName": "[format('{0}-LxDiscovery', parameters('instanceName'))]",
                    "appDescription": "Linux Workload discovery",
                    "OS": "Linux",
                    "appVersionName": "1.0.5"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appDescription": {
                            "value": "[variables('appDescription')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "osType": {
                            "value": "[variables('OS')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "16298643752623576341"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "aigname": {
                              "type": "string"
                            },
                            "osType": {
                              "type": "string"
                            },
                            "appDescription": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications",
                              "apiVersion": "2022-03-03",
                              "name": "[format('{0}/{1}', parameters('aigname'), parameters('appName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "supportedOSType": "[parameters('osType')]",
                                "description": "[parameters('appDescription')]"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('upload-discovery-{0}', variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "containerName": {
                            "value": "discovery"
                          },
                          "filename": {
                            "value": "discover.tar"
                          },
                          "storageAccountName": {
                            "value": "[parameters('storageAccountname')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "11237147548347420476"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "storageAccountName": {
                              "type": "string"
                            },
                            "sasExpiry": {
                              "type": "string",
                              "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                            },
                            "filename": {
                              "type": "string"
                            },
                            "containerName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "$fxv#0": "
                            "discoveryContainerName": "discovery",
                            "tempfilename": "download.tmp",
                            "sasConfig": {
                              "signedResourceTypes": "sco",
                              "signedPermission": "r",
                              "signedServices": "b",
                              "signedExpiry": "[parameters('sasExpiry')]",
                              "signedProtocol": "https",
                              "keyToSign": "key2"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "deployscript-MonstarPacks",
                              "tags": "[parameters('tags')]",
                              "location": "[parameters('location')]",
                              "kind": "AzureCLI",
                              "properties": {
                                "azCliVersion": "2.42.0",
                                "timeout": "PT5M",
                                "retentionInterval": "PT1H",
                                "environmentVariables": [
                                  {
                                    "name": "AZURE_STORAGE_ACCOUNT",
                                    "value": "[parameters('storageAccountName')]"
                                  },
                                  {
                                    "name": "AZURE_STORAGE_KEY",
                                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                                  },
                                  {
                                    "name": "CONTENT",
                                    "value": "[variables('$fxv#0')]"
                                  }
                                ],
                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                              }
                            }
                          ],
                          "outputs": {
                            "fileURL": {
                              "type": "string",
                              "value": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "appVersionName": {
                            "value": "[variables('appVersionName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "targetRegion": {
                            "value": "[parameters('location')]"
                          },
                          "mediaLink": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}', variables('OS'))), '2022-09-01').outputs.fileURL.value]"
                          },
                          "installCommands": {
                            "value": "[format('tar -xvf {0} && chmod +x ./install.sh && ./install.sh', variables('appName'))]"
                          },
                          "removeCommands": {
                            "value": "/opt/microsoft/discovery/uninstall.sh"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "1739221338810218216"
                            }
                          },
                          "parameters": {
                            "aigname": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "appVersionName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "targetRegion": {
                              "type": "string"
                            },
                            "mediaLink": {
                              "type": "string"
                            },
                            "installCommands": {
                              "type": "string"
                            },
                            "removeCommands": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications/versions",
                              "apiVersion": "2022-03-03",
                              "name": "[format('{0}/{1}/{2}', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "publishingProfile": {
                                  "source": {
                                    "mediaLink": "[parameters('mediaLink')]"
                                  },
                                  "manageActions": {
                                    "install": "[parameters('installCommands')]",
                                    "remove": "[parameters('removeCommands')]"
                                  },
                                  "settings": {},
                                  "enableHealthCheck": false,
                                  "targetRegions": [
                                    {
                                      "name": "[parameters('targetRegion')]",
                                      "regionalReplicaCount": 1,
                                      "storageAccountType": "Standard_LRS"
                                    }
                                  ],
                                  "replicaCount": 1,
                                  "excludeFromLatest": false,
                                  "storageAccountType": "Standard_LRS"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "appVersionId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Compute/galleries/applications/versions', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS')))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}', variables('OS')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('applicationPolicy-{0}', variables('appName'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "packtag": {
                            "value": "LxOS"
                          },
                          "policyDescription": {
                            "value": "[format('Install {0} to {1} VMs', variables('appName'), variables('OS'))]"
                          },
                          "policyName": {
                            "value": "[format('Install {0}', variables('appName'))]"
                          },
                          "policyDisplayName": {
                            "value": "[format('Install {0} to {1} VMs', variables('appName'), variables('OS'))]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "vmapplicationResourceId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS'))), '2022-09-01').outputs.appVersionId.value]"
                          },
                          "roledefinitionIds": {
                            "value": [
                              "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                            ]
                          },
                          "packtype": {
                            "value": "Discovery"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "14528133095756415505"
                            }
                          },
                          "parameters": {
                            "vmapplicationResourceId": {
                              "type": "string"
                            },
                            "policyName": {
                              "type": "string"
                            },
                            "policyDisplayName": {
                              "type": "string"
                            },
                            "policyDescription": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "roledefinitionIds": {
                              "type": "array",
                              "defaultValue": [
                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                              ]
                            }
                          },
                          "variables": {
                            "vmApplicationName": "[split(parameters('vmapplicationResourceId'), '/')[10]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyDefinitions",
                              "apiVersion": "2021-06-01",
                              "name": "[parameters('policyName')]",
                              "properties": {
                                "description": "[parameters('policyDescription')]",
                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                "metadata": {
                                  "category": "Monitoring",
                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                  "MonitoringPackType": "[parameters('packtype')]"
                                },
                                "policyType": "Custom",
                                "mode": "Indexed",
                                "parameters": {
                                  "tagName": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag name",
                                      "description": "A tag to apply the association conditionally."
                                    },
                                    "defaultValue": "[parameters('solutionTag')]"
                                  },
                                  "tagValue": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Tag value",
                                      "description": "The value of the tag."
                                    },
                                    "defaultValue": "[parameters('packtag')]"
                                  },
                                  "effect": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "Effect",
                                      "description": "Enable or disable the execution of the policy"
                                    },
                                    "allowedValues": [
                                      "DeployIfNotExists",
                                      "Disabled"
                                    ],
                                    "defaultValue": "DeployIfNotExists"
                                  },
                                  "vmapplicationId": {
                                    "type": "String",
                                    "metadata": {
                                      "displayName": "applicationId",
                                      "description": "the VM application ID to assign to the VM"
                                    },
                                    "defaultValue": "[parameters('vmapplicationResourceId')]"
                                  }
                                },
                                "policyRule": {
                                  "if": {
                                    "allOf": [
                                      {
                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                        "contains": "[[parameters('tagValue')]"
                                      },
                                      {
                                        "field": "type",
                                        "equals": "Microsoft.Compute/virtualMachines"
                                      }
                                    ]
                                  },
                                  "then": {
                                    "effect": "[[parameters('effect')]",
                                    "details": {
                                      "type": "Microsoft.Compute/virtualMachines",
                                      "name": "[[field('name')]",
                                      "existenceCondition": {
                                        "allOf": [
                                          {
                                            "count": {
                                              "field": "Microsoft.Compute/virtualMachines/applicationProfile.galleryApplications[*]",
                                              "where": {
                                                "field": "Microsoft.Compute/virtualMachines/applicationProfile.galleryApplications[*].packageReferenceId",
                                                "equals": "[[parameters('vmapplicationId')]"
                                              }
                                            },
                                            "greater": 0
                                          }
                                        ]
                                      },
                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                      "deployment": {
                                        "properties": {
                                          "mode": "incremental",
                                          "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {
                                              "vmName": {
                                                "type": "string"
                                              },
                                              "location": {
                                                "type": "string"
                                              },
                                              "vmapplicationId": {
                                                "type": "string"
                                              }
                                            },
                                            "variables": {
                                              "vmApplicationName": "[variables('vmApplicationName')]"
                                            },
                                            "resources": [
                                              {
                                                "apiVersion": "2021-07-01",
                                                "type": "Microsoft.Compute/virtualMachines/VMapplications",
                                                "name": "[[concat(parameters('vmName'), '/',variables('vmApplicationName'))]",
                                                "location": "[[parameters('location')]",
                                                "properties": {
                                                  "packageReferenceId": "[[parameters('vmapplicationId')]"
                                                }
                                              }
                                            ]
                                          },
                                          "parameters": {
                                            "vmName": {
                                              "value": "[[field('name')]"
                                            },
                                            "location": {
                                              "value": "[[field('location')]"
                                            },
                                            "vmapplicationId": {
                                              "value": "[[parameters('vmapplicationId')]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "policyId": {
                              "type": "string",
                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS')))]"
                      ]
                    },
                    {
                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Assignment-{0}', variables('ruleshortname'))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', variables('appName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-application', variables('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "18204016525654709950"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', variables('appName')))]"
                      ]
                    },
                    {
                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AssignSub-{0}', variables('ruleshortname'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "policyDefinitionId": {
                            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', variables('appName'))), '2022-09-01').outputs.policyId.value]"
                          },
                          "assignmentName": {
                            "value": "[format('{0}-application', variables('ruleshortname'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15632908880880169790"
                            }
                          },
                          "parameters": {
                            "policyDefinitionId": {
                              "type": "string"
                            },
                            "assignmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "loc2": "[trim(parameters('location'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/policyAssignments",
                              "apiVersion": "2022-06-01",
                              "name": "[parameters('assignmentName')]",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                }
                              },
                              "location": "[variables('loc2')]",
                              "properties": {
                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                "displayName": "[parameters('assignmentName')]",
                                "enforcementMode": "Default",
                                "metadata": {
                                  "createdBy": "[parameters('solutionTag')]"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', variables('appName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "LinuxDiscoveryDCR",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "endpointResourceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "filepatterns": {
                            "value": [
                              "/opt/microsoft/discovery/*.csv"
                            ]
                          },
                          "kind": {
                            "value": "Linux"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "lawResourceId": {
                            "value": "[parameters('lawResourceId')]"
                          },
                          "OS": {
                            "value": "Linux"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "tableName": {
                            "value": "[parameters('tableNameToUse')]"
                          },
                          "packtag": {
                            "value": "linuxdiscovery"
                          },
                          "packtype": {
                            "value": "Discovery"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "15764954877562432804"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "lawResourceId": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "filepatterns": {
                              "type": "array"
                            },
                            "OS": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "endpointResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the resource id of the data collection endpoint."
                              }
                            }
                          },
                          "variables": {
                            "tableNameToUse": "[parameters('tableName')]",
                            "streamName": "[format('Custom-{0}', variables('tableNameToUse'))]",
                            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/dataCollectionRules",
                              "apiVersion": "2022-06-01",
                              "name": "[format('AMSP-FileColl-{0}-{1}', parameters('packtag'), parameters('OS'))]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                "MonitoringPackType": "[parameters('packtype')]"
                              },
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "dataSources": {
                                  "logFiles": [
                                    {
                                      "streams": [
                                        "[variables('streamName')]"
                                      ],
                                      "filePatterns": "[parameters('filepatterns')]",
                                      "format": "text",
                                      "settings": {
                                        "text": {
                                          "recordStartTimestampFormat": "ISO 8601"
                                        }
                                      },
                                      "name": "[variables('tableNameToUse')]"
                                    }
                                  ]
                                },
                                "destinations": {
                                  "logAnalytics": [
                                    {
                                      "workspaceResourceId": "[parameters('lawResourceId')]",
                                      "name": "[variables('lawFriendlyName')]"
                                    }
                                  ]
                                },
                                "dataFlows": [
                                  {
                                    "streams": [
                                      "[variables('streamName')]"
                                    ],
                                    "destinations": [
                                      "[variables('lawFriendlyName')]"
                                    ],
                                    "transformKql": "source",
                                    "outputStream": "[variables('streamName')]"
                                  }
                                ],
                                "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                "streamDeclarations": {
                                  "[format('{0}', variables('streamName'))]": {
                                    "columns": [
                                      {
                                        "name": "TimeGenerated",
                                        "type": "datetime"
                                      },
                                      {
                                        "name": "RawData",
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ruleId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('AMSP-FileColl-{0}-{1}', parameters('packtag'), parameters('OS')))]"
                            },
                            "ruleName": {
                              "type": "string",
                              "value": "[format('AMSP-FileColl-{0}-{1}', parameters('packtag'), parameters('OS'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "policysetup-linuxdiscovery",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dcrId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'LinuxDiscoveryDCR'), '2022-09-01').outputs.ruleId.value]"
                          },
                          "packtag": {
                            "value": "LxOS"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "rulename": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'LinuxDiscoveryDCR'), '2022-09-01').outputs.ruleName.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "ruleshortname": {
                            "value": "[variables('ruleshortname')]"
                          },
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "packtype": {
                            "value": "Discovery"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "14091341730586965810"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string"
                            },
                            "dcrId": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "rulename": {
                              "type": "string"
                            },
                            "ruleshortname": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string",
                              "defaultValue": "managementGroup"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "roledefinitionIds": [
                              "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                              "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                            ],
                            "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName'))]",
                              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "policyDescription": {
                                    "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                  },
                                  "policyDisplayName": {
                                    "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                  },
                                  "policyName": {
                                    "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                  },
                                  "DCRId": {
                                    "value": "[parameters('dcrId')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "roledefinitionIds": {
                                    "value": "[variables('roledefinitionIds')]"
                                  },
                                  "packtype": {
                                    "value": "[parameters('packtype')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "6542040609382835659"
                                    }
                                  },
                                  "parameters": {
                                    "DCRId": {
                                      "type": "string"
                                    },
                                    "policyName": {
                                      "type": "string"
                                    },
                                    "policyDisplayName": {
                                      "type": "string"
                                    },
                                    "policyDescription": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "packtype": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "roledefinitionIds": {
                                      "type": "array",
                                      "defaultValue": [
                                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/policyDefinitions",
                                      "apiVersion": "2021-06-01",
                                      "name": "[parameters('policyName')]",
                                      "properties": {
                                        "description": "[parameters('policyDescription')]",
                                        "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                        "metadata": {
                                          "category": "Monitoring",
                                          "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                          "MonitoringPackType": "[parameters('packtype')]"
                                        },
                                        "policyType": "Custom",
                                        "mode": "Indexed",
                                        "parameters": {
                                          "tagName": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "Tag name",
                                              "description": "A tag to apply the association conditionally."
                                            },
                                            "defaultValue": "[parameters('solutionTag')]"
                                          },
                                          "tagValue": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "Tag value",
                                              "description": "The value of the tag."
                                            },
                                            "defaultValue": "[parameters('packtag')]"
                                          },
                                          "effect": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "Effect",
                                              "description": "Enable or disable the execution of the policy"
                                            },
                                            "allowedValues": [
                                              "DeployIfNotExists",
                                              "Disabled"
                                            ],
                                            "defaultValue": "DeployIfNotExists"
                                          },
                                          "DCRid": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "DCRId",
                                              "description": "The value of the DCRId."
                                            },
                                            "defaultValue": "[parameters('DCRId')]"
                                          }
                                        },
                                        "policyRule": {
                                          "if": {
                                            "allOf": [
                                              {
                                                "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                "contains": "[[parameters('tagValue')]"
                                              },
                                              {
                                                "field": "type",
                                                "equals": "Microsoft.Compute/virtualMachines"
                                              }
                                            ]
                                          },
                                          "then": {
                                            "effect": "[[parameters('effect')]",
                                            "details": {
                                              "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                              "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                              "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                              "deployment": {
                                                "properties": {
                                                  "mode": "incremental",
                                                  "template": {
                                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                    "contentVersion": "1.0.0.0",
                                                    "parameters": {
                                                      "resourceGroup": {
                                                        "type": "string"
                                                      },
                                                      "vmName": {
                                                        "type": "string"
                                                      },
                                                      "DCRId2": {
                                                        "type": "string"
                                                      },
                                                      "packTag": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "variables": {
                                                      "locationLongNameToShortMap": {
                                                        "canadacentral": "CCA",
                                                        "canadaeast": "CCA",
                                                        "centralus": "CUS",
                                                        "eastus2euap": "eus2p",
                                                        "eastus": "EUS",
                                                        "eastus2": "EUS2",
                                                        "southcentralus": "SCUS",
                                                        "westcentralus": "WCUS",
                                                        "westus": "WUS",
                                                        "westus2": "WUS2"
                                                      },
                                                      "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                      "subscriptionId": "[[subscription().subscriptionId]",
                                                      "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                    },
                                                    "resources": [
                                                      {
                                                        "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                        "name": "[[variables('dcraName')]",
                                                        "apiVersion": "2021-04-01",
                                                        "properties": {
                                                          "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                          "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "parameters": {
                                                    "resourceGroup": {
                                                      "value": "[[resourceGroup().name]"
                                                    },
                                                    "vmName": {
                                                      "value": "[[field('name')]"
                                                    },
                                                    "DCRId2": {
                                                      "value": "[[parameters('DCRId')]"
                                                    },
                                                    "packTag": {
                                                      "value": "[[parameters('tagValue')]"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "policyId": {
                                      "type": "string",
                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-{1}-{2}-vm', parameters('instanceName'), parameters('packtag'), parameters('ruleshortname'))]",
                              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "policyDefinitionId": {
                                    "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                  },
                                  "assignmentName": {
                                    "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "18204016525654709950"
                                    }
                                  },
                                  "parameters": {
                                    "policyDefinitionId": {
                                      "type": "string"
                                    },
                                    "assignmentName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "loc2": "[trim(parameters('location'))]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/policyAssignments",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('assignmentName')]",
                                      "identity": {
                                        "type": "UserAssigned",
                                        "userAssignedIdentities": {
                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                        }
                                      },
                                      "location": "[variables('loc2')]",
                                      "properties": {
                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                        "displayName": "[parameters('assignmentName')]",
                                        "enforcementMode": "Default",
                                        "metadata": {
                                          "createdBy": "[parameters('solutionTag')]"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName')))]"
                              ]
                            },
                            {
                              "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-{1}-{2}-vm', parameters('instanceName'), parameters('packtag'), parameters('ruleshortname'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "policyDefinitionId": {
                                    "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                  },
                                  "assignmentName": {
                                    "value": "[format('{0}-{1}-{2}-vm', parameters('instanceName'), parameters('packtag'), parameters('ruleshortname'))]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "15632908880880169790"
                                    }
                                  },
                                  "parameters": {
                                    "policyDefinitionId": {
                                      "type": "string"
                                    },
                                    "assignmentName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "loc2": "[trim(parameters('location'))]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/policyAssignments",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('assignmentName')]",
                                      "identity": {
                                        "type": "UserAssigned",
                                        "userAssignedIdentities": {
                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                        }
                                      },
                                      "location": "[variables('loc2')]",
                                      "properties": {
                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                        "displayName": "[parameters('assignmentName')]",
                                        "enforcementMode": "Default",
                                        "metadata": {
                                          "createdBy": "[parameters('solutionTag')]"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName')))]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'LinuxDiscoveryDCR')]"
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment')]"
      ]
    },
    {
      "condition": "[parameters('newGrafana')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('azureManagedGrafana-{0}', parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "location": {
            "value": "[parameters('grafanaLocation')]"
          },
          "grafanaName": {
            "value": "[parameters('grafanaName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "7960615285778333794"
            }
          },
          "parameters": {
            "grafanaName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "solutionTag": {
              "type": "string"
            }
          },
          "variables": {
            "ReaderRoleId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "LogAnalyticsContribuorRoleId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
            "MonitoringContributorRoleId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa"
          },
          "resources": [
            {
              "type": "Microsoft.Dashboard/grafana",
              "apiVersion": "2022-08-01",
              "name": "[parameters('grafanaName')]",
              "tags": "[parameters('Tags')]",
              "sku": {
                "name": "Standard"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "grafanaReadPermissions",
              "subscriptionId": "[subscription().subscriptionId]",
              "location": "[resourceGroup().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('ReaderRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Reader"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "9640557259126127493"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "grafanaLAWPermissions",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('LogAnalyticsContribuorRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Log Analytics Contributor"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "13765506848823263645"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "grafanaMonitorPermissions",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('MonitoringContributorRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Monitor Contributor Role"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "13765506848823263645"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            }
          ],
          "outputs": {
            "grafanaId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment')]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', 'resourceGroup-Deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('MonitoringPacks-backend-{0}', parameters('instanceName'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsLocation": {
            "value": "[parameters('location')]"
          },
          "functionname": {
            "value": "[variables('functionName')]"
          },
          "lawresourceid": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment'), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "imageGalleryName": {
            "value": "[variables('ImageGalleryName')]"
          },
          "logicappname": {
            "value": "[variables('logicAppName')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "11691613276696790024"
            }
          },
          "parameters": {
            "functionname": {
              "type": "string",
              "metadata": {
                "description": "The name for the function app that you wish to create"
              }
            },
            "logicappname": {
              "type": "string"
            },
            "instanceName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "lawresourceid": {
              "type": "string"
            },
            "appInsightsLocation": {
              "type": "string"
            },
            "Tags": {
              "type": "object",
              "metadata": {
                "description": "UTC timestamp used to create distinct deployment scripts for each deployment"
              }
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "mgname": {
              "type": "string"
            },
            "imageGalleryName": {
              "type": "string"
            }
          },
          "variables": {
            "packPolicyRoleDefinitionIds": [
              "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
              "9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
            ],
            "backendFunctionRoleDefinitionIds": [
              "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
              "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
              "48b40c6e-82e0-4eb3-90d5-19e40f49b624",
              "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
              "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "36243c78-bf99-498c-9df9-86d9f8d28608",
              "f1a07417-d97a-45cb-824c-7a7467783830"
            ],
            "logicappRequiredRoleassignments": [
              "4633458b-17de-408a-b874-0445c86b69e6"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('imageGalleryName')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "galleryname": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "942851332504250390"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "galleryname": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/galleries",
                      "apiVersion": "2022-03-03",
                      "name": "[parameters('galleryname')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "description": "Monitoring gallery"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('functionname')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "appInsightsLocation": {
                    "value": "[parameters('appInsightsLocation')]"
                  },
                  "functionname": {
                    "value": "[parameters('functionname')]"
                  },
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "userManagedIdentity": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('AMP-{0}-UMI-Function', parameters('instanceName'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "userManagedIdentityClientId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('AMP-{0}-UMI-Function', parameters('instanceName'))), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                  },
                  "packsUserManagedId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs', parameters('instanceName'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "7869276854708105126"
                    }
                  },
                  "parameters": {
                    "functionname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "userManagedIdentity": {
                      "type": "string"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string"
                    },
                    "packsUserManagedId": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "filename": {
                      "type": "string",
                      "defaultValue": "discovery.zip"
                    },
                    "sasExpiry": {
                      "type": "string",
                      "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                    },
                    "lawresourceid": {
                      "type": "string"
                    },
                    "appInsightsLocation": {
                      "type": "string"
                    },
                    "apiManagementKey": {
                      "type": "string",
                      "defaultValue": "[base64(newGuid())]"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "discoveryContainerName": "discovery",
                    "tempfilename": "[format('{0}.tmp', parameters('filename'))]",
                    "sasConfig": {
                      "signedResourceTypes": "sco",
                      "signedPermission": "r",
                      "signedServices": "b",
                      "signedExpiry": "[parameters('sasExpiry')]",
                      "signedProtocol": "https",
                      "keyToSign": "key2"
                    },
                    "keyName": "monitoringKey"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('deployscript-Function-{0}', parameters('instanceName'))]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "AZURE_STORAGE_KEY",
                            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/config', format('{0}-{1}-site', parameters('functionname'), parameters('instanceName')), 'appsettings')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}-farm', parameters('functionname'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "sku": {
                        "name": "Y1",
                        "tier": "Dynamic",
                        "size": "Y1",
                        "family": "Y",
                        "capacity": 0
                      },
                      "kind": "functioapp",
                      "properties": {
                        "perSiteScaling": false,
                        "elasticScaleEnabled": false,
                        "maximumElasticWorkerCount": 1,
                        "isSpot": false,
                        "reserved": false,
                        "isXenon": false,
                        "hyperV": false,
                        "targetWorkerCount": 0,
                        "targetWorkerSizeId": 0,
                        "zoneRedundant": false
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}-{1}-site', parameters('functionname'), parameters('instanceName'))]",
                      "location": "[parameters('location')]",
                      "kind": "functionapp",
                      "tags": "[parameters('Tags')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentity'))]": {}
                        }
                      },
                      "properties": {
                        "enabled": true,
                        "hostNameSslStates": [
                          {
                            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
                            "sslState": "Disabled",
                            "hostType": "Standard"
                          },
                          {
                            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
                            "sslState": "Disabled",
                            "hostType": "Repository"
                          }
                        ],
                        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]",
                        "reserved": false,
                        "isXenon": false,
                        "hyperV": false,
                        "siteConfig": {
                          "numberOfWorkers": 1,
                          "acrUseManagedIdentityCreds": false,
                          "alwaysOn": false,
                          "ipSecurityRestrictions": [
                            {
                              "ipAddress": "Any",
                              "action": "Allow",
                              "priority": 1,
                              "name": "Allow all",
                              "description": "Allow all access"
                            }
                          ],
                          "scmIpSecurityRestrictions": [
                            {
                              "ipAddress": "Any",
                              "action": "Allow",
                              "priority": 1,
                              "name": "Allow all",
                              "description": "Allow all access"
                            }
                          ],
                          "http20Enabled": false,
                          "functionAppScaleLimit": 200,
                          "minimumElasticInstanceCount": 0,
                          "minTlsVersion": "1.2"
                        },
                        "scmSiteAlsoStopped": false,
                        "clientAffinityEnabled": false,
                        "clientCertEnabled": false,
                        "clientCertMode": "Required",
                        "hostNamesDisabled": false,
                        "containerSize": 1536,
                        "dailyMemoryTimeQuota": 0,
                        "httpsOnly": true,
                        "redundancyMode": "None",
                        "storageAccountRequired": false,
                        "keyVaultReferenceIdentity": "SystemAssigned"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', format('{0}-{1}-site', parameters('functionname'), parameters('instanceName')), 'appsettings')]",
                      "properties": {
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]",
                        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]",
                        "WEBSITE_CONTENTSHARE": "[parameters('storageAccountName')]",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "ResourceGroup": "[resourceGroup().name]",
                        "SolutionTag": "[parameters('solutionTag')]",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey)]",
                        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                        "MSI_CLIENT_ID": "[parameters('userManagedIdentityClientId')]",
                        "PacksUserManagedId": "[parameters('packsUserManagedId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('functionname'))]",
                        "[resourceId('Microsoft.Web/sites', format('{0}-{1}-site', parameters('functionname'), parameters('instanceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/extensions",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}', format('{0}-{1}-site', parameters('functionname'), parameters('instanceName')), 'MSDeploy')]",
                      "properties": {
                        "packageUri": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, variables('discoveryContainerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', format('{0}-{1}-site', parameters('functionname'), parameters('instanceName')))]",
                        "[resourceId('Microsoft.Resources/deploymentScripts', format('deployscript-Function-{0}', parameters('instanceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('functionname')]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('appInsightsLocation')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "publicNetworkAccessForIngestion": "Enabled",
                        "publicNetworkAccessForQuery": "Enabled",
                        "WorkspaceResourceId": "[parameters('lawresourceid')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites/host/functionKeys",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/default/{1}', parameters('functionname'), variables('keyName'))]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "name": "[variables('keyName')]",
                        "value": "[parameters('apiManagementKey')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/config', format('{0}-{1}-site', parameters('functionname'), parameters('instanceName')), 'appsettings')]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('AMP-{0}-UMI-Function', parameters('instanceName')))]",
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs', parameters('instanceName')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('logicappname')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "functioname": {
                    "value": "[parameters('functionname')]"
                  },
                  "logicAppName": {
                    "value": "[parameters('logicappname')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "keyvaultid": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))), '2022-09-01').outputs.kvResourceId.value]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "13019368200527640903"
                    }
                  },
                  "parameters": {
                    "functioname": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "location": {
                      "type": "string"
                    },
                    "keyvaultid": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "logicAppName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "keyVaultName": "[split(parameters('keyvaultid'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Logic/workflows",
                      "apiVersion": "2019-05-01",
                      "name": "[parameters('logicAppName')]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "state": "Enabled",
                        "definition": {
                          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "$connections": {
                              "defaultValue": {},
                              "type": "Object"
                            }
                          },
                          "triggers": {
                            "manual": {
                              "type": "Request",
                              "kind": "Http",
                              "inputs": {}
                            }
                          },
                          "actions": {
                            "Get_Secret": {
                              "runAfter": {
                                "Parse_JSON": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('FunctionKey')}/value"
                              }
                            },
                            "Parse_JSON": {
                              "runAfter": {},
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                  "properties": {
                                    "function": {
                                      "type": "string"
                                    },
                                    "functionBody": {
                                      "properties": {},
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Switch": {
                              "runAfter": {
                                "Get_Secret": [
                                  "Succeeded"
                                ]
                              },
                              "cases": {
                                "Case": {
                                  "case": "tagmgmt",
                                  "actions": {
                                    "tagmgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "Headers": {
                                          "x-functions-key": "[listKeys(resourceId('Microsoft.Web/sites/host', parameters('functioname'), 'default'), '2022-09-01').functionKeys.monitoringKey]"
                                        },
                                        "function": {
                                          "id": "[format('{0}/functions/tagmgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_2": {
                                  "case": "alertmgmt",
                                  "actions": {
                                    "alertConfigMgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/alertConfigMgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_3": {
                                  "case": "policymgmt",
                                  "actions": {
                                    "policymgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/policymgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "default": {
                                "actions": {}
                              },
                              "expression": "@body('Parse_JSON')?['Function']",
                              "type": "Switch"
                            }
                          },
                          "outputs": {}
                        },
                        "parameters": {
                          "$connections": {
                            "value": {
                              "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'keyvault')]",
                                "connectionName": "keyvault",
                                "connectionProperties": {
                                  "authentication": {
                                    "type": "ManagedServiceIdentity"
                                  }
                                },
                                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/eastus/managedApis/keyvault', parameters('subscriptionId'))]"
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/connections', 'keyvault')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/connections",
                      "apiVersion": "2018-07-01-preview",
                      "name": "keyvault",
                      "properties": {
                        "displayName": "KeyVault",
                        "authenticatedUser": {},
                        "overallStatus": "Ready",
                        "statuses": [
                          {
                            "status": "Ready"
                          }
                        ],
                        "connectionState": "Enabled",
                        "parameterValueSet": {
                          "name": "oauthMI",
                          "values": {
                            "vaultName": {
                              "value": "[variables('keyVaultName')]"
                            }
                          }
                        },
                        "customParameterValues": {},
                        "createdTime": "2023-10-12T20:52:26.0864876Z",
                        "changedTime": "2023-10-12T20:52:26.0864876Z",
                        "api": {
                          "name": "keyvault",
                          "displayName": "Azure Key Vault",
                          "description": "Azure Key Vault is a service to securely store and access secrets.",
                          "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1656/1.0.1656.3432/keyvault/icon.png",
                          "brandColor": "#0079d6",
                          "category": "Standard",
                          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/keyvault', parameters('subscriptionId'), parameters('location'))]",
                          "type": "Microsoft.Web/locations/managedApis"
                        },
                        "testLinks": [],
                        "testRequests": []
                      },
                      "location": "[parameters('location')]"
                    }
                  ],
                  "outputs": {
                    "logicAppPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '2019-05-01', 'full').identity.principalId]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('functionname'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6)))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "workbookdeployment",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "16594269274820928345"
                    }
                  },
                  "parameters": {
                    "Tags": {
                      "type": "object"
                    },
                    "location": {
                      "type": "string"
                    },
                    "lawresourceid": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "wbConfig": "{\n  \"version\": \"Notebook/1.0\",\n  \"items\": [\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Monitor Starter Packs - Admin Centre\\n\\n\\n\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"textTitle\"\n    },\n    {\n      \"type\": 9,\n      \"content\": {\n        \"version\": \"KqlParameterItem/1.0\",\n        \"parameters\": [\n          {\n            \"id\": \"741661c9-5e51-44bc-8e8e-bfc6396f2646\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"showHelp\",\n            \"label\": \"Show Help Info\",\n            \"type\": 10,\n            \"isRequired\": true,\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [],\n              \"showDefault\": false\n            },\n            \"jsonData\": \"[\\n    { \\\"value\\\":\\\"yes\\\", \\\"label\\\":\\\"Yes\\\",\\\"default\\\": \\\"yes\\\" },\\n    { \\\"value\\\":\\\"no\\\", \\\"label\\\":\\\"No\\\" }\\n]\",\n            \"timeContext\": {\n              \"durationMs\": 86400000\n            },\n            \"value\": \"no\"\n          }\n        ],\n        \"style\": \"above\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"showHelpparameter\"\n    },\n    {\n      \"type\": 11,\n      \"content\": {\n        \"version\": \"LinkItem/1.0\",\n        \"style\": \"tabs\",\n        \"links\": [\n          {\n            \"id\": \"a9a63932-4a11-4fe1-938c-02619e609193\",\n            \"cellValue\": \"tabSelection\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Getting Started\",\n            \"subTarget\": \"gettingstarted\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"4f0ca437-37b0-42f6-a150-e994338f5185\",\n            \"cellValue\": \"tabSelection\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Status\",\n            \"subTarget\": \"status\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"15f0fa97-4286-48d6-9dea-26a956197d26\",\n            \"cellValue\": \"tabSelection\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Servers\",\n            \"subTarget\": \"discovery\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"7499a88f-a536-41d7-9b58-9ebae1b5290e\",\n            \"cellValue\": \"tabSelection\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Alert Setup\",\n            \"subTarget\": \"alertmanagement\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"3a19e3a9-d64d-41d8-a313-3a60db36bcc4\",\n            \"cellValue\": \"tabSelection\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Policy Management\",\n            \"subTarget\": \"policystatus\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"c2a67d72-dd46-44ea-adba-b9d70915c607\",\n            \"cellValue\": \"tabSelection\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Pack Status\",\n            \"subTarget\": \"rulemanagement\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"d8f7936d-170f-430d-af7d-ac22115a9e38\",\n            \"cellValue\": \"tabSelection\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Agent Info\",\n            \"subTarget\": \"agentmgmt\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"e1f636a4-1593-49ef-bf35-abf708e2be48\",\n            \"cellValue\": \"tabSelection\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Configuration\",\n            \"subTarget\": \"backend\",\n            \"style\": \"link\"\n          },\n          {\n            \"id\": \"afec2944-3bd3-4bd3-8afa-6dc39d0b623a\",\n            \"cellValue\": \"tabSelection\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"Discovery\",\n            \"subTarget\": \"autodiscovery\",\n            \"style\": \"link\"\n          }\n        ]\n      },\n      \"name\": \"mainLinksTab\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"loadType\": \"always\",\n        \"items\": [\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"## General Parameters\",\n              \"style\": \"info\"\n            },\n            \"name\": \"text - 3\"\n          },\n          {\n            \"type\": 9,\n            \"content\": {\n              \"version\": \"KqlParameterItem/1.0\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"parameters\": [\n                {\n                  \"id\": \"7a778b2c-619d-4f82-bd1c-810f853af6fd\",\n                  \"version\": \"KqlParameterItem/1.0\",\n                  \"name\": \"Subscriptions\",\n                  \"type\": 6,\n                  \"isRequired\": true,\n                  \"isGlobal\": true,\n                  \"multiSelect\": true,\n                  \"quote\": \"'\",\n                  \"delimiter\": \",\",\n                  \"typeSettings\": {\n                    \"additionalResourceOptions\": [\n                      \"value::all\"\n                    ],\n                    \"includeAll\": false,\n                    \"showDefault\": false\n                  },\n                  \"timeContext\": {\n                    \"durationMs\": 86400000\n                  },\n                  \"value\": [\n                    \"/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca\",\n                    \"/subscriptions/b1e924f9-d16f-4260-a3c8-ff1ee462956b\"\n                  ]\n                },\n                {\n                  \"id\": \"1efb8bbe-532a-491b-b3c4-55f1402ee280\",\n                  \"version\": \"KqlParameterItem/1.0\",\n                  \"name\": \"logicAppResource\",\n                  \"label\": \"Logic App\",\n                  \"type\": 5,\n                  \"isRequired\": true,\n                  \"query\": \"resources\\n| where type == \\\"microsoft.logic/workflows\\\" \\n| where isnotempty(tags.MonitorStarterPacksComponents)\\n| project Id=id, Name=name\",\n                  \"crossComponentResources\": [\n                    \"value::tenant\"\n                  ],\n                  \"typeSettings\": {\n                    \"resourceTypeFilter\": {\n                      \"microsoft.logic/workflows\": true\n                    },\n                    \"additionalResourceOptions\": [],\n                    \"showDefault\": false\n                  },\n                  \"timeContext\": {\n                    \"durationMs\": 86400000\n                  },\n                  \"queryType\": 1,\n                  \"resourceType\": \"microsoft.resources/tenants\",\n                  \"value\": \"/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca/resourceGroups/rg-MonstarPacks/providers/Microsoft.Logic/workflows/MonitorStarterPacks-Backend\"\n                },\n                {\n                  \"id\": \"ea93902e-9856-4bd4-998d-ea88378907a7\",\n                  \"version\": \"KqlParameterItem/1.0\",\n                  \"name\": \"GrafanaInstance\",\n                  \"label\": \"Azure Managed Grafana\",\n                  \"type\": 2,\n                  \"isRequired\": true,\n                  \"isGlobal\": true,\n                  \"query\": \"resources\\n| where type =~ \\\"microsoft.dashboard/grafana\\\"\\n| where isnotempty(tags.monitorStarterPacksComponents) or isnotempty(tags.MonitorStarterPacksComponents)\\n| project id, label=properties.endpoint\",\n                  \"crossComponentResources\": [\n                    \"value::tenant\"\n                  ],\n                  \"typeSettings\": {\n                    \"additionalResourceOptions\": [],\n                    \"showDefault\": false\n                  },\n                  \"timeContext\": {\n                    \"durationMs\": 86400000\n                  },\n                  \"queryType\": 1,\n                  \"resourceType\": \"microsoft.resources/tenants\",\n                  \"value\": \"/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca/resourceGroups/rg-MonstarPacks/providers/Microsoft.Dashboard/grafana/AMSP623923\"\n                },\n                {\n                  \"id\": \"4552c35d-c26c-4cbf-a4cf-b2e57ff7ee78\",\n                  \"version\": \"KqlParameterItem/1.0\",\n                  \"name\": \"Workspace\",\n                  \"label\": \"WorkSpace\",\n                  \"type\": 5,\n                  \"isRequired\": true,\n                  \"isGlobal\": true,\n                  \"query\": \"resources\\n| where type == \\\"microsoft.operationalinsights/workspaces\\\"\\n| project id\",\n                  \"crossComponentResources\": [\n                    \"value::all\"\n                  ],\n                  \"typeSettings\": {\n                    \"additionalResourceOptions\": [],\n                    \"showDefault\": false\n                  },\n                  \"queryType\": 1,\n                  \"resourceType\": \"microsoft.resourcegraph/resources\",\n                  \"value\": \"/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca/resourceGroups/rg-MonstarPacks/providers/Microsoft.OperationalInsights/workspaces/Monster-LAW\"\n                }\n              ],\n              \"style\": \"above\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\"\n            },\n            \"customWidth\": \"100\",\n            \"conditionalVisibility\": {\n              \"parameterName\": \"tabSelection\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"backend\"\n            },\n            \"name\": \"generalParams\"\n          }\n        ],\n        \"exportParameters\": true\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"backend\"\n      },\n      \"name\": \"ConfigStatusGroup\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Getting Started\\n\\nWelcome to the Azure Monitor Starter Packs. This workbook was designed to help you configuring the solution. Here you can:\\n- Enable/Disable monitoring packs for one or more VMs. You may also disable all the monitoring for a specific server. This will remove the tags and the rule associations*\\n- Enable/Disable Alerts in bulk. You can also assign a different Action group to one or more alerts.\\n- Check policy status and start remediation if required. By clicking in a policy, you can also assign that policy to another scope.\\n- Check Monitor pack associations\\n\\n## ***If this is the first time using this solution, please configure parameters in the Configuration tab and save the workbook for proper functionality.***\\n\\n\\n[Azure MONitor STARter Packs](http://github.com/Azure/AzureMonitorStarterPacks)\\n\\n[Azure Managed Grafana ({GrafanaInstance:label})]({GrafanaInstance:label})\\n\\n\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"gettingstarted\"\n      },\n      \"name\": \"textGetStarted\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"items\": [\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"resources | where type =~ 'microsoft.hybridcompute/machines' or type =~ 'microsoft.compute/virtualmachines'\\n| extend MonitorStatus=iff(isempty(tostring(tags.MonitorStarterPacks)),'Monitored','Not Monitored')\\n| summarize count() by MonitorStatus\",\n              \"size\": 1,\n              \"title\": \"Monitoring Status (Tags)\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"visualization\": \"piechart\",\n              \"chartSettings\": {\n                \"seriesLabelSettings\": [\n                  {\n                    \"seriesName\": \"Monitored\",\n                    \"color\": \"green\"\n                  },\n                  {\n                    \"seriesName\": \"Not Monitored\",\n                    \"color\": \"orange\"\n                  }\n                ]\n              }\n            },\n            \"customWidth\": \"33\",\n            \"name\": \"Monitoring Status Tags\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"Resources\\n| where type == 'microsoft.compute/virtualmachines'\\n| extend\\n    JoinID = toupper(id)\\n| join kind=leftouter(\\n    Resources\\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId\\n| union (Resources\\n| where type == 'microsoft.hybridcompute/machines'\\n| extend\\n    JoinID = toupper(id)\\n| join kind=leftouter(\\n    Resources\\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId)\\n| summarize count() by AgentInstalled=iff(isempty(ExtensionName),\\\"No\\\",\\\"Yes\\\")\",\n              \"size\": 1,\n              \"title\": \"Agent Install Status\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"visualization\": \"piechart\",\n              \"chartSettings\": {\n                \"seriesLabelSettings\": [\n                  {\n                    \"seriesName\": \"Yes\",\n                    \"label\": \"AMA Installed\",\n                    \"color\": \"green\"\n                  },\n                  {\n                    \"seriesName\": \"No\",\n                    \"label\": \"No AMA\",\n                    \"color\": \"red\"\n                  }\n                ]\n              }\n            },\n            \"customWidth\": \"33\",\n            \"name\": \"agentInstallStatus\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"policyresources | where type == \\\"microsoft.policyinsights/policystates\\\" | extend policyName=tostring(properties.policyDefinitionName), complianceState=properties.complianceState\\n| join (policyresources | where type == \\\"microsoft.authorization/policydefinitions\\\" and isnotempty(properties.metadata.MonitorStarterPacks) | project policyId=id, policyName=name, pack=tostring(properties.metadata.MonitorStarterPacks)) on policyName\\n| project policyId, policyName, complianceState=tostring(complianceState), pack,type='Policy'\\n| union( policyresources\\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\\n| extend complianceState = tostring(properties.complianceState)\\n| extend\\n\\tresourceId = tostring(properties.resourceId),\\n\\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\\n\\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\\n\\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\\n\\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\\n\\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\\n\\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\\n| summarize overallStateWeight = max(max_stateWeight),\\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\\ncompliantCount = sumif(counts, max_stateWeight == 200),\\nconflictCount = sumif(counts, max_stateWeight == 100),\\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\\ncompliancePercentage,\\ncompliantCount,\\nnonCompliantCount,\\nconflictCount,\\nexemptCount\\n| where isnotempty(policySetDefinitionId)\\n| join (policyresources\\n| where type =~ 'microsoft.authorization/policysetdefinitions' and isnotempty(properties.metadata.MonitorStarterPacks)\\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\\n| project policyId=policySetDefinitionId, policyName=name,complianceState,pack='N/A', type='Set')\\n| summarize count() by complianceState,policyName\",\n              \"size\": 1,\n              \"title\": \"Assignment Policies Status\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"visualization\": \"piechart\",\n              \"chartSettings\": {\n                \"seriesLabelSettings\": [\n                  {\n                    \"seriesName\": \"Compliant\",\n                    \"label\": \"Compliant\",\n                    \"color\": \"green\"\n                  },\n                  {\n                    \"seriesName\": \"nonCompliant\",\n                    \"label\": \"Not Compliant\",\n                    \"color\": \"redDark\"\n                  }\n                ]\n              }\n            },\n            \"customWidth\": \"33\",\n            \"name\": \"policyComplianceStatus\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"insightsresources\\n| where type == \\\"microsoft.insights/datacollectionruleassociations\\\"\\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\\n| where isnotnull(properties.dataCollectionRuleId)\\n| project rulename=tostring(split(properties.dataCollectionRuleId,\\\"/\\\")[8]),resourceName=tostring(split(resourceId,\\\"/\\\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\\n| join (resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\\n| project-away rulename,rulename1,resourceId\\n| summarize Associated=count() by Pack\\n| sort by Pack asc\",\n              \"size\": 1,\n              \"title\": \"Servers/Pack (Association)\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"visualization\": \"piechart\",\n              \"tileSettings\": {\n                \"showBorder\": false,\n                \"titleContent\": {\n                  \"columnMatch\": \"Pack\",\n                  \"formatter\": 1\n                },\n                \"leftContent\": {\n                  \"columnMatch\": \"Associated\",\n                  \"formatter\": 12,\n                  \"formatOptions\": {\n                    \"palette\": \"auto\"\n                  },\n                  \"numberFormat\": {\n                    \"unit\": 17,\n                    \"options\": {\n                      \"maximumSignificantDigits\": 3,\n                      \"maximumFractionDigits\": 2\n                    }\n                  }\n                }\n              },\n              \"mapSettings\": {\n                \"locInfo\": \"LatLong\",\n                \"sizeSettings\": \"Associated\",\n                \"sizeAggregation\": \"Sum\",\n                \"legendMetric\": \"Associated\",\n                \"legendAggregation\": \"Sum\",\n                \"itemColorSettings\": {\n                  \"type\": \"heatmap\",\n                  \"colorAggregation\": \"Sum\",\n                  \"nodeColorField\": \"Associated\",\n                  \"heatmapPalette\": \"greenRed\"\n                }\n              }\n            },\n            \"customWidth\": \"33\",\n            \"name\": \"AssociatedResourceStatsperTag - Copy - Copy\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"insightsresources\\n| where type == \\\"microsoft.insights/datacollectionruleassociations\\\"\\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\\n| where isnotnull(properties.dataCollectionRuleId)\\n| project rulename=tostring(split(properties.dataCollectionRuleId,\\\"/\\\")[8]),resourceName=tostring(split(resourceId,\\\"/\\\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\\n| join (resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\\n| project-away rulename,rulename1,resourceId\\n| summarize Tagged=count() by Pack\\n| sort by Pack asc\\n\\n\\n\",\n              \"size\": 1,\n              \"title\": \"Tagged Resources per Tag\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"visualization\": \"tiles\",\n              \"tileSettings\": {\n                \"showBorder\": false,\n                \"titleContent\": {\n                  \"columnMatch\": \"Pack\",\n                  \"formatter\": 1\n                },\n                \"leftContent\": {\n                  \"columnMatch\": \"Tagged\",\n                  \"formatter\": 12,\n                  \"formatOptions\": {\n                    \"palette\": \"auto\"\n                  },\n                  \"numberFormat\": {\n                    \"unit\": 17,\n                    \"options\": {\n                      \"maximumSignificantDigits\": 3,\n                      \"maximumFractionDigits\": 2\n                    }\n                  }\n                }\n              }\n            },\n            \"customWidth\": \"33\",\n            \"name\": \"taggedResourceStatsperTag\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"insightsresources\\n| where type == \\\"microsoft.insights/datacollectionruleassociations\\\"\\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\\n| where isnotnull(properties.dataCollectionRuleId)\\n| project rulename=tostring(split(properties.dataCollectionRuleId,\\\"/\\\")[8]),resourceName=tostring(split(resourceId,\\\"/\\\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\\n| join (resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\\n| project-away rulename,rulename1,resourceId\\n| summarize Associated=count() by Pack\\n| sort by Pack asc\",\n              \"size\": 1,\n              \"title\": \"Associated Servers per Pack\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"visualization\": \"tiles\",\n              \"tileSettings\": {\n                \"showBorder\": false,\n                \"titleContent\": {\n                  \"columnMatch\": \"Pack\",\n                  \"formatter\": 1\n                },\n                \"leftContent\": {\n                  \"columnMatch\": \"Associated\",\n                  \"formatter\": 12,\n                  \"formatOptions\": {\n                    \"palette\": \"auto\"\n                  },\n                  \"numberFormat\": {\n                    \"unit\": 17,\n                    \"options\": {\n                      \"maximumSignificantDigits\": 3,\n                      \"maximumFractionDigits\": 2\n                    }\n                  }\n                }\n              }\n            },\n            \"customWidth\": \"33\",\n            \"name\": \"AssociatedResourceStatsperTag - Copy\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"alertsmanagementresources\\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status,severity=properties.context.context.severity\\n| where isnotempty(alertRule)\\n| join (resources\\n| where type == \\\"microsoft.insights/scheduledqueryrules\\\" or type ==\\\"microsoft.insights/metricalerts\\\" or type == 'microsoft.insights/activitylogalerts'\\n| where isnotempty(tags.MonitorStarterPacks)\\n| extend alertRule=tolower(tostring(['id']))) on alertRule\\n| project ['Alert Name']=name,['Details']=['Alert Id'], Status=status, Resource=resourceId, Sev=severity\\n| where Status=='Activated'\\n\",\n              \"size\": 0,\n              \"title\": \"Active Alerts\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"gridSettings\": {\n                \"formatters\": [\n                  {\n                    \"columnMatch\": \"Details\",\n                    \"formatter\": 7,\n                    \"formatOptions\": {\n                      \"linkTarget\": \"Resource\",\n                      \"linkLabel\": \"Details\",\n                      \"linkIsContextBlade\": true\n                    }\n                  },\n                  {\n                    \"columnMatch\": \"Status\",\n                    \"formatter\": 18,\n                    \"formatOptions\": {\n                      \"thresholdsOptions\": \"icons\",\n                      \"thresholdsGrid\": [\n                        {\n                          \"operator\": \"==\",\n                          \"thresholdValue\": \"Activated\",\n                          \"representation\": \"up\",\n                          \"text\": \"{0}{1}\"\n                        },\n                        {\n                          \"operator\": \"Default\",\n                          \"thresholdValue\": null,\n                          \"representation\": \"success\",\n                          \"text\": \"{0}{1}\"\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    \"columnMatch\": \"Resource\",\n                    \"formatter\": 13,\n                    \"formatOptions\": {\n                      \"linkTarget\": \"Resource\",\n                      \"linkIsContextBlade\": true,\n                      \"showIcon\": true\n                    }\n                  },\n                  {\n                    \"columnMatch\": \"Sev\",\n                    \"formatter\": 18,\n                    \"formatOptions\": {\n                      \"thresholdsOptions\": \"icons\",\n                      \"thresholdsGrid\": [\n                        {\n                          \"operator\": \"==\",\n                          \"thresholdValue\": \"1\",\n                          \"representation\": \"Sev1\",\n                          \"text\": \"{0}{1}\"\n                        },\n                        {\n                          \"operator\": \"==\",\n                          \"thresholdValue\": \"2\",\n                          \"representation\": \"Sev2\",\n                          \"text\": \"{0}{1}\"\n                        },\n                        {\n                          \"operator\": \"==\",\n                          \"thresholdValue\": \"3\",\n                          \"representation\": \"Sev3\",\n                          \"text\": \"{0}{1}\"\n                        },\n                        {\n                          \"operator\": \"==\",\n                          \"thresholdValue\": \"4\",\n                          \"representation\": \"Sev4\",\n                          \"text\": \"{0}{1}\"\n                        },\n                        {\n                          \"operator\": \"==\",\n                          \"thresholdValue\": \"0\",\n                          \"representation\": \"Sev0\",\n                          \"text\": \"{0}{1}\"\n                        },\n                        {\n                          \"operator\": \"Default\",\n                          \"thresholdValue\": null,\n                          \"representation\": \"unknown\",\n                          \"text\": \"{0}{1}\"\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    \"columnMatch\": \"Alert Id\",\n                    \"formatter\": 7,\n                    \"formatOptions\": {\n                      \"linkTarget\": \"Resource\",\n                      \"linkLabel\": \"Details\",\n                      \"linkIsContextBlade\": true\n                    }\n                  },\n                  {\n                    \"columnMatch\": \"Target\",\n                    \"formatter\": 13,\n                    \"formatOptions\": {\n                      \"linkTarget\": null,\n                      \"showIcon\": true\n                    }\n                  }\n                ]\n              }\n            },\n            \"customWidth\": \"66\",\n            \"name\": \"activeAlertsquery\"\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"alertsmanagementresources\\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status\\n| where isnotempty(alertRule)\\n| join (resources\\n| where type == \\\"microsoft.insights/scheduledqueryrules\\\" or type ==\\\"microsoft.insights/metricalerts\\\" or type == 'microsoft.insights/activitylogalerts'\\n| where isnotempty(tags.MonitorStarterPacks)\\n| extend alertRule=tolower(tostring(['id']))) on alertRule\\n| summarize count() by AlertType=type\\n\\n\",\n              \"size\": 0,\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"visualization\": \"piechart\"\n            },\n            \"customWidth\": \"33\",\n            \"name\": \"activeAlertsQueryPie\"\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"status\"\n      },\n      \"name\": \"dashboardgroup\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"## Server Monitoring Setup\\n\\nSelect servers on the right to assign a pack. Once the backend is done with the assigning, the server will show on the left side grid.\\n\\nOn the left side grid, the monitoring can be updated to add more packs, as well as to remove a specific pack or remove any monitoring altogether from the server.\",\n        \"style\": \"info\"\n      },\n      \"conditionalVisibilities\": [\n        {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"discovery\"\n        },\n        {\n          \"parameterName\": \"showHelp\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"yes\"\n        }\n      ],\n      \"name\": \"serversMonitoringHelptext\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"title\": \"Servers\",\n        \"items\": [\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"When Monitoring is first enabled, the Azure Monitoring Agent will also be installed to the selected servers.\",\n              \"style\": \"info\"\n            },\n            \"name\": \"text - 3\"\n          },\n          {\n            \"type\": 12,\n            \"content\": {\n              \"version\": \"NotebookGroup/1.0\",\n              \"groupType\": \"editable\",\n              \"items\": [\n                {\n                  \"type\": 3,\n                  \"content\": {\n                    \"version\": \"KqlItem/1.0\",\n                    \"query\": \"resources | where type =~ 'microsoft.hybridcompute/machines' \\n| where isnotempty(tolower(tags.MonitorStarterPacks))\\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.osType, subscriptionId, Location=location\\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \\n| where isnotempty(tolower(tags.MonitorStarterPacks))\\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location)\\n| join kind= leftouter   (resourcecontainers\\n| where type =~ 'microsoft.resources/subscriptions'\\n| project Subscription=name,subscriptionId) on subscriptionId\\n| project-away subscriptionId, subscriptionId1\",\n                    \"size\": 0,\n                    \"title\": \"Monitored Machines\",\n                    \"exportMultipleValues\": true,\n                    \"exportedParameters\": [\n                      {\n                        \"fieldName\": \"\",\n                        \"parameterName\": \"taggedVMs\",\n                        \"parameterType\": 5,\n                        \"quote\": \"\"\n                      }\n                    ],\n                    \"queryType\": 1,\n                    \"resourceType\": \"microsoft.resourcegraph/resources\",\n                    \"crossComponentResources\": [\n                      \"{Subscriptions}\"\n                    ],\n                    \"visualization\": \"table\",\n                    \"gridSettings\": {\n                      \"filter\": true\n                    },\n                    \"sortBy\": []\n                  },\n                  \"name\": \"Monitored Servers\",\n                  \"styleSettings\": {\n                    \"margin\": \"400\",\n                    \"padding\": \"400\",\n                    \"showBorder\": true\n                  }\n                },\n                {\n                  \"type\": 9,\n                  \"content\": {\n                    \"version\": \"KqlParameterItem/1.0\",\n                    \"crossComponentResources\": [\n                      \"{Workspace}\"\n                    ],\n                    \"parameters\": [\n                      {\n                        \"id\": \"54f2c7fb-7251-43b6-aa4d-fd94647cac4a\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"PackTagsLeft\",\n                        \"label\": \"Add/Remove\",\n                        \"type\": 2,\n                        \"isGlobal\": true,\n                        \"query\": \"resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project MPs=tostring(tags.MonitorStarterPacks)\\n| summarize by MPs\\n\",\n                        \"crossComponentResources\": [\n                          \"{Workspace}\"\n                        ],\n                        \"typeSettings\": {\n                          \"additionalResourceOptions\": [],\n                          \"showDefault\": false\n                        },\n                        \"timeContext\": {\n                          \"durationMs\": 86400000\n                        },\n                        \"queryType\": 1,\n                        \"resourceType\": \"microsoft.resourcegraph/resources\",\n                        \"value\": null\n                      }\n                    ],\n                    \"style\": \"pills\",\n                    \"queryType\": 1,\n                    \"resourceType\": \"microsoft.resourcegraph/resources\"\n                  },\n                  \"customWidth\": \"25\",\n                  \"conditionalVisibility\": {\n                    \"parameterName\": \"taggedVMs\",\n                    \"comparison\": \"isNotEqualTo\"\n                  },\n                  \"name\": \"parameters - 5 - Copy\"\n                },\n                {\n                  \"type\": 11,\n                  \"content\": {\n                    \"version\": \"LinkItem/1.0\",\n                    \"style\": \"paragraph\",\n                    \"links\": [\n                      {\n                        \"id\": \"36b65f94-1c3d-4e7a-b771-677a2081d288\",\n                        \"cellValue\": \"\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Remove Monitoring for {PackTagsLeft} Pack \",\n                        \"preText\": \"\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [\n                            {\n                              \"key\": \"action\",\n                              \"value\": \"removeTag\"\n                            }\n                          ],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"tagmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"RemoveTag\\\",\\n    \\\"Resources\\\": [{taggedVMs}],\\n    \\\"Pack\\\": \\\"{PackTagsLeft}\\\"\\n  }\\n}\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Remove Monitoring\",\n                          \"description\": \"# Please confirm the change.\\n\\nRemove Monitoring for {PackTagsLeft} Pack \\n\\nServers:\\n\\n{taggedVMs}\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      },\n                      {\n                        \"id\": \"550df977-06a8-4c40-9cd3-aba6286ebcdf\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Add Monitoring for {PackTagsLeft} Pack\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"tagmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"AddTag\\\",\\n    \\\"Resources\\\": [{taggedVMs}],\\n    \\\"Pack\\\": \\\"{PackTagsLeft}\\\"\\n  }\\n}\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Add Monitoring\",\n                          \"description\": \"# Please confirm the change.\\n\\nAdd Monitoring for {PackTagsLeft} Pack \",\n                          \"actionName\": \"AddMonitoringPack\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      },\n                      {\n                        \"id\": \"3b1af630-47ab-43e9-a5b2-d2f2e21880d0\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Remove All Monitoring for VM\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"tagmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"RemoveTag\\\",\\n    \\\"Resources\\\": [{taggedVMs}],\\n    \\\"Pack\\\": \\\"All\\\"\\n  }\\n}\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Remove All Monitoring\",\n                          \"description\": \"# Please confirm the change.\\n\\nRemove All Monitoring for {PackTagsLeft} Pack \",\n                          \"actionName\": \"RemoveAllMonitoring\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      }\n                    ]\n                  },\n                  \"customWidth\": \"75\",\n                  \"conditionalVisibility\": {\n                    \"parameterName\": \"taggedVMs\",\n                    \"comparison\": \"isNotEqualTo\"\n                  },\n                  \"name\": \"links - 1\"\n                }\n              ],\n              \"exportParameters\": true\n            },\n            \"customWidth\": \"50\",\n            \"conditionalVisibility\": {\n              \"parameterName\": \"tabSelection\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"discovery\"\n            },\n            \"name\": \"TaggedGroup\"\n          },\n          {\n            \"type\": 12,\n            \"content\": {\n              \"version\": \"NotebookGroup/1.0\",\n              \"groupType\": \"editable\",\n              \"items\": [\n                {\n                  \"type\": 3,\n                  \"content\": {\n                    \"version\": \"KqlItem/1.0\",\n                    \"query\": \"resources | where type =~ 'microsoft.hybridcompute/machines' \\n| where isempty(tolower(tags.MonitorStarterPacks)) //and subscriptionId in split('{Subscriptions:subscriptionId}',',')\\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.osType, subscriptionId, Location=location\\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \\n| where isempty(tolower(tags.MonitorStarterPacks)) //and subscriptionId in split('{Subscriptions:subscriptionId}',',')\\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location)\\n| join kind= leftouter   (resourcecontainers\\n| where type =~ 'microsoft.resources/subscriptions'\\n| project Subscription=name,subscriptionId) on subscriptionId\\n| project-away subscriptionId, subscriptionId1\",\n                    \"size\": 0,\n                    \"title\": \"Non-monitored Machines\",\n                    \"exportMultipleValues\": true,\n                    \"exportedParameters\": [\n                      {\n                        \"parameterName\": \"vmstotag\",\n                        \"parameterType\": 1,\n                        \"quote\": \"\"\n                      }\n                    ],\n                    \"queryType\": 1,\n                    \"resourceType\": \"microsoft.resourcegraph/resources\",\n                    \"crossComponentResources\": [\n                      \"{Subscriptions}\"\n                    ],\n                    \"visualization\": \"table\",\n                    \"gridSettings\": {\n                      \"filter\": true\n                    },\n                    \"sortBy\": []\n                  },\n                  \"name\": \"Non Monitores Servers\",\n                  \"styleSettings\": {\n                    \"margin\": \"400\",\n                    \"padding\": \"400\",\n                    \"showBorder\": true\n                  }\n                },\n                {\n                  \"type\": 9,\n                  \"content\": {\n                    \"version\": \"KqlParameterItem/1.0\",\n                    \"crossComponentResources\": [\n                      \"value::tenant\"\n                    ],\n                    \"parameters\": [\n                      {\n                        \"id\": \"8a177eab-edac-41cc-84f9-a5b7de931bea\",\n                        \"version\": \"KqlParameterItem/1.0\",\n                        \"name\": \"PackTags\",\n                        \"label\": \"Select Pack to Enable\",\n                        \"type\": 2,\n                        \"isGlobal\": true,\n                        \"query\": \"resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project MPs=tostring(tags.MonitorStarterPacks)\\n| summarize by MPs\",\n                        \"crossComponentResources\": [\n                          \"value::tenant\"\n                        ],\n                        \"typeSettings\": {\n                          \"additionalResourceOptions\": [],\n                          \"showDefault\": false\n                        },\n                        \"timeContext\": {\n                          \"durationMs\": 86400000\n                        },\n                        \"queryType\": 1,\n                        \"resourceType\": \"microsoft.resources/tenants\",\n                        \"value\": null\n                      }\n                    ],\n                    \"style\": \"pills\",\n                    \"queryType\": 1,\n                    \"resourceType\": \"microsoft.resources/tenants\"\n                  },\n                  \"customWidth\": \"50\",\n                  \"conditionalVisibility\": {\n                    \"parameterName\": \"vmstotag\",\n                    \"comparison\": \"isNotEqualTo\"\n                  },\n                  \"name\": \"parameters - 5\"\n                },\n                {\n                  \"type\": 11,\n                  \"content\": {\n                    \"version\": \"LinkItem/1.0\",\n                    \"style\": \"paragraph\",\n                    \"links\": [\n                      {\n                        \"id\": \"91fb0fed-0e4f-41ce-9024-98a3cc4432a7\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Enable Monitoring for {PackTags} Pack\",\n                        \"preText\": \"\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [\n                            {\n                              \"key\": \"action\",\n                              \"value\": \"addTag\"\n                            }\n                          ],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"tagmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"AddTag\\\",\\n    \\\"Resources\\\": [{vmstotag}],\\n    \\\"Pack\\\": \\\"{PackTags}\\\"\\n  }\\n}\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Enable Monitoring Packs\",\n                          \"description\": \"# This will enable the pack for the following servers:\\n{vmstotag}\\n\\nby adding the {PackTags} to the server.\",\n                          \"actionName\": \"EnableMonitoring\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      }\n                    ]\n                  },\n                  \"customWidth\": \"50\",\n                  \"conditionalVisibility\": {\n                    \"parameterName\": \"vmstotag\",\n                    \"comparison\": \"isNotEqualTo\"\n                  },\n                  \"name\": \"links - 1 - Copy\"\n                }\n              ],\n              \"exportParameters\": true\n            },\n            \"customWidth\": \"50\",\n            \"conditionalVisibility\": {\n              \"parameterName\": \"tabSelection\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"discovery\"\n            },\n            \"name\": \"NonTaggedGroup\"\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"discovery\"\n      },\n      \"name\": \"Servers\",\n      \"styleSettings\": {\n        \"showBorder\": true\n      }\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"title\": \"Alert Management - MonStar Alerts\",\n        \"items\": [\n          {\n            \"type\": 9,\n            \"content\": {\n              \"version\": \"KqlParameterItem/1.0\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"parameters\": [\n                {\n                  \"id\": \"e99b4870-f7a6-4b8e-95b7-6aaeece1f438\",\n                  \"version\": \"KqlParameterItem/1.0\",\n                  \"name\": \"AlertPack\",\n                  \"type\": 2,\n                  \"query\": \"resources\\n| where tolower(type) in (\\\"microsoft.insights/scheduledqueryrules\\\", \\\"microsoft.insights/metricalerts\\\",\\\"microsoft.insights/activitylogalerts\\\")\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project MPs=tostring(tags.MonitorStarterPacks)\\n| summarize by MPs\\n\",\n                  \"crossComponentResources\": [\n                    \"value::tenant\"\n                  ],\n                  \"typeSettings\": {\n                    \"additionalResourceOptions\": [],\n                    \"showDefault\": false\n                  },\n                  \"timeContext\": {\n                    \"durationMs\": 86400000\n                  },\n                  \"queryType\": 1,\n                  \"resourceType\": \"microsoft.resources/tenants\",\n                  \"value\": \"DNS2016\"\n                }\n              ],\n              \"style\": \"pills\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\"\n            },\n            \"name\": \"parameters - 7\"\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"resources\\n| where tolower(type) in (\\\"microsoft.insights/scheduledqueryrules\\\")\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1]\\n| union (\\nresources\\n| where tolower(type) in (\\\"microsoft.insights/metricalerts\\\")\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1])\\n| union (resources\\n| where tolower(type) in (\\\"microsoft.insights/activitylogalerts\\\")\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1])\\n| where MP=='{AlertPack}'\",\n              \"size\": 0,\n              \"exportMultipleValues\": true,\n              \"exportedParameters\": [\n                {\n                  \"fieldName\": \"\",\n                  \"parameterName\": \"alertsselected\",\n                  \"parameterType\": 1,\n                  \"quote\": \"\"\n                }\n              ],\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"visualization\": \"table\",\n              \"gridSettings\": {\n                \"formatters\": [\n                  {\n                    \"columnMatch\": \"location\",\n                    \"formatter\": 5\n                  },\n                  {\n                    \"columnMatch\": \"name\",\n                    \"formatter\": 7\n                  }\n                ],\n                \"filter\": true\n              }\n            },\n            \"customWidth\": \"70\",\n            \"name\": \"AlertConfigQuery\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 12,\n            \"content\": {\n              \"version\": \"NotebookGroup/1.0\",\n              \"groupType\": \"editable\",\n              \"items\": [\n                {\n                  \"type\": 1,\n                  \"content\": {\n                    \"json\": \"# Enable or Disable alerts. \\n\\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\\n\\n# Update Action Group\\n## Select a list of alerts on the left and a new Action Group to assign to the alert.\",\n                    \"style\": \"info\"\n                  },\n                  \"conditionalVisibility\": {\n                    \"parameterName\": \"showHelp\",\n                    \"comparison\": \"isEqualTo\",\n                    \"value\": \"yes\"\n                  },\n                  \"name\": \"AlertMgmtHelpText\"\n                },\n                {\n                  \"type\": 3,\n                  \"content\": {\n                    \"version\": \"KqlItem/1.0\",\n                    \"query\": \"resources\\n| where type == \\\"microsoft.insights/actiongroups\\\"\\n| where properties.enabled == 'true'\\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\\\"(\\\",properties.emailReceivers[0].emailAddress,\\\")\\\")\",\n                    \"size\": 1,\n                    \"exportFieldName\": \"\",\n                    \"exportParameterName\": \"selectedAG\",\n                    \"queryType\": 1,\n                    \"resourceType\": \"microsoft.resources/tenants\",\n                    \"crossComponentResources\": [\n                      \"value::tenant\"\n                    ],\n                    \"gridSettings\": {\n                      \"formatters\": [\n                        {\n                          \"columnMatch\": \"id\",\n                          \"formatter\": 13,\n                          \"formatOptions\": {\n                            \"linkTarget\": \"OpenBlade\",\n                            \"linkIsContextBlade\": true,\n                            \"showIcon\": true\n                          }\n                        }\n                      ],\n                      \"filter\": true\n                    }\n                  },\n                  \"conditionalVisibility\": {\n                    \"parameterName\": \"alertsselected\",\n                    \"comparison\": \"isNotEqualTo\"\n                  },\n                  \"name\": \"ActionGroupsQuery\",\n                  \"styleSettings\": {\n                    \"showBorder\": true\n                  }\n                },\n                {\n                  \"type\": 11,\n                  \"content\": {\n                    \"version\": \"LinkItem/1.0\",\n                    \"style\": \"paragraph\",\n                    \"links\": [\n                      {\n                        \"id\": \"f5cb3ede-91d1-4414-bfa1-a1689f45d0c8\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Enable Alerts\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Enable\\\", \\n    \\\"alerts\\\":  [{alertsselected}]\\n  }\\n}\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Enable Alerts\",\n                          \"description\": \"# This action will Enable the selected Alerts\\n\\n{alertsselected}\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      },\n                      {\n                        \"id\": \"d9469141-a104-4696-b9cd-f0fc7e3f963e\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Disable Alerts\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Disable\\\", \\n    \\\"alerts\\\":  [{alertsselected}]\\n  }\\n}\\n\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Disable Alerts\",\n                          \"description\": \"# This action will disable the selected Alerts\\n\\n{alertsselected}\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      },\n                      {\n                        \"id\": \"7942ba17-4942-4f4a-b2ea-e19ad806b49d\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Update Action Group\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Update\\\", \\n    \\\"alerts\\\":  [{alertsselected}],\\n    \\\"aGroup\\\": {selectedAG}\\n  }\\n}\\n\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Update Action Group\",\n                          \"description\": \"Updating alerts:\\n\\n\\n{alertsselected}\\n\\nwith Action Group:\\n\\n{selectedAG}\\n\",\n                          \"actionName\": \"updateAG\",\n                          \"runLabel\": \"Update\"\n                        }\n                      }\n                    ]\n                  },\n                  \"name\": \"links - 8\"\n                }\n              ]\n            },\n            \"customWidth\": \"30\",\n            \"name\": \"AlertsSubGroup1\"\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"alertmanagement\"\n      },\n      \"name\": \"AlertMGMT\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"title\": \"Alert Management - Other Alerts\",\n        \"items\": [\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"resources\\n| where tolower(type) in (\\\"microsoft.insights/scheduledqueryrules\\\")\\n| where isempty(tags.MonitorStarterPacks)\\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1]\\n| union (\\nresources\\n| where tolower(type) in (\\\"microsoft.insights/metricalerts\\\")\\n| where isempty(tags.MonitorStarterPacks)\\n| project id, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1])\\n| union (resources\\n| where tolower(type) in (\\\"microsoft.insights/activitylogalerts\\\")\\n| where isempty(tags.MonitorStarterPacks)\\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1])\",\n              \"size\": 0,\n              \"exportMultipleValues\": true,\n              \"exportedParameters\": [\n                {\n                  \"fieldName\": \"\",\n                  \"parameterName\": \"alertsselectednopack\",\n                  \"parameterType\": 1,\n                  \"quote\": \"\"\n                }\n              ],\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"visualization\": \"table\",\n              \"gridSettings\": {\n                \"formatters\": [\n                  {\n                    \"columnMatch\": \"location\",\n                    \"formatter\": 5\n                  },\n                  {\n                    \"columnMatch\": \"name\",\n                    \"formatter\": 7\n                  }\n                ],\n                \"filter\": true\n              }\n            },\n            \"customWidth\": \"70\",\n            \"name\": \"queryOtherAlerts\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 12,\n            \"content\": {\n              \"version\": \"NotebookGroup/1.0\",\n              \"groupType\": \"editable\",\n              \"items\": [\n                {\n                  \"type\": 1,\n                  \"content\": {\n                    \"json\": \"# Enable or Disable alerts. \\n\\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\\n\\n# Update Action Group\\n## Select a list of alerts on the left and a new Action Group to assign to the alert.\",\n                    \"style\": \"info\"\n                  },\n                  \"conditionalVisibility\": {\n                    \"parameterName\": \"showHelp\",\n                    \"comparison\": \"isEqualTo\",\n                    \"value\": \"yes\"\n                  },\n                  \"name\": \"text - 3\"\n                },\n                {\n                  \"type\": 3,\n                  \"content\": {\n                    \"version\": \"KqlItem/1.0\",\n                    \"query\": \"resources\\n| where type == \\\"microsoft.insights/actiongroups\\\"\\n| where properties.enabled == 'true'\\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\\\"(\\\",properties.emailReceivers[0].emailAddress,\\\")\\\")\",\n                    \"size\": 1,\n                    \"exportFieldName\": \"\",\n                    \"exportParameterName\": \"selectedAG\",\n                    \"queryType\": 1,\n                    \"resourceType\": \"microsoft.resourcegraph/resources\",\n                    \"gridSettings\": {\n                      \"filter\": true\n                    }\n                  },\n                  \"name\": \"agQuery2\",\n                  \"styleSettings\": {\n                    \"showBorder\": true\n                  }\n                },\n                {\n                  \"type\": 11,\n                  \"content\": {\n                    \"version\": \"LinkItem/1.0\",\n                    \"style\": \"paragraph\",\n                    \"links\": [\n                      {\n                        \"id\": \"f5cb3ede-91d1-4414-bfa1-a1689f45d0c8\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Enable Alerts\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Enable\\\", \\n    \\\"alerts\\\":  [{alertsselectednopack}]\\n  }\\n}\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Enable Alerts\",\n                          \"description\": \"# This action will Enable the selected Alerts\\n\\n{alertsselected}\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      },\n                      {\n                        \"id\": \"d9469141-a104-4696-b9cd-f0fc7e3f963e\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Disable Alerts\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Disable\\\", \\n    \\\"alerts\\\":  [{alertsselectednopack}]\\n  }\\n}\\n\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Disable Alerts\",\n                          \"description\": \"# This action will disable the selected Alerts\\n\\n{alertsselected}\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      },\n                      {\n                        \"id\": \"7942ba17-4942-4f4a-b2ea-e19ad806b49d\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Update Action Group\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Update\\\", \\n    \\\"alerts\\\":  [{alertsselectednopack}],\\n    \\\"aGroup\\\": {selectedAG}\\n  }\\n}\\n\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Update Action Group\",\n                          \"description\": \"Updating alerts:\\n\\n\\n{alertsselected}\\n\\nwith Action Group:\\n\\n{selectedAG}\\n\",\n                          \"actionName\": \"updateAG\",\n                          \"runLabel\": \"Update\"\n                        }\n                      }\n                    ]\n                  },\n                  \"name\": \"links - 8\"\n                }\n              ]\n            },\n            \"customWidth\": \"30\",\n            \"conditionalVisibility\": {\n              \"parameterName\": \"alertsselectednopack\",\n              \"comparison\": \"isNotEqualTo\"\n            },\n            \"name\": \"AlertsSubGroup1\"\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"alertmanagement\"\n      },\n      \"name\": \"AlertMGMT - Others\"\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"title\": \"IaaS Packs Association\",\n        \"items\": [\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\\n| summarize by Pack=MPs,rulename=tostring(name)\\n| join (insightsresources\\n| where type == \\\"microsoft.insights/datacollectionruleassociations\\\"\\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\\n| where isnotnull(properties.dataCollectionRuleId)\\n| project rulename=tostring(split(properties.dataCollectionRuleId,\\\"/\\\")[8]),resourceName=tostring(split(resourceId,\\\"/\\\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\\n) on rulename\\n| project-away rulename1,resourceId\\n| summarize Associated=count() by Pack, rulename\\n| order by Pack asc\",\n              \"size\": 0,\n              \"title\": \"Select Pack to see associated Machines\",\n              \"exportFieldName\": \"rulename\",\n              \"exportParameterName\": \"selectedRule\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"gridSettings\": {\n                \"formatters\": [\n                  {\n                    \"columnMatch\": \"Group\",\n                    \"formatter\": 1\n                  }\n                ],\n                \"filter\": true\n              },\n              \"sortBy\": []\n            },\n            \"customWidth\": \"50\",\n            \"name\": \"query - 6 - Copy\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"insightsresources\\n| where type == \\\"microsoft.insights/datacollectionruleassociations\\\"\\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\\n| where isnotnull(properties.dataCollectionRuleId)\\n| project rulename=split(properties.dataCollectionRuleId,\\\"/\\\")[8],resourceName=split(resourceId,\\\"/\\\")[8],resourceId//ruleId=properties.dataCollectionRuleId\\n| where '{selectedRule}'==rulename\",\n              \"size\": 0,\n              \"title\": \"Associated Machines\",\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"gridSettings\": {\n                \"formatters\": [\n                  {\n                    \"columnMatch\": \"Group\",\n                    \"formatter\": 1\n                  }\n                ],\n                \"filter\": true\n              }\n            },\n            \"customWidth\": \"50\",\n            \"name\": \"query - 6 - Copy - Copy\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"rulemanagement\"\n      },\n      \"name\": \"rulemanagement\",\n      \"styleSettings\": {\n        \"showBorder\": true\n      }\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| where isnotempty(tags.MonitorStarterPacks)\\n| extend ds=properties.dataSources\\n| project id,Type=kind, location,syslog=ds.syslog[0].streams[0], windowsEventLogs=ds.windowsEventLogs[0].streams[0], logsettings=ds.logFiles, performanceCounters=ds.performanceCounters[0].streams[0],provisioningState=properties.provisioningState, \\ndataCollectionEndpointId=properties.dataCollectionEndpointId,transformKql=properties.dataFlows[0].transformKql,workspaceResourceId=properties.destinations.logAnalytics[0].workspaceResourceId\\n\",\n        \"size\": 1,\n        \"title\": \"List of Currently Configured Data Collection Rules\",\n        \"showRefreshButton\": true,\n        \"exportedParameters\": [\n          {\n            \"parameterName\": \"selectedRule\"\n          },\n          {\n            \"fieldName\": \"destinationName\",\n            \"parameterName\": \"destinationName\",\n            \"parameterType\": 1\n          },\n          {\n            \"fieldName\": \"\",\n            \"parameterName\": \"resourceGroupName\",\n            \"parameterType\": 1\n          },\n          {\n            \"fieldName\": \"workspaceResourceId\",\n            \"parameterName\": \"workspace\",\n            \"parameterType\": 5\n          },\n          {\n            \"fieldName\": \"properties\",\n            \"parameterName\": \"properties\",\n            \"parameterType\": 1\n          },\n          {\n            \"fieldName\": \"name\",\n            \"parameterName\": \"name\",\n            \"parameterType\": 1\n          },\n          {\n            \"fieldName\": \"location\",\n            \"parameterName\": \"location\",\n            \"parameterType\": 1\n          },\n          {\n            \"fieldName\": \"Rule Type\",\n            \"parameterName\": \"kind\",\n            \"parameterType\": 1\n          },\n          {\n            \"parameterType\": 1\n          },\n          {\n            \"fieldName\": \"id\",\n            \"parameterName\": \"id\",\n            \"parameterType\": 1\n          }\n        ],\n        \"showExportToExcel\": true,\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 1,\n        \"resourceType\": \"microsoft.resourcegraph/resources\",\n        \"crossComponentResources\": [\n          \"{Subscriptions}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"id\",\n              \"formatter\": 13,\n              \"formatOptions\": {\n                \"linkColumn\": \"id\",\n                \"linkTarget\": \"Resource\",\n                \"linkIsContextBlade\": true,\n                \"showIcon\": true\n              }\n            },\n            {\n              \"columnMatch\": \"Type\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Windows\",\n                    \"representation\": \"Initial_Access\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"Linux\",\n                    \"representation\": \"Console\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"Capture\",\n                    \"text\": \"Custom\"\n                  }\n                ]\n              }\n            },\n            {\n              \"columnMatch\": \"location\",\n              \"formatter\": 17,\n              \"formatOptions\": {\n                \"customColumnWidthSetting\": \"94px\"\n              }\n            },\n            {\n              \"columnMatch\": \"syslog\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"linkTarget\": \"CellDetails\",\n                \"subTarget\": \"2\",\n                \"linkIsContextBlade\": true,\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"is Empty\",\n                    \"representation\": \"cancelled\",\n                    \"text\": \"Not Configured\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"success\",\n                    \"text\": \"Configured\"\n                  }\n                ],\n                \"bladeOpenContext\": {\n                  \"bladeName\": \"DataCollectionRulesDataSourceManagementViewModel\",\n                  \"extensionName\": \"Microsoft_Azure_Monitoring\",\n                  \"bladeParameters\": [\n                    {\n                      \"name\": \"id\",\n                      \"source\": \"column\",\n                      \"value\": \"id\"\n                    }\n                  ]\n                },\n                \"customColumnWidthSetting\": \"20ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"windowsEventLogs\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"linkTarget\": \"CellDetails\",\n                \"linkIsContextBlade\": true,\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"is Empty\",\n                    \"representation\": \"cancelled\",\n                    \"text\": \"Not Configured\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"success\",\n                    \"text\": \"Configured\"\n                  }\n                ],\n                \"customColumnWidthSetting\": \"20ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"logsettings\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"is Empty\",\n                    \"representation\": \"cancelled\",\n                    \"text\": \"Not Configured\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"success\",\n                    \"text\": \"Configured\"\n                  }\n                ],\n                \"customColumnWidthSetting\": \"20ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"performanceCounters\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"linkColumn\": \"performanceCounters\",\n                \"linkTarget\": \"CellDetails\",\n                \"linkIsContextBlade\": true,\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"is Empty\",\n                    \"representation\": \"cancelled\",\n                    \"text\": \"Not Configured!\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"success\",\n                    \"text\": \"Configured\"\n                  }\n                ],\n                \"customColumnWidthSetting\": \"20ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"provisioningState\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"contains\",\n                    \"thresholdValue\": \"succeeded\",\n                    \"representation\": \"success\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"success\",\n                    \"text\": \"{0}{1}\"\n                  }\n                ],\n                \"customColumnWidthSetting\": \"17ch\"\n              },\n              \"numberFormat\": {\n                \"unit\": 0,\n                \"options\": {\n                  \"style\": \"decimal\"\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"dataCollectionEndpointId\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"linkTarget\": \"Resource\",\n                \"linkIsContextBlade\": true,\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"is Empty\",\n                    \"representation\": \"cancelled\",\n                    \"text\": \"Not Configured\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"success\",\n                    \"text\": \"Configured\"\n                  }\n                ],\n                \"customColumnWidthSetting\": \"21.7143ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"transformKql\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"linkColumn\": \"queries\",\n                \"linkTarget\": \"CellDetails\",\n                \"linkIsContextBlade\": true,\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"is Empty\",\n                    \"representation\": \"stopped\",\n                    \"text\": \"Not Configured\"\n                  },\n                  {\n                    \"operator\": \"contains\",\n                    \"thresholdValue\": \"|\",\n                    \"representation\": \"success\",\n                    \"text\": \"Ingestion KQL\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"stopped\",\n                    \"text\": \"Custom KQL\"\n                  }\n                ],\n                \"bladeOpenContext\": {\n                  \"bladeName\": \"CreateMicrosoftTableTransformBlade\",\n                  \"extensionName\": \"Microsoft_OperationsManagementSuite_Workspace\",\n                  \"bladeJsonParameters\": \"{\\r\\n\\t\\\"workspaceResourceId\\\" : \\\"{workspace}\\\",\\r\\n\\t\\\"providers\\\" : \\\"microsoft.operationalinsights\\\",\\r\\n\\t\\\"table\\\" : { \\r\\n\\t\\t\\\"name\\\" : \\\"{selectedTableName}\\\",\\r\\n\\t\\t\\\"description\\\":\\\"Security events collected from windows machines by Azure Security Center or Azure Sentinel.\\\",\\r\\n\\t\\t\\\"hasData\\\":true,\\r\\n\\t\\t\\\"tableType\\\":\\\"Microsoft\\\",\\r\\n\\t\\t\\\"tableAPIState\\\":\\\"Any\\\",\\r\\n\\t\\t\\\"solutions\\\":[\\\"Security and Audit\\\",\\\"Microsoft Sentinel\\\"],\\r\\n\\t\\t\\\"categories\\\":[\\\"Security\\\"],\\r\\n\\t\\t\\\"retentionInDaysAsDefault\\\":false,\\r\\n\\t\\t\\\"totalRetentionInDaysAsDefault\\\":false,\\r\\n\\t\\t\\\"isEditTransformationEnabled\\\":true,\\r\\n\\t\\t\\\"isCreateTransformationEnabled\\\":true\\r\\n\\t},\\r\\n\\t\\\"isMicrosoftTable\\\" : true,\\r\\n\\t\\\"isMigrationRequired\\\" : false\\r\\n}\"\n                },\n                \"customColumnWidthSetting\": \"22ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"workspaceResourceId\",\n              \"formatter\": 13,\n              \"formatOptions\": {\n                \"linkTarget\": \"Resource\",\n                \"showIcon\": true,\n                \"customColumnWidthSetting\": \"16.8571ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"properties\",\n              \"formatter\": 7,\n              \"formatOptions\": {\n                \"linkTarget\": \"CellDetails\",\n                \"linkLabel\": \"📋\",\n                \"linkIsContextBlade\": true,\n                \"customColumnWidthSetting\": \"5ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"kind\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"is Empty\",\n                    \"representation\": \"Capture\",\n                    \"text\": \"{0}{1} Custom\"\n                  },\n                  {\n                    \"operator\": \"contains\",\n                    \"thresholdValue\": \"Linux\",\n                    \"representation\": \"Console\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"contains\",\n                    \"thresholdValue\": \"Windows\",\n                    \"representation\": \"Initial_Access\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"contains\",\n                    \"thresholdValue\": \"WorkspaceTransforms\",\n                    \"representation\": \"Persistence\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"success\",\n                    \"text\": \"{0}{1}\"\n                  }\n                ],\n                \"customColumnWidthSetting\": \"17ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"name\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"securityEvents\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"linkColumn\": \"windowsEventLogs\",\n                \"linkTarget\": \"CellDetails\",\n                \"linkIsContextBlade\": true,\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"is Empty\",\n                    \"representation\": \"cancelled\",\n                    \"text\": \"Not Configured\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"success\",\n                    \"text\": \"Configured\"\n                  }\n                ],\n                \"customColumnWidthSetting\": \"20ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"destinations\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"queries\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"dataSources\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"dataFlows\",\n              \"formatter\": 5,\n              \"formatOptions\": {\n                \"aggregation\": \"Sum\"\n              }\n            },\n            {\n              \"columnMatch\": \"description\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"destinationName\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"lastModifiedBy\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"customEvents\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"linkTarget\": \"CellDetails\",\n                \"linkIsContextBlade\": true,\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"is Empty\",\n                    \"representation\": \"cancelled\",\n                    \"text\": \"Not Configured\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"success\",\n                    \"text\": \"Configured\"\n                  }\n                ],\n                \"customColumnWidthSetting\": \"20ch\"\n              }\n            },\n            {\n              \"columnMatch\": \"StepTab\",\n              \"formatter\": 5\n            }\n          ],\n          \"rowLimit\": 1000,\n          \"filter\": true\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"rulemanagement\"\n      },\n      \"name\": \"Select Existing DCR - Copy\",\n      \"styleSettings\": {\n        \"showBorder\": true\n      }\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"title\": \"Policy Assignment Status\",\n        \"items\": [\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"policyresources | where type == \\\"microsoft.policyinsights/policystates\\\" | extend policyName=tostring(properties.policyDefinitionName), complianceState=properties.complianceState\\n| join (policyresources | where type == \\\"microsoft.authorization/policydefinitions\\\" and isnotempty(properties.metadata.MonitorStarterPacks) | project policyId=id, policyName=name, pack=tostring(properties.metadata.MonitorStarterPacks)) on policyName\\n| project Name=policyName, State=tostring(complianceState), pack,type='Policy',policyId\\n| union( policyresources\\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\\n| extend complianceState = tostring(properties.complianceState)\\n| extend\\n\\tresourceId = tostring(properties.resourceId),\\n\\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\\n\\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\\n\\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\\n\\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\\n\\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\\n\\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\\n| summarize overallStateWeight = max(max_stateWeight),\\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\\ncompliantCount = sumif(counts, max_stateWeight == 200),\\nconflictCount = sumif(counts, max_stateWeight == 100),\\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\\ncompliancePercentage,\\ncompliantCount,\\nnonCompliantCount,\\nconflictCount,\\nexemptCount\\n| where isnotempty(policySetDefinitionId)\\n| join (policyresources\\n| where type =~ 'microsoft.authorization/policysetdefinitions' and isnotempty(properties.metadata.MonitorStarterPacks)\\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\\n| project Name=name,State=complianceState,pack='N/A', type='Set',policyId=policySetDefinitionId)\",\n              \"size\": 0,\n              \"title\": \"Assignment Status (Compliance)\",\n              \"exportedParameters\": [\n                {\n                  \"parameterName\": \"policiesToRemediate\",\n                  \"parameterType\": 5\n                }\n              ],\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"gridSettings\": {\n                \"formatters\": [\n                  {\n                    \"columnMatch\": \"State\",\n                    \"formatter\": 18,\n                    \"formatOptions\": {\n                      \"thresholdsOptions\": \"icons\",\n                      \"thresholdsGrid\": [\n                        {\n                          \"operator\": \"!=\",\n                          \"thresholdValue\": \"Compliant\",\n                          \"representation\": \"2\",\n                          \"text\": \"{0}{1}\"\n                        },\n                        {\n                          \"operator\": \"Default\",\n                          \"thresholdValue\": null,\n                          \"representation\": \"success\",\n                          \"text\": \"{0}{1}\"\n                        }\n                      ]\n                    }\n                  }\n                ],\n                \"filter\": true\n              }\n            },\n            \"customWidth\": \"75\",\n            \"conditionalVisibility\": {\n              \"parameterName\": \"tabSelection\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"policystatus\"\n            },\n            \"name\": \"query - 8\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 12,\n            \"content\": {\n              \"version\": \"NotebookGroup/1.0\",\n              \"groupType\": \"editable\",\n              \"items\": [\n                {\n                  \"type\": 11,\n                  \"content\": {\n                    \"version\": \"LinkItem/1.0\",\n                    \"style\": \"list\",\n                    \"links\": [\n                      {\n                        \"id\": \"b3bb5a4d-0f95-4e9a-8634-9cb027f860aa\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Remediate (all policies)\",\n                        \"preText\": \"\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"policymgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"SolutionTag\\\":\\\"MonitorStarterPacks\\\",\\n    \\\"Action\\\": \\\"Remediate\\\"\\n  }\\n}\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Rmediate policies\",\n                          \"description\": \"# Please confirm remediation\\n\\nThis button will trigger a global policy remeadiation. \\n\\nThe backend script will go through the policies and initiatives, finding the ones that are not compliant, and will trigger remediation. \\n\\nIt is not restricted to the ones in this screen.\",\n                          \"actionName\": \"Remediate\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      },\n                      {\n                        \"id\": \"8dfc5afa-108a-4713-8a0c-651c3a32c5f1\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Check Compliance\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"policymgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"SolutionTag\\\":\\\"MonitorStarterPacks\\\",\\n    \\\"Action\\\": \\\"Scan\\\"\\n  }\\n}\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Check Policy Compliance\",\n                          \"description\": \"# Please confirm the scan.\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      }\n                    ]\n                  },\n                  \"name\": \"links - 3\"\n                },\n                {\n                  \"type\": 1,\n                  \"content\": {\n                    \"json\": \"## Policy Compliance Check\\nThis task will trigger a tenant wide check for policy compliance.\\n\\n## Policy Remediation\\n\\nThis Task will trigger remediation for the policies in the list that are considered not compliant at this time.\",\n                    \"style\": \"info\"\n                  },\n                  \"conditionalVisibilities\": [\n                    {\n                      \"parameterName\": \"tabSelection\",\n                      \"comparison\": \"isEqualTo\",\n                      \"value\": \"policystatus\"\n                    },\n                    {\n                      \"parameterName\": \"showHelp\",\n                      \"comparison\": \"isEqualTo\",\n                      \"value\": \"yes\"\n                    }\n                  ],\n                  \"name\": \"text - 7\"\n                }\n              ]\n            },\n            \"customWidth\": \"25\",\n            \"name\": \"ComplianceButtons\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"## Installed Policies and Initiatives with Assignments\\n\\nThis grid can be used to visualize the policies and currenct assignments as well as assing/unassign policies to/from different scopes.\\n\\nOnce one or more policies are selected, the diaglog of scopes (subscriptions and management groups) is displayed along with the respective buttons.\\n\",\n              \"style\": \"info\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"tabSelection\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"policystatus\"\n              },\n              {\n                \"parameterName\": \"showHelp\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"yes\"\n              }\n            ],\n            \"name\": \"text - 7\"\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"policyresources\\n| where type == \\\"microsoft.authorization/policydefinitions\\\"\\n| where  isnotempty(properties.metadata.MonitorStarterPacks)\\n| project Name=name, Type='Policy',['id'],Pack=tostring(properties.metadata.MonitorStarterPacks)\\n| join kind = leftouter (policyresources\\n| where type == \\\"microsoft.authorization/policyassignments\\\"\\n| project AssignmentName=name,scope=properties.scope,PolicyId=tostring(properties.policyDefinitionId), PolicyName=split(properties.PolicyId,\\\"/\\\")[8]\\n| join kind=leftouter  (policyresources\\n| where type == \\\"microsoft.authorization/policydefinitions\\\"\\n| where  isnotempty(properties.metadata.MonitorStarterPacks)) on $left.PolicyId == $right.id\\n| project tostring(AssignmentName),Name=tostring(split(PolicyId,\\\"/\\\")[8]), PolicyId,ScopeLevel=iff(scope contains 'subscriptions',\\\"Sub\\\", \\\"MG\\\"), Scope=scope) on Name\\n| project-away Name1, id\\n| union ( policyresources\\n| where type == \\\"microsoft.authorization/policysetdefinitions\\\"\\n| where  isnotempty(properties.metadata.MonitorStarterPacks)\\n| project Name=name, Type='Initiative',['id'],Pack=\\\"_N/A\\\"\\n| join kind = leftouter (policyresources\\n| where type == \\\"microsoft.authorization/policyassignments\\\"\\n| project AssignmentName=name,scope=properties.scope,PolicyId=tostring(properties.policyDefinitionId), PolicyName=split(properties.PolicyId,\\\"/\\\")[8]\\n| join kind=leftouter  (policyresources\\n| where type == \\\"microsoft.authorization/policysetdefinitions\\\"\\n| where  isnotempty(properties.metadata.MonitorStarterPacks)) on $left.PolicyId == $right.id\\n| project tostring(AssignmentName),Name=tostring(split(PolicyId,\\\"/\\\")[8]), PolicyId, ScopeLevel=iff(scope contains 'subscriptions',\\\"Sub\\\", \\\"MG\\\"),Scope=scope) on Name\\n| project-away Name1, id)\\n| sort by Pack asc, AssignmentName asc \",\n              \"size\": 0,\n              \"title\": \"Installed Policies and Initiatives with Assignments\",\n              \"noDataMessage\": \"No MonStar policies (packs) installed.\",\n              \"exportMultipleValues\": true,\n              \"exportedParameters\": [\n                {\n                  \"fieldName\": \"\",\n                  \"parameterName\": \"policyseletedpolicy\",\n                  \"parameterType\": 1\n                }\n              ],\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"gridSettings\": {\n                \"formatters\": [\n                  {\n                    \"columnMatch\": \"Group\",\n                    \"formatter\": 1\n                  }\n                ],\n                \"filter\": true\n              }\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"tabSelection\",\n              \"comparison\": \"isEqualTo\",\n              \"value\": \"policystatus\"\n            },\n            \"name\": \"query - 8 - Copy\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"Select Scope below to assign a policy. There is no need to Select a scope to Unassign the policy.\",\n              \"style\": \"info\"\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"policyseletedpolicy\",\n              \"comparison\": \"isNotEqualTo\"\n            },\n            \"name\": \"text - 6\"\n          },\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"resourcecontainers\\n| where type == 'microsoft.management/managementgroups' or type =~ 'microsoft.resources/subscriptions'\\n| project name, id, subscriptionId, type=split(type,'/')[1]\",\n              \"size\": 0,\n              \"exportMultipleValues\": true,\n              \"exportedParameters\": [\n                {\n                  \"parameterName\": \"policyscopes\",\n                  \"parameterType\": 1,\n                  \"quote\": \"\\\"\"\n                }\n              ],\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ]\n            },\n            \"conditionalVisibility\": {\n              \"parameterName\": \"policyseletedpolicy\",\n              \"comparison\": \"isNotEqualTo\"\n            },\n            \"name\": \"query - 15\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 11,\n            \"content\": {\n              \"version\": \"LinkItem/1.0\",\n              \"style\": \"paragraph\",\n              \"links\": [\n                {\n                  \"id\": \"63320366-2b93-4e52-831c-55f7c6de4043\",\n                  \"linkTarget\": \"ArmAction\",\n                  \"linkLabel\": \"Assign Policy\",\n                  \"style\": \"primary\",\n                  \"linkIsContextBlade\": true,\n                  \"armActionContext\": {\n                    \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                    \"headers\": [],\n                    \"params\": [],\n                    \"body\": \"{ \\n  \\\"function\\\": \\\"policymgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"SolutionTag\\\":\\\"MonitorStarterPacks\\\",\\n    \\\"Action\\\": \\\"Assign\\\",\\n    \\\"Scopes\\\": [{policyscopes}],\\n    \\\"policies\\\": [{policyseletedpolicy}]\\n  }\\n}\",\n                    \"httpMethod\": \"POST\",\n                    \"title\": \"Assign Policy\",\n                    \"description\": \"# Assign policy below to selected scope:\\n\\n## Policy\\n\\n{policyseletedpolicy}\\n\\n## Scope\\n\\n{policyscopes}\",\n                    \"runLabel\": \"Assign\"\n                  }\n                },\n                {\n                  \"id\": \"ed3b8c20-e2ef-4768-b0b9-bfcc254602e6\",\n                  \"linkTarget\": \"ArmAction\",\n                  \"linkLabel\": \"Unassign Policy\",\n                  \"style\": \"primary\",\n                  \"linkIsContextBlade\": true,\n                  \"armActionContext\": {\n                    \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                    \"headers\": [],\n                    \"params\": [],\n                    \"body\": \"{ \\n  \\\"function\\\": \\\"policymgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"SolutionTag\\\":\\\"MonitorStarterPacks\\\",\\n    \\\"Action\\\": \\\"Unassign\\\",\\n    \\\"policies\\\": [{policyseletedpolicy}]\\n  }\\n}\",\n                    \"httpMethod\": \"POST\",\n                    \"title\": \"Unassign Policies\",\n                    \"description\": \"# Unassign policy or policies below from their scopes.\\n\\n## Policy\\n\\n{policyseletedpolicy}\\n\\n\",\n                    \"actionName\": \"Unassign Policies\",\n                    \"runLabel\": \"Unassign\"\n                  }\n                }\n              ]\n            },\n            \"customWidth\": \"25\",\n            \"conditionalVisibility\": {\n              \"parameterName\": \"policyseletedpolicy\",\n              \"comparison\": \"isNotEqualTo\"\n            },\n            \"name\": \"links - 2 - Copy\"\n          },\n          {\n            \"type\": 1,\n            \"content\": {\n              \"json\": \"## Policies To Assign: \\n\\n`{policyseletedpolicy}`\\n\\n## Scopes: \\n\\n{policyscopes}\"\n            },\n            \"conditionalVisibilities\": [\n              {\n                \"parameterName\": \"policyseletedpolicy\",\n                \"comparison\": \"isNotEqualTo\"\n              },\n              {\n                \"parameterName\": \"showHelp\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"yes\"\n              }\n            ],\n            \"name\": \"text - 4\"\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"policystatus\"\n      },\n      \"name\": \"policymgmt\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"Resources\\n| where type == 'microsoft.compute/virtualmachines'\\n| extend\\n    JoinID = toupper(id),\\n    OSName = tostring(properties.osProfile.computerName),\\n    OSType = tostring(properties.storageProfile.osDisk.osType)\\n| join kind=leftouter(\\n    Resources\\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId\\n| union (Resources\\n| where type == 'microsoft.hybridcompute/machines'\\n| extend\\n    JoinID = toupper(id),\\n    OSName = tostring(properties.osProfile.computerName),\\n    OSType = tostring(properties.osType)\\n| join kind=leftouter(\\n    Resources\\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId)\\n| summarize by id, OSName, OSType, ExtensionName, subscriptionId\\n| join kind= leftouter   (resourcecontainers\\n| where type =~ 'microsoft.resources/subscriptions'\\n| project Subscription=name,subscriptionId) on subscriptionId\\n| project-away subscriptionId, subscriptionId1\\n| order by tolower(OSName) asc\",\n        \"size\": 0,\n        \"title\": \"Agent Install Status\",\n        \"queryType\": 1,\n        \"resourceType\": \"microsoft.resources/tenants\",\n        \"crossComponentResources\": [\n          \"value::tenant\"\n        ],\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"ExtensionName\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"linkTarget\": \"CellDetails\",\n                \"linkIsContextBlade\": true,\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"AzureMonitorLinuxAgent\",\n                    \"representation\": \"success\",\n                    \"text\": \"Linux Agent\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"AzureMonitorWindowsAgent\",\n                    \"representation\": \"success\",\n                    \"text\": \"Windows Agent\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"stopped\",\n                    \"text\": \"No Agent\"\n                  }\n                ],\n                \"customColumnWidthSetting\": \"20ch\"\n              }\n            }\n          ],\n          \"filter\": true\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"agentmgmt\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - agent install status\",\n      \"styleSettings\": {\n        \"showBorder\": true\n      }\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"Resources\\n| where type == 'microsoft.compute/virtualmachines'\\n| extend\\n    JoinID = toupper(id),\\n    OSName = tostring(properties.osProfile.computerName),\\n    OSType = tostring(properties.storageProfile.osDisk.osType)\\n| join kind=leftouter(\\n    Resources\\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId\\n| union (Resources\\n| where type == 'microsoft.hybridcompute/machines'\\n| extend\\n    JoinID = toupper(id),\\n    OSName = tostring(properties.osProfile.computerName),\\n    OSType = tostring(properties.osType)\\n| join kind=leftouter(\\n    Resources\\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId)\\n| summarize count() by ExtensionName\",\n        \"size\": 1,\n        \"title\": \"Agent Install Status\",\n        \"queryType\": 1,\n        \"resourceType\": \"microsoft.resources/tenants\",\n        \"crossComponentResources\": [\n          \"value::tenant\"\n        ],\n        \"visualization\": \"piechart\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"ExtensionName\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"linkTarget\": \"CellDetails\",\n                \"linkIsContextBlade\": true,\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"AzureMonitorLinuxAgent\",\n                    \"representation\": \"success\",\n                    \"text\": \"Linux Agent\"\n                  },\n                  {\n                    \"operator\": \"==\",\n                    \"thresholdValue\": \"AzureMonitorWindowsAgent\",\n                    \"representation\": \"success\",\n                    \"text\": \"Windows Agent\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": \"stopped\",\n                    \"text\": \"No Agent\"\n                  }\n                ],\n                \"customColumnWidthSetting\": \"20ch\"\n              }\n            }\n          ],\n          \"filter\": true\n        },\n        \"chartSettings\": {\n          \"seriesLabelSettings\": [\n            {\n              \"seriesName\": \"\",\n              \"label\": \"No Agent\",\n              \"color\": \"red\"\n            }\n          ]\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"agentmgmt\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - agent install status - Copy\",\n      \"styleSettings\": {\n        \"showBorder\": true\n      }\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"Heartbeat | where Category == \\\"Azure Monitor Agent\\\"\\n| summarize arg_max(TimeGenerated, *) by Computer\\n| project  Computer,LastHeartbeat=TimeGenerated, ['SecondsAgo']=datetime_diff('second',now(),TimeGenerated)\\n| sort by SecondsAgo asc\",\n        \"size\": 4,\n        \"title\": \"Last Heartbeat (24 hours)\",\n        \"timeContext\": {\n          \"durationMs\": 86400000\n        },\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"crossComponentResources\": [\n          \"{Workspace}\"\n        ],\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"SecondsAgo\",\n              \"formatter\": 18,\n              \"formatOptions\": {\n                \"thresholdsOptions\": \"icons\",\n                \"thresholdsGrid\": [\n                  {\n                    \"operator\": \"<=\",\n                    \"thresholdValue\": \"600\",\n                    \"representation\": \"success\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \">\",\n                    \"thresholdValue\": \"600\",\n                    \"representation\": \"2\",\n                    \"text\": \"{0}{1}\"\n                  },\n                  {\n                    \"operator\": \"Default\",\n                    \"thresholdValue\": null,\n                    \"representation\": null,\n                    \"text\": \"{0}{1}\"\n                  }\n                ]\n              }\n            }\n          ],\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"agentmgmt\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 16\",\n      \"styleSettings\": {\n        \"showBorder\": true\n      }\n    },\n    {\n      \"type\": 12,\n      \"content\": {\n        \"version\": \"NotebookGroup/1.0\",\n        \"groupType\": \"editable\",\n        \"title\": \"Auto Discovery\",\n        \"items\": [\n          {\n            \"type\": 3,\n            \"content\": {\n              \"version\": \"KqlItem/1.0\",\n              \"query\": \"policyresources | where type == \\\"microsoft.policyinsights/policystates\\\" | extend policyName=tostring(properties.policyDefinitionName), complianceState=properties.complianceState\\n| join (policyresources | where type == \\\"microsoft.authorization/policydefinitions\\\" and isnotempty(properties.metadata.MonitorStarterPacksComponents) | project policyId=id, policyName=name, pack=tostring(properties.metadata.MonitorStarterPacksComponents)) on policyName\\n| project Name=policyName, State=tostring(complianceState), pack,type='Policy',policyId\\n| union( policyresources\\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\\n| extend complianceState = tostring(properties.complianceState)\\n| extend\\n\\tresourceId = tostring(properties.resourceId),\\n\\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\\n\\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\\n\\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\\n\\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\\n\\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\\n\\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\\n| summarize overallStateWeight = max(max_stateWeight),\\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\\ncompliantCount = sumif(counts, max_stateWeight == 200),\\nconflictCount = sumif(counts, max_stateWeight == 100),\\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\\ncompliancePercentage,\\ncompliantCount,\\nnonCompliantCount,\\nconflictCount,\\nexemptCount\\n| where isnotempty(policySetDefinitionId)\\n| join (policyresources\\n| where type =~ 'microsoft.authorization/policysetdefinitions' and isnotempty(properties.metadata.MonitorStarterPacksComponents)\\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\\n| project Name=name,State=complianceState,pack='N/A', type='Set',policyId=policySetDefinitionId)\",\n              \"size\": 0,\n              \"title\": \"Assignment Status (Compliance) - Discovery\",\n              \"exportedParameters\": [\n                {\n                  \"parameterName\": \"policiesToRemediate\",\n                  \"parameterType\": 5\n                }\n              ],\n              \"queryType\": 1,\n              \"resourceType\": \"microsoft.resources/tenants\",\n              \"crossComponentResources\": [\n                \"value::tenant\"\n              ],\n              \"gridSettings\": {\n                \"formatters\": [\n                  {\n                    \"columnMatch\": \"State\",\n                    \"formatter\": 18,\n                    \"formatOptions\": {\n                      \"thresholdsOptions\": \"icons\",\n                      \"thresholdsGrid\": [\n                        {\n                          \"operator\": \"==\",\n                          \"thresholdValue\": \"NonCompliant\",\n                          \"representation\": \"2\",\n                          \"text\": \"{0}{1}\"\n                        },\n                        {\n                          \"operator\": \"==\",\n                          \"thresholdValue\": \"nonCompliant\",\n                          \"representation\": \"2\",\n                          \"text\": \"{0}{1}\"\n                        },\n                        {\n                          \"operator\": \"Default\",\n                          \"thresholdValue\": null,\n                          \"representation\": \"success\",\n                          \"text\": \"{0}{1}\"\n                        }\n                      ]\n                    }\n                  }\n                ],\n                \"filter\": true\n              }\n            },\n            \"customWidth\": \"75\",\n            \"name\": \"Query DiscoveryPolicies\",\n            \"styleSettings\": {\n              \"showBorder\": true\n            }\n          },\n          {\n            \"type\": 12,\n            \"content\": {\n              \"version\": \"NotebookGroup/1.0\",\n              \"groupType\": \"editable\",\n              \"items\": [\n                {\n                  \"type\": 11,\n                  \"content\": {\n                    \"version\": \"LinkItem/1.0\",\n                    \"style\": \"list\",\n                    \"links\": [\n                      {\n                        \"id\": \"b3bb5a4d-0f95-4e9a-8634-9cb027f860aa\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Remediate (all policies)\",\n                        \"preText\": \"\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"policymgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"SolutionTag\\\":\\\"MonitorStarterPacks\\\",\\n    \\\"Action\\\": \\\"Remediate\\\"\\n  }\\n}\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Rmediate policies\",\n                          \"description\": \"# Please confirm remediation\\n\\nThis button will trigger a global policy remeadiation. \\n\\nThe backend script will go through the policies and initiatives, finding the ones that are not compliant, and will trigger remediation. \\n\\nIt is not restricted to the ones in this screen.\",\n                          \"actionName\": \"Remediate\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      },\n                      {\n                        \"id\": \"8dfc5afa-108a-4713-8a0c-651c3a32c5f1\",\n                        \"linkTarget\": \"ArmAction\",\n                        \"linkLabel\": \"Check Compliance\",\n                        \"style\": \"primary\",\n                        \"linkIsContextBlade\": true,\n                        \"armActionContext\": {\n                          \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                          \"headers\": [],\n                          \"params\": [],\n                          \"body\": \"{ \\n  \\\"function\\\": \\\"policymgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"SolutionTag\\\":\\\"MonitorStarterPacks\\\",\\n    \\\"Action\\\": \\\"Scan\\\"\\n  }\\n}\",\n                          \"httpMethod\": \"POST\",\n                          \"title\": \"Check Policy Compliance\",\n                          \"description\": \"# Please confirm the scan.\",\n                          \"runLabel\": \"Confirm\"\n                        }\n                      }\n                    ]\n                  },\n                  \"name\": \"links - 3\"\n                },\n                {\n                  \"type\": 1,\n                  \"content\": {\n                    \"json\": \"## Policy Compliance Check\\nThis task will trigger a tenant wide check for policy compliance.\\n\\n## Policy Remediation\\n\\nThis Task will trigger remediation for the policies in the list that are considered not compliant at this time.\",\n                    \"style\": \"info\"\n                  },\n                  \"conditionalVisibilities\": [\n                    {\n                      \"parameterName\": \"tabSelection\",\n                      \"comparison\": \"isEqualTo\",\n                      \"value\": \"policystatus\"\n                    },\n                    {\n                      \"parameterName\": \"showHelp\",\n                      \"comparison\": \"isEqualTo\",\n                      \"value\": \"yes\"\n                    }\n                  ],\n                  \"name\": \"text - 7\"\n                }\n              ]\n            },\n            \"customWidth\": \"25\",\n            \"name\": \"ComplianceButtons - Copy\"\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"tabSelection\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"autodiscovery\"\n      },\n      \"name\": \"AutoDiscoveryGroup\"\n    }\n  ],\n  \"fallbackResourceIds\": [\n    \"/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca/resourcegroups/rg-monstarpacks/providers/microsoft.operationalinsights/workspaces/monster-law\"\n  ],\n  \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n}\n"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/workbooks",
                      "apiVersion": "2022-04-01",
                      "name": "[guid('Azure Monitor Starter Packs')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "shared",
                      "properties": {
                        "displayName": "Azure Monitor Starter Packs",
                        "serializedData": "[variables('wbConfig')]",
                        "category": "workbook",
                        "sourceId": "[parameters('lawresourceid')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "workbook2deployment",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "4571749904088348241"
                    }
                  },
                  "parameters": {
                    "Tags": {
                      "type": "object"
                    },
                    "location": {
                      "type": "string"
                    },
                    "lawresourceid": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "version": "Notebook/1.0",
                      "items": [
                        {
                          "type": 1,
                          "content": {
                            "json": "# Azure Monitor Starter Packs - Extended Admin Centre\n\n\n"
                          },
                          "customWidth": "50",
                          "name": "textTitle"
                        },
                        {
                          "type": 9,
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                              {
                                "id": "741661c9-5e51-44bc-8e8e-bfc6396f2646",
                                "version": "KqlParameterItem/1.0",
                                "name": "showHelp",
                                "label": "Show Help Info",
                                "type": 10,
                                "isRequired": true,
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[[\n    { \"value\":\"yes\", \"label\":\"Yes\",\"default\": \"yes\" },\n    { \"value\":\"no\", \"label\":\"No\" }\n]",
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "value": "no"
                              }
                            ],
                            "style": "above",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          "customWidth": "50",
                          "name": "showHelpparameter"
                        },
                        {
                          "type": 11,
                          "content": {
                            "version": "LinkItem/1.0",
                            "style": "tabs",
                            "links": [
                              {
                                "id": "a9a63932-4a11-4fe1-938c-02619e609193",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Getting Started",
                                "subTarget": "gettingstarted",
                                "style": "link"
                              },
                              {
                                "id": "4f0ca437-37b0-42f6-a150-e994338f5185",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Status",
                                "subTarget": "status",
                                "style": "link"
                              },
                              {
                                "id": "15f0fa97-4286-48d6-9dea-26a956197d26",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Servers",
                                "subTarget": "discovery",
                                "style": "link"
                              },
                              {
                                "id": "a346732e-6e74-4aa2-90e7-d198243e186a",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Platform",
                                "subTarget": "platform",
                                "style": "link"
                              },
                              {
                                "id": "c5269422-e723-43b6-b923-8bf44fd49320",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "PaaS",
                                "subTarget": "paas",
                                "style": "link"
                              },
                              {
                                "id": "7499a88f-a536-41d7-9b58-9ebae1b5290e",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Alert Setup",
                                "subTarget": "alertmanagement",
                                "style": "link"
                              },
                              {
                                "id": "3a19e3a9-d64d-41d8-a313-3a60db36bcc4",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Policy Management",
                                "subTarget": "policystatus",
                                "style": "link"
                              },
                              {
                                "id": "c2a67d72-dd46-44ea-adba-b9d70915c607",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Pack Status",
                                "subTarget": "rulemanagement",
                                "style": "link"
                              },
                              {
                                "id": "d8f7936d-170f-430d-af7d-ac22115a9e38",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Agent Info",
                                "subTarget": "agentmgmt",
                                "style": "link"
                              },
                              {
                                "id": "e1f636a4-1593-49ef-bf35-abf708e2be48",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Configuration",
                                "subTarget": "backend",
                                "style": "link"
                              },
                              {
                                "id": "afec2944-3bd3-4bd3-8afa-6dc39d0b623a",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Discovery",
                                "subTarget": "autodiscovery",
                                "style": "link"
                              }
                            ]
                          },
                          "name": "mainLinksTab"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "loadType": "always",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "## General Parameters",
                                  "style": "info"
                                },
                                "name": "text - 3"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "7a778b2c-619d-4f82-bd1c-810f853af6fd",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Subscriptions",
                                      "type": 6,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "multiSelect": true,
                                      "quote": "'",
                                      "delimiter": ",",
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::all"
                                        ],
                                        "includeAll": false,
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "value": [
                                        "/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca",
                                        "/subscriptions/b1e924f9-d16f-4260-a3c8-ff1ee462956b"
                                      ]
                                    },
                                    {
                                      "id": "1efb8bbe-532a-491b-b3c4-55f1402ee280",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "logicAppResource",
                                      "label": "Logic App",
                                      "type": 5,
                                      "isRequired": true,
                                      "query": "resources\n| where type == \"microsoft.logic/workflows\" \n| where isnotempty(tags.MonitorStarterPacksComponents)\n| project Id=id, Name=name",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "resourceTypeFilter": {
                                          "microsoft.logic/workflows": true
                                        },
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca/resourceGroups/rg-MonstarPacks/providers/Microsoft.Logic/workflows/MonitorStarterPacks-Backend"
                                    },
                                    {
                                      "id": "ea93902e-9856-4bd4-998d-ea88378907a7",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "GrafanaInstance",
                                      "label": "Azure Managed Grafana",
                                      "type": 2,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\n| where type =~ \"microsoft.dashboard/grafana\"\n| where isnotempty(tags.monitorStarterPacksComponents) or isnotempty(tags.MonitorStarterPacksComponents)\n| project id, label=properties.endpoint",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca/resourceGroups/rg-MonstarPacks/providers/Microsoft.Dashboard/grafana/AMSP623923"
                                    },
                                    {
                                      "id": "4552c35d-c26c-4cbf-a4cf-b2e57ff7ee78",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Workspace",
                                      "label": "WorkSpace",
                                      "type": 5,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\n| where type == \"microsoft.operationalinsights/workspaces\"\n| project id",
                                      "crossComponentResources": [
                                        "value::all"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources",
                                      "value": "/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca/resourceGroups/rg-MonstarPacks/providers/Microsoft.OperationalInsights/workspaces/Monster-LAW"
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants"
                                },
                                "customWidth": "100",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "backend"
                                },
                                "name": "generalParams"
                              }
                            ],
                            "exportParameters": true
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "backend"
                          },
                          "name": "ConfigStatusGroup"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "# Getting Started\n\nWelcome to the Azure Monitor Starter Packs. This workbook was designed to help you configuring the solution. Here you can:\n- Enable/Disable monitoring packs for one or more VMs. You may also disable all the monitoring for a specific server. This will remove the tags and the rule associations*\n- Enable/Disable Alerts in bulk. You can also assign a different Action group to one or more alerts.\n- Check policy status and start remediation if required. By clicking in a policy, you can also assign that policy to another scope.\n- Check Monitor pack associations\n\n## ***If this is the first time using this solution, please configure parameters in the Configuration tab and save the workbook for proper functionality.***\n\n\n[Azure MONitor STARter Packs](http://github.com/Azure/AzureMonitorStarterPacks)\n\n[Azure Managed Grafana ({GrafanaInstance:label})]({GrafanaInstance:label})\n\n"
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "gettingstarted"
                          },
                          "name": "textGetStarted"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources | where type =~ 'microsoft.hybridcompute/machines' or type =~ 'microsoft.compute/virtualmachines'\n| extend MonitorStatus=iff(isempty(tostring(tags.MonitorStarterPacks)),'Monitored','Not Monitored')\n| summarize count() by MonitorStatus",
                                  "size": 1,
                                  "title": "Monitoring Status (Tags)",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "piechart",
                                  "chartSettings": {
                                    "seriesLabelSettings": [
                                      {
                                        "seriesName": "Monitored",
                                        "color": "green"
                                      },
                                      {
                                        "seriesName": "Not Monitored",
                                        "color": "orange"
                                      }
                                    ]
                                  }
                                },
                                "customWidth": "33",
                                "name": "Monitoring Status Tags",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\n    JoinID = toupper(id)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| extend\n    JoinID = toupper(id)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| summarize count() by AgentInstalled=iff(isempty(ExtensionName),\"No\",\"Yes\")",
                                  "size": 1,
                                  "title": "Agent Install Status",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "piechart",
                                  "chartSettings": {
                                    "seriesLabelSettings": [
                                      {
                                        "seriesName": "Yes",
                                        "label": "AMA Installed",
                                        "color": "green"
                                      },
                                      {
                                        "seriesName": "No",
                                        "label": "No AMA",
                                        "color": "red"
                                      }
                                    ]
                                  }
                                },
                                "customWidth": "33",
                                "name": "agentInstallStatus",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "policyresources | where type == \"microsoft.policyinsights/policystates\" | extend policyName=tostring(properties.policyDefinitionName), complianceState=properties.complianceState\n| join (policyresources | where type == \"microsoft.authorization/policydefinitions\" and isnotempty(properties.metadata.MonitorStarterPacks) | project policyId=id, policyName=name, pack=tostring(properties.metadata.MonitorStarterPacks)) on policyName\n| project policyId, policyName, complianceState=tostring(complianceState), pack,type='Policy'\n| union( policyresources\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\n| extend complianceState = tostring(properties.complianceState)\n| extend\n\tresourceId = tostring(properties.resourceId),\n\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\n\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\n\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\n\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\n\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\n\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\n| summarize overallStateWeight = max(max_stateWeight),\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\ncompliantCount = sumif(counts, max_stateWeight == 200),\nconflictCount = sumif(counts, max_stateWeight == 100),\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\ncompliancePercentage,\ncompliantCount,\nnonCompliantCount,\nconflictCount,\nexemptCount\n| where isnotempty(policySetDefinitionId)\n| join (policyresources\n| where type =~ 'microsoft.authorization/policysetdefinitions' and isnotempty(properties.metadata.MonitorStarterPacks)\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\n| project policyId=policySetDefinitionId, policyName=name,complianceState,pack='N/A', type='Set')\n| summarize count() by complianceState,policyName",
                                  "size": 1,
                                  "title": "Assignment Policies Status",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "piechart",
                                  "chartSettings": {
                                    "seriesLabelSettings": [
                                      {
                                        "seriesName": "Compliant",
                                        "label": "Compliant",
                                        "color": "green"
                                      },
                                      {
                                        "seriesName": "nonCompliant",
                                        "label": "Not Compliant",
                                        "color": "redDark"
                                      }
                                    ]
                                  }
                                },
                                "customWidth": "33",
                                "name": "policyComplianceStatus",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n| join (resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Associated=count() by Pack\n| sort by Pack asc",
                                  "size": 1,
                                  "title": "Servers/Pack (Association)",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "piechart",
                                  "tileSettings": {
                                    "showBorder": false,
                                    "titleContent": {
                                      "columnMatch": "Pack",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "Associated",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "maximumSignificantDigits": 3,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    }
                                  },
                                  "mapSettings": {
                                    "locInfo": "LatLong",
                                    "sizeSettings": "Associated",
                                    "sizeAggregation": "Sum",
                                    "legendMetric": "Associated",
                                    "legendAggregation": "Sum",
                                    "itemColorSettings": {
                                      "type": "heatmap",
                                      "colorAggregation": "Sum",
                                      "nodeColorField": "Associated",
                                      "heatmapPalette": "greenRed"
                                    }
                                  }
                                },
                                "customWidth": "33",
                                "name": "AssociatedResourceStatsperTag - Copy - Copy",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n| join (resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Tagged=count() by Pack\n| sort by Pack asc\n\n\n",
                                  "size": 1,
                                  "title": "Tagged Resources per Tag",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "showBorder": false,
                                    "titleContent": {
                                      "columnMatch": "Pack",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "Tagged",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "maximumSignificantDigits": 3,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                "customWidth": "33",
                                "name": "taggedResourceStatsperTag",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n| join (resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Associated=count() by Pack\n| sort by Pack asc",
                                  "size": 1,
                                  "title": "Associated Servers per Pack",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "showBorder": false,
                                    "titleContent": {
                                      "columnMatch": "Pack",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "Associated",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "maximumSignificantDigits": 3,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    }
                                  }
                                },
                                "customWidth": "33",
                                "name": "AssociatedResourceStatsperTag - Copy",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "alertsmanagementresources\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status,severity=properties.context.context.severity\n| where isnotempty(alertRule)\n| join (resources\n| where type == \"microsoft.insights/scheduledqueryrules\" or type ==\"microsoft.insights/metricalerts\" or type == 'microsoft.insights/activitylogalerts'\n| where isnotempty(tags.MonitorStarterPacks)\n| extend alertRule=tolower(tostring(['id']))) on alertRule\n| project ['Alert Name']=name,['Details']=['Alert Id'], Status=status, Resource=resourceId, Sev=severity\n| where Status=='Activated'\n",
                                  "size": 0,
                                  "title": "Active Alerts",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Details",
                                        "formatter": 7,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "linkLabel": "Details",
                                          "linkIsContextBlade": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Status",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Activated",
                                              "representation": "up",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "Resource",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "linkIsContextBlade": true,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Sev",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "1",
                                              "representation": "Sev1",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "2",
                                              "representation": "Sev2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "3",
                                              "representation": "Sev3",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "4",
                                              "representation": "Sev4",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "0",
                                              "representation": "Sev0",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "unknown",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "Alert Id",
                                        "formatter": 7,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "linkLabel": "Details",
                                          "linkIsContextBlade": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Target",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "customWidth": "66",
                                "name": "activeAlertsquery"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "alertsmanagementresources\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status\n| where isnotempty(alertRule)\n| join (resources\n| where type == \"microsoft.insights/scheduledqueryrules\" or type ==\"microsoft.insights/metricalerts\" or type == 'microsoft.insights/activitylogalerts'\n| where isnotempty(tags.MonitorStarterPacks)\n| extend alertRule=tolower(tostring(['id']))) on alertRule\n| summarize count() by AlertType=type\n\n",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "piechart"
                                },
                                "customWidth": "33",
                                "name": "activeAlertsQueryPie"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "status"
                          },
                          "name": "dashboardgroup"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "## Server Monitoring Setup\n\nSelect servers on the right to assign a pack. Once the backend is done with the assigning, the server will show on the left side grid.\n\nOn the left side grid, the monitoring can be updated to add more packs, as well as to remove a specific pack or remove any monitoring altogether from the server.",
                            "style": "info"
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "tabSelection",
                              "comparison": "isEqualTo",
                              "value": "discovery"
                            },
                            {
                              "parameterName": "showHelp",
                              "comparison": "isEqualTo",
                              "value": "yes"
                            }
                          ],
                          "name": "serversMonitoringHelptext"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Servers",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "When Monitoring is first enabled, the Azure Monitoring Agent will also be installed to the selected servers.",
                                  "style": "info"
                                },
                                "name": "text - 3"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' \n| where isnotempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.osType, subscriptionId, Location=location\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| where isnotempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location)\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
                                        "size": 0,
                                        "title": "Monitored Machines",
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "taggedVMs",
                                            "parameterType": 5,
                                            "quote": ""
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources",
                                        "crossComponentResources": [
                                          "{Subscriptions}"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "name": "Monitored Servers",
                                      "styleSettings": {
                                        "margin": "400",
                                        "padding": "400",
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "{Workspace}"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "54f2c7fb-7251-43b6-aa4d-fd94647cac4a",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTagsLeft",
                                            "label": "Add/Remove",
                                            "type": 2,
                                            "isGlobal": true,
                                            "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.MonitoringPackType=='IaaS'\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs",
                                            "crossComponentResources": [
                                              "{Workspace}"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resourcegraph/resources",
                                            "value": "WinOS"
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources"
                                      },
                                      "customWidth": "25",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedVMs",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "parameters - 5 - Copy"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                            "cellValue": "",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove Monitoring for {PackTagsLeft} Pack ",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "removeTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"{PackTagsLeft}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove Monitoring for {PackTagsLeft} Pack \n\nServers:\n\n{taggedVMs}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "550df977-06a8-4c40-9cd3-aba6286ebcdf",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Add Monitoring for {PackTagsLeft} Pack",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"{PackTagsLeft}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Add Monitoring",
                                              "description": "# Please confirm the change.\n\nAdd Monitoring for {PackTagsLeft} Pack ",
                                              "actionName": "AddMonitoringPack",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "3b1af630-47ab-43e9-a5b2-d2f2e21880d0",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove All Monitoring for VM",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"All\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove All Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove All Monitoring for {PackTagsLeft} Pack ",
                                              "actionName": "RemoveAllMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "75",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedVMs",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "links - 1"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "discovery"
                                },
                                "name": "TaggedGroup"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' \n| where isempty(tolower(tags.MonitorStarterPacks)) //and subscriptionId in split('{Subscriptions:subscriptionId}',',')\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.osType, subscriptionId, Location=location\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| where isempty(tolower(tags.MonitorStarterPacks)) //and subscriptionId in split('{Subscriptions:subscriptionId}',',')\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location)\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
                                        "size": 0,
                                        "title": "Non-monitored Machines",
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "parameterName": "vmstotag",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources",
                                        "crossComponentResources": [
                                          "{Subscriptions}"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "name": "Non Monitores Servers",
                                      "styleSettings": {
                                        "margin": "400",
                                        "padding": "400",
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "8a177eab-edac-41cc-84f9-a5b7de931bea",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTags",
                                            "label": "Select Pack to Enable",
                                            "type": 2,
                                            "isGlobal": true,
                                            "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.MonitoringPackType=='IaaS'\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs",
                                            "crossComponentResources": [
                                              "value::tenant"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resources/tenants",
                                            "value": "WinOS"
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants"
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "vmstotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "parameters - 5"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Monitoring for {PackTags} Pack",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "addTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{vmstotag}],\n    \"Pack\": \"{PackTags}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Monitoring Packs",
                                              "description": "# This will enable the pack for the following servers:\n{vmstotag}\n\nby adding the {PackTags} to the server.",
                                              "actionName": "EnableMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "vmstotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "links - 1 - Copy"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "discovery"
                                },
                                "name": "NonTaggedGroup"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId=tostring(resourceId)//ruleId=properties.dataCollectionRuleId\n| join kind= inner  (\nresources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| summarize by resourceId, Pack\n| summarize Packs=make_list(Pack) by resourceId",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Packs",
                                        "formatter": 1
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "test",
                                  "comparison": "isEqualTo",
                                  "value": "1"
                                },
                                "showPin": false,
                                "name": "query - associatedVMs"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources | where type =~ 'microsoft.hybridcompute/machines' \n| where isnotempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.osType, subscriptionId, Location=location\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| where isnotempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location)\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHidden",
                                  "comparison": "isEqualTo",
                                  "value": "true"
                                },
                                "showPin": false,
                                "name": "query - taggedVMs"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\",\"mergeType\":\"innerunique\",\"leftTable\":\"query - taggedVMs\",\"rightTable\":\"query - associatedVMs\",\"leftColumn\":\"Resource\",\"rightColumn\":\"resourceId\"}],\"projectRename\":[{\"originalName\":\"[query - taggedVMs].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Resource Group\",\"mergedName\":\"Resource Group\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Packs\",\"mergedName\":\"Packs\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].OS\",\"mergedName\":\"OS\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Location\",\"mergedName\":\"Location\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].Packs\",\"mergedName\":\"Associated Packs\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].resourceId\"}]}",
                                  "size": 0,
                                  "queryType": 7,
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Associated Packs",
                                        "formatter": 1
                                      }
                                    ]
                                  }
                                },
                                "showPin": false,
                                "name": "query - mergeVMs"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "discovery"
                          },
                          "name": "Servers",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Platform Services",
                            "items": [
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where tolower(type) in (\n    'microsoft.network/vpngateways',\n    'microsoft.network/virtualnetworkgateways',\n    'microsoft.keyvault/vaults'\n) or (tolower(type) == 'microsoft.network/loadbalancers' and tolower(sku.name) !='basic')\n| where isnotempty(tags.MonitorStarterPacks)\n| project Resource=id, type,resourceGroup, location, subscriptionId\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId,subscriptionId1\n| sort by type asc",
                                        "size": 0,
                                        "title": "Monitored Services",
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "taggedPlatform",
                                            "parameterType": 5,
                                            "quote": ""
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources",
                                        "crossComponentResources": [
                                          "{Subscriptions}"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "name": "Monitored Servers",
                                      "styleSettings": {
                                        "margin": "400",
                                        "padding": "400",
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "54f2c7fb-7251-43b6-aa4d-fd94647cac4a",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTagsLeftPlatform",
                                            "label": "Add/Remove",
                                            "type": 2,
                                            "isGlobal": true,
                                            "query": "policyresources\n| where type =~ 'Microsoft.Authorization/policyDefinitions'\n| where  isnotempty(properties.metadata.MonitorStarterPacks) and properties.metadata.MonitoringPackType=='Platform'\n| extend Pack=tostring(properties.metadata.MonitorStarterPacks)\n| extend policyType=properties.policyRule.then.details.type\n| where policyType !~ 'Microsoft.Insights/dataCollectionRuleAssociations'\n| summarize by Pack",
                                            "crossComponentResources": [
                                              "value::tenant"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resources/tenants",
                                            "value": null
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants"
                                      },
                                      "customWidth": "25",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedPlatform",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "parameters - 5 - Copy"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                            "cellValue": "",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove Monitoring for {PackTagsLeftPlatform} Pack ",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "removeTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedPlatform}],\n    \"Pack\": \"{PackTagsLeftPlatform}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove Monitoring for {PackTagsLeftPlatform} Pack \n\nServers:\n\n{taggedPlatform}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "550df977-06a8-4c40-9cd3-aba6286ebcdf",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Add Monitoring for {PackTagsLeftPlatform} Pack",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{taggedPlatform}],\n    \"Pack\": \"{PackTagsLeftPlatform}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Add Monitoring",
                                              "description": "# Please confirm the change.\n\nAdd Monitoring for {PackTagsLeftPlatform} Pack ",
                                              "actionName": "AddMonitoringPack",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "3b1af630-47ab-43e9-a5b2-d2f2e21880d0",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove All Monitoring for VM",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedPlatform}],\n    \"Pack\": \"All\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove All Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove All Monitoring for {PackTagsLeftPlatform} Pack ",
                                              "actionName": "RemoveAllMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "75",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedPlatform",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "links - 1"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "name": "TaggedGroupPlatform"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where tolower(type) in (\n    'microsoft.network/vpngateways',\n    'microsoft.network/virtualnetworkgateways',\n    'microsoft.keyvault/vaults'\n) or (tolower(type) == 'microsoft.network/loadbalancers' and tolower(sku.name) !='basic')\n| where isempty(tags.MonitorStarterPacks)\n| project Resource=id,type,resourceGroup, location, subscriptionId\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId,subscriptionId1",
                                        "size": 0,
                                        "title": "Non-monitored Services",
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "platformtotag",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources",
                                        "crossComponentResources": [
                                          "{Subscriptions}"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "name": "Non Monitores Servers",
                                      "styleSettings": {
                                        "margin": "400",
                                        "padding": "400",
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "8a177eab-edac-41cc-84f9-a5b7de931bea",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTagsPlatform",
                                            "label": "Select Pack to Enable",
                                            "type": 2,
                                            "isGlobal": true,
                                            "query": "policyresources\n| where type =~ 'Microsoft.Authorization/policyDefinitions'\n| where  isnotempty(properties.metadata.MonitorStarterPacks) and properties.metadata.MonitoringPackType=='Platform'\n| extend Pack=tostring(properties.metadata.MonitorStarterPacks)\n| extend policyType=properties.policyRule.then.details.type\n| where policyType !~ 'Microsoft.Insights/dataCollectionRuleAssociations'\n| summarize by Pack",
                                            "crossComponentResources": [
                                              "value::tenant"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resources/tenants",
                                            "value": null
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants"
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "platformtotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "parameters - 5"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Monitoring for {PackTagsPlatform} Pack",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "addTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{platformtotag}],\n    \"Pack\": \"{PackTagsPlatform}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Monitoring Packs",
                                              "description": "# This will enable the pack for the following servers:\n{platformtotag}\n\nby adding the {PackTagsPlatform} to the server.",
                                              "actionName": "EnableMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "platformtotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "platformenableparameters"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "name": "NonTaggedGroup"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "platform"
                          },
                          "name": "PlatFormMgmt",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "PaaS Services",
                            "items": [
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where tolower(type) in (\n    'microsoft.storage/storageaccounts',\n    'microsoft.desktopvirtualization/hostpools'\n) \n| where isnotempty(tags.MonitorStarterPacks)\n| project Resource=id, type,resourceGroup, location, subscriptionId\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId,subscriptionId1\n| sort by type asc",
                                        "size": 0,
                                        "title": "Monitored PaaS",
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "taggedPaaS",
                                            "parameterType": 5,
                                            "quote": ""
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources",
                                        "crossComponentResources": [
                                          "{Subscriptions}"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "name": "Monitored PaaS",
                                      "styleSettings": {
                                        "margin": "400",
                                        "padding": "400",
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "54f2c7fb-7251-43b6-aa4d-fd94647cac4a",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTagsLeftPaaS",
                                            "label": "Add/Remove",
                                            "type": 2,
                                            "isGlobal": true,
                                            "query": "policyresources\n| where type =~ 'Microsoft.Authorization/policyDefinitions'\n| where  isnotempty(properties.metadata.MonitorStarterPacks) and properties.metadata.MonitoringPackType=='PaaS'\n| extend Pack=tostring(properties.metadata.MonitorStarterPacks)\n| extend policyType=properties.policyRule.then.details.type\n| where policyType !~ 'Microsoft.Insights/dataCollectionRuleAssociations'\n| summarize by Pack",
                                            "crossComponentResources": [
                                              "value::tenant"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resources/tenants",
                                            "value": null
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants"
                                      },
                                      "customWidth": "25",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedPaaS",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "parametersPaaSLeft"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                            "cellValue": "",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove Monitoring for {PackTagsLeftPaaS} Pack ",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "removeTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedPaaS}],\n    \"Pack\": \"{PackTagsLeftPaaS}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove Monitoring for {PackTagsLeftPaaS} Pack \n\nServers:\n\n{taggedPaaS}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "550df977-06a8-4c40-9cd3-aba6286ebcdf",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Add Monitoring for {PackTagsLeftPaaS} Pack",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{taggedPaaS}],\n    \"Pack\": \"{PackTagsLeftPaaS}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Add Monitoring",
                                              "description": "# Please confirm the change.\n\nAdd Monitoring for {PackTagsLeftPaaS} Pack ",
                                              "actionName": "AddMonitoringPack",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "3b1af630-47ab-43e9-a5b2-d2f2e21880d0",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove All Monitoring for Service",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedPaaS}],\n    \"Pack\": \"All\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove All Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove All Monitoring for {PackTagsLeftPaaS} Pack ",
                                              "actionName": "RemoveAllMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "75",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedPaaS",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "actionsPaaSLeft"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "name": "TaggedGroupPaaS"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where tolower(type) in (\n    'microsoft.storage/storageaccounts',\n    'microsoft.desktopvirtualization/hostpools'\n) or (tolower(type) == 'microsoft.network/loadbalancers' and tolower(sku.name) !='basic')\n| where isempty(tags.MonitorStarterPacks)\n| project Resource=id, type,resourceGroup, location, subscriptionId\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId,subscriptionId1\n| sort by type asc",
                                        "size": 0,
                                        "title": "Non-monitored PaaS",
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "paastotag",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources",
                                        "crossComponentResources": [
                                          "{Subscriptions}"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "name": "Non Monitores PaaS",
                                      "styleSettings": {
                                        "margin": "400",
                                        "padding": "400",
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "8a177eab-edac-41cc-84f9-a5b7de931bea",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTagsPaaS",
                                            "label": "Select Pack to Enable",
                                            "type": 2,
                                            "isGlobal": true,
                                            "query": "policyresources\n| where type =~ 'Microsoft.Authorization/policyDefinitions'\n| where  isnotempty(properties.metadata.MonitorStarterPacks) and properties.metadata.MonitoringPackType=='PaaS'\n| extend Pack=tostring(properties.metadata.MonitorStarterPacks)\n| extend policyType=properties.policyRule.then.details.type\n| where policyType !~ 'Microsoft.Insights/dataCollectionRuleAssociations'\n| summarize by Pack",
                                            "crossComponentResources": [
                                              "value::tenant"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resources/tenants",
                                            "value": null
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants"
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "paastotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "parameters - paas - right"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Monitoring for {PackTagsPaaS} Pack",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "addTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{paastotag}],\n    \"Pack\": \"{PackTagsPaaS}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Monitoring Packs",
                                              "description": "# This will enable the pack for the following servers:\n{paastotag}\n\nby adding the {PackTagsPaaS} to the resource.",
                                              "actionName": "EnableMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "paastotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "platformenableparameters"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "name": "NonTaggedGroup"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "paas"
                          },
                          "name": "PaaSMgmt",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Alert Management - MonStar Alerts",
                            "items": [
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "e99b4870-f7a6-4b8e-95b7-6aaeece1f438",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "AlertPack",
                                      "type": 2,
                                      "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\", \"microsoft.insights/metricalerts\",\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs\n",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "Storage"
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants"
                                },
                                "name": "parameters - 7"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1]\n| union (\nresources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| where MP=='{AlertPack}'",
                                  "size": 0,
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "fieldName": "",
                                      "parameterName": "alertsselected",
                                      "parameterType": 1,
                                      "quote": ""
                                    }
                                  ],
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "location",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "name",
                                        "formatter": 7
                                      }
                                    ],
                                    "filter": true
                                  }
                                },
                                "customWidth": "70",
                                "name": "AlertConfigQuery",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "# Enable or Disable alerts. \n\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\n\n# Update Action Group\n## Select a list of alerts on the left and a new Action Group to assign to the alert.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "AlertMgmtHelpText"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/actiongroups\"\n| where properties.enabled == 'true'\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\"(\",properties.emailReceivers[0].emailAddress,\")\")",
                                        "size": 1,
                                        "exportFieldName": "",
                                        "exportParameterName": "selectedAG",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "id",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": "OpenBlade",
                                                "linkIsContextBlade": true,
                                                "showIcon": true
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "alertsselected",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "ActionGroupsQuery",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "f5cb3ede-91d1-4414-bfa1-a1689f45d0c8",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Alerts",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Enable\", \n    \"alerts\":  [{alertsselected}]\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Alerts",
                                              "description": "# This action will Enable the selected Alerts\n\n{alertsselected}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "d9469141-a104-4696-b9cd-f0fc7e3f963e",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Disable Alerts",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Disable\", \n    \"alerts\":  [{alertsselected}]\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Disable Alerts",
                                              "description": "# This action will disable the selected Alerts\n\n{alertsselected}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "7942ba17-4942-4f4a-b2ea-e19ad806b49d",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Update Action Group",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Update\", \n    \"alerts\":  [{alertsselected}],\n    \"aGroup\": {selectedAG}\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Update Action Group",
                                              "description": "Updating alerts:\n\n\n{alertsselected}\n\nwith Action Group:\n\n{selectedAG}\n",
                                              "actionName": "updateAG",
                                              "runLabel": "Update"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 8"
                                    }
                                  ]
                                },
                                "customWidth": "30",
                                "name": "AlertsSubGroup1"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "alertmanagement"
                          },
                          "name": "AlertMGMT"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Alert Management - Other Alerts",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\")\n| where isempty(tags.MonitorStarterPacks)\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1]\n| union (\nresources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isempty(tags.MonitorStarterPacks)\n| project id, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isempty(tags.MonitorStarterPacks)\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])",
                                  "size": 0,
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "fieldName": "",
                                      "parameterName": "alertsselectednopack",
                                      "parameterType": 1,
                                      "quote": ""
                                    }
                                  ],
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "location",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "name",
                                        "formatter": 7
                                      }
                                    ],
                                    "filter": true
                                  }
                                },
                                "customWidth": "70",
                                "name": "queryOtherAlerts",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "# Enable or Disable alerts. \n\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\n\n# Update Action Group\n## Select a list of alerts on the left and a new Action Group to assign to the alert.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "text - 3"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/actiongroups\"\n| where properties.enabled == 'true'\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\"(\",properties.emailReceivers[0].emailAddress,\")\")",
                                        "size": 1,
                                        "exportFieldName": "",
                                        "exportParameterName": "selectedAG",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources",
                                        "gridSettings": {
                                          "filter": true
                                        }
                                      },
                                      "name": "agQuery2",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "f5cb3ede-91d1-4414-bfa1-a1689f45d0c8",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Alerts",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Enable\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Alerts",
                                              "description": "# This action will Enable the selected Alerts\n\n{alertsselected}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "d9469141-a104-4696-b9cd-f0fc7e3f963e",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Disable Alerts",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Disable\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Disable Alerts",
                                              "description": "# This action will disable the selected Alerts\n\n{alertsselected}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "7942ba17-4942-4f4a-b2ea-e19ad806b49d",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Update Action Group",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Update\", \n    \"alerts\":  [{alertsselectednopack}],\n    \"aGroup\": {selectedAG}\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Update Action Group",
                                              "description": "Updating alerts:\n\n\n{alertsselected}\n\nwith Action Group:\n\n{selectedAG}\n",
                                              "actionName": "updateAG",
                                              "runLabel": "Update"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 8"
                                    }
                                  ]
                                },
                                "customWidth": "30",
                                "conditionalVisibility": {
                                  "parameterName": "alertsselectednopack",
                                  "comparison": "isNotEqualTo"
                                },
                                "name": "AlertsSubGroup1"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "alertmanagement"
                          },
                          "name": "AlertMGMT - Others"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "IaaS Packs Association",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)\n| join (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n) on rulename\n| project-away rulename1,resourceId\n| summarize Associated=count() by Pack, rulename\n| order by Pack asc",
                                  "size": 0,
                                  "title": "Select Pack to see associated Machines",
                                  "exportFieldName": "rulename",
                                  "exportParameterName": "selectedRule",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Group",
                                        "formatter": 1
                                      }
                                    ],
                                    "filter": true
                                  },
                                  "sortBy": []
                                },
                                "customWidth": "50",
                                "name": "query - 6 - Copy",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=split(properties.dataCollectionRuleId,\"/\")[8],resourceName=split(resourceId,\"/\")[8],resourceId//ruleId=properties.dataCollectionRuleId\n| where '{selectedRule}'==rulename",
                                  "size": 0,
                                  "title": "Associated Machines",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Group",
                                        "formatter": 1
                                      }
                                    ],
                                    "filter": true
                                  }
                                },
                                "customWidth": "50",
                                "name": "query - 6 - Copy - Copy",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "rulemanagement"
                          },
                          "name": "rulemanagement",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks)\n| extend ds=properties.dataSources\n| project id,Type=kind, location,syslog=ds.syslog[0].streams[0], windowsEventLogs=ds.windowsEventLogs[0].streams[0], logsettings=ds.logFiles, performanceCounters=ds.performanceCounters[0].streams[0],provisioningState=properties.provisioningState, \ndataCollectionEndpointId=properties.dataCollectionEndpointId,transformKql=properties.dataFlows[0].transformKql,workspaceResourceId=properties.destinations.logAnalytics[0].workspaceResourceId\n",
                            "size": 1,
                            "title": "List of Currently Configured Data Collection Rules",
                            "showRefreshButton": true,
                            "exportedParameters": [
                              {
                                "parameterName": "selectedRule"
                              },
                              {
                                "fieldName": "destinationName",
                                "parameterName": "destinationName",
                                "parameterType": 1
                              },
                              {
                                "fieldName": "",
                                "parameterName": "resourceGroupName",
                                "parameterType": 1
                              },
                              {
                                "fieldName": "workspaceResourceId",
                                "parameterName": "workspace",
                                "parameterType": 5
                              },
                              {
                                "fieldName": "properties",
                                "parameterName": "properties",
                                "parameterType": 1
                              },
                              {
                                "fieldName": "name",
                                "parameterName": "name",
                                "parameterType": 1
                              },
                              {
                                "fieldName": "location",
                                "parameterName": "location",
                                "parameterType": 1
                              },
                              {
                                "fieldName": "Rule Type",
                                "parameterName": "kind",
                                "parameterType": 1
                              },
                              {
                                "parameterType": 1
                              },
                              {
                                "fieldName": "id",
                                "parameterName": "id",
                                "parameterType": 1
                              }
                            ],
                            "showExportToExcel": true,
                            "exportToExcelOptions": "all",
                            "queryType": 1,
                            "resourceType": "microsoft.resourcegraph/resources",
                            "crossComponentResources": [
                              "{Subscriptions}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "id",
                                  "formatter": 13,
                                  "formatOptions": {
                                    "linkColumn": "id",
                                    "linkTarget": "Resource",
                                    "linkIsContextBlade": true,
                                    "showIcon": true
                                  }
                                },
                                {
                                  "columnMatch": "Type",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Windows",
                                        "representation": "Initial_Access",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "Linux",
                                        "representation": "Console",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "Capture",
                                        "text": "Custom"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "columnMatch": "location",
                                  "formatter": 17,
                                  "formatOptions": {
                                    "customColumnWidthSetting": "94px"
                                  }
                                },
                                {
                                  "columnMatch": "syslog",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "linkTarget": "CellDetails",
                                    "subTarget": "2",
                                    "linkIsContextBlade": true,
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "is Empty",
                                        "representation": "cancelled",
                                        "text": "Not Configured"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "Configured"
                                      }
                                    ],
                                    "bladeOpenContext": {
                                      "bladeName": "DataCollectionRulesDataSourceManagementViewModel",
                                      "extensionName": "Microsoft_Azure_Monitoring",
                                      "bladeParameters": [
                                        {
                                          "name": "id",
                                          "source": "column",
                                          "value": "id"
                                        }
                                      ]
                                    },
                                    "customColumnWidthSetting": "20ch"
                                  }
                                },
                                {
                                  "columnMatch": "windowsEventLogs",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "linkTarget": "CellDetails",
                                    "linkIsContextBlade": true,
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "is Empty",
                                        "representation": "cancelled",
                                        "text": "Not Configured"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "Configured"
                                      }
                                    ],
                                    "customColumnWidthSetting": "20ch"
                                  }
                                },
                                {
                                  "columnMatch": "logsettings",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "is Empty",
                                        "representation": "cancelled",
                                        "text": "Not Configured"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "Configured"
                                      }
                                    ],
                                    "customColumnWidthSetting": "20ch"
                                  }
                                },
                                {
                                  "columnMatch": "performanceCounters",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "linkColumn": "performanceCounters",
                                    "linkTarget": "CellDetails",
                                    "linkIsContextBlade": true,
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "is Empty",
                                        "representation": "cancelled",
                                        "text": "Not Configured!"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "Configured"
                                      }
                                    ],
                                    "customColumnWidthSetting": "20ch"
                                  }
                                },
                                {
                                  "columnMatch": "provisioningState",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "contains",
                                        "thresholdValue": "succeeded",
                                        "representation": "success",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "{0}{1}"
                                      }
                                    ],
                                    "customColumnWidthSetting": "17ch"
                                  },
                                  "numberFormat": {
                                    "unit": 0,
                                    "options": {
                                      "style": "decimal"
                                    }
                                  }
                                },
                                {
                                  "columnMatch": "dataCollectionEndpointId",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "linkTarget": "Resource",
                                    "linkIsContextBlade": true,
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "is Empty",
                                        "representation": "cancelled",
                                        "text": "Not Configured"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "Configured"
                                      }
                                    ],
                                    "customColumnWidthSetting": "21.7143ch"
                                  }
                                },
                                {
                                  "columnMatch": "transformKql",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "linkColumn": "queries",
                                    "linkTarget": "CellDetails",
                                    "linkIsContextBlade": true,
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "is Empty",
                                        "representation": "stopped",
                                        "text": "Not Configured"
                                      },
                                      {
                                        "operator": "contains",
                                        "thresholdValue": "|",
                                        "representation": "success",
                                        "text": "Ingestion KQL"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "stopped",
                                        "text": "Custom KQL"
                                      }
                                    ],
                                    "bladeOpenContext": {
                                      "bladeName": "CreateMicrosoftTableTransformBlade",
                                      "extensionName": "Microsoft_OperationsManagementSuite_Workspace",
                                      "bladeJsonParameters": "{\r\n\t\"workspaceResourceId\" : \"{workspace}\",\r\n\t\"providers\" : \"microsoft.operationalinsights\",\r\n\t\"table\" : { \r\n\t\t\"name\" : \"{selectedTableName}\",\r\n\t\t\"description\":\"Security events collected from windows machines by Azure Security Center or Azure Sentinel.\",\r\n\t\t\"hasData\":true,\r\n\t\t\"tableType\":\"Microsoft\",\r\n\t\t\"tableAPIState\":\"Any\",\r\n\t\t\"solutions\":[\"Security and Audit\",\"Microsoft Sentinel\"],\r\n\t\t\"categories\":[\"Security\"],\r\n\t\t\"retentionInDaysAsDefault\":false,\r\n\t\t\"totalRetentionInDaysAsDefault\":false,\r\n\t\t\"isEditTransformationEnabled\":true,\r\n\t\t\"isCreateTransformationEnabled\":true\r\n\t},\r\n\t\"isMicrosoftTable\" : true,\r\n\t\"isMigrationRequired\" : false\r\n}"
                                    },
                                    "customColumnWidthSetting": "22ch"
                                  }
                                },
                                {
                                  "columnMatch": "workspaceResourceId",
                                  "formatter": 13,
                                  "formatOptions": {
                                    "linkTarget": "Resource",
                                    "showIcon": true,
                                    "customColumnWidthSetting": "16.8571ch"
                                  }
                                },
                                {
                                  "columnMatch": "properties",
                                  "formatter": 7,
                                  "formatOptions": {
                                    "linkTarget": "CellDetails",
                                    "linkLabel": "📋",
                                    "linkIsContextBlade": true,
                                    "customColumnWidthSetting": "5ch"
                                  }
                                },
                                {
                                  "columnMatch": "kind",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "is Empty",
                                        "representation": "Capture",
                                        "text": "{0}{1} Custom"
                                      },
                                      {
                                        "operator": "contains",
                                        "thresholdValue": "Linux",
                                        "representation": "Console",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "contains",
                                        "thresholdValue": "Windows",
                                        "representation": "Initial_Access",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "contains",
                                        "thresholdValue": "WorkspaceTransforms",
                                        "representation": "Persistence",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "{0}{1}"
                                      }
                                    ],
                                    "customColumnWidthSetting": "17ch"
                                  }
                                },
                                {
                                  "columnMatch": "name",
                                  "formatter": 5
                                },
                                {
                                  "columnMatch": "securityEvents",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "linkColumn": "windowsEventLogs",
                                    "linkTarget": "CellDetails",
                                    "linkIsContextBlade": true,
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "is Empty",
                                        "representation": "cancelled",
                                        "text": "Not Configured"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "Configured"
                                      }
                                    ],
                                    "customColumnWidthSetting": "20ch"
                                  }
                                },
                                {
                                  "columnMatch": "destinations",
                                  "formatter": 5
                                },
                                {
                                  "columnMatch": "queries",
                                  "formatter": 5
                                },
                                {
                                  "columnMatch": "dataSources",
                                  "formatter": 5
                                },
                                {
                                  "columnMatch": "dataFlows",
                                  "formatter": 5,
                                  "formatOptions": {
                                    "aggregation": "Sum"
                                  }
                                },
                                {
                                  "columnMatch": "description",
                                  "formatter": 5
                                },
                                {
                                  "columnMatch": "destinationName",
                                  "formatter": 5
                                },
                                {
                                  "columnMatch": "lastModifiedBy",
                                  "formatter": 5
                                },
                                {
                                  "columnMatch": "customEvents",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "linkTarget": "CellDetails",
                                    "linkIsContextBlade": true,
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "is Empty",
                                        "representation": "cancelled",
                                        "text": "Not Configured"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "Configured"
                                      }
                                    ],
                                    "customColumnWidthSetting": "20ch"
                                  }
                                },
                                {
                                  "columnMatch": "StepTab",
                                  "formatter": 5
                                }
                              ],
                              "rowLimit": 1000,
                              "filter": true
                            },
                            "sortBy": []
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "rulemanagement"
                          },
                          "name": "Select Existing DCR - Copy",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Policy Assignment Status",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "policyresources | where type == \"microsoft.policyinsights/policystates\" | extend policyName=tostring(properties.policyDefinitionName), complianceState=properties.complianceState\n| join (policyresources | where type == \"microsoft.authorization/policydefinitions\" and isnotempty(properties.metadata.MonitorStarterPacks) | project policyId=id, policyName=name, pack=tostring(properties.metadata.MonitorStarterPacks)) on policyName\n| project policyId, policyName, complianceState=tostring(complianceState), pack,type='Policy'\n| union( policyresources\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\n| extend complianceState = tostring(properties.complianceState)\n| extend\n\tresourceId = tostring(properties.resourceId),\n\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\n\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\n\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\n\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\n\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\n\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\n| summarize overallStateWeight = max(max_stateWeight),\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\ncompliantCount = sumif(counts, max_stateWeight == 200),\nconflictCount = sumif(counts, max_stateWeight == 100),\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\ncompliancePercentage,\ncompliantCount,\nnonCompliantCount,\nconflictCount,\nexemptCount\n| where isnotempty(policySetDefinitionId)\n| join (policyresources\n| where type =~ 'microsoft.authorization/policysetdefinitions' and isnotempty(properties.metadata.MonitorStarterPacks)\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\n| project policyId=policySetDefinitionId, policyName=name,complianceState,pack='N/A', type='Set')",
                                  "size": 0,
                                  "title": "Assignment Status (Compliance)",
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "parameterName": "policyToRemediate",
                                      "parameterType": 1,
                                      "quote": ""
                                    }
                                  ],
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "complianceState",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "ArmAction",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Compliant",
                                              "representation": "success",
                                              "text": "Compliant"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Non-compliant",
                                              "representation": "2",
                                              "text": "Non-Compliant"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "warning",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Remediate\",\n    \"Policies\": [{policyToRemediate}]\n  }\n}",
                                            "httpMethod": "POST",
                                            "title": "Remediate a policy",
                                            "description": "# Remediate\n\nPolicies:\n\n[{policyToRemediate}]\n",
                                            "actionName": "Remediatepolicies",
                                            "runLabel": "Remediate"
                                          }
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "Click To Remediate"
                                        }
                                      }
                                    ],
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "policyName",
                                        "sortOrder": 1
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "policyName",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "customWidth": "75",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "policystatus"
                                },
                                "name": "policylist",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "list",
                                        "links": [
                                          {
                                            "id": "b3bb5a4d-0f95-4e9a-8634-9cb027f860aa",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remediate (selected)",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Remediate\",\n    \"Policies\": [{policyToRemediate}]\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remediate policies",
                                              "description": "# Please confirm remediation\n\nThis button will trigger a remediation action against the selected policies.\n\n{policyToRemediate}",
                                              "actionName": "Remediate",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "8dfc5afa-108a-4713-8a0c-651c3a32c5f1",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Check Compliance",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Scan\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Check Policy Compliance",
                                              "description": "# Please confirm the scan.",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 3"
                                    },
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## Policy Compliance Check\nThis task will trigger a tenant wide check for policy compliance.\n\n## Policy Remediation\n\nThis Task will trigger remediation for the policies in the list that are considered not compliant at this time.",
                                        "style": "info"
                                      },
                                      "conditionalVisibilities": [
                                        {
                                          "parameterName": "tabSelection",
                                          "comparison": "isEqualTo",
                                          "value": "policystatus"
                                        },
                                        {
                                          "parameterName": "showHelp",
                                          "comparison": "isEqualTo",
                                          "value": "yes"
                                        }
                                      ],
                                      "name": "text - 7"
                                    }
                                  ]
                                },
                                "customWidth": "25",
                                "name": "ComplianceButtons"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "## Installed Policies and Initiatives with Assignments\n\nThis grid can be used to visualize the policies and currenct assignments as well as assing/unassign policies to/from different scopes.\n\nOnce one or more policies are selected, the diaglog of scopes (subscriptions and management groups) is displayed along with the respective buttons.\n",
                                  "style": "info"
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "tabSelection",
                                    "comparison": "isEqualTo",
                                    "value": "policystatus"
                                  },
                                  {
                                    "parameterName": "showHelp",
                                    "comparison": "isEqualTo",
                                    "value": "yes"
                                  }
                                ],
                                "name": "text - 7"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "policyresources\n| where type == \"microsoft.authorization/policydefinitions\"\n| where  isnotempty(properties.metadata.MonitorStarterPacks)\n| project Name=name, Type='Policy',['id'],Pack=tostring(properties.metadata.MonitorStarterPacks)\n| join kind = leftouter (policyresources\n| where type == \"microsoft.authorization/policyassignments\"\n| project AssignmentName=name,scope=properties.scope,PolicyId=tostring(properties.policyDefinitionId), PolicyName=split(properties.PolicyId,\"/\")[8]\n| join kind=leftouter  (policyresources\n| where type == \"microsoft.authorization/policydefinitions\"\n| where  isnotempty(properties.metadata.MonitorStarterPacks)) on $left.PolicyId == $right.id\n| project tostring(AssignmentName),Name=tostring(split(PolicyId,\"/\")[8]), PolicyId,ScopeLevel=iff(scope contains 'subscriptions',\"Sub\", \"MG\"), Scope=scope) on Name\n| project-away Name1, id\n| union ( policyresources\n| where type == \"microsoft.authorization/policysetdefinitions\"\n| where  isnotempty(properties.metadata.MonitorStarterPacks)\n| project Name=name, Type='Initiative',['id'],Pack=\"_N/A\"\n| join kind = leftouter (policyresources\n| where type == \"microsoft.authorization/policyassignments\"\n| project AssignmentName=name,scope=properties.scope,PolicyId=tostring(properties.policyDefinitionId), PolicyName=split(properties.PolicyId,\"/\")[8]\n| join kind=leftouter  (policyresources\n| where type == \"microsoft.authorization/policysetdefinitions\"\n| where  isnotempty(properties.metadata.MonitorStarterPacks)) on $left.PolicyId == $right.id\n| project tostring(AssignmentName),Name=tostring(split(PolicyId,\"/\")[8]), PolicyId, ScopeLevel=iff(scope contains 'subscriptions',\"Sub\", \"MG\"),Scope=scope) on Name\n| project-away Name1, id)\n| sort by Pack asc, AssignmentName asc ",
                                  "size": 0,
                                  "title": "Installed Policies and Initiatives with Assignments",
                                  "noDataMessage": "No MonStar policies (packs) installed.",
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "fieldName": "",
                                      "parameterName": "policyseletedpolicy",
                                      "parameterType": 1
                                    }
                                  ],
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Group",
                                        "formatter": 1
                                      }
                                    ],
                                    "filter": true
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "policystatus"
                                },
                                "name": "query - 8 - Copy",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "Select Scope below to assign a policy. There is no need to Select a scope to Unassign the policy.",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "policyseletedpolicy",
                                  "comparison": "isNotEqualTo"
                                },
                                "name": "text - 6"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resourcecontainers\n| where type == 'microsoft.management/managementgroups' or type =~ 'microsoft.resources/subscriptions'\n| project name, id, subscriptionId, type=split(type,'/')[1]",
                                  "size": 0,
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "parameterName": "policyscopes",
                                      "parameterType": 1,
                                      "quote": "\""
                                    }
                                  ],
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "policyseletedpolicy",
                                  "comparison": "isNotEqualTo"
                                },
                                "name": "query - 15",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "paragraph",
                                  "links": [
                                    {
                                      "id": "63320366-2b93-4e52-831c-55f7c6de4043",
                                      "linkTarget": "ArmAction",
                                      "linkLabel": "Assign Policy",
                                      "style": "primary",
                                      "linkIsContextBlade": true,
                                      "armActionContext": {
                                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                        "headers": [],
                                        "params": [],
                                        "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Assign\",\n    \"Scopes\": [{policyscopes}],\n    \"policies\": [{policyseletedpolicy}]\n  }\n}",
                                        "httpMethod": "POST",
                                        "title": "Assign Policy",
                                        "description": "# Assign policy below to selected scope:\n\n## Policy\n\n{policyseletedpolicy}\n\n## Scope\n\n{policyscopes}",
                                        "runLabel": "Assign"
                                      }
                                    },
                                    {
                                      "id": "ed3b8c20-e2ef-4768-b0b9-bfcc254602e6",
                                      "linkTarget": "ArmAction",
                                      "linkLabel": "Unassign Policy",
                                      "style": "primary",
                                      "linkIsContextBlade": true,
                                      "armActionContext": {
                                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                        "headers": [],
                                        "params": [],
                                        "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Unassign\",\n    \"policies\": [{policyseletedpolicy}]\n  }\n}",
                                        "httpMethod": "POST",
                                        "title": "Unassign Policies",
                                        "description": "# Unassign policy or policies below from their scopes.\n\n## Policy\n\n{policyseletedpolicy}\n\n",
                                        "actionName": "Unassign Policies",
                                        "runLabel": "Unassign"
                                      }
                                    }
                                  ]
                                },
                                "customWidth": "25",
                                "conditionalVisibility": {
                                  "parameterName": "policyseletedpolicy",
                                  "comparison": "isNotEqualTo"
                                },
                                "name": "links - 2 - Copy"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "## Policies To Assign: \n\n`{policyseletedpolicy}`\n\n## Scopes: \n\n{policyscopes}"
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "policyseletedpolicy",
                                    "comparison": "isNotEqualTo"
                                  },
                                  {
                                    "parameterName": "showHelp",
                                    "comparison": "isEqualTo",
                                    "value": "yes"
                                  }
                                ],
                                "name": "text - 4"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "policystatus"
                          },
                          "name": "policymgmt"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.storageProfile.osDisk.osType)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.osType)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| summarize by id, OSName, OSType, ExtensionName, subscriptionId\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1\n| order by tolower(OSName) asc",
                            "size": 0,
                            "title": "Agent Install Status",
                            "queryType": 1,
                            "resourceType": "microsoft.resources/tenants",
                            "crossComponentResources": [
                              "value::tenant"
                            ],
                            "visualization": "table",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "ExtensionName",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "linkTarget": "CellDetails",
                                    "linkIsContextBlade": true,
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "AzureMonitorLinuxAgent",
                                        "representation": "success",
                                        "text": "Linux Agent"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "AzureMonitorWindowsAgent",
                                        "representation": "success",
                                        "text": "Windows Agent"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "stopped",
                                        "text": "No Agent"
                                      }
                                    ],
                                    "customColumnWidthSetting": "20ch"
                                  }
                                }
                              ],
                              "filter": true
                            },
                            "sortBy": []
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "agentmgmt"
                          },
                          "customWidth": "50",
                          "name": "query - agent install status",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.storageProfile.osDisk.osType)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.osType)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| summarize count() by ExtensionName",
                            "size": 1,
                            "title": "Agent Install Status",
                            "queryType": 1,
                            "resourceType": "microsoft.resources/tenants",
                            "crossComponentResources": [
                              "value::tenant"
                            ],
                            "visualization": "piechart",
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "ExtensionName",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "linkTarget": "CellDetails",
                                    "linkIsContextBlade": true,
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "AzureMonitorLinuxAgent",
                                        "representation": "success",
                                        "text": "Linux Agent"
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "AzureMonitorWindowsAgent",
                                        "representation": "success",
                                        "text": "Windows Agent"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "stopped",
                                        "text": "No Agent"
                                      }
                                    ],
                                    "customColumnWidthSetting": "20ch"
                                  }
                                }
                              ],
                              "filter": true
                            },
                            "chartSettings": {
                              "seriesLabelSettings": [
                                {
                                  "seriesName": "",
                                  "label": "No Agent",
                                  "color": "red"
                                }
                              ]
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "agentmgmt"
                          },
                          "customWidth": "50",
                          "name": "query - agent install status - Copy",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "Heartbeat | where Category == \"Azure Monitor Agent\"\n| summarize arg_max(TimeGenerated, *) by Computer\n| project  Computer,LastHeartbeat=TimeGenerated, ['SecondsAgo']=datetime_diff('second',now(),TimeGenerated)\n| sort by SecondsAgo asc",
                            "size": 4,
                            "title": "Last Heartbeat (24 hours)",
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces",
                            "crossComponentResources": [
                              "{Workspace}"
                            ],
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "SecondsAgo",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "<=",
                                        "thresholdValue": "600",
                                        "representation": "success",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": ">",
                                        "thresholdValue": "600",
                                        "representation": "2",
                                        "text": "{0}{1}"
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": null,
                                        "text": "{0}{1}"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "filter": true
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "agentmgmt"
                          },
                          "customWidth": "50",
                          "name": "query - 16",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Auto Discovery",
                            "loadType": "always",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let windowsApps = datatable(Tag:string, name:string)\n[\n   \"ADDS\", \"AD-Domain-Services\",\n   \"DNS\", \"DNS\",\n   \"FS\", \"FS-FileServer\",\n   \"IIS\", \"Web-Server\",\n   \"STSVC\", \"Storage-Services\",\n   \"Nginx\", \"nginx-core\"\n];\nCustomDiscovery_CL\n| extend Computer=split(_ResourceId,'/')[8]//,timestamp=todatetime(timestamp)\n| extend fields=split(RawData,\",\")\n| extend timestamp=todatetime(fields[0])\n| extend type=tostring(fields[1])\n| extend platform=tostring(fields[2])\n| extend name=tostring(fields[3])\n| extend othertype=tostring(fields[4])\n| extend vendor=tostring(fields[5])\n| project Computer,type,name,platform,othertype,vendor\n| join kind=inner (windowsApps) on name\n| project-away name1,othertype",
                                  "size": 0,
                                  "title": "Discovered Applications",
                                  "timeContext": {
                                    "durationMs": 172800000
                                  },
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Tag",
                                        "formatter": 7,
                                        "formatOptions": {
                                          "linkTarget": "ArmAction",
                                          "linkIsContextBlade": true
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "Click to Enable monitoring"
                                        }
                                      }
                                    ]
                                  }
                                },
                                "name": "discoveryQuery"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "policyresources | where type == \"microsoft.policyinsights/policystates\" | extend policyName=tostring(properties.policyDefinitionName),complianceState=properties.complianceState\n| join \n    (policyresources | where type == \"microsoft.authorization/policydefinitions\" and properties.metadata.MonitoringPackType == 'Discovery'  \n        | project policyId=id, policyName=name) \n        on policyName\n| project Name=policyName, State=tostring(complianceState), type='Policy',policyId\n| union( policyresources\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\n| extend complianceState = tostring(properties.complianceState)\n| extend\n\tresourceId = tostring(properties.resourceId),\n\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\n\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\n\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\n\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\n\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\n\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\n| summarize overallStateWeight = max(max_stateWeight),\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\ncompliantCount = sumif(counts, max_stateWeight == 200),\nconflictCount = sumif(counts, max_stateWeight == 100),\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\ncompliancePercentage,\ncompliantCount,\nnonCompliantCount,\nconflictCount,\nexemptCount\n| where isnotempty(policySetDefinitionId)\n| join (policyresources\n| where type =~ 'microsoft.authorization/policysetdefinitions' and properties.metadata.MonitoringPackType=='Discovery'\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\n| project Name=name,State=complianceState, type='Set',policyId=policySetDefinitionId)",
                                  "size": 0,
                                  "title": "Assignment Status (Compliance) - Discovery",
                                  "exportedParameters": [
                                    {
                                      "parameterName": "policiesToRemediate",
                                      "parameterType": 5
                                    }
                                  ],
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "State",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "NonCompliant",
                                              "representation": "2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "nonCompliant",
                                              "representation": "2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "filter": true
                                  }
                                },
                                "customWidth": "75",
                                "name": "Query DiscoveryPolicies",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "list",
                                        "links": [
                                          {
                                            "id": "b3bb5a4d-0f95-4e9a-8634-9cb027f860aa",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remediate (all policies)",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Remediate\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Rmediate policies",
                                              "description": "# Please confirm remediation\n\nThis button will trigger a global policy remeadiation. \n\nThe backend script will go through the policies and initiatives, finding the ones that are not compliant, and will trigger remediation. \n\nIt is not restricted to the ones in this screen.",
                                              "actionName": "Remediate",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "8dfc5afa-108a-4713-8a0c-651c3a32c5f1",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Check Compliance",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Scan\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Check Policy Compliance",
                                              "description": "# Please confirm the scan.",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 3"
                                    },
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## Policy Compliance Check\nThis task will trigger a tenant wide check for policy compliance.\n\n## Policy Remediation\n\nThis Task will trigger remediation for the policies in the list that are considered not compliant at this time.",
                                        "style": "info"
                                      },
                                      "conditionalVisibilities": [
                                        {
                                          "parameterName": "tabSelection",
                                          "comparison": "isEqualTo",
                                          "value": "policystatus"
                                        },
                                        {
                                          "parameterName": "showHelp",
                                          "comparison": "isEqualTo",
                                          "value": "yes"
                                        }
                                      ],
                                      "name": "text - 7"
                                    }
                                  ]
                                },
                                "customWidth": "25",
                                "name": "ComplianceButtons - Copy"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "079a4550-40c9-44cd-a223-40097e453659",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Computer",
                                      "type": 2,
                                      "query": "\nCustomDiscovery_CL\n| parse RawData with timestamp \",\" rest1\n| extend Computer=split(_ResourceId,'/')[8],timestamp=todatetime(timestamp)\n| summarize by tostring(Computer)\n\n",
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "value": null,
                                      "label": "Select Server"
                                    },
                                    {
                                      "id": "d1f20750-4a22-4433-9c5d-a4d9a4f62f9d",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "discoveryPeriod",
                                      "label": "Period",
                                      "type": 4,
                                      "typeSettings": {
                                        "selectableValues": [
                                          {
                                            "durationMs": 300000
                                          },
                                          {
                                            "durationMs": 900000
                                          },
                                          {
                                            "durationMs": 1800000
                                          },
                                          {
                                            "durationMs": 3600000
                                          },
                                          {
                                            "durationMs": 14400000
                                          },
                                          {
                                            "durationMs": 43200000
                                          },
                                          {
                                            "durationMs": 86400000
                                          },
                                          {
                                            "durationMs": 172800000
                                          },
                                          {
                                            "durationMs": 259200000
                                          },
                                          {
                                            "durationMs": 604800000
                                          },
                                          {
                                            "durationMs": 1209600000
                                          },
                                          {
                                            "durationMs": 2419200000
                                          }
                                        ]
                                      },
                                      "value": {
                                        "durationMs": 1800000
                                      }
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces"
                                },
                                "name": "parameters - 20"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "CustomDiscovery_CL\n| extend Computer=split(_ResourceId,'/')[8]//,timestamp=todatetime(timestamp)\n| extend fields=split(RawData,\",\")\n| extend timestamp=todatetime(fields[0])\n| extend type=tostring(fields[1])\n| extend platform=tostring(fields[2])\n| extend name=tostring(fields[3])\n| extend othertype=tostring(fields[4])\n| extend vendor=tostring(fields[5])\n//| where Computer == 'server2'\n| project Computer,type,name,platform,othertype,vendor\n| where Computer == '{Computer}'",
                                  "size": 0,
                                  "title": "All Discovery Data",
                                  "timeContextFromParameter": "discoveryPeriod",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "gridSettings": {
                                    "rowLimit": 1000,
                                    "filter": true
                                  }
                                },
                                "name": "query - discovery - all"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where type =~ \"microsoft.compute/virtualmachines\"\n| mvexpand with_itemindex=i apps=properties.applicationProfile.galleryApplications\n| where apps != ''\n| project Computer=name, ['Application Name']=tostring(split(apps.packageReferenceId,\"/\")[10]), Gallery=tostring(split(apps.packageReferenceId,\"/\")[8])\n| summarize by Gallery,['Application Name'], Computer\n| sort by Gallery asc",
                                  "size": 0,
                                  "title": "Client Status (VM Applications)",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "Computer",
                                        "sortOrder": 1
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "Computer",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "name": "query - vmapplications",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "autodiscovery"
                          },
                          "name": "AutoDiscoveryGroup"
                        }
                      ],
                      "fallbackResourceIds": [
                        "Azure Monitor"
                      ],
                      "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
                    },
                    "wbConfig": "[string(variables('$fxv#0'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/workbooks",
                      "apiVersion": "2022-04-01",
                      "name": "[guid('Azure Monitor Starter Packs PaaS')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "shared",
                      "properties": {
                        "displayName": "Azure Monitor Starter Packs Extended",
                        "serializedData": "[variables('wbConfig')]",
                        "category": "workbook",
                        "sourceId": "[parameters('lawresourceid')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "dceName": {
                    "value": "[format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "14673303714999756448"
                    }
                  },
                  "parameters": {
                    "dceName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionEndpoints",
                      "apiVersion": "2021-09-01-preview",
                      "name": "[parameters('dceName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "networkAcls": {
                          "publicNetworkAccess": "Enabled"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "dceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dceName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-UMI-Packs', parameters('instanceName'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('packPolicyRoleDefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "[format('AMP-{0}-UMI-Packs', parameters('instanceName'))]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "addRGRoleAssignments": {
                    "value": true
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "17030408063704970586"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "addRGRoleAssignments": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "solutionTag": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "RGroleDefinitionIds": [
                      "b24988ac-6180-42a0-ab88-20f7382dd24c",
                      "22926164-76b3-42b3-bc55-97df8dab3e41"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('userIdentityName')]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "11471796101525841241"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('Tags')]"
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), copyIndex())]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "6314791387466906825"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignmentRG",
                        "count": "[length(variables('RGroleDefinitionIds'))]"
                      },
                      "condition": "[parameters('addRGRoleAssignments')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-RG', parameters('userIdentityName'), copyIndex())]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13765506848823263645"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-UMI-Function', parameters('instanceName'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('backendFunctionRoleDefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "[format('AMP-{0}-UMI-Function', parameters('instanceName'))]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "17030408063704970586"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "addRGRoleAssignments": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "solutionTag": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "RGroleDefinitionIds": [
                      "b24988ac-6180-42a0-ab88-20f7382dd24c",
                      "22926164-76b3-42b3-bc55-97df8dab3e41"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('userIdentityName')]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "11471796101525841241"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('Tags')]"
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), copyIndex())]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "6314791387466906825"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignmentRG",
                        "count": "[length(variables('RGroleDefinitionIds'))]"
                      },
                      "condition": "[parameters('addRGRoleAssignments')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-RG', parameters('userIdentityName'), copyIndex())]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13765506848823263645"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "kvName": {
                    "value": "[format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "functionName": {
                    "value": "[parameters('functionname')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "16897256827562071272"
                    }
                  },
                  "parameters": {
                    "kvName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "functionName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "vaultUri": "[format('https://{0}.vault.azure.net', parameters('kvName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2021-06-01-preview",
                      "name": "[parameters('kvName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "tenantId": "[subscription().tenantId]",
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": false,
                        "enabledForTemplateDeployment": false,
                        "enableSoftDelete": true,
                        "softDeleteRetentionInDays": 90,
                        "enableRbacAuthorization": true,
                        "vaultUri": "[variables('vaultUri')]",
                        "provisioningState": "Succeeded",
                        "publicNetworkAccess": "Enabled",
                        "enablePurgeProtection": true
                      }
                    },
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2021-11-01-preview",
                      "name": "[format('{0}/{1}', parameters('kvName'), 'FunctionKey')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "attributes": {
                          "enabled": true
                        },
                        "contentType": "string",
                        "value": "[listKeys(resourceId('Microsoft.Web/sites/host', parameters('functionName'), 'default'), '2022-09-01').functionKeys.monitoringKey]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "kvResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('functionname'))]"
              ]
            },
            {
              "copy": {
                "name": "userIdentityRoleAssignments",
                "count": "[length(variables('logicappRequiredRoleassignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('logiapprbac-{0}', copyIndex())]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "resourcename": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))), '2022-09-01').outputs.kvResourceId.value]"
                  },
                  "principalId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('logicappname')), '2022-09-01').outputs.logicAppPrincipalId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('logicappRequiredRoleassignments')[copyIndex()]]"
                  },
                  "roleShortName": {
                    "value": "[variables('logicappRequiredRoleassignments')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "6314791387466906825"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6)))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('logicappname'))]"
              ]
            }
          ],
          "outputs": {
            "packsUserManagedIdentityId": {
              "type": "string",
              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs', parameters('instanceName'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
            },
            "packsUserManagedResourceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs', parameters('instanceName'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
            },
            "dceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.dceId.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment')]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', 'resourceGroup-Deployment')]"
      ]
    },
    {
      "condition": "[variables('deployPacks')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "DeployAllPacks",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "dceId": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.dceId.value]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "useExistingAG": {
            "value": "[parameters('useExistingAG')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.packsUserManagedResourceId.value]"
          },
          "workspaceId": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment'), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "actionGroupName": {
            "value": "[parameters('actionGroupName')]"
          },
          "resourceGroupId": "[if(parameters('createNewResourceGroup'), createObject('value', reference(subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', 'resourceGroup-Deployment'), '2022-09-01').outputs.newResourceGroupId.value), createObject('value', parameters('resourceGroupId')))]",
          "emailreceiver": {
            "value": "[parameters('emailreceiver')]"
          },
          "emailreiceversemail": {
            "value": "[parameters('emailreiceversemail')]"
          },
          "grafanaResourceId": "[if(parameters('newGrafana'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('azureManagedGrafana-{0}', parameters('instanceName'))), '2022-09-01').outputs.grafanaId.value), createObject('value', parameters('existingGrafanaResourceId')))]",
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[variables('solutionVersion')]"
          },
          "existingActionGroupResourceId": {
            "value": "[parameters('existingActionGroupId')]"
          },
          "deployIaaSPacks": {
            "value": "[or(parameters('deployIaaSPacks'), parameters('deployAllPacks'))]"
          },
          "deployPaaSPacks": {
            "value": "[or(parameters('deployPaaSPacks'), parameters('deployAllPacks'))]"
          },
          "deployPlatformPacks": {
            "value": "[or(parameters('deployPlatformPacks'), parameters('deployAllPacks'))]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "imagaGalleryName": {
            "value": "[variables('ImageGalleryName')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "7365729130027668348"
            }
          },
          "parameters": {
            "mgname": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "actionGroupName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Action Group to be used or created."
              }
            },
            "emailreceiver": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Email receiver names to be used for the Action Group if being created."
              }
            },
            "emailreiceversemail": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Email addresses to be used for the Action Group if being created."
              }
            },
            "useExistingAG": {
              "type": "bool",
              "metadata": {
                "description": "If set to true, a new Action group will be created"
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "assignmentLevel": {
              "type": "string"
            },
            "grafanaResourceId": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            },
            "existingActionGroupResourceId": {
              "type": "string"
            },
            "deployIaaSPacks": {
              "type": "bool"
            },
            "deployPaaSPacks": {
              "type": "bool"
            },
            "deployPlatformPacks": {
              "type": "bool"
            },
            "storageAccountName": {
              "type": "string"
            },
            "imagaGalleryName": {
              "type": "securestring"
            },
            "instanceName": {
              "type": "string"
            }
          },
          "variables": {
            "solutionTagComponents": "MonitorStarterPacksComponents",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "tempTags": {
              "[format('{0}', variables('solutionTagComponents'))]": "BackendComponent",
              "solutionVersion": "[parameters('solutionVersion')]",
              "instanceName": "[parameters('instanceName')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]"
          },
          "resources": [
            {
              "condition": "[not(parameters('useExistingAG'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "deployAG-new",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "emailreceiver": {
                    "value": "[parameters('emailreceiver')]"
                  },
                  "emailreiceversemail": {
                    "value": "[parameters('emailreiceversemail')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "location": {
                    "value": "global"
                  },
                  "groupshortname": {
                    "value": "[parameters('actionGroupName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15647963426889653897"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "groupshortname": {
                      "type": "string"
                    },
                    "emailreceiver": {
                      "type": "string"
                    },
                    "emailreiceversemail": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/actionGroups",
                      "apiVersion": "2023-01-01",
                      "name": "[parameters('groupshortname')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "groupShortName": "[parameters('groupshortname')]",
                        "enabled": true,
                        "emailReceivers": [
                          {
                            "name": "[parameters('emailreceiver')]",
                            "emailAddress": "[parameters('emailreiceversemail')]",
                            "useCommonAlertSchema": false
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "agGroupId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('groupshortname'))]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('deployIaaSPacks')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "deployIaaSPacks",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "grafanaResourceId": {
                    "value": "[parameters('grafanaResourceId')]"
                  },
                  "actionGroupResourceId": "[if(parameters('useExistingAG'), createObject('value', parameters('existingActionGroupResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new'), '2022-09-01').outputs.agGroupId.value))]",
                  "customerTags": {
                    "value": "[parameters('customerTags')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "resourceGroupId": {
                    "value": "[parameters('resourceGroupId')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "imagaGalleryName": {
                    "value": "[parameters('imagaGalleryName')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "12416319547569842739"
                    }
                  },
                  "parameters": {
                    "mgname": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupId": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "location for the deployment."
                      }
                    },
                    "workspaceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                      }
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                      }
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the user managed identity to be used for the deployment"
                      }
                    },
                    "assignmentLevel": {
                      "type": "string"
                    },
                    "grafanaResourceId": {
                      "type": "string"
                    },
                    "customerTags": {
                      "type": "object"
                    },
                    "actionGroupResourceId": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "imagaGalleryName": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "solutionTagComponents": "MonitorStarterPacksComponents",
                    "tempTags": {
                      "[format('{0}', variables('solutionTagComponents'))]": "BackendComponent",
                      "solutionVersion": "[parameters('solutionVersion')]",
                      "instanceName": "[parameters('instanceName')]",
                      "MonitoringPackType": "IaaS"
                    },
                    "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                    "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "ADDSPack",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "imageGalleryName": {
                            "value": "[parameters('imagaGalleryName')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "storageAccountname": {
                            "value": "[parameters('storageAccountName')]"
                          },
                          "tableName": {
                            "value": "addsmonitoring"
                          },
                          "tags": {
                            "value": "[variables('Tags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "9108631623483968863"
                            }
                          },
                          "parameters": {
                            "rulename": {
                              "type": "string",
                              "defaultValue": "AMSP-ADDS-Server",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "ADDS"
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "solutionTag": {
                              "type": "string",
                              "defaultValue": "MonitorStarterPacks"
                            },
                            "solutionVersion": {
                              "type": "string",
                              "defaultValue": "0.1.0"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "instanceName": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "storageAccountname": {
                              "type": "string"
                            },
                            "imageGalleryName": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "kind": "Windows",
                            "ruleshortname": "[format('{0}-collection', parameters('packtag'))]",
                            "appName": "[format('{0}-collection', parameters('packtag'))]",
                            "appDescription": "[format('{0} Collection - {1}', parameters('packtag'), parameters('instanceName'))]",
                            "OS": "Windows",
                            "tableNameToUse": "[format('Custom{0}_CL', parameters('tableName'))]",
                            "xPathQueries": [],
                            "performanceCounters": [
                              "\\NTDS:DirectoryServices\\DS Search sub-operations/sec"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "wsfriendlyname": {
                                    "value": "[variables('workspaceFriendlyName')]"
                                  },
                                  "kind": {
                                    "value": "[variables('kind')]"
                                  },
                                  "xPathQueries": {
                                    "value": "[variables('xPathQueries')]"
                                  },
                                  "counterSpecifiers": {
                                    "value": "[variables('performanceCounters')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "10387281639106552930"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "defaultValue": "Windows"
                                    },
                                    "wsfriendlyname": {
                                      "type": "string",
                                      "defaultValue": "TBD"
                                    },
                                    "xPathQueries": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "counterSpecifiers": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "samplingFrequencyInSeconds": {
                                      "type": "int",
                                      "defaultValue": 300
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('rulename')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "[parameters('kind')]",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceId')]",
                                              "name": "[parameters('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataSources": {
                                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), null(), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                                          "performanceCounters": [
                                            {
                                              "streams": [
                                                "Microsoft-Perf"
                                              ],
                                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                                              "name": "PerfCountersDataSource"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Event",
                                              "Microsoft-Perf"
                                            ],
                                            "destinations": [
                                              "[parameters('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('policysetup-{0}', parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dcrId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12301075469741441796"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "roledefinitionIds": [
                                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                    ],
                                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7060261485268467714"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "13782378815920433053"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.HybridCompute/Machines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('client-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  },
                                  "instanceName": {
                                    "value": "[parameters('instanceName')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "imageGalleryName": {
                                    "value": "[parameters('imageGalleryName')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "resourceGroupId": {
                                    "value": "[parameters('resourceGroupId')]"
                                  },
                                  "storageAccountname": {
                                    "value": "[parameters('storageAccountname')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  },
                                  "tableName": {
                                    "value": "[variables('tableNameToUse')]"
                                  },
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "appDescription": {
                                    "value": "[variables('appDescription')]"
                                  },
                                  "appName": {
                                    "value": "[variables('appName')]"
                                  },
                                  "OS": {
                                    "value": "[variables('OS')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[variables('ruleshortname')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "11840691040383424311"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string",
                                      "defaultValue": "ADDS",
                                      "metadata": {
                                        "description": "Name of the DCR rule to be created"
                                      }
                                    },
                                    "location": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "location for the deployment."
                                      }
                                    },
                                    "workspaceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                                      }
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "dceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                                      }
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Full resource ID of the user managed identity to be used for the deployment"
                                      }
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    },
                                    "resourceGroupId": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string"
                                    },
                                    "storageAccountname": {
                                      "type": "string"
                                    },
                                    "imageGalleryName": {
                                      "type": "string"
                                    },
                                    "tableName": {
                                      "type": "string"
                                    },
                                    "tags": {
                                      "type": "object"
                                    },
                                    "instanceName": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "appName": {
                                      "type": "string"
                                    },
                                    "appDescription": {
                                      "type": "string"
                                    },
                                    "OS": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                                    "tableNameToUse": "[format('Custom{0}_CL', parameters('tableName'))]",
                                    "lawFriendlyName": "[split(parameters('workspaceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "addscollectionapp",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "resourceGroup": "[variables('resourceGroupName')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "aigname": {
                                            "value": "[parameters('imageGalleryName')]"
                                          },
                                          "appDescription": {
                                            "value": "[parameters('appDescription')]"
                                          },
                                          "appName": {
                                            "value": "[parameters('appName')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "osType": {
                                            "value": "[parameters('OS')]"
                                          },
                                          "tags": {
                                            "value": "[parameters('tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "16298643752623576341"
                                            }
                                          },
                                          "parameters": {
                                            "location": {
                                              "type": "string"
                                            },
                                            "aigname": {
                                              "type": "string"
                                            },
                                            "osType": {
                                              "type": "string"
                                            },
                                            "appDescription": {
                                              "type": "string"
                                            },
                                            "appName": {
                                              "type": "string"
                                            },
                                            "tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Compute/galleries/applications",
                                              "apiVersion": "2022-03-03",
                                              "name": "[format('{0}/{1}', parameters('aigname'), parameters('appName'))]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('tags')]",
                                              "properties": {
                                                "supportedOSType": "[parameters('osType')]",
                                                "description": "[parameters('appDescription')]"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "upload-addscollectionapp",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "resourceGroup": "[variables('resourceGroupName')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "containerName": {
                                            "value": "applications"
                                          },
                                          "filename": {
                                            "value": "addscollection.zip"
                                          },
                                          "storageAccountName": {
                                            "value": "[parameters('storageAccountname')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "tags": {
                                            "value": "[parameters('tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "897784593785861700"
                                            }
                                          },
                                          "parameters": {
                                            "location": {
                                              "type": "string"
                                            },
                                            "storageAccountName": {
                                              "type": "string"
                                            },
                                            "sasExpiry": {
                                              "type": "string",
                                              "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                                            },
                                            "filename": {
                                              "type": "string"
                                            },
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "tags": {
                                              "type": "object"
                                            }
                                          },
                                          "variables": {
                                            "$fxv#0": "UEsDBBQAAAAIACM5KVgdcaezNQQAAH0MAAANAAAAYWRjb2xsZWN0LnBzMc1WXW/jNhB8169YMEbPKiwld0+FAQGns+I6OH8hclsc4uCgiGubjSQaJO3ESfPfu5Qsx05yaFoEaPxgSORyZzg7FPcIEp7KLMPU+Ev90TmCyUJo0KkSSwPbGQ1hFMWQo1Ei1ZAUHG6UMKjBLDAHIyGBmciwXI3lI4hysqhTIIerjR2B8G6lEAayEEYqSOZYmDKjtg+U6mDeoZTjRCUEjQoWmC2BY0VOyMJpqFUxETkGczQeTwyC15UqTwwwyZyjZj3s+kZqIl/Mm2xDP28w8DiHXq+d522tmes4jbxCpJiZzDiqgKXt6R+i4PJGl5ymVgTKugP9YfrBgPNej7KKGTTLKBIrh2cQ4J0qJVWY2s1ATLIVJtt0ZGFEsULXhXtwgH6shoQ2jK79brU4yRQmfAN4K7TRDP4CuTJeKX4kdCrXqPpy7ptbA164XGLBnQdwMNMI98/SdigXoc5hy+w517JGq6vqTfsMXgNoYfJrLl5K6Dw4jTAalKaidTZPwEK+G/BTvSa54Vc0pZcgXSllTTJTiKCXSYpAstkZLvQ1cCXWSK9U/QUhVGvCCDI5r9zZoKRdejjH+VfcQACs97U/aE/jb/HkdDDtVOmt/EpmMZppjGotUtTT4SSKpzsf6ilzGnqcmAUlDJrEzzuj+o6VXKIyG/DsFDxB84a0GFiUmOQqoRLUrDQsKZq5/g+nnMZaZqKYydLl9LyiRF5kd9tHY8/FjszFySUJdr4iA+XYgkpKC9yC35OsBZNkrp2Gof/gM3Pu2Tr3k7vcz/VxLmnRGWdt1mjWeH6paFZiuG3W2guniFjc4WG4HXEPwrJKAsvOhtY02YPDPjs7+7XCaKtVuSny0nVsqztOzW8aeavRvKAjvbhstxWx5IeA55gnoiBXHR8M//zx5KT1yXVb5W7t4RiRVy0G2f6pFadPfchqA9MJLVLJ7cFYmdkvzhvYkddl3n4xyYSn3773R52w/30Qdnpnw9P/4MgoDmFnILtN9j7s/oyWNfoLXP+Vxd+jg2lTUfSlpEy+7ZIn3rtvNcGBnJVjheHa58K8ow/la51jGVvlquv4rLxoa0zX72MxN4v/wV+vN44w3e0WWrvNvHH5t9Xv/9QF24nQHSDPpTRU2YuEa3HJ+lE4bh8fKxrk2qpK7Uw0jCNpTRpU0T7HWbLKDNWHEtvq461xGlTNtbD3OdkkjHQUj0ZXf1LHR0lkJ+cTCrJTMdo2EMridpXM4cMWszMM+tQ9hQXv2lPSOoD+wBybRhYFVk1SAEO88SoE8FKZy+qRoEfRF/8xkh2s82uWwY7v4fyIZGsy24mtbTejaFiqDdTB1MvZ8Dy3XdA/cijD2OOKeshqEexU2ZuvcB/pBPvcnMY5plLxjjVg0HxcdXqL6cpg03X9vQjnZfvSHdutNC3tuKfxS9+yfpe2V6Zr7aO/sS3/BlBLAwQUAAAACAAjOSlYGAroJuIDAACMDgAAFgAAAGFkZHNjb2xsZWN0aW9udGFzay54bWydV9tu2kAQnedK/QfEO5jcmiaiiUhoC1JuKonywgsNhKBwk20C6ce3PXN2jb22CU5k2Wvv3GfPzqz//a3LqaxkImMpyYsMxJdARjKTqXyTsuxIVWoYS6BM5QHzfVCnMiT1Tm7lh1TA9QVfp3Iin+WT1DHbg5bnjRp3qdFYnYKq808S4prLsXi4Ath6guyEmqoYR5jxoSXA/QjOKr2ZgHdJj/r4WoLqQXsN1z7eanj3KBtiDK1XZetnCVddfsHKEBwB6D44QutrG/cj3mJew98kzwDzu9S/x/h38NSvW7zVEMMO7B+DdgQ/D0ip4Wsf8l5Cg6u5IQvMP8GmD5pyujMu9x08b2O2C64mZprSwfMcvGNcA2QniqS0Xg/VGcnFGfDekQNdWx/UIS6zsmm/bkGdgObyuVxx5ue4Q66PsZjlM7zqSUhNL/BvDL4bWDiQS/qfpeZr6YBrBpsNjE3kNhnrd2LoBPGqhgDaVHMRiWxkXsHYjEc9aA3lDDwLatTv1zW+9oksg6894usIyDogyhTnkZebtGRtqt89+U2UqP+65gsbb5rmrq23dXUNzyaE1LFqPnfrA55zm+m0lSxPCW99VonkjijnRnfHtfOBCfW/w91ZQb50/Gp3QJIjD5eawQvwaPVSNLUYj9Yj3SENomwESpQps+JpqXTusnG5eXs7N4qVAWukqb/ZvF3CgzHpc3rVZm1VZKhO9f2G1UErqSKjDS1TZnIgV7iX9OK9WtLVUatIjzVI63GMzDZ21jV0nHEHmd06oj4XgR/T4HoR7VqV+Ik3k7Ei1t8nma7fkc8tetzHTlDuCbVENT9prZhENjaTj3sicpqDx7wqtl3GtWPwrJGPsc6ajyvib0nEPBew+hENrg+6Q3X+beS7a37NvmXkogqdt8J5fPk9KlhnLymTjXYzZ7oSFIsriaiOo7lpT0bZ6IpJuFY+3g9arMt9IiqdD5e2DVubs7qZ09V5D7lndqaZlUrryuNIZ2LFk9Ni3bOjfnfBUXu5OXkcojO3bIaKyOR1uBmfIavoYaIDJOeT/WEzWhQp8XkvEHMONGeiFZ7bOmcced4eOOc5O0bPOU4eXWQzeeruwrtX4l9xtofspDluOGp167AGKU67qADmD6OLHRnRgzW9Sv/N6qW9yPrZgOwQUU6IuZAZqqDmzJhX/WsYETklO3uBe4g7+p4mzpE9m88Xy59d5WQXLKE7vLJnB8x+BX9Fka1ybr4a8oenyYE9v+vpvQv5Pv9q4hN8FVoD5Khsd3c2wmwe7m19NTjRfupbbTN7Jizqkdk127Slq1sWS8b3JEKjP0Vv/W9yIv8BUEsDBBQAAAAIACM5KVgRD5yhJgEAAJsBAAALAAAAaW5zdGFsbC5wczFFkLFOwzAQhvdIeYeT6dAMNmKtxBA17YQAkSIxZLHsa2rVsSPbaZMWnoyBR+IVcNoAt97//brvvj+/ZmurJbp7IhbVURlpjz4/dQ6rvChKkiZqC/N5jYGqgA1MaaAr56zLRVDWQKk0mqCHpTVBmQ6zDM6QJhCHzFxnNqpBWMDTnk001w65HAB75YMn8A62C3Qba6BQXtgDugdbs9AHoHnbopFp8pEmqD3C+Vrc7KVyv+dctjervuVG0tyJnTogsEpOXeyk2jQRth2AS2G1RhFY6+/+8Res4yXoaCl2KDuNcsP9Huhbo+EiL6JadAR2y6X0U0d0DzHG+pi6KvjglKkzoCP+yKM2yQsoSlj+ETCuCNC1dQKBvvr4j3Lw43Mv1DMPOyAV+QFQSwECFAMUAAAACAAjOSlYHXGnszUEAAB9DAAADQAAAAAAAAAAAAAApIEAAAAAYWRjb2xsZWN0LnBzMVBLAQIUAxQAAAAIACM5KVgYCugm4gMAAIwOAAAWAAAAAAAAAAAAAACkgWAEAABhZGRzY29sbGVjdGlvbnRhc2sueG1sUEsBAhQDFAAAAAgAIzkpWBEPnKEmAQAAmwEAAAsAAAAAAAAAAAAAAKSBdggAAGluc3RhbGwucHMxUEsFBgAAAAADAAMAuAAAAMUJAAAAAA==",
                                            "discoveryContainerName": "applications",
                                            "tempfilename": "download.tmp",
                                            "sasConfig": {
                                              "signedResourceTypes": "sco",
                                              "signedPermission": "r",
                                              "signedServices": "b",
                                              "signedExpiry": "[parameters('sasExpiry')]",
                                              "signedProtocol": "https",
                                              "keyToSign": "key2"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deploymentScripts",
                                              "apiVersion": "2020-10-01",
                                              "name": "deployscript-addappdiscovery",
                                              "tags": "[parameters('tags')]",
                                              "location": "[parameters('location')]",
                                              "kind": "AzureCLI",
                                              "properties": {
                                                "azCliVersion": "2.42.0",
                                                "timeout": "PT5M",
                                                "retentionInterval": "PT1H",
                                                "environmentVariables": [
                                                  {
                                                    "name": "AZURE_STORAGE_ACCOUNT",
                                                    "value": "[parameters('storageAccountName')]"
                                                  },
                                                  {
                                                    "name": "AZURE_STORAGE_KEY",
                                                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                                                  },
                                                  {
                                                    "name": "CONTENT",
                                                    "value": "[variables('$fxv#0')]"
                                                  }
                                                ],
                                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "fileURL": {
                                              "type": "string",
                                              "value": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "addscollectionappversion",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "resourceGroup": "[variables('resourceGroupName')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "aigname": {
                                            "value": "[parameters('imageGalleryName')]"
                                          },
                                          "appName": {
                                            "value": "[parameters('appName')]"
                                          },
                                          "appVersionName": {
                                            "value": "1.0.0"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "targetRegion": {
                                            "value": "[parameters('location')]"
                                          },
                                          "mediaLink": {
                                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'upload-addscollectionapp'), '2022-09-01').outputs.fileURL.value]"
                                          },
                                          "installCommands": {
                                            "value": "powershell -command \"ren addscollection addscollection.zip; expand-archive ./addscollection.zip . ; ./install.ps1\""
                                          },
                                          "removeCommands": {
                                            "value": "Unregister-ScheduledTask -TaskName \"AD DS Collection Task\" \"\\\""
                                          },
                                          "tags": {
                                            "value": "[parameters('tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "1739221338810218216"
                                            }
                                          },
                                          "parameters": {
                                            "aigname": {
                                              "type": "string"
                                            },
                                            "appName": {
                                              "type": "string"
                                            },
                                            "appVersionName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "targetRegion": {
                                              "type": "string"
                                            },
                                            "mediaLink": {
                                              "type": "string"
                                            },
                                            "installCommands": {
                                              "type": "string"
                                            },
                                            "removeCommands": {
                                              "type": "string"
                                            },
                                            "tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Compute/galleries/applications/versions",
                                              "apiVersion": "2022-03-03",
                                              "name": "[format('{0}/{1}/{2}', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('tags')]",
                                              "properties": {
                                                "publishingProfile": {
                                                  "source": {
                                                    "mediaLink": "[parameters('mediaLink')]"
                                                  },
                                                  "manageActions": {
                                                    "install": "[parameters('installCommands')]",
                                                    "remove": "[parameters('removeCommands')]"
                                                  },
                                                  "settings": {},
                                                  "enableHealthCheck": false,
                                                  "targetRegions": [
                                                    {
                                                      "name": "[parameters('targetRegion')]",
                                                      "regionalReplicaCount": 1,
                                                      "storageAccountType": "Standard_LRS"
                                                    }
                                                  ],
                                                  "replicaCount": 1,
                                                  "excludeFromLatest": false,
                                                  "storageAccountType": "Standard_LRS"
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "appVersionId": {
                                              "type": "string",
                                              "value": "[resourceId('Microsoft.Compute/galleries/applications/versions', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]"
                                            }
                                          }
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'addscollectionapp')]",
                                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'upload-addscollectionapp')]"
                                      ]
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('applicationPolicy-{0}', parameters('appName'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "ADDS"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Install {0} to {1} VMs', parameters('appName'), parameters('OS'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Install {0}', parameters('appName'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Install {0} to {1} VMs', parameters('appName'), parameters('OS'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "vmapplicationResourceId": {
                                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'addscollectionappversion'), '2022-09-01').outputs.appVersionId.value]"
                                          },
                                          "roledefinitionIds": {
                                            "value": [
                                              "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                                            ]
                                          },
                                          "packtype": {
                                            "value": "IaaS"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "14528133095756415505"
                                            }
                                          },
                                          "parameters": {
                                            "vmapplicationResourceId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packtype": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "variables": {
                                            "vmApplicationName": "[split(parameters('vmapplicationResourceId'), '/')[10]]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                                  "MonitoringPackType": "[parameters('packtype')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "vmapplicationId": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "applicationId",
                                                      "description": "the VM application ID to assign to the VM"
                                                    },
                                                    "defaultValue": "[parameters('vmapplicationResourceId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Compute/virtualMachines",
                                                      "name": "[[field('name')]",
                                                      "existenceCondition": {
                                                        "allOf": [
                                                          {
                                                            "count": {
                                                              "field": "Microsoft.Compute/virtualMachines/applicationProfile.galleryApplications[*]",
                                                              "where": {
                                                                "field": "Microsoft.Compute/virtualMachines/applicationProfile.galleryApplications[*].packageReferenceId",
                                                                "equals": "[[parameters('vmapplicationId')]"
                                                              }
                                                            },
                                                            "greater": 0
                                                          }
                                                        ]
                                                      },
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "location": {
                                                                "type": "string"
                                                              },
                                                              "vmapplicationId": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "vmApplicationName": "[variables('vmApplicationName')]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "apiVersion": "2021-07-01",
                                                                "type": "Microsoft.Compute/virtualMachines/VMapplications",
                                                                "name": "[[concat(parameters('vmName'), '/',variables('vmApplicationName'))]",
                                                                "location": "[[parameters('location')]",
                                                                "properties": {
                                                                  "packageReferenceId": "[[parameters('vmapplicationId')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "location": {
                                                              "value": "[[field('location')]"
                                                            },
                                                            "vmapplicationId": {
                                                              "value": "[[parameters('vmapplicationId')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'addscollectionappversion')]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}', parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', parameters('appName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-application', parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', parameters('appName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}', parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', parameters('appName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-application', parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('applicationPolicy-{0}', parameters('appName')))]"
                                      ]
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[variables('tableNameToUse')]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "resourceGroup": "[variables('resourceGroupName')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "parentname": {
                                            "value": "[variables('lawFriendlyName')]"
                                          },
                                          "tableName": {
                                            "value": "[variables('tableNameToUse')]"
                                          },
                                          "retentionDays": {
                                            "value": 31
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "8927710276797462866"
                                            }
                                          },
                                          "parameters": {
                                            "parentname": {
                                              "type": "string"
                                            },
                                            "tableName": {
                                              "type": "string"
                                            },
                                            "retentionDays": {
                                              "type": "int",
                                              "defaultValue": 31
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.OperationalInsights/workspaces/tables",
                                              "apiVersion": "2022-10-01",
                                              "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                                              "properties": {
                                                "totalRetentionInDays": "[parameters('retentionDays')]",
                                                "plan": "Analytics",
                                                "schema": {
                                                  "name": "[parameters('tableName')]",
                                                  "columns": [
                                                    {
                                                      "name": "TimeGenerated",
                                                      "type": "datetime"
                                                    },
                                                    {
                                                      "name": "RawData",
                                                      "type": "string"
                                                    }
                                                  ]
                                                },
                                                "retentionInDays": "[parameters('retentionDays')]"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "addscollectionDCR",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "resourceGroup": "[variables('resourceGroupName')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "endpointResourceId": {
                                            "value": "[parameters('dceId')]"
                                          },
                                          "filepatterns": {
                                            "value": [
                                              "C:\\WindowsAzure\\ADDS\\*.csv"
                                            ]
                                          },
                                          "kind": {
                                            "value": "Windows"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "lawResourceId": {
                                            "value": "[parameters('workspaceId')]"
                                          },
                                          "OS": {
                                            "value": "Windows"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "tableName": {
                                            "value": "[variables('tableNameToUse')]"
                                          },
                                          "packtag": {
                                            "value": "ADDS"
                                          },
                                          "packtype": {
                                            "value": "IaaS"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15764954877562432804"
                                            }
                                          },
                                          "parameters": {
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "lawResourceId": {
                                              "type": "string"
                                            },
                                            "tableName": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "kind": {
                                              "type": "string"
                                            },
                                            "filepatterns": {
                                              "type": "array"
                                            },
                                            "OS": {
                                              "type": "string"
                                            },
                                            "packtype": {
                                              "type": "string"
                                            },
                                            "endpointResourceId": {
                                              "type": "string",
                                              "metadata": {
                                                "description": "Specifies the resource id of the data collection endpoint."
                                              }
                                            }
                                          },
                                          "variables": {
                                            "tableNameToUse": "[parameters('tableName')]",
                                            "streamName": "[format('Custom-{0}', variables('tableNameToUse'))]",
                                            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/dataCollectionRules",
                                              "apiVersion": "2022-06-01",
                                              "name": "[format('AMSP-FileColl-{0}-{1}', parameters('packtag'), parameters('OS'))]",
                                              "location": "[parameters('location')]",
                                              "tags": {
                                                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                                "MonitoringPackType": "[parameters('packtype')]"
                                              },
                                              "kind": "[parameters('kind')]",
                                              "properties": {
                                                "dataSources": {
                                                  "logFiles": [
                                                    {
                                                      "streams": [
                                                        "[variables('streamName')]"
                                                      ],
                                                      "filePatterns": "[parameters('filepatterns')]",
                                                      "format": "text",
                                                      "settings": {
                                                        "text": {
                                                          "recordStartTimestampFormat": "ISO 8601"
                                                        }
                                                      },
                                                      "name": "[variables('tableNameToUse')]"
                                                    }
                                                  ]
                                                },
                                                "destinations": {
                                                  "logAnalytics": [
                                                    {
                                                      "workspaceResourceId": "[parameters('lawResourceId')]",
                                                      "name": "[variables('lawFriendlyName')]"
                                                    }
                                                  ]
                                                },
                                                "dataFlows": [
                                                  {
                                                    "streams": [
                                                      "[variables('streamName')]"
                                                    ],
                                                    "destinations": [
                                                      "[variables('lawFriendlyName')]"
                                                    ],
                                                    "transformKql": "source",
                                                    "outputStream": "[variables('streamName')]"
                                                  }
                                                ],
                                                "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                                "streamDeclarations": {
                                                  "[format('{0}', variables('streamName'))]": {
                                                    "columns": [
                                                      {
                                                        "name": "TimeGenerated",
                                                        "type": "datetime"
                                                      },
                                                      {
                                                        "name": "RawData",
                                                        "type": "string"
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "ruleId": {
                                              "type": "string",
                                              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('AMSP-FileColl-{0}-{1}', parameters('packtag'), parameters('OS')))]"
                                            },
                                            "ruleName": {
                                              "type": "string",
                                              "value": "[format('AMSP-FileColl-{0}-{1}', parameters('packtag'), parameters('OS'))]"
                                            }
                                          }
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', variables('tableNameToUse'))]"
                                      ]
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('policysetup-application-{0}', parameters('packtag'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "dcrId": {
                                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'addscollectionDCR'), '2022-09-01').outputs.ruleId.value]"
                                          },
                                          "packtag": {
                                            "value": "ADDS"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "rulename": {
                                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'addscollectionDCR'), '2022-09-01').outputs.ruleName.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "ruleshortname": {
                                            "value": "[parameters('ruleshortname')]"
                                          },
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "packtype": {
                                            "value": "IaaS"
                                          },
                                          "instanceName": {
                                            "value": "[parameters('instanceName')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "14091341730586965810"
                                            }
                                          },
                                          "parameters": {
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "dcrId": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "rulename": {
                                              "type": "string"
                                            },
                                            "ruleshortname": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string",
                                              "defaultValue": "managementGroup"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "packtype": {
                                              "type": "string"
                                            },
                                            "instanceName": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "roledefinitionIds": [
                                              "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                              "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                            ],
                                            "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName'))]",
                                              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "policyDescription": {
                                                    "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                                  },
                                                  "policyDisplayName": {
                                                    "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                                  },
                                                  "policyName": {
                                                    "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                                  },
                                                  "DCRId": {
                                                    "value": "[parameters('dcrId')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "roledefinitionIds": {
                                                    "value": "[variables('roledefinitionIds')]"
                                                  },
                                                  "packtype": {
                                                    "value": "[parameters('packtype')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "6542040609382835659"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "DCRId": {
                                                      "type": "string"
                                                    },
                                                    "policyName": {
                                                      "type": "string"
                                                    },
                                                    "policyDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "policyDescription": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "packtype": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "roledefinitionIds": {
                                                      "type": "array",
                                                      "defaultValue": [
                                                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('policyName')]",
                                                      "properties": {
                                                        "description": "[parameters('policyDescription')]",
                                                        "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                        "metadata": {
                                                          "category": "Monitoring",
                                                          "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                                          "MonitoringPackType": "[parameters('packtype')]"
                                                        },
                                                        "policyType": "Custom",
                                                        "mode": "Indexed",
                                                        "parameters": {
                                                          "tagName": {
                                                            "type": "String",
                                                            "metadata": {
                                                              "displayName": "Tag name",
                                                              "description": "A tag to apply the association conditionally."
                                                            },
                                                            "defaultValue": "[parameters('solutionTag')]"
                                                          },
                                                          "tagValue": {
                                                            "type": "String",
                                                            "metadata": {
                                                              "displayName": "Tag value",
                                                              "description": "The value of the tag."
                                                            },
                                                            "defaultValue": "[parameters('packtag')]"
                                                          },
                                                          "effect": {
                                                            "type": "String",
                                                            "metadata": {
                                                              "displayName": "Effect",
                                                              "description": "Enable or disable the execution of the policy"
                                                            },
                                                            "allowedValues": [
                                                              "DeployIfNotExists",
                                                              "Disabled"
                                                            ],
                                                            "defaultValue": "DeployIfNotExists"
                                                          },
                                                          "DCRid": {
                                                            "type": "String",
                                                            "metadata": {
                                                              "displayName": "DCRId",
                                                              "description": "The value of the DCRId."
                                                            },
                                                            "defaultValue": "[parameters('DCRId')]"
                                                          }
                                                        },
                                                        "policyRule": {
                                                          "if": {
                                                            "allOf": [
                                                              {
                                                                "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                                "contains": "[[parameters('tagValue')]"
                                                              },
                                                              {
                                                                "field": "type",
                                                                "equals": "Microsoft.Compute/virtualMachines"
                                                              }
                                                            ]
                                                          },
                                                          "then": {
                                                            "effect": "[[parameters('effect')]",
                                                            "details": {
                                                              "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                              "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                              "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                              "deployment": {
                                                                "properties": {
                                                                  "mode": "incremental",
                                                                  "template": {
                                                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                                    "contentVersion": "1.0.0.0",
                                                                    "parameters": {
                                                                      "resourceGroup": {
                                                                        "type": "string"
                                                                      },
                                                                      "vmName": {
                                                                        "type": "string"
                                                                      },
                                                                      "DCRId2": {
                                                                        "type": "string"
                                                                      },
                                                                      "packTag": {
                                                                        "type": "string"
                                                                      }
                                                                    },
                                                                    "variables": {
                                                                      "locationLongNameToShortMap": {
                                                                        "canadacentral": "CCA",
                                                                        "canadaeast": "CCA",
                                                                        "centralus": "CUS",
                                                                        "eastus2euap": "eus2p",
                                                                        "eastus": "EUS",
                                                                        "eastus2": "EUS2",
                                                                        "southcentralus": "SCUS",
                                                                        "westcentralus": "WCUS",
                                                                        "westus": "WUS",
                                                                        "westus2": "WUS2"
                                                                      },
                                                                      "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                                      "subscriptionId": "[[subscription().subscriptionId]",
                                                                      "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                                    },
                                                                    "resources": [
                                                                      {
                                                                        "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                        "name": "[[variables('dcraName')]",
                                                                        "apiVersion": "2021-04-01",
                                                                        "properties": {
                                                                          "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                          "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "parameters": {
                                                                    "resourceGroup": {
                                                                      "value": "[[resourceGroup().name]"
                                                                    },
                                                                    "vmName": {
                                                                      "value": "[[field('name')]"
                                                                    },
                                                                    "DCRId2": {
                                                                      "value": "[[parameters('DCRId')]"
                                                                    },
                                                                    "packTag": {
                                                                      "value": "[[parameters('tagValue')]"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "policyId": {
                                                      "type": "string",
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-{1}-{2}-vm', parameters('instanceName'), parameters('packtag'), parameters('ruleshortname'))]",
                                              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "policyDefinitionId": {
                                                    "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                                  },
                                                  "assignmentName": {
                                                    "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "18204016525654709950"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "policyDefinitionId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentName": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "loc2": "[trim(parameters('location'))]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyAssignments",
                                                      "apiVersion": "2022-06-01",
                                                      "name": "[parameters('assignmentName')]",
                                                      "identity": {
                                                        "type": "UserAssigned",
                                                        "userAssignedIdentities": {
                                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                        }
                                                      },
                                                      "location": "[variables('loc2')]",
                                                      "properties": {
                                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                        "displayName": "[parameters('assignmentName')]",
                                                        "enforcementMode": "Default",
                                                        "metadata": {
                                                          "createdBy": "[parameters('solutionTag')]"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName')))]"
                                              ]
                                            },
                                            {
                                              "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-{1}-{2}-vm', parameters('instanceName'), parameters('packtag'), parameters('ruleshortname'))]",
                                              "subscriptionId": "[parameters('subscriptionId')]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "policyDefinitionId": {
                                                    "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                                  },
                                                  "assignmentName": {
                                                    "value": "[format('{0}-{1}-{2}-vm', parameters('instanceName'), parameters('packtag'), parameters('ruleshortname'))]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "15632908880880169790"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "policyDefinitionId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentName": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "loc2": "[trim(parameters('location'))]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyAssignments",
                                                      "apiVersion": "2022-06-01",
                                                      "name": "[parameters('assignmentName')]",
                                                      "identity": {
                                                        "type": "UserAssigned",
                                                        "userAssignedIdentities": {
                                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                        }
                                                      },
                                                      "location": "[variables('loc2')]",
                                                      "properties": {
                                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                        "displayName": "[parameters('assignmentName')]",
                                                        "enforcementMode": "Default",
                                                        "metadata": {
                                                          "createdBy": "[parameters('solutionTag')]"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), variables('dcrName')))]"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'addscollectionDCR')]"
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "WinOSPack",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13539627308366536058"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string",
                              "defaultValue": "WinOS",
                              "metadata": {
                                "description": "The Tag value for this pack"
                              }
                            },
                            "rulename": {
                              "type": "string",
                              "defaultValue": "AMSP-Windows-OS",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "ruleshortname": "VMI-OS",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('vmInsightsDCR-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "ruleName": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "16579881467422974035"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "ruleName": {
                                      "type": "string"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2021-09-01-preview",
                                      "name": "[format('{0}-VMI', parameters('ruleName'))]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "properties": {
                                        "description": "Data collection rule for VM Insights.",
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "dataSources": {
                                          "performanceCounters": [
                                            {
                                              "name": "VMInsightsPerfCounters",
                                              "streams": [
                                                "Microsoft-InsightsMetrics"
                                              ],
                                              "samplingFrequencyInSeconds": 60,
                                              "counterSpecifiers": [
                                                "\\VmInsights\\DetailedMetrics"
                                              ]
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                                              "name": "[variables('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-InsightsMetrics"
                                            ],
                                            "destinations": [
                                              "[variables('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "VMIRuleId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-VMI', parameters('ruleName')))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "13807474782643765134"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    }
                                  },
                                  "variables": {
                                    "moduleprefix": "AMSP-Win-VMI",
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "Alert for Memory over 90%",
                                        "alertRuleDisplayName": "Memory over 90%",
                                        "alertRuleName": "MemoveryOverPercentWarning",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AvgMemUse",
                                        "operator": "GreaterThan",
                                        "threshold": 90,
                                        "query": "InsightsMetrics | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend memorySizeMB = todouble(parse_json(Tags).[\"vm.azm.ms/memorySizeMB\"]) | extend PercentageBytesinUse = Val/memorySizeMB*100    | summarize AvgMemUse = avg(PercentageBytesinUse) by bin(TimeGenerated, 15m), _ResourceId,Computer"
                                      },
                                      {
                                        "alertRuleDescription": "Alert for disk space under 10%",
                                        "alertRuleDisplayName": "Disk space under 10%",
                                        "alertRuleName": "DiskSpaceUnderPercentWarning",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 10 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                                      },
                                      {
                                        "alertRuleDescription": "Alert for disk space under 5%",
                                        "alertRuleDisplayName": "Disk space under 5%",
                                        "alertRuleName": "DiskSpaceUnderPercentCritical",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 5 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                                      },
                                      {
                                        "alertRuleDescription": "Heartbeat alert for VMs - 5 minutes",
                                        "alertRuleDisplayName": "Heartbeat alert for VMs",
                                        "alertRuleName": "HeartbeatAlert",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT5M",
                                        "alertType": "rows",
                                        "query": "InsightsMetrics| where Namespace == 'Computer' and Name == 'Heartbeat'| summarize arg_max(TimeGenerated, *) by _ResourceId, Computer| where TimeGenerated < ago(5m)"
                                      },
                                      {
                                        "alertRuleDescription": "Alert for CPU usage over 90%",
                                        "alertRuleDisplayName": "CPU usage over 90%",
                                        "alertRuleName": "CPUUsageOverPercentWarning",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 90 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                                      },
                                      {
                                        "alertRuleDescription": "Alert for CPU usage over 95%",
                                        "alertRuleDisplayName": "CPU usage over 95%",
                                        "alertRuleName": "CPUUsageOverPercentcritical",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 95 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[variables('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "75933667383542312"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1955376536405090411"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "packtag": {
                                                            "value": "[parameters('packtag')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "5611522469594456278"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "packtag": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "1486731342993087831"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('policysetup-{0}', parameters('packtag'))]",
                              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dcrId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag'))), '2022-09-01').outputs.VMIRuleId.value]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[variables('ruleshortname')]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12301075469741441796"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "roledefinitionIds": [
                                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                    ],
                                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7060261485268467714"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "13782378815920433053"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.HybridCompute/Machines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag')))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "LxOSPack-deployment",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "771684716283612112"
                            }
                          },
                          "parameters": {
                            "rulename": {
                              "type": "string",
                              "defaultValue": "AMSP-VMI-Linux",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "LxOS"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]",
                              "instanceName": "[parameters('instanceName')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "ruleshortname": "VMI-LxOS",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('vmInsightsDCR-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "ruleName": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "16579881467422974035"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "ruleName": {
                                      "type": "string"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2021-09-01-preview",
                                      "name": "[format('{0}-VMI', parameters('ruleName'))]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "properties": {
                                        "description": "Data collection rule for VM Insights.",
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "dataSources": {
                                          "performanceCounters": [
                                            {
                                              "name": "VMInsightsPerfCounters",
                                              "streams": [
                                                "Microsoft-InsightsMetrics"
                                              ],
                                              "samplingFrequencyInSeconds": 60,
                                              "counterSpecifiers": [
                                                "\\VmInsights\\DetailedMetrics"
                                              ]
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                                              "name": "[variables('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-InsightsMetrics"
                                            ],
                                            "destinations": [
                                              "[variables('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "VMIRuleId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-VMI', parameters('ruleName')))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "9423000554671818874"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    }
                                  },
                                  "variables": {
                                    "moduleprefix": "AMSP-Lx-VMI",
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "Alert for Memory over 90%",
                                        "alertRuleDisplayName": "Memory over 90%",
                                        "alertRuleName": "MemoveryOverPercentWarning",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AvgMemUse",
                                        "operator": "GreaterThan",
                                        "threshold": 90,
                                        "query": "InsightsMetrics | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend memorySizeMB = todouble(parse_json(Tags).[\"vm.azm.ms/memorySizeMB\"]) | extend PercentageBytesinUse = Val/memorySizeMB*100    | summarize AvgMemUse = avg(PercentageBytesinUse) by bin(TimeGenerated, 15m), _ResourceId,Computer"
                                      },
                                      {
                                        "alertRuleDescription": "Alert for disk space under 10%",
                                        "alertRuleDisplayName": "Disk space under 10%",
                                        "alertRuleName": "DiskSpaceUnderPercentWarning",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 10 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                                      },
                                      {
                                        "alertRuleDescription": "Alert for disk space under 5%",
                                        "alertRuleDisplayName": "Disk space under 5%",
                                        "alertRuleName": "DiskSpaceUnderPercentCritical",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 5 \n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
                                      },
                                      {
                                        "alertRuleDescription": "Heartbeat alert for VMs - 5 minutes",
                                        "alertRuleDisplayName": "Heartbeat alert for VMs",
                                        "alertRuleName": "HeartbeatAlert",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT5M",
                                        "alertType": "rows",
                                        "query": "InsightsMetrics| where Namespace == 'Computer' and Name == 'Heartbeat'| summarize arg_max(TimeGenerated, *) by _ResourceId, Computer| where TimeGenerated < ago(5m)"
                                      },
                                      {
                                        "alertRuleDescription": "Alert for CPU usage over 90%",
                                        "alertRuleDisplayName": "CPU usage over 90%",
                                        "alertRuleName": "CPUUsageOverPercentWarning",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 90 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                                      },
                                      {
                                        "alertRuleDescription": "Alert for CPU usage over 95%",
                                        "alertRuleDisplayName": "CPU usage over 95%",
                                        "alertRuleName": "CPUUsageOverPercentcritical",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 95 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[variables('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "75933667383542312"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1955376536405090411"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "packtag": {
                                                            "value": "[parameters('packtag')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "5611522469594456278"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "packtag": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "1486731342993087831"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('policysetup-{0}', parameters('packtag'))]",
                              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dcrId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag'))), '2022-09-01').outputs.VMIRuleId.value]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[variables('ruleshortname')]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12301075469741441796"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "roledefinitionIds": [
                                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                    ],
                                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7060261485268467714"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "13782378815920433053"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.HybridCompute/Machines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag')))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "IISPack-deployment",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "3321638859948617046"
                            }
                          },
                          "parameters": {
                            "rulename": {
                              "type": "string",
                              "defaultValue": "AMSP-IIS-Server",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "IIS"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "ruleshortname": "IIS1",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "kind": "Windows",
                            "xPathQueries": [
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2216)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2221)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5152)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5010 or EventID=5011 or EventID=5012 or EventID=5013)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5009)]]",
                              "Application!*[System[Provider[@Name='Active Server Pages'] and (EventID=500 or EventID=499 or EventID=23 or EventID=22 or EventID=21 or EventID=20 or EventID=19 or EventID=18 or EventID=17 or EventID=16 or EventID=9 or EventID=8 or EventID=7 or EventID=6 or EventID=5)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1037)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2208)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2206)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2201)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2203)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2204)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2274 or EventID=2268 or EventID=2220 or EventID=2219 or EventID=2214)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5088 or EventID=5061 or EventID=5060)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2296)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2295)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2293)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1133)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2261)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5036)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2264)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2298)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2218)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2258)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2227)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2233)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2226 or EventID=2230 or EventID=2231 or EventID=2232)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5174 or EventID=5179 or EventID=5180)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5085)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5054 or EventID=5091)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5063)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5058)]]"
                            ],
                            "performanceCounters": [
                              "\\Web Service(_Total)\\Bytes Received/sec",
                              "\\Web Service(_Total)\\Bytes Sent/sec",
                              "\\Web Service(_Total)\\Bytes Total/sec",
                              "\\Web Service(_Total)\\Connection Attempts/sec",
                              "\\Web Service(_Total)\\Current Connections",
                              "\\Web Service(_Total)\\Total Method Requests/sec",
                              "\\Microsoft FTP Service(_Total)\\Bytes Total/sec",
                              "\\Microsoft FTP Service(_Total)\\Current Connections",
                              "\\SMTP Server(_Total)\\Bytes Received/sec",
                              "\\SMTP Server(_Total)\\Bytes Sent/sec",
                              "\\SMTP Server(_Total)\\Bytes Total/sec",
                              "\\SMTP Server(_Total)\\Inbound Connections Current",
                              "\\SMTP Server(_Total)\\Message Bytes Received/sec",
                              "\\SMTP Server(_Total)\\Message Bytes Sent/sec",
                              "\\SMTP Server(_Total)\\Messages Delivered/sec",
                              "\\SMTP Server(_Total)\\Messages Received/sec",
                              "\\SMTP Server(_Total)\\Messages Sent/sec",
                              "\\SMTP Server(_Total)\\Outbound Connections Current",
                              "\\SMTP Server(_Total)\\Total Messages Submitted",
                              "\\SMTP Server(SMTP 1)\\Bytes Received/sec",
                              "\\SMTP Server(SMTP 1)\\Bytes Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Bytes Total/sec",
                              "\\SMTP Server(SMTP 1)\\Inbound Connections Current",
                              "\\SMTP Server(SMTP 1)\\Message Bytes Received/sec",
                              "\\SMTP Server(SMTP 1)\\Message Bytes Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Delivered/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Received/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Outbound Connections Current",
                              "\\SMTP Server(SMTP 1)\\Total Messages Submitted"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "7801460712043596894"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "moduleprefix": {
                                      "type": "string",
                                      "defaultValue": "AMSP-IIS"
                                    }
                                  },
                                  "variables": {
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                                        "alertRuleDisplayName": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                                        "alertRuleName": "AlertRule-IIS-2012-1",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2221) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                                        "alertRuleDisplayName": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                                        "alertRuleName": "AlertRule-IIS-2012-2",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5152) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool worker process is unresponsive",
                                        "alertRuleDisplayName": "Application Pool worker process is unresponsive",
                                        "alertRuleName": "AlertRule-IIS-2012-3",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5010,5011,5012,5013) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool worker process terminated unexpectedly",
                                        "alertRuleDisplayName": "Application Pool worker process terminated unexpectedly",
                                        "alertRuleName": "AlertRule-IIS-2012-4",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5009) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "ASP application error occurred",
                                        "alertRuleDisplayName": "ASP application error occurred",
                                        "alertRuleName": "AlertRule-IIS-2012-5",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (500,499,23,22,21,20,19,18,17,16,9,8,7,6,5) and EventLog == 'Application' and Source == 'Active Server Pages'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP control channel for the WWW Service did not open",
                                        "alertRuleDisplayName": "HTTP control channel for the WWW Service did not open",
                                        "alertRuleName": "AlertRule-IIS-2012-6",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1037) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not create a client connection object for user",
                                        "alertRuleDisplayName": "HTTP Server could not create a client connection object for user",
                                        "alertRuleName": "AlertRule-IIS-2012-7",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2208) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not create the main connection socket",
                                        "alertRuleDisplayName": "HTTP Server could not create the main connection socket",
                                        "alertRuleName": "AlertRule-IIS-2012-8",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2206) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not initialize its security",
                                        "alertRuleDisplayName": "HTTP Server could not initialize its security",
                                        "alertRuleName": "AlertRule-IIS-2012-9",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2201) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not initialize the socket library",
                                        "alertRuleDisplayName": "HTTP Server could not initialize the socket library",
                                        "alertRuleName": "AlertRule-IIS-2012-10",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2203) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server was unable to initialize due to a shortage of available memory",
                                        "alertRuleDisplayName": "HTTP Server was unable to initialize due to a shortage of available memory",
                                        "alertRuleName": "AlertRule-IIS-2012-11",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2204) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "ISAPI application error detected",
                                        "alertRuleDisplayName": "ISAPI application error detected",
                                        "alertRuleName": "AlertRule-IIS-2012-12",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2274,2268,2220,2219,2214) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Job object associated with the application pool encountered an error",
                                        "alertRuleDisplayName": "Job object associated with the application pool encountered an error",
                                        "alertRuleName": "AlertRule-IIS-2012-13",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5088,5061,5060) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Module has an invalid precondition",
                                        "alertRuleDisplayName": "Module has an invalid precondition",
                                        "alertRuleName": "AlertRule-IIS-2012-14",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2296) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Module registration error detected (failed to find RegisterModule entrypoint)",
                                        "alertRuleDisplayName": "Module registration error detected (failed to find RegisterModule entrypoint)",
                                        "alertRuleName": "AlertRule-IIS-2012-15",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2295) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Module registration error detected (module returned an error during registration)",
                                        "alertRuleDisplayName": "Module registration error detected (module returned an error during registration)",
                                        "alertRuleName": "AlertRule-IIS-2012-16",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2293) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Only one type of logging can be enabled at a time",
                                        "alertRuleDisplayName": "Only one type of logging can be enabled at a time",
                                        "alertRuleName": "AlertRule-IIS-2012-17",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1133) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                                      },
                                      {
                                        "alertRuleDescription": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                                        "alertRuleDisplayName": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                                        "alertRuleName": "AlertRule-IIS-2012-18",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2261) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The configuration manager for WAS did not initialize",
                                        "alertRuleDisplayName": "The configuration manager for WAS did not initialize",
                                        "alertRuleName": "AlertRule-IIS-2012-19",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5036) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "The directory specified for caching compressed content is invalid",
                                        "alertRuleDisplayName": "The directory specified for caching compressed content is invalid",
                                        "alertRuleName": "AlertRule-IIS-2012-20",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2264) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The Global Modules list is empty",
                                        "alertRuleDisplayName": "The Global Modules list is empty",
                                        "alertRuleName": "AlertRule-IIS-2012-21",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2298) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The HTTP server encountered an error processing the server side include file",
                                        "alertRuleDisplayName": "The HTTP server encountered an error processing the server side include file",
                                        "alertRuleName": "AlertRule-IIS-2012-22",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2218) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server failed to close client connections to URLs during shutdown",
                                        "alertRuleDisplayName": "The server failed to close client connections to URLs during shutdown",
                                        "alertRuleName": "AlertRule-IIS-2012-23",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2258) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to acquire a license for a SSL connection",
                                        "alertRuleDisplayName": "The server was unable to acquire a license for a SSL connection",
                                        "alertRuleName": "AlertRule-IIS-2012-24",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2227) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to allocate a buffer to read a file",
                                        "alertRuleDisplayName": "The server was unable to allocate a buffer to read a file",
                                        "alertRuleName": "AlertRule-IIS-2012-25",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2233) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to read a file",
                                        "alertRuleDisplayName": "The server was unable to read a file",
                                        "alertRuleName": "AlertRule-IIS-2012-26",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2226,2230,2231,2232) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "WAS detected invalid configuration data",
                                        "alertRuleDisplayName": "WAS detected invalid configuration data",
                                        "alertRuleName": "AlertRule-IIS-2012-27",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5174,5179,5180) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[parameters('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "75933667383542312"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1955376536405090411"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "packtag": {
                                                            "value": "[parameters('packtag')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "5611522469594456278"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "packtag": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "1486731342993087831"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "wsfriendlyname": {
                                    "value": "[variables('workspaceFriendlyName')]"
                                  },
                                  "kind": {
                                    "value": "[variables('kind')]"
                                  },
                                  "xPathQueries": {
                                    "value": "[variables('xPathQueries')]"
                                  },
                                  "counterSpecifiers": {
                                    "value": "[variables('performanceCounters')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "10387281639106552930"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "defaultValue": "Windows"
                                    },
                                    "wsfriendlyname": {
                                      "type": "string",
                                      "defaultValue": "TBD"
                                    },
                                    "xPathQueries": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "counterSpecifiers": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "samplingFrequencyInSeconds": {
                                      "type": "int",
                                      "defaultValue": 300
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('rulename')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "[parameters('kind')]",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceId')]",
                                              "name": "[parameters('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataSources": {
                                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), null(), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                                          "performanceCounters": [
                                            {
                                              "streams": [
                                                "Microsoft-Perf"
                                              ],
                                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                                              "name": "PerfCountersDataSource"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Event",
                                              "Microsoft-Perf"
                                            ],
                                            "destinations": [
                                              "[parameters('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('policysetup-{0}', parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dcrId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12301075469741441796"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "roledefinitionIds": [
                                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                    ],
                                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7060261485268467714"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "13782378815920433053"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.HybridCompute/Machines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrIISLogs-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "ruleName": {
                                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                                  },
                                  "lawResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "endpointResourceId": {
                                    "value": "[parameters('dceId')]"
                                  },
                                  "tableName": {
                                    "value": "IISLogs"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "926628126860187676"
                                    }
                                  },
                                  "parameters": {
                                    "ruleName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the name of the data collection rule to create."
                                      }
                                    },
                                    "endpointResourceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the resource id of the data collection endpoint."
                                      }
                                    },
                                    "tableName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the table."
                                      }
                                    },
                                    "location": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the location in which to create the data collection rule."
                                      }
                                    },
                                    "lawResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    }
                                  },
                                  "variables": {
                                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('ruleName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "Windows",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                        "dataSources": {
                                          "iisLogs": [
                                            {
                                              "streams": [
                                                "Microsoft-W3CIISLog"
                                              ],
                                              "name": "iisLogsDataSource"
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('lawResourceId')]",
                                              "name": "[variables('lawFriendlyName')]"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-W3CIISLog"
                                            ],
                                            "destinations": [
                                              "[variables('lawFriendlyName')]"
                                            ],
                                            "transformKql": "source",
                                            "outputStream": "Microsoft-W3CIISLog"
                                          }
                                        ],
                                        "streamDeclarations": {
                                          "Custom-MyTable_CL": {
                                            "columns": [
                                              {
                                                "name": "TimeGenerated",
                                                "type": "datetime"
                                              },
                                              {
                                                "name": "RawData",
                                                "type": "string"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('policysetup-{0}-IISLogs', parameters('packtag'))]",
                              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dcrId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "rulename": {
                                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[format('{0}-2', variables('ruleshortname'))]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12301075469741441796"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "roledefinitionIds": [
                                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                    ],
                                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7060261485268467714"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "13782378815920433053"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.HybridCompute/Machines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag')))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "IIS2016-deployment",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "5911120729266619776"
                            }
                          },
                          "parameters": {
                            "rulename": {
                              "type": "string",
                              "defaultValue": "AMSP-IIS2016-Server",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "IIS2016"
                            },
                            "solutionTag": {
                              "type": "string",
                              "defaultValue": "MonitorStarterPacks"
                            },
                            "solutionVersion": {
                              "type": "string",
                              "defaultValue": "0.1.0"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "ruleshortname": "IIS2016",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "kind": "Windows",
                            "xPathQueries": [
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1071 or EventID=1073)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1135 or EventID=1134)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2226 or EventID=2230 or EventID=2231 or EventID=2232)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2274 or EventID=2268 or EventID=2220 or EventID=2219 or EventID=2214)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5172 or EventID=5173)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5174 or EventID=5179 or EventID=5180)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5152)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1037)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1062)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1126)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1133)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1173)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1175)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2201)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2203)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2204)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2206)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2208)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2218)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2227)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2233)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2258)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2261)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2264)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2281)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2293)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2295)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2296)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2298)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5005)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5030)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5036)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5053)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5063)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5066)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5067)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5153)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6001)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6002)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6003)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6004)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6005)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6006)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6007)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6008)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6009)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6010)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6011)]]",
                              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7023 or EventID=7024)]]",
                              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7031)]]",
                              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7034)]]",
                              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7043)]]"
                            ],
                            "performanceCounters": [
                              "\\Web Service(_Total)\\Bytes Received/sec",
                              "\\Web Service(_Total)\\Bytes Sent/sec",
                              "\\Web Service(_Total)\\Bytes Total/sec",
                              "\\Web Service(_Total)\\Connection Attempts/sec",
                              "\\Web Service(_Total)\\Current Connections",
                              "\\Web Service(_Total)\\Total Method Requests/sec",
                              "\\Microsoft FTP Service(_Total)\\Bytes Total/sec",
                              "\\Microsoft FTP Service(_Total)\\Current Connections",
                              "\\SMTP Server(_Total)\\Bytes Received/sec",
                              "\\SMTP Server(_Total)\\Bytes Sent/sec",
                              "\\SMTP Server(_Total)\\Bytes Total/sec",
                              "\\SMTP Server(_Total)\\Inbound Connections Current",
                              "\\SMTP Server(_Total)\\Message Bytes Received/sec",
                              "\\SMTP Server(_Total)\\Message Bytes Sent/sec",
                              "\\SMTP Server(_Total)\\Messages Delivered/sec",
                              "\\SMTP Server(_Total)\\Messages Received/sec",
                              "\\SMTP Server(_Total)\\Messages Sent/sec",
                              "\\SMTP Server(_Total)\\Outbound Connections Current",
                              "\\SMTP Server(_Total)\\Total Messages Submitted",
                              "\\SMTP Server(SMTP 1)\\Bytes Received/sec",
                              "\\SMTP Server(SMTP 1)\\Bytes Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Bytes Total/sec",
                              "\\SMTP Server(SMTP 1)\\Inbound Connections Current",
                              "\\SMTP Server(SMTP 1)\\Message Bytes Received/sec",
                              "\\SMTP Server(SMTP 1)\\Message Bytes Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Delivered/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Received/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Outbound Connections Current",
                              "\\SMTP Server(SMTP 1)\\Total Messages Submitted"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "5107644619156935321"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "moduleprefix": {
                                      "type": "string",
                                      "defaultValue": "AMSP-IIS2016"
                                    }
                                  },
                                  "variables": {
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                                        "alertRuleDisplayName": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                                        "alertRuleName": "AlertRule-IIS-2012-1",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2221) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                                        "alertRuleDisplayName": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                                        "alertRuleName": "AlertRule-IIS-2012-2",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5152) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool worker process is unresponsive",
                                        "alertRuleDisplayName": "Application Pool worker process is unresponsive",
                                        "alertRuleName": "AlertRule-IIS-2012-3",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5010,5011,5012,5013) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool worker process terminated unexpectedly",
                                        "alertRuleDisplayName": "Application Pool worker process terminated unexpectedly",
                                        "alertRuleName": "AlertRule-IIS-2012-4",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5009) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "ASP application error occurred",
                                        "alertRuleDisplayName": "ASP application error occurred",
                                        "alertRuleName": "AlertRule-IIS-2012-5",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (500,499,23,22,21,20,19,18,17,16,9,8,7,6,5) and EventLog == 'Application' and Source == 'Active Server Pages'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP control channel for the WWW Service did not open",
                                        "alertRuleDisplayName": "HTTP control channel for the WWW Service did not open",
                                        "alertRuleName": "AlertRule-IIS-2012-6",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1037) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not create a client connection object for user",
                                        "alertRuleDisplayName": "HTTP Server could not create a client connection object for user",
                                        "alertRuleName": "AlertRule-IIS-2012-7",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2208) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not create the main connection socket",
                                        "alertRuleDisplayName": "HTTP Server could not create the main connection socket",
                                        "alertRuleName": "AlertRule-IIS-2012-8",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2206) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not initialize its security",
                                        "alertRuleDisplayName": "HTTP Server could not initialize its security",
                                        "alertRuleName": "AlertRule-IIS-2012-9",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2201) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not initialize the socket library",
                                        "alertRuleDisplayName": "HTTP Server could not initialize the socket library",
                                        "alertRuleName": "AlertRule-IIS-2012-10",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2203) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server was unable to initialize due to a shortage of available memory",
                                        "alertRuleDisplayName": "HTTP Server was unable to initialize due to a shortage of available memory",
                                        "alertRuleName": "AlertRule-IIS-2012-11",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2204) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "ISAPI application error detected",
                                        "alertRuleDisplayName": "ISAPI application error detected",
                                        "alertRuleName": "AlertRule-IIS-2012-12",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2274,2268,2220,2219,2214) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Job object associated with the application pool encountered an error",
                                        "alertRuleDisplayName": "Job object associated with the application pool encountered an error",
                                        "alertRuleName": "AlertRule-IIS-2012-13",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5088,5061,5060) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Module has an invalid precondition",
                                        "alertRuleDisplayName": "Module has an invalid precondition",
                                        "alertRuleName": "AlertRule-IIS-2012-14",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2296) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Module registration error detected (failed to find RegisterModule entrypoint)",
                                        "alertRuleDisplayName": "Module registration error detected (failed to find RegisterModule entrypoint)",
                                        "alertRuleName": "AlertRule-IIS-2012-15",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2295) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Module registration error detected (module returned an error during registration)",
                                        "alertRuleDisplayName": "Module registration error detected (module returned an error during registration)",
                                        "alertRuleName": "AlertRule-IIS-2012-16",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2293) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Only one type of logging can be enabled at a time",
                                        "alertRuleDisplayName": "Only one type of logging can be enabled at a time",
                                        "alertRuleName": "AlertRule-IIS-2012-17",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1133) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                                      },
                                      {
                                        "alertRuleDescription": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                                        "alertRuleDisplayName": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                                        "alertRuleName": "AlertRule-IIS-2012-18",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2261) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The configuration manager for WAS did not initialize",
                                        "alertRuleDisplayName": "The configuration manager for WAS did not initialize",
                                        "alertRuleName": "AlertRule-IIS-2012-19",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5036) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "The directory specified for caching compressed content is invalid",
                                        "alertRuleDisplayName": "The directory specified for caching compressed content is invalid",
                                        "alertRuleName": "AlertRule-IIS-2012-20",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2264) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The Global Modules list is empty",
                                        "alertRuleDisplayName": "The Global Modules list is empty",
                                        "alertRuleName": "AlertRule-IIS-2012-21",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2298) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The HTTP server encountered an error processing the server side include file",
                                        "alertRuleDisplayName": "The HTTP server encountered an error processing the server side include file",
                                        "alertRuleName": "AlertRule-IIS-2012-22",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2218) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server failed to close client connections to URLs during shutdown",
                                        "alertRuleDisplayName": "The server failed to close client connections to URLs during shutdown",
                                        "alertRuleName": "AlertRule-IIS-2012-23",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2258) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to acquire a license for a SSL connection",
                                        "alertRuleDisplayName": "The server was unable to acquire a license for a SSL connection",
                                        "alertRuleName": "AlertRule-IIS-2012-24",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2227) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to allocate a buffer to read a file",
                                        "alertRuleDisplayName": "The server was unable to allocate a buffer to read a file",
                                        "alertRuleName": "AlertRule-IIS-2012-25",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2233) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to read a file",
                                        "alertRuleDisplayName": "The server was unable to read a file",
                                        "alertRuleName": "AlertRule-IIS-2012-26",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2226,2230,2231,2232) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "WAS detected invalid configuration data",
                                        "alertRuleDisplayName": "WAS detected invalid configuration data",
                                        "alertRuleName": "AlertRule-IIS-2012-27",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5174,5179,5180) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[parameters('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "75933667383542312"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1955376536405090411"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "packtag": {
                                                            "value": "[parameters('packtag')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "5611522469594456278"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "packtag": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "1486731342993087831"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "wsfriendlyname": {
                                    "value": "[variables('workspaceFriendlyName')]"
                                  },
                                  "kind": {
                                    "value": "[variables('kind')]"
                                  },
                                  "xPathQueries": {
                                    "value": "[variables('xPathQueries')]"
                                  },
                                  "counterSpecifiers": {
                                    "value": "[variables('performanceCounters')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "10387281639106552930"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "defaultValue": "Windows"
                                    },
                                    "wsfriendlyname": {
                                      "type": "string",
                                      "defaultValue": "TBD"
                                    },
                                    "xPathQueries": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "counterSpecifiers": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "samplingFrequencyInSeconds": {
                                      "type": "int",
                                      "defaultValue": 300
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('rulename')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "[parameters('kind')]",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceId')]",
                                              "name": "[parameters('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataSources": {
                                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), null(), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                                          "performanceCounters": [
                                            {
                                              "streams": [
                                                "Microsoft-Perf"
                                              ],
                                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                                              "name": "PerfCountersDataSource"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Event",
                                              "Microsoft-Perf"
                                            ],
                                            "destinations": [
                                              "[parameters('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('policysetup-{0}', parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dcrId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12301075469741441796"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "roledefinitionIds": [
                                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                    ],
                                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7060261485268467714"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "13782378815920433053"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.HybridCompute/Machines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrIISLogs-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "ruleName": {
                                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                                  },
                                  "lawResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "endpointResourceId": {
                                    "value": "[parameters('dceId')]"
                                  },
                                  "tableName": {
                                    "value": "IISLogs"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "926628126860187676"
                                    }
                                  },
                                  "parameters": {
                                    "ruleName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the name of the data collection rule to create."
                                      }
                                    },
                                    "endpointResourceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the resource id of the data collection endpoint."
                                      }
                                    },
                                    "tableName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the table."
                                      }
                                    },
                                    "location": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the location in which to create the data collection rule."
                                      }
                                    },
                                    "lawResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    }
                                  },
                                  "variables": {
                                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('ruleName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "Windows",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                        "dataSources": {
                                          "iisLogs": [
                                            {
                                              "streams": [
                                                "Microsoft-W3CIISLog"
                                              ],
                                              "name": "iisLogsDataSource"
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('lawResourceId')]",
                                              "name": "[variables('lawFriendlyName')]"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-W3CIISLog"
                                            ],
                                            "destinations": [
                                              "[variables('lawFriendlyName')]"
                                            ],
                                            "transformKql": "source",
                                            "outputStream": "Microsoft-W3CIISLog"
                                          }
                                        ],
                                        "streamDeclarations": {
                                          "Custom-MyTable_CL": {
                                            "columns": [
                                              {
                                                "name": "TimeGenerated",
                                                "type": "datetime"
                                              },
                                              {
                                                "name": "RawData",
                                                "type": "string"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('policysetup-{0}-IISLogs', parameters('packtag'))]",
                              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dcrId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "rulename": {
                                    "value": "[format('{0}-IISLogs', parameters('rulename'))]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[format('{0}-2', variables('ruleshortname'))]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12301075469741441796"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "roledefinitionIds": [
                                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                    ],
                                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7060261485268467714"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "13782378815920433053"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.HybridCompute/Machines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrIISLogs-{0}', parameters('packtag')))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "DNS2016-deployment",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "14610338613671740869"
                            }
                          },
                          "parameters": {
                            "rulename": {
                              "type": "string",
                              "defaultValue": "AMSP-DNS2016-Server",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "DNS2016"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "ruleshortname": "DNS2016",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "kind": "Windows",
                            "xPathQueries": [
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=10)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1000)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1004)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1200)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1201)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1203)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=131)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=140)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=150)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1540)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4000)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4006)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4007)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4010)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4011)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4012)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4014)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4015)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4016)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4017)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=408)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=409)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=410)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=414)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4510)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4511)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4512)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=501)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=502)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=503)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=504)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=5051)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=6527)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=6702)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=706)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7060)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7616)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7636)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7642)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7644)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=777)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=111 or EventID=6533)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4018 or EventID=4019)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4513 or EventID=4514)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4520 or EventID=4521)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=707 or EventID=1003)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7692 or EventID=790)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=796 or EventID=799)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=2200 or EventID=2202 or EventID=2203)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7502 or EventID=7503 or EventID=7504)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=792 or EventID=795 or EventID=797)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1001 or EventID=1008 or EventID=3151 or EventID=3152 or EventID=3153)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=403 or EventID=404 or EventID=405 or EventID=406 or EventID=407)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=500 or EventID=505 or EventID=506 or EventID=507 or EventID=2204)]]"
                            ],
                            "performanceCounters": [
                              "\\DNS\\AXFR Request Received",
                              "\\DNS\\AXFR Request Sent",
                              "\\DNS\\AXFR Response Received",
                              "\\DNS\\AXFR Success Received",
                              "\\DNS\\AXFR Success Sent",
                              "\\DNS\\Caching Memory",
                              "\\DNS\\Data Flush Pages/sec",
                              "\\DNS\\Data Flushes/sec",
                              "\\DNS\\Database Node Memory",
                              "\\DNS\\Dynamic Update NoOperation",
                              "\\DNS\\Dynamic Update NoOperation/sec",
                              "\\DNS\\Dynamic Update Queued",
                              "\\DNS\\Dynamic Update Received",
                              "\\DNS\\Dynamic Update Received/sec",
                              "\\DNS\\Dynamic Update Rejected",
                              "\\DNS\\Dynamic Update TimeOuts",
                              "\\DNS\\Dynamic Update Written to Database",
                              "\\DNS\\Dynamic Update Written to Database/sec",
                              "\\DNS\\IXFR Request Received",
                              "\\DNS\\IXFR Request Sent",
                              "\\DNS\\IXFR Response Received",
                              "\\DNS\\IXFR Success Received",
                              "\\DNS\\IXFR Success Sent",
                              "\\DNS\\IXFR TCP Success Received",
                              "\\DNS\\IXFR UDP Success Received",
                              "\\DNS\\Nbstat Memory",
                              "\\DNS\\Notify Received",
                              "\\DNS\\Notify Sent",
                              "\\DNS\\Query Dropped Bad Socket",
                              "\\DNS\\Query Dropped Bad Socket/sec",
                              "\\DNS\\Query Dropped By Policy",
                              "\\DNS\\Query Dropped By Policy/sec",
                              "\\DNS\\Query Dropped By Response Rate Limiting",
                              "\\DNS\\Query Dropped By Response Rate Limiting/sec",
                              "\\DNS\\Query Dropped Send",
                              "\\DNS\\Query Dropped Send/sec",
                              "\\DNS\\Query Dropped Total",
                              "\\DNS\\Query Dropped Total/sec",
                              "\\DNS\\Record Flow Memory",
                              "\\DNS\\Recursive Queries",
                              "\\DNS\\Recursive Queries/sec",
                              "\\DNS\\Recursive Query Failure",
                              "\\DNS\\Recursive Query Failure/sec",
                              "\\DNS\\Recursive Send TimeOuts",
                              "\\DNS\\Recursive TimeOut/sec",
                              "\\DNS\\Responses Suppressed",
                              "\\DNS\\Responses Suppressed/sec",
                              "\\DNS\\Secure Update Failure",
                              "\\DNS\\Secure Update Received",
                              "\\DNS\\Secure Update Received/sec",
                              "\\DNS\\TCP Message Memory",
                              "\\DNS\\TCP Query Received",
                              "\\DNS\\TCP Query Received/sec",
                              "\\DNS\\TCP Response Sent",
                              "\\DNS\\TCP Response Sent/sec",
                              "\\DNS\\Total Query Received",
                              "\\DNS\\Total Query Received/sec",
                              "\\DNS\\Total Remote Inflight Queries",
                              "\\DNS\\Total Response Sent",
                              "\\DNS\\Total Response Sent/sec",
                              "\\DNS\\UDP Message Memory",
                              "\\DNS\\UDP Query Received",
                              "\\DNS\\UDP Query Received/sec",
                              "\\DNS\\UDP Response Sent",
                              "\\DNS\\UDP Response Sent/sec",
                              "\\DNS\\Unmatched Responses Received",
                              "\\DNS\\WINS Lookup Received",
                              "\\DNS\\WINS Lookup Received/sec",
                              "\\DNS\\WINS Response Sent",
                              "\\DNS\\WINS Response Sent/sec",
                              "\\DNS\\WINS Reverse Lookup Received",
                              "\\DNS\\WINS Reverse Lookup Received/sec",
                              "\\DNS\\WINS Reverse Response Sent",
                              "\\DNS\\WINS Reverse Response Sent/sec",
                              "\\DNS\\Zone Transfer Failure",
                              "\\DNS\\Zone Transfer Request Received",
                              "\\DNS\\Zone Transfer SOA Request Sent",
                              "\\DNS\\Zone Transfer Success"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "3090517007237896765"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "moduleprefix": {
                                      "type": "string",
                                      "defaultValue": "AMSP-DNS2016"
                                    }
                                  },
                                  "variables": {
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "Service.DependencyFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.DependencyFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-10",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (10) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.FileOpenError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.FileOpenError",
                                        "alertRuleName": "AlertRule-Dns-2016-1000",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1000) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.CouldNotOpenDatabase",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.CouldNotOpenDatabase",
                                        "alertRuleName": "AlertRule-Dns-2016-1004",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1004) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.BootFileNotFound",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.BootFileNotFound",
                                        "alertRuleName": "AlertRule-Dns-2016-1200",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1200) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.ZoneCreationFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.ZoneCreationFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-1201",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1201) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.NoForwardingAddresses",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.NoForwardingAddresses",
                                        "alertRuleName": "AlertRule-Dns-2016-1203",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1203) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "WINSConnector.Initialize.Failed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.WINSConnector.Initialize.Failed",
                                        "alertRuleName": "AlertRule-Dns-2016-131",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (131) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "RPC.Initialize.Failed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RPC.Initialize.Failed",
                                        "alertRuleName": "AlertRule-Dns-2016-140",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (140) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.PluginInitFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.PluginInitFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-150",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (150) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.DomainNodeCreationError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.DomainNodeCreationError",
                                        "alertRuleName": "AlertRule-Dns-2016-1540",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1540) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.OpenFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.OpenFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4000",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4000) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.LoadFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.LoadFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4006",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4006) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.OpenPartitionFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.OpenPartitionFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4007",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4007) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.RecordLoadFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.RecordLoadFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4010",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4010) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.WriteFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.WriteFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4011",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4011) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.WriteTimeout",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.WriteTimeout",
                                        "alertRuleName": "AlertRule-Dns-2016-4012",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4012) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.SecurityInterfaceFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.SecurityInterfaceFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4014",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4014) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.InterfaceError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.InterfaceError",
                                        "alertRuleName": "AlertRule-Dns-2016-4015",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4015) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.LDAPTimeout",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.LDAPTimeout",
                                        "alertRuleName": "AlertRule-Dns-2016-4016",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4016) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.DNSAdminsError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.DNSAdminsError",
                                        "alertRuleName": "AlertRule-Dns-2016-4017",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4017) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.OpenSocketForAddress",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.OpenSocketForAddress",
                                        "alertRuleName": "AlertRule-Dns-2016-408",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (408) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.UpdateListenAddresses",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.UpdateListenAddresses",
                                        "alertRuleName": "AlertRule-Dns-2016-409",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (409) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.InvalidListenAddresses",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidListenAddresses",
                                        "alertRuleName": "AlertRule-Dns-2016-410",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (410) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.SingleLabelHostname",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.SingleLabelHostname",
                                        "alertRuleName": "AlertRule-Dns-2016-414",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (414) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.FSMOUnavailable",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.FSMOUnavailable",
                                        "alertRuleName": "AlertRule-Dns-2016-4510",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4510) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.DeleteError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.DeleteError",
                                        "alertRuleName": "AlertRule-Dns-2016-4511",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4511) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.PartitionCreateError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.PartitionCreateError",
                                        "alertRuleName": "AlertRule-Dns-2016-4512",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4512) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.InvalidZoneType",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidZoneType",
                                        "alertRuleName": "AlertRule-Dns-2016-501",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (501) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.NoZoneFile",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.NoZoneFile",
                                        "alertRuleName": "AlertRule-Dns-2016-502",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (502) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.SecondaryRequiresMasters",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.SecondaryRequiresMasters",
                                        "alertRuleName": "AlertRule-Dns-2016-503",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (503) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.RegZoneCreationFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.RegZoneCreationFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-504",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (504) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.Memory.Warning",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.Memory.Warning",
                                        "alertRuleName": "AlertRule-Dns-2016-5051",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5051) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.ZoneExpiration",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.ZoneExpiration",
                                        "alertRuleName": "AlertRule-Dns-2016-6527",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (6527) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.UpdateDSPeersFailure",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.UpdateDSPeersFailure",
                                        "alertRuleName": "AlertRule-Dns-2016-6702",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (6702) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "RootHints.NoRootNameServer",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RootHints.NoRootNameServer",
                                        "alertRuleName": "AlertRule-Dns-2016-706",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (706) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.ConnectionError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.ConnectionError",
                                        "alertRuleName": "AlertRule-Dns-2016-7060",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7060) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "DNSSEC.TALoadFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TALoadFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-7616",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7616) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "DNSSEC.TPDeleted",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TPDeleted",
                                        "alertRuleName": "AlertRule-Dns-2016-7636",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7636) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "DNSSEC.InvalidTA",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.InvalidTA",
                                        "alertRuleName": "AlertRule-Dns-2016-7642",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7642) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "DNSSEC.TARefreshFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TARefreshFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-7644",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7644) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "DNSSEC.ZoneUnSignFailure",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.ZoneUnSignFailure",
                                        "alertRuleName": "AlertRule-Dns-2016-777",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (777) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.ThreadCreationFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.ThreadCreationFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-111",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (111,6533) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.BackgroundLoadFailure",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.BackgroundLoadFailure",
                                        "alertRuleName": "AlertRule-Dns-2016-4018",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4018,4019) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.EnlistmentFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.EnlistmentFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4513",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4513,4514) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.RetryableZoneOperationFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.RetryableZoneOperationFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4520",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4520,4521) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "RootHints.CacheFileError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RootHints.CacheFileError",
                                        "alertRuleName": "AlertRule-Dns-2016-707",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (707,1003) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Server.EDNS0.ZoneTransfer.OptionInvalid",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.Server.EDNS0.ZoneTransfer.OptionInvalid",
                                        "alertRuleName": "AlertRule-Dns-2016-7692",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7692,790) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ClientSubnet.LoadFail",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.ClientSubnet.LoadFail",
                                        "alertRuleName": "AlertRule-Dns-2016-796",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (796,799) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.RegistryOperationFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.RegistryOperationFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-2200",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2200,2202,2203) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.Memory.Error",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.Memory.Error",
                                        "alertRuleName": "AlertRule-Dns-2016-7502",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7502,7503,7504) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Policy.ServerLevel.LoadFail",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.Policy.ServerLevel.LoadFail",
                                        "alertRuleName": "AlertRule-Dns-2016-792",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (792,795,797) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.FileError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.FileError",
                                        "alertRuleName": "AlertRule-Dns-2016-1001",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1001,1008,3151,3152,3153) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.SocketFailure",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.SocketFailure",
                                        "alertRuleName": "AlertRule-Dns-2016-403",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (403,404,405,406,407) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.InvalidRegistrySetting",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidRegistrySetting",
                                        "alertRuleName": "AlertRule-Dns-2016-500",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (500,505,506,507,2204) and EventLog == 'DNS Server'"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[parameters('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "75933667383542312"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1955376536405090411"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "packtag": {
                                                            "value": "[parameters('packtag')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "5611522469594456278"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "packtag": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "1486731342993087831"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "wsfriendlyname": {
                                    "value": "[variables('workspaceFriendlyName')]"
                                  },
                                  "kind": {
                                    "value": "[variables('kind')]"
                                  },
                                  "xPathQueries": {
                                    "value": "[variables('xPathQueries')]"
                                  },
                                  "counterSpecifiers": {
                                    "value": "[variables('performanceCounters')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "10387281639106552930"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "defaultValue": "Windows"
                                    },
                                    "wsfriendlyname": {
                                      "type": "string",
                                      "defaultValue": "TBD"
                                    },
                                    "xPathQueries": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "counterSpecifiers": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "samplingFrequencyInSeconds": {
                                      "type": "int",
                                      "defaultValue": 300
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('rulename')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "[parameters('kind')]",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceId')]",
                                              "name": "[parameters('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataSources": {
                                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), null(), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                                          "performanceCounters": [
                                            {
                                              "streams": [
                                                "Microsoft-Perf"
                                              ],
                                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                                              "name": "PerfCountersDataSource"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Event",
                                              "Microsoft-Perf"
                                            ],
                                            "destinations": [
                                              "[parameters('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('policysetup-{0}', parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dcrId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12301075469741441796"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "roledefinitionIds": [
                                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                    ],
                                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7060261485268467714"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "13782378815920433053"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.HybridCompute/Machines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "PS2016-deployment",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "12730146961124372810"
                            }
                          },
                          "parameters": {
                            "rulename": {
                              "type": "string",
                              "defaultValue": "AMSP-Windows-PS2016",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "PS2016",
                              "metadata": {
                                "description": "The tag to be used for the solution."
                              }
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "ruleshortname": "PS2016",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "kind": "Windows",
                            "xPathQueries": [
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=83) and (Provider[@Name='Microsoft-Windows-PrintBRM' or @Name='PrintBrm'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=360) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Operational!*[System[(EventID=701 or EventID=702 or EventID=703 or EventID=704) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=364 or EventID=365 or EventID=367) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=315) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=371) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=356) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=513 or EventID=514) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=600 or EventID=601) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=515 or EventID=516 or EventID=517 or EventID=518 or EventID=519 or EventID=520) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=502 or EventID=503 or EventID=504 or EventID=505 or EventID=506 or EventID=507 or EventID=508 or EventID=509 or EventID=510 or EventID=511 or EventID=512) and (Provider[@Name='Microsoft-Windows-PrintService'])]]"
                            ],
                            "performanceCounters": [
                              "\\Print Queue(_Total)\\Jobs",
                              "\\Print Queue(_Total)\\Jobs Spooling",
                              "\\Print Queue(_Total)\\Total Jobs Printed",
                              "\\Print Queue(_Total)\\Total Pages Printed"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "wsfriendlyname": {
                                    "value": "[variables('workspaceFriendlyName')]"
                                  },
                                  "kind": {
                                    "value": "[variables('kind')]"
                                  },
                                  "xPathQueries": {
                                    "value": "[variables('xPathQueries')]"
                                  },
                                  "counterSpecifiers": {
                                    "value": "[variables('performanceCounters')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "10387281639106552930"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "defaultValue": "Windows"
                                    },
                                    "wsfriendlyname": {
                                      "type": "string",
                                      "defaultValue": "TBD"
                                    },
                                    "xPathQueries": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "counterSpecifiers": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "samplingFrequencyInSeconds": {
                                      "type": "int",
                                      "defaultValue": 300
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('rulename')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "[parameters('kind')]",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceId')]",
                                              "name": "[parameters('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataSources": {
                                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), null(), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                                          "performanceCounters": [
                                            {
                                              "streams": [
                                                "Microsoft-Perf"
                                              ],
                                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                                              "name": "PerfCountersDataSource"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Event",
                                              "Microsoft-Perf"
                                            ],
                                            "destinations": [
                                              "[parameters('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('policysetup-{0}', parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dcrId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag'))), '2022-09-01').outputs.dcrId.value]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[format('{0}-1', variables('ruleshortname'))]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12301075469741441796"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "roledefinitionIds": [
                                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                    ],
                                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7060261485268467714"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "13782378815920433053"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.HybridCompute/Machines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('dcrPerformance-{0}', parameters('packtag')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "1280429823884943158"
                                    }
                                  },
                                  "parameters": {
                                    "moduleprefix": {
                                      "type": "string",
                                      "defaultValue": "AMSP-Win-PS2016"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    }
                                  },
                                  "variables": {
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "Ensure the server is accessible.",
                                        "alertRuleDisplayName": "Ensure the server is accessible.",
                                        "alertRuleName": "AlertRule-PS-2016-1",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (83) and EventLog == 'Microsoft-Windows-PrintService/Admin' and (Source == 'Microsoft-Windows-PrintBRM' or Source == 'PrintBrm')"
                                      },
                                      {
                                        "alertRuleDescription": "Manually install the color profile.",
                                        "alertRuleDisplayName": "Manually install the color profile.",
                                        "alertRuleName": "AlertRule-PS-2016-2",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (360) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Retry printing or restart the print server.",
                                        "alertRuleDisplayName": "Retry printing or restart the print server.",
                                        "alertRuleName": "AlertRule-PS-2016-3",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (701,702,703,704) and EventLog == 'Microsoft-Windows-PrintService/Operational!*' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Install the Printer Driver.",
                                        "alertRuleDisplayName": "Install the Printer Driver.",
                                        "alertRuleName": "AlertRule-PS-2016-4",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (364,365,367) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Restart the print spooler fix sharing problems and check Group Policy.",
                                        "alertRuleDisplayName": "Restart the print spooler fix sharing problems and check Group Policy.",
                                        "alertRuleName": "AlertRule-PS-2016-5",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (315) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Restart the print spooler and unshare the printer.",
                                        "alertRuleDisplayName": "Restart the print spooler and unshare the printer.",
                                        "alertRuleName": "AlertRule-PS-2016-6",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (371) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Update the printer driver.",
                                        "alertRuleDisplayName": "Update the printer driver.",
                                        "alertRuleName": "AlertRule-PS-2016-7",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (356) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Check Group Policy and network connectivity.",
                                        "alertRuleDisplayName": "Check Group Policy and network connectivity.",
                                        "alertRuleName": "AlertRule-PS-2016-8",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (513,514) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Try again or install an updated printer driver.",
                                        "alertRuleDisplayName": "Try again or install an updated printer driver.",
                                        "alertRuleName": "AlertRule-PS-2016-9",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (600,601) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Check network connectivity and Group Policy.",
                                        "alertRuleDisplayName": "Check network connectivity and Group Policy.",
                                        "alertRuleName": "AlertRule-PS-2016-10",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (515,516,517,518,519,520) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Check resource availability.",
                                        "alertRuleDisplayName": "Check resource availability.",
                                        "alertRuleName": "AlertRule-PS-2016-11",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (502,503,504,505,506,507,508,509,510,511,512) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', parameters('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[parameters('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "75933667383542312"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1955376536405090411"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "packtag": {
                                                            "value": "[parameters('packtag')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "5611522469594456278"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "packtag": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "1486731342993087831"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "Nginx-deployment",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "11534667102268109795"
                            }
                          },
                          "parameters": {
                            "rulename": {
                              "type": "string",
                              "defaultValue": "AMSP-Linux-Nginx",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "Nginx"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "ruleshortname": "Nginx",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "facilityNames": [
                              "daemon"
                            ],
                            "logLevels": [
                              "Debug",
                              "Info",
                              "Notice",
                              "Warning",
                              "Error",
                              "Critical",
                              "Alert",
                              "Emergency"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('filecollectionrule-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "endpointResourceId": {
                                    "value": "[parameters('dceId')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "ruleName": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "filepatterns": {
                                    "value": [
                                      "/var/log/nginx/access.log"
                                    ]
                                  },
                                  "lawResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "tableName": {
                                    "value": "NginxLogs"
                                  },
                                  "facilityNames": {
                                    "value": "[variables('facilityNames')]"
                                  },
                                  "logLevels": {
                                    "value": "[variables('logLevels')]"
                                  },
                                  "syslogDataSourceName": {
                                    "value": "NginxLogs-1238219"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "6845190083190442520"
                                    }
                                  },
                                  "parameters": {
                                    "ruleName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the name of the data collection rule to create."
                                      }
                                    },
                                    "endpointResourceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the resource id of the data collection endpoint."
                                      }
                                    },
                                    "tableName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the table."
                                      }
                                    },
                                    "location": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the location in which to create the data collection rule."
                                      }
                                    },
                                    "filepatterns": {
                                      "type": "array"
                                    },
                                    "lawResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "facilityNames": {
                                      "type": "array"
                                    },
                                    "logLevels": {
                                      "type": "array"
                                    },
                                    "syslogDataSourceName": {
                                      "type": "string",
                                      "defaultValue": "sysLogsDataSource-1688419672"
                                    }
                                  },
                                  "variables": {
                                    "tableNameToUse": "[format('CustomAzMA{0}_CL', parameters('tableName'))]",
                                    "streamName": "[format('Custom-{0}', variables('tableNameToUse'))]",
                                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]",
                                    "lawResourceGroup": "[split(parameters('lawResourceId'), '/')[4]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('ruleName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "Linux",
                                      "properties": {
                                        "dataSources": {
                                          "syslog": [
                                            {
                                              "streams": [
                                                "Microsoft-Syslog"
                                              ],
                                              "facilityNames": "[parameters('facilityNames')]",
                                              "logLevels": "[parameters('logLevels')]",
                                              "name": "[parameters('syslogDataSourceName')]"
                                            }
                                          ],
                                          "logFiles": [
                                            {
                                              "streams": [
                                                "[variables('streamName')]"
                                              ],
                                              "filePatterns": "[parameters('filepatterns')]",
                                              "format": "text",
                                              "settings": {
                                                "text": {
                                                  "recordStartTimestampFormat": "ISO 8601"
                                                }
                                              },
                                              "name": "[variables('tableNameToUse')]"
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('lawResourceId')]",
                                              "name": "[variables('lawFriendlyName')]"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Syslog"
                                            ],
                                            "destinations": [
                                              "[variables('lawFriendlyName')]"
                                            ],
                                            "transformKql": "source | where SyslogMessage == \"Stopped A high performance web server and a reverse proxy server.\" or SyslogMessage == \"Started A high performance web server and a reverse proxy server.\"",
                                            "outputStream": "Microsoft-Syslog"
                                          },
                                          {
                                            "streams": [
                                              "[variables('streamName')]"
                                            ],
                                            "destinations": [
                                              "[variables('lawFriendlyName')]"
                                            ],
                                            "transformKql": "source",
                                            "outputStream": "[variables('streamName')]"
                                          }
                                        ],
                                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                        "streamDeclarations": {
                                          "[format('{0}', variables('streamName'))]": {
                                            "columns": [
                                              {
                                                "name": "TimeGenerated",
                                                "type": "datetime"
                                              },
                                              {
                                                "name": "RawData",
                                                "type": "string"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('lawResourceGroup')), 'Microsoft.Resources/deployments', variables('tableNameToUse'))]"
                                      ]
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[variables('tableNameToUse')]",
                                      "resourceGroup": "[variables('lawResourceGroup')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "parentname": {
                                            "value": "[variables('lawFriendlyName')]"
                                          },
                                          "tableName": {
                                            "value": "[variables('tableNameToUse')]"
                                          },
                                          "retentionDays": {
                                            "value": 31
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "8927710276797462866"
                                            }
                                          },
                                          "parameters": {
                                            "parentname": {
                                              "type": "string"
                                            },
                                            "tableName": {
                                              "type": "string"
                                            },
                                            "retentionDays": {
                                              "type": "int",
                                              "defaultValue": 31
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.OperationalInsights/workspaces/tables",
                                              "apiVersion": "2022-10-01",
                                              "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                                              "properties": {
                                                "totalRetentionInDays": "[parameters('retentionDays')]",
                                                "plan": "Analytics",
                                                "schema": {
                                                  "name": "[parameters('tableName')]",
                                                  "columns": [
                                                    {
                                                      "name": "TimeGenerated",
                                                      "type": "datetime"
                                                    },
                                                    {
                                                      "name": "RawData",
                                                      "type": "string"
                                                    }
                                                  ]
                                                },
                                                "retentionInDays": "[parameters('retentionDays')]"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "ruleId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "5189601493643777727"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    }
                                  },
                                  "variables": {
                                    "moduleprefix": "AMSP-LxOS-Nginx",
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "Nginx stopped.",
                                        "alertRuleDisplayName": "Nginx service stopped.",
                                        "alertRuleName": "AlertRule-Nginx-1",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Syslog | where SyslogMessage == \"Stopped A high performance web server and a reverse proxy server.\""
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[variables('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "75933667383542312"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1955376536405090411"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "packtag": {
                                                            "value": "[parameters('packtag')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "5611522469594456278"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "packtag": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "1486731342993087831"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": [
                                                                        {
                                                                          "name": "Computer",
                                                                          "operator": "Include",
                                                                          "values": [
                                                                            "*"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "resourceIdColumn": "_ResourceId",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('policysetup-{0}', parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dcrId": {
                                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('filecollectionrule-{0}', parameters('packtag'))), '2022-09-01').outputs.ruleId.value]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "rulename": {
                                    "value": "[parameters('rulename')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[variables('ruleshortname')]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12301075469741441796"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "dcrId": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "roledefinitionIds": [
                                      "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                      "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                    ],
                                    "dcrName": "[split(parameters('dcrId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7060261485268467714"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.Compute/virtualMachines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "policyDescription": {
                                            "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyDisplayName": {
                                            "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "policyName": {
                                            "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                                          },
                                          "DCRId": {
                                            "value": "[parameters('dcrId')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "roledefinitionIds": {
                                            "value": "[variables('roledefinitionIds')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "13782378815920433053"
                                            }
                                          },
                                          "parameters": {
                                            "DCRId": {
                                              "type": "string"
                                            },
                                            "policyName": {
                                              "type": "string"
                                            },
                                            "policyDisplayName": {
                                              "type": "string"
                                            },
                                            "policyDescription": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "roledefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ]
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('policyName')]",
                                              "properties": {
                                                "description": "[parameters('policyDescription')]",
                                                "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                                "metadata": {
                                                  "category": "Monitoring",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "policyType": "Custom",
                                                "mode": "Indexed",
                                                "parameters": {
                                                  "tagName": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag name",
                                                      "description": "A tag to apply the association conditionally."
                                                    },
                                                    "defaultValue": "[parameters('solutionTag')]"
                                                  },
                                                  "tagValue": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Tag value",
                                                      "description": "The value of the tag."
                                                    },
                                                    "defaultValue": "[parameters('packtag')]"
                                                  },
                                                  "effect": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "Effect",
                                                      "description": "Enable or disable the execution of the policy"
                                                    },
                                                    "allowedValues": [
                                                      "DeployIfNotExists",
                                                      "Disabled"
                                                    ],
                                                    "defaultValue": "DeployIfNotExists"
                                                  },
                                                  "DCRid": {
                                                    "type": "String",
                                                    "metadata": {
                                                      "displayName": "DCRId",
                                                      "description": "The value of the DCRId."
                                                    },
                                                    "defaultValue": "[parameters('DCRId')]"
                                                  }
                                                },
                                                "policyRule": {
                                                  "if": {
                                                    "allOf": [
                                                      {
                                                        "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                        "contains": "[[parameters('tagValue')]"
                                                      },
                                                      {
                                                        "field": "type",
                                                        "equals": "Microsoft.HybridCompute/Machines"
                                                      }
                                                    ]
                                                  },
                                                  "then": {
                                                    "effect": "[[parameters('effect')]",
                                                    "details": {
                                                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                                                      "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                                                      "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                                                      "deployment": {
                                                        "properties": {
                                                          "mode": "incremental",
                                                          "template": {
                                                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                            "contentVersion": "1.0.0.0",
                                                            "parameters": {
                                                              "resourceGroup": {
                                                                "type": "string"
                                                              },
                                                              "vmName": {
                                                                "type": "string"
                                                              },
                                                              "DCRId2": {
                                                                "type": "string"
                                                              },
                                                              "packTag": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "variables": {
                                                              "locationLongNameToShortMap": {
                                                                "canadacentral": "CCA",
                                                                "canadaeast": "CCA",
                                                                "centralus": "CUS",
                                                                "eastus2euap": "eus2p",
                                                                "eastus": "EUS",
                                                                "eastus2": "EUS2",
                                                                "southcentralus": "SCUS",
                                                                "westcentralus": "WCUS",
                                                                "westus": "WUS",
                                                                "westus2": "WUS2"
                                                              },
                                                              "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                                              "subscriptionId": "[[subscription().subscriptionId]",
                                                              "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                                            },
                                                            "resources": [
                                                              {
                                                                "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                                                "name": "[[variables('dcraName')]",
                                                                "apiVersion": "2021-04-01",
                                                                "properties": {
                                                                  "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                                                  "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "parameters": {
                                                            "resourceGroup": {
                                                              "value": "[[resourceGroup().name]"
                                                            },
                                                            "vmName": {
                                                              "value": "[[field('name')]"
                                                            },
                                                            "DCRId2": {
                                                              "value": "[[parameters('DCRId')]"
                                                            },
                                                            "packTag": {
                                                              "value": "[[parameters('tagValue')]"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "policyId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('filecollectionrule-{0}', parameters('packtag')))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "grafana",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[variables('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "fileName": {
                            "value": "grafana.zip"
                          },
                          "grafanaResourceId": {
                            "value": "[parameters('grafanaResourceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "resourceGroupName": {
                            "value": "[variables('resourceGroupName')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "packsManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "9166713158901220984"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "resourceGroupName": {
                              "type": "string"
                            },
                            "grafanaResourceId": {
                              "type": "string"
                            },
                            "fileName": {
                              "type": "string"
                            },
                            "packsManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "$fxv#0": "",
                            "grafanaName": "[split(parameters('grafanaResourceId'), '/')[8]]",
                            "tempfilename": "[format('{0}.tmp', parameters('fileName'))]",
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('solutionTag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('solutionTag'), 'solutionVersion', parameters('solutionVersion'), 'instanceName', parameters('instanceName')), parameters('customerTags').All))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "deployscript-Grafana",
                              "tags": "[variables('Tags')]",
                              "location": "[parameters('location')]",
                              "identity": {
                                "type": "userAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('packsManagedIdentityResourceId'))]": {}
                                }
                              },
                              "kind": "AzureCLI",
                              "properties": {
                                "azCliVersion": "2.42.0",
                                "timeout": "PT5M",
                                "retentionInterval": "PT1H",
                                "environmentVariables": [
                                  {
                                    "name": "CONTENT",
                                    "value": "[variables('$fxv#0')]"
                                  }
                                ],
                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az extension add --name amg && az login --identity && unzip {3} && for file in *.json; do az grafana dashboard import -g {4} -n {5} --definition \"$file\" --overwrite true;done', variables('tempfilename'), variables('tempfilename'), parameters('fileName'), parameters('fileName'), parameters('resourceGroupName'), variables('grafanaName'))]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new')]"
              ]
            },
            {
              "condition": "[parameters('deployPaaSPacks')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "deployPaaSPacks",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "grafanaName": {
                    "value": "grafana"
                  },
                  "actionGroupResourceId": "[if(parameters('useExistingAG'), createObject('value', parameters('existingActionGroupResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new'), '2022-09-01').outputs.agGroupId.value))]",
                  "customerTags": {
                    "value": "[parameters('customerTags')]"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "resourceGroupId": {
                    "value": "[parameters('resourceGroupId')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "11356447110962110060"
                    }
                  },
                  "parameters": {
                    "actionGroupResourceId": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "location for the deployment."
                      }
                    },
                    "workspaceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                      }
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                      }
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the user managed identity to be used for the deployment"
                      }
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupId": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string"
                    },
                    "grafanaName": {
                      "type": "string"
                    },
                    "customerTags": {
                      "type": "object"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "StorageAlerts",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "packtag": {
                            "value": "Storage"
                          },
                          "grafanaName": {
                            "value": "[parameters('grafanaName')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "4912537255677519860"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string",
                              "defaultValue": "Storage"
                            },
                            "solutionTag": {
                              "type": "string",
                              "defaultValue": "MonitorStarterPacks"
                            },
                            "solutionVersion": {
                              "type": "string",
                              "defaultValue": "0.1.0"
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "rulename": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "subscriptionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "grafanaName": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "PaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "resourceType": "Microsoft.Storage/storageaccounts"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alerts', parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "packTag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "policyLocation": {
                                    "value": "[parameters('location')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "parResourceGroupName": {
                                    "value": "[variables('resourceGroupName')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "resourceType": {
                                    "value": "[variables('resourceType')]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "16466932799997375635"
                                    }
                                  },
                                  "parameters": {
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "packTag": {
                                      "type": "string"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "resourceType": {
                                      "type": "string"
                                    },
                                    "policyLocation": {
                                      "type": "string"
                                    },
                                    "parResourceGroupName": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "deploymentRoleDefinitionIds": {
                                      "type": "array",
                                      "defaultValue": [
                                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                      ]
                                    },
                                    "parAlertState": {
                                      "type": "string",
                                      "defaultValue": "true"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-StorageAvailabilityAlert', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "alertname": {
                                            "value": "Deploy_Storage_Availability_Alert"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Deploy Storage Availability Alert"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP Deploy Storage Availability Alert"
                                          },
                                          "metricNamespace": {
                                            "value": "Microsoft.Storage/storageAccounts"
                                          },
                                          "parAlertSeverity": {
                                            "value": "1"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "parAutoMitigate": {
                                            "value": "true"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT15M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT15M"
                                          },
                                          "parThreshold": {
                                            "value": "90"
                                          },
                                          "assignmentSuffix": {
                                            "value": "MetStoAvail"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "metricName": {
                                            "value": "Availability"
                                          },
                                          "operator": {
                                            "value": "LessThan"
                                          },
                                          "initiativeMember": {
                                            "value": false
                                          },
                                          "packtype": {
                                            "value": "PaaS"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "OpenAIAlerts",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "packtag": {
                            "value": "Storage"
                          },
                          "grafanaName": {
                            "value": "[parameters('grafanaName')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "3898338233336864575"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string",
                              "defaultValue": "OpenAI"
                            },
                            "solutionTag": {
                              "type": "string",
                              "defaultValue": "MonitorStarterPacks"
                            },
                            "solutionVersion": {
                              "type": "string",
                              "defaultValue": "0.1.0"
                            },
                            "rulename": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "actionGroupResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "grafanaName": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "resourceType": "Microsoft.Network/loadBalancers",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "PaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alerts', parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "packTag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "policyLocation": {
                                    "value": "[parameters('location')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "parResourceGroupName": {
                                    "value": "[variables('resourceGroupName')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "resourceType": {
                                    "value": "[variables('resourceType')]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "207714704705319351"
                                    }
                                  },
                                  "parameters": {
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "packTag": {
                                      "type": "string"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "resourceType": {
                                      "type": "string"
                                    },
                                    "policyLocation": {
                                      "type": "string"
                                    },
                                    "parResourceGroupName": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "deploymentRoleDefinitionIds": {
                                      "type": "array",
                                      "defaultValue": [
                                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                      ]
                                    },
                                    "parResourceGroupTags": {
                                      "type": "object",
                                      "defaultValue": {
                                        "environment": "test"
                                      }
                                    },
                                    "parAlertState": {
                                      "type": "string",
                                      "defaultValue": "true"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-OAIClErrors', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertname": {
                                            "value": "AMSP - Alert on Client Errors over threshold"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Alert on Client Errors over threshold"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP policy to deploy Alert on Client Errors over threshold"
                                          },
                                          "metricNamespace": {
                                            "value": "Microsoft.CognitiveServices/accounts"
                                          },
                                          "metricName": {
                                            "value": "ClientErrors"
                                          },
                                          "operator": {
                                            "value": "GreaterThan"
                                          },
                                          "parAlertSeverity": {
                                            "value": "3"
                                          },
                                          "parAutoMitigate": {
                                            "value": "false"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT15M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT15M"
                                          },
                                          "parThreshold": {
                                            "value": "20"
                                          },
                                          "assignmentSuffix": {
                                            "value": "ActOAIClErr"
                                          },
                                          "timeAggregation": {
                                            "value": "Total"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "initiativeMember": {
                                            "value": false
                                          },
                                          "packtype": {
                                            "value": "PaaS"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new')]"
              ]
            },
            {
              "condition": "[parameters('deployPlatformPacks')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "deployPlatformPacks",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "assignmentLevel": {
                    "value": "[parameters('assignmentLevel')]"
                  },
                  "actionGroupResourceId": "[if(parameters('useExistingAG'), createObject('value', parameters('existingActionGroupResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new'), '2022-09-01').outputs.agGroupId.value))]",
                  "grafanaName": {
                    "value": "grafana"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "resourceGroupId": {
                    "value": "[parameters('resourceGroupId')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "customerTags": {
                    "value": "[parameters('customerTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "3744801400040632801"
                    }
                  },
                  "parameters": {
                    "actionGroupResourceId": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "location for the deployment."
                      }
                    },
                    "workspaceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                      }
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                      }
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the user managed identity to be used for the deployment"
                      }
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupId": {
                      "type": "string"
                    },
                    "assignmentLevel": {
                      "type": "string"
                    },
                    "grafanaName": {
                      "type": "string"
                    },
                    "customerTags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "KVAlerts",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "packtag": {
                            "value": "KeyVault"
                          },
                          "grafanaName": {
                            "value": "[parameters('grafanaName')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "16626767601056649445"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string",
                              "defaultValue": "KeyVault"
                            },
                            "solutionTag": {
                              "type": "string",
                              "defaultValue": "MonitorStarterPacks"
                            },
                            "solutionVersion": {
                              "type": "string",
                              "defaultValue": "0.1.0"
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "rulename": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "subscriptionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "grafanaName": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "Platform",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "resourceType": "Microsoft.KeyVault/vaults"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alerts', parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "packTag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "policyLocation": {
                                    "value": "[parameters('location')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "parResourceGroupName": {
                                    "value": "[variables('resourceGroupName')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "resourceType": {
                                    "value": "[variables('resourceType')]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "solutionVersion": {
                                    "value": "[parameters('solutionVersion')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "10412510349475683705"
                                    }
                                  },
                                  "parameters": {
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "packTag": {
                                      "type": "string"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "resourceType": {
                                      "type": "string"
                                    },
                                    "policyLocation": {
                                      "type": "string"
                                    },
                                    "parResourceGroupName": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "solutionVersion": {
                                      "type": "string"
                                    },
                                    "deploymentRoleDefinitionIds": {
                                      "type": "array",
                                      "defaultValue": [
                                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                      ]
                                    },
                                    "parResourceGroupTags": {
                                      "type": "object",
                                      "defaultValue": {
                                        "environment": "test"
                                      }
                                    },
                                    "parAlertState": {
                                      "type": "string",
                                      "defaultValue": "true"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-KeyVault_Delete', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "parResourceGroupName": {
                                            "value": "[parameters('parResourceGroupName')]"
                                          },
                                          "parResourceGroupTags": {
                                            "value": "[parameters('parResourceGroupTags')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "alertname": {
                                            "value": "Deploy_activitylog_KeyVault_Delete"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Deploy Activity Log Key Vault Delete Alert"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP policy to Deploy Activity Log Key Vault Delete Alert"
                                          },
                                          "assignmentSuffix": {
                                            "value": "ActKVDel"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "operationName": {
                                            "value": "delete"
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "11954899364974137586"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "parResourceGroupTags": {
                                              "type": "object",
                                              "defaultValue": {
                                                "environment": "test"
                                              }
                                            },
                                            "parResourceGroupName": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "operationName": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            }
                                          },
                                          "variables": {
                                            "parAlertState": "true"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "ActivityLog",
                                                      "source": "https://azure.github.io/azure-monitor-baseline-alerts/services/",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[variables('parAlertState')]"
                                                      },
                                                      "alertResourceGroupName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Resource Group Name",
                                                          "description": "Resource group the alert is placed in"
                                                        },
                                                        "defaultValue": "[parameters('parResourceGroupName')]"
                                                      },
                                                      "alertResourceGroupTags": {
                                                        "type": "Object",
                                                        "metadata": {
                                                          "displayName": "Resource Group Tags",
                                                          "description": "Tags on the Resource group the alert is placed in"
                                                        },
                                                        "defaultValue": "[parameters('parResourceGroupTags')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Resource Id of the action group to be used for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      },
                                                      "resourceType": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Resource Type",
                                                          "description": "Resource Type for the alert"
                                                        },
                                                        "defaultValue": "[parameters('resourceType')]"
                                                      },
                                                      "operationName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operation Name",
                                                          "description": "Operation Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('operationName')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "deployIfNotExists",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/activityLogAlerts",
                                                          "name": "[parameters('alertname')]",
                                                          "existenceScope": "resourcegroup",
                                                          "resourceGroupName": "[[parameters('alertResourceGroupName')]",
                                                          "deploymentScope": "subscription",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/ActivityLogAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              },
                                                              {
                                                                "count": {
                                                                  "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]",
                                                                  "where": {
                                                                    "anyOf": [
                                                                      {
                                                                        "allOf": [
                                                                          {
                                                                            "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field",
                                                                            "equals": "category"
                                                                          },
                                                                          {
                                                                            "field": "Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals",
                                                                            "equals": "Administrative"
                                                                          }
                                                                        ]
                                                                      },
                                                                      {
                                                                        "allOf": [
                                                                          {
                                                                            "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].field",
                                                                            "equals": "[parameters('operationName')]"
                                                                          },
                                                                          {
                                                                            "field": "microsoft.insights/activityLogAlerts/condition.allOf[*].equals",
                                                                            "equals": "[format('{0}/{1}', parameters('resourceType'), parameters('operationName'))]"
                                                                          }
                                                                        ]
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                "equals": 2
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "location": "[parameters('policyLocation')]",
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "alertResourceGroupName": {
                                                                    "type": "string"
                                                                  },
                                                                  "alertResourceGroupTags": {
                                                                    "type": "object"
                                                                  },
                                                                  "policyLocation": {
                                                                    "type": "string",
                                                                    "defaultValue": "[parameters('policyLocation')]"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "string"
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "string"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Resources/resourceGroups",
                                                                    "apiVersion": "2021-04-01",
                                                                    "name": "[[parameters('alertResourceGroupName')]",
                                                                    "location": "[parameters('policyLocation')]",
                                                                    "tags": "[[parameters('alertResourceGroupTags')]"
                                                                  },
                                                                  {
                                                                    "type": "Microsoft.Resources/deployments",
                                                                    "apiVersion": "2019-10-01",
                                                                    "name": "[parameters('alertname')]",
                                                                    "resourceGroup": "[[parameters('alertResourceGroupName')]",
                                                                    "dependsOn": [
                                                                      "[[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]"
                                                                    ],
                                                                    "properties": {
                                                                      "mode": "Incremental",
                                                                      "template": {
                                                                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                        "contentVersion": "1.0.0.0",
                                                                        "parameters": {
                                                                          "enabled": {
                                                                            "type": "string"
                                                                          },
                                                                          "alertResourceGroupName": {
                                                                            "type": "string"
                                                                          },
                                                                          "alertDescription": {
                                                                            "type": "string"
                                                                          },
                                                                          "solutionTag": {
                                                                            "type": "string"
                                                                          },
                                                                          "packTag": {
                                                                            "type": "string"
                                                                          },
                                                                          "actionGroupResourceId": {
                                                                            "type": "string"
                                                                          },
                                                                          "resourceType": {
                                                                            "type": "string"
                                                                          },
                                                                          "operationName": {
                                                                            "type": "string"
                                                                          }
                                                                        },
                                                                        "variables": {},
                                                                        "resources": [
                                                                          {
                                                                            "type": "microsoft.insights/activityLogAlerts",
                                                                            "apiVersion": "2020-10-01",
                                                                            "name": "[parameters('alertname')]",
                                                                            "location": "global",
                                                                            "tags": {
                                                                              "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                            },
                                                                            "properties": {
                                                                              "description": "[[parameters('alertDescription')]",
                                                                              "enabled": "[[parameters('enabled')]",
                                                                              "scopes": [
                                                                                "[[subscription().id]"
                                                                              ],
                                                                              "condition": {
                                                                                "allOf": [
                                                                                  {
                                                                                    "field": "category",
                                                                                    "equals": "Administrative"
                                                                                  },
                                                                                  {
                                                                                    "field": "operationName",
                                                                                    "equals": "[[concat(parameters('resourceType'),'/',parameters('operationName'))]"
                                                                                  },
                                                                                  {
                                                                                    "field": "status",
                                                                                    "containsAny": [
                                                                                      "succeeded"
                                                                                    ]
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "actions": {
                                                                                "actionGroups": [
                                                                                  {
                                                                                    "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                                  }
                                                                                ],
                                                                                "customProperties": {}
                                                                              },
                                                                              "parameters": {
                                                                                "enabled": {
                                                                                  "value": "[[parameters('enabled')]"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "parameters": {
                                                                        "enabled": {
                                                                          "value": "[[parameters('enabled')]"
                                                                        },
                                                                        "alertResourceGroupName": {
                                                                          "value": "[[parameters('alertResourceGroupName')]"
                                                                        },
                                                                        "alertDescription": {
                                                                          "value": "[[parameters('alertDescription')]"
                                                                        },
                                                                        "solutionTag": {
                                                                          "value": "[[parameters('solutionTag')]"
                                                                        },
                                                                        "packTag": {
                                                                          "value": "[[parameters('packTag')]"
                                                                        },
                                                                        "actionGroupResourceId": {
                                                                          "value": "[[parameters('actionGroupResourceId')]"
                                                                        },
                                                                        "resourceType": {
                                                                          "value": "[[parameters('resourceType')]"
                                                                        },
                                                                        "operationName": {
                                                                          "value": "[[parameters('operationName')]"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "alertResourceGroupName": {
                                                                  "value": "[[parameters('alertResourceGroupName')]"
                                                                },
                                                                "alertResourceGroupTags": {
                                                                  "value": "[[parameters('alertResourceGroupTags')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                },
                                                                "operationName": {
                                                                  "value": "[[parameters('operationName')]"
                                                                },
                                                                "resourceType": {
                                                                  "value": "[[parameters('resourceType')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-KeyVaultLatency', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "alertname": {
                                            "value": "Deploy_KeyVault_Latency_Alert"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Deploy KeyVault Latency Alert"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP policy to audit/deploy KeyVault Latency Alert"
                                          },
                                          "metricNamespace": {
                                            "value": "Microsoft.KeyVault/vaults"
                                          },
                                          "parAlertSeverity": {
                                            "value": "3"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "parAutoMitigate": {
                                            "value": "true"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT15M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT15M"
                                          },
                                          "parThreshold": {
                                            "value": "1000"
                                          },
                                          "assignmentSuffix": {
                                            "value": "ActKVLat"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "metricName": {
                                            "value": "ServiceApiLatency"
                                          },
                                          "operator": {
                                            "value": "GreaterThan"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-PolicySet', parameters('packTag'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "initiativeDescription": {
                                            "value": "AMSP policy to deploy Key Vault policies"
                                          },
                                          "initiativeDisplayName": {
                                            "value": "[AMSP] Key Vault policies"
                                          },
                                          "initiativeName": {
                                            "value": "AMSP-KV-PolicySet"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "category": {
                                            "value": "Monitoring"
                                          },
                                          "version": {
                                            "value": "[parameters('solutionVersion')]"
                                          },
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "policyDefinitions": {
                                            "value": [
                                              {
                                                "policyDefinitionId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-KeyVaultLatency', uniqueString(deployment().name))), '2022-09-01').outputs.policyId.value]"
                                              },
                                              {
                                                "policyDefinitionId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-KeyVault_Delete', uniqueString(deployment().name))), '2022-09-01').outputs.policyId.value]"
                                              }
                                            ]
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "4000655677511406555"
                                            }
                                          },
                                          "parameters": {
                                            "initiativeName": {
                                              "type": "string",
                                              "maxLength": 64,
                                              "metadata": {
                                                "description": "PolicySet name"
                                              }
                                            },
                                            "initiativeDisplayName": {
                                              "type": "string",
                                              "maxLength": 128,
                                              "metadata": {
                                                "description": "PolicySet display Name"
                                              }
                                            },
                                            "initiativeDescription": {
                                              "type": "string",
                                              "metadata": {
                                                "description": "PolicySet description"
                                              }
                                            },
                                            "solutionTag": {
                                              "type": "string",
                                              "minLength": 1,
                                              "metadata": {
                                                "description": "array of policy IDs"
                                              }
                                            },
                                            "category": {
                                              "type": "string",
                                              "defaultValue": "Monitoring"
                                            },
                                            "version": {
                                              "type": "string",
                                              "defaultValue": "1.0.0"
                                            },
                                            "policyDefinitions": {
                                              "type": "array"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policySetDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('initiativeName')]",
                                              "properties": {
                                                "description": "[parameters('initiativeDescription')]",
                                                "displayName": "[parameters('initiativeDisplayName')]",
                                                "metadata": {
                                                  "category": "[parameters('category')]",
                                                  "version": "[parameters('version')]",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "parameters": {},
                                                "policyDefinitions": "[parameters('policyDefinitions')]",
                                                "policyType": "Custom"
                                              }
                                            },
                                            {
                                              "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('assignment-{0}', parameters('initiativeName'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "policyDefinitionId": {
                                                    "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "assignmentName": {
                                                    "value": "[format('[AMSP]AMA-{0}-Set', parameters('initiativeName'))]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "18204016525654709950"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "policyDefinitionId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentName": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "loc2": "[trim(parameters('location'))]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyAssignments",
                                                      "apiVersion": "2022-06-01",
                                                      "name": "[parameters('assignmentName')]",
                                                      "identity": {
                                                        "type": "UserAssigned",
                                                        "userAssignedIdentities": {
                                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                        }
                                                      },
                                                      "location": "[variables('loc2')]",
                                                      "properties": {
                                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                        "displayName": "[parameters('assignmentName')]",
                                                        "enforcementMode": "Default",
                                                        "metadata": {
                                                          "createdBy": "[parameters('solutionTag')]"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                              ]
                                            },
                                            {
                                              "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('assignment--{0}', parameters('initiativeName'))]",
                                              "subscriptionId": "[parameters('subscriptionId')]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "policyDefinitionId": {
                                                    "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "assignmentName": {
                                                    "value": "[format('[AMSP]AMA-{0}-Set', parameters('initiativeName'))]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "15632908880880169790"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "policyDefinitionId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentName": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "loc2": "[trim(parameters('location'))]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyAssignments",
                                                      "apiVersion": "2022-06-01",
                                                      "name": "[parameters('assignmentName')]",
                                                      "identity": {
                                                        "type": "UserAssigned",
                                                        "userAssignedIdentities": {
                                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                        }
                                                      },
                                                      "location": "[variables('loc2')]",
                                                      "properties": {
                                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                        "displayName": "[parameters('assignmentName')]",
                                                        "enforcementMode": "Default",
                                                        "metadata": {
                                                          "createdBy": "[parameters('solutionTag')]"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policySetDefId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                            }
                                          }
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-KeyVault_Delete', uniqueString(deployment().name)))]",
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-KeyVaultLatency', uniqueString(deployment().name)))]"
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "vWanAlerts",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "packtag": {
                            "value": "vWan"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "236689557332295256"
                            }
                          },
                          "parameters": {
                            "workspaceId": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "resourceTypes": [
                              "Microsoft.Network/vpngateways",
                              "Microsoft.Network/expressRouteGateways"
                            ],
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "Platform",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "diagnosticsPolicy",
                                "count": "[length(variables('resourceTypes'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('associacionpolicy-{0}-{1}', parameters('packtag'), split(variables('resourceTypes')[copyIndex()], '/')[1])]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "logAnalyticsWSResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "policyDescription": {
                                    "value": "[format('Policy to associate the diagnostics setting for {0} resources the tagged with {1} tag.', split(variables('resourceTypes')[copyIndex()], '/')[1], parameters('packtag'))]"
                                  },
                                  "policyDisplayName": {
                                    "value": "[format('Associate the diagnostics with the {0} resources tagged with {1} tag.', split(variables('resourceTypes')[copyIndex()], '/')[1], parameters('packtag'))]"
                                  },
                                  "policyName": {
                                    "value": "[format('Associate-diagnostics-{0}-{1}', parameters('packtag'), split(variables('resourceTypes')[copyIndex()], '/')[1])]"
                                  },
                                  "resourceType": {
                                    "value": "[variables('resourceTypes')[copyIndex()]]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "5650628738557434312"
                                    }
                                  },
                                  "parameters": {
                                    "policyName": {
                                      "type": "string"
                                    },
                                    "policyDisplayName": {
                                      "type": "string"
                                    },
                                    "policyDescription": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "logAnalyticsWSResourceId": {
                                      "type": "string"
                                    },
                                    "resourceType": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Authorization/policyDefinitions",
                                      "apiVersion": "2021-06-01",
                                      "name": "[parameters('policyName')]",
                                      "properties": {
                                        "description": "[parameters('policyDescription')]",
                                        "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                                        "metadata": {
                                          "category": "Monitoring",
                                          "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                        },
                                        "policyType": "Custom",
                                        "mode": "Indexed",
                                        "parameters": {
                                          "tagName": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "Tag name",
                                              "description": "A tag to apply the association conditionally."
                                            },
                                            "defaultValue": "[parameters('solutionTag')]"
                                          },
                                          "tagValue": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "Tag value",
                                              "description": "The value of the tag."
                                            },
                                            "defaultValue": "[parameters('packtag')]"
                                          },
                                          "resourceType": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "Resource Type",
                                              "description": "The the full Microsoft.ResourceProvider/resourceType format of the resource type to apply the policy to."
                                            },
                                            "defaultValue": "[parameters('packtag')]"
                                          },
                                          "effect": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "Effect",
                                              "description": "Enable or disable the execution of the policy"
                                            },
                                            "allowedValues": [
                                              "DeployIfNotExists",
                                              "Disabled"
                                            ],
                                            "defaultValue": "DeployIfNotExists"
                                          },
                                          "logAnalyticsWSResourceId": {
                                            "type": "String",
                                            "metadata": {
                                              "displayName": "LAW Id",
                                              "description": "The Id of the Log Analytics workspace."
                                            },
                                            "defaultValue": "[parameters('logAnalyticsWSResourceId')]"
                                          }
                                        },
                                        "policyRule": {
                                          "if": {
                                            "allOf": [
                                              {
                                                "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                "contains": "[[parameters('tagValue')]"
                                              },
                                              {
                                                "field": "type",
                                                "equals": "[parameters('resourceType')]"
                                              }
                                            ]
                                          },
                                          "then": {
                                            "effect": "[[parameters('effect')]",
                                            "details": {
                                              "roleDefinitionIds": [
                                                "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                                              ],
                                              "type": "Microsoft.Insights/diagnosticSettings",
                                              "existenceCondition": {
                                                "allOf": [
                                                  {
                                                    "count": {
                                                      "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                                                      "where": {
                                                        "allOf": [
                                                          {
                                                            "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled",
                                                            "equals": true
                                                          },
                                                          {
                                                            "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup",
                                                            "equals": "allLogs"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "equals": 1
                                                  },
                                                  {
                                                    "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                                                    "equals": "[parameters('logAnalyticsWSResourceId')]"
                                                  }
                                                ]
                                              },
                                              "deployment": {
                                                "properties": {
                                                  "mode": "incremental",
                                                  "template": {
                                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                    "contentVersion": "1.0.0.0",
                                                    "parameters": {
                                                      "resourceType": {
                                                        "type": "string"
                                                      },
                                                      "logAnalyticsWSResourceId": {
                                                        "type": "string"
                                                      },
                                                      "packTag": {
                                                        "type": "string"
                                                      },
                                                      "resourceName": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "variables": {},
                                                    "resources": [
                                                      {
                                                        "type": "[format('{0}/providers/diagnosticSettings', parameters('resourceType'))]",
                                                        "name": "[[concat(parameters('resourceName'), '/Microsoft.Insights/', 'AMSP-', parameters('packTag'))]",
                                                        "apiVersion": "2021-05-01-preview",
                                                        "properties": {
                                                          "workspaceId": "[[parameters('logAnalyticsWSResourceId')]",
                                                          "logs": [
                                                            {
                                                              "categoryGroup": "allLogs",
                                                              "enabled": true
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "parameters": {
                                                    "resourceType": {
                                                      "value": "[[parameters('resourceType')]"
                                                    },
                                                    "logAnalyticsWSResourceId": {
                                                      "value": "[[parameters('logAnalyticsWSResourceId')]"
                                                    },
                                                    "packTag": {
                                                      "value": "[[parameters('tagValue')]"
                                                    },
                                                    "resourceName": {
                                                      "value": "[[field('name')]"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "policyId": {
                                      "type": "string",
                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "copy": {
                                "name": "policyassignment",
                                "count": "[length(variables('resourceTypes'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('diagassignment-{0}-{1}', parameters('packtag'), split(variables('resourceTypes')[copyIndex()], '/')[1])]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "policydefinitionId": {
                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('associacionpolicy-{0}-{1}', parameters('packtag'), split(variables('resourceTypes')[copyIndex()], '/')[1])), '2022-09-01').outputs.policyId.value]"
                                  },
                                  "resourceType": {
                                    "value": "[variables('resourceTypes')[copyIndex()]]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "policyType": {
                                    "value": "diag"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "196652062591472434"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "assignmentSuffix": {
                                      "type": "string",
                                      "defaultValue": ""
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string",
                                      "defaultValue": "managementGroup"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    },
                                    "resourceType": {
                                      "type": "string"
                                    },
                                    "policyType": {
                                      "type": "string",
                                      "allowedValues": [
                                        "diag",
                                        "alert"
                                      ]
                                    },
                                    "policydefinitionId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                  },
                                  "resources": [
                                    {
                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[parameters('policydefinitionId')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "18204016525654709950"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "policyDefinitionId": {
                                            "value": "[parameters('policydefinitionId')]"
                                          },
                                          "assignmentName": {
                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "15632908880880169790"
                                            }
                                          },
                                          "parameters": {
                                            "policyDefinitionId": {
                                              "type": "string"
                                            },
                                            "assignmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "loc2": "[trim(parameters('location'))]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policyAssignments",
                                              "apiVersion": "2022-06-01",
                                              "name": "[parameters('assignmentName')]",
                                              "identity": {
                                                "type": "UserAssigned",
                                                "userAssignedIdentities": {
                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                }
                                              },
                                              "location": "[variables('loc2')]",
                                              "properties": {
                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                "displayName": "[parameters('assignmentName')]",
                                                "enforcementMode": "Default",
                                                "metadata": {
                                                  "createdBy": "[parameters('solutionTag')]"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "diagnosticsPolicy"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "vWan-Alerts",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "packTag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "policyLocation": {
                                    "value": "[parameters('location')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "parResourceGroupName": {
                                    "value": "[variables('resourceGroupName')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "resourceType": {
                                    "value": "Microsoft.Network/vpngateways"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "solutionVersion": {
                                    "value": "[parameters('solutionVersion')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "12514656404613372633"
                                    }
                                  },
                                  "parameters": {
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "packTag": {
                                      "type": "string"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "resourceType": {
                                      "type": "string"
                                    },
                                    "policyLocation": {
                                      "type": "string"
                                    },
                                    "parResourceGroupName": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "deploymentRoleDefinitionIds": {
                                      "type": "array",
                                      "defaultValue": [
                                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                      ]
                                    },
                                    "parResourceGroupTags": {
                                      "type": "object",
                                      "defaultValue": {
                                        "environment": "test"
                                      }
                                    },
                                    "parAlertState": {
                                      "type": "string",
                                      "defaultValue": "true"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "solutionVersion": {
                                      "type": "string"
                                    },
                                    "moduleprefix": {
                                      "type": "string",
                                      "defaultValue": "vWan"
                                    }
                                  },
                                  "variables": {
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "Tunnel disconnect",
                                        "alertRuleDisplayName": "Tunnel disconnect",
                                        "alertRuleName": "vWan-TunnelDisconnect",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": false,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT5M",
                                        "alertType": "rows",
                                        "query": "AzureDiagnostics | where Category == \"TunnelDiagnosticLog\" | where OperationName == \"TunnelDisconnected\""
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-vWanPacketDrop', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "alertname": {
                                            "value": "Deploy_VPNGW_EgDropCount_Alert"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Deploy VPN Gateway Egress Packet Drop Count Alert"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP policy to audit/deploy VPN Gateway Egress Packet Drop Count Alert"
                                          },
                                          "metricNamespace": {
                                            "value": "microsoft.network/vpngateways"
                                          },
                                          "parAlertSeverity": {
                                            "value": "2"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "parAutoMitigate": {
                                            "value": "false"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT15M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT15M"
                                          },
                                          "minFailingPeriodsToAlert": {
                                            "value": "4"
                                          },
                                          "numberOfEvaluationPeriods": {
                                            "value": "4"
                                          },
                                          "alertSensitivity": {
                                            "value": "Medium"
                                          },
                                          "assignmentSuffix": {
                                            "value": "ActVPNGWEDC"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "metricName": {
                                            "value": "TunnelEgressPacketDropCount"
                                          },
                                          "operator": {
                                            "value": "GreaterThan"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "7528767799563269757"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "minFailingPeriodsToAlert": {
                                              "type": "string"
                                            },
                                            "numberOfEvaluationPeriods": {
                                              "type": "string"
                                            },
                                            "alertSensitivity": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      },
                                                      "minFailingPeriodsToAlert": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Min Failing Periods To Alert",
                                                          "description": "Min Failing Periods To Alert for the alert"
                                                        },
                                                        "defaultValue": "[parameters('minFailingPeriodsToAlert')]"
                                                      },
                                                      "numberOfEvaluationPeriods": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Number Of Evaluation Periods",
                                                          "description": "Number Of Evaluation Periods for the alert"
                                                        },
                                                        "defaultValue": "[parameters('numberOfEvaluationPeriods')]"
                                                      },
                                                      "alertSensitivity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert Sensitivity",
                                                          "description": "Alert Sensitivity for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "Low",
                                                          "Medium",
                                                          "High"
                                                        ],
                                                        "defaultValue": "[parameters('alertSensitivity')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "numberOfEvaluationPeriods": {
                                                                    "type": "String"
                                                                  },
                                                                  "minFailingPeriodsToAlert": {
                                                                    "type": "String"
                                                                  },
                                                                  "alertSensitivity": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "timeAggregation": "Average",
                                                                            "criterionType": "DynamicThresholdCriterion",
                                                                            "failingPeriods": {
                                                                              "numberOfEvaluationPeriods": "[[parameters('numberOfEvaluationPeriods')]",
                                                                              "minFailingPeriodsToAlert": "[[parameters('minFailingPeriodsToAlert')]"
                                                                            },
                                                                            "alertSensitivity": "[[parameters('alertSensitivity')]"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "minFailingPeriodsToAlert": {
                                                                          "type": "String"
                                                                        },
                                                                        "numberOfEvaluationPeriods": {
                                                                          "type": "String"
                                                                        },
                                                                        "alertSensitivity": {
                                                                          "type": "String"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                },
                                                                "minFailingPeriodsToAlert": {
                                                                  "value": "[[parameters('minFailingPeriodsToAlert')]"
                                                                },
                                                                "numberOfEvaluationPeriods": {
                                                                  "value": "[[parameters('numberOfEvaluationPeriods')]"
                                                                },
                                                                "alertSensitivity": {
                                                                  "value": "[[parameters('alertSensitivity')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-vWanTunnetIgBytes', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "alertname": {
                                            "value": "Deploy_VPNGW_TunnelIgBytes_Alert"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Metric Alert for VPN Gateway tunnel ingress bytes"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP policy to audit/deploy Metric Alert for VPN Gateway tunnel ingress bytes"
                                          },
                                          "metricNamespace": {
                                            "value": "microsoft.network/vpngateways"
                                          },
                                          "parAlertSeverity": {
                                            "value": "0"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "parAutoMitigate": {
                                            "value": "false"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT5M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT5M"
                                          },
                                          "parThreshold": {
                                            "value": "1"
                                          },
                                          "assignmentSuffix": {
                                            "value": "ActVPTunIBytes"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "metricName": {
                                            "value": "tunnelingressbytes"
                                          },
                                          "operator": {
                                            "value": "LessThan"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-TunnelEgressBytes', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "alertname": {
                                            "value": "Tunnel_Egress_Bytes_Alert"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Metric Alert for VPN Gateway tunnel egress bytes"
                                          },
                                          "alertDescription": {
                                            "value": "[AMSP] Metric Alert for VPN Gateway tunnel egress bytes"
                                          },
                                          "metricNamespace": {
                                            "value": "microsoft.network/vpngateways"
                                          },
                                          "parAlertSeverity": {
                                            "value": "0"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "parAutoMitigate": {
                                            "value": "false"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT5M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT5M"
                                          },
                                          "parThreshold": {
                                            "value": "1"
                                          },
                                          "assignmentSuffix": {
                                            "value": "TunEgressBytes"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "metricName": {
                                            "value": "tunnelegressbytes"
                                          },
                                          "operator": {
                                            "value": "LessThan"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-TunnelAverageBandwidth', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "alertname": {
                                            "value": "Tunnel Average Bandwidth"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Tunnel Average Bandwidth"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP Metric Alert for VPN Gateway Bandwidth Utilization"
                                          },
                                          "metricNamespace": {
                                            "value": "microsoft.network/vpngateways"
                                          },
                                          "parAlertSeverity": {
                                            "value": "0"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "parAutoMitigate": {
                                            "value": "false"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT1M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT5M"
                                          },
                                          "parThreshold": {
                                            "value": "1"
                                          },
                                          "assignmentSuffix": {
                                            "value": "TunAvgBW"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "metricName": {
                                            "value": "tunnelaveragebandwidth"
                                          },
                                          "operator": {
                                            "value": "LessThan"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-BGPPeerStatus', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "alertname": {
                                            "value": "BGP_Peer_Status_Alert"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Metric Alert for VPN Gateway BGP peer status"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP Metric Alert for VPN Gateway BGP peer status"
                                          },
                                          "metricNamespace": {
                                            "value": "microsoft.network/vpngateways"
                                          },
                                          "parAlertSeverity": {
                                            "value": "0"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "parAutoMitigate": {
                                            "value": "false"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT1M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT5M"
                                          },
                                          "parThreshold": {
                                            "value": "1"
                                          },
                                          "assignmentSuffix": {
                                            "value": "TunBpgStatus"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "metricName": {
                                            "value": "bgppeerstatus"
                                          },
                                          "operator": {
                                            "value": "LessThan"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "vWan-PolicySet",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "initiativeDescription": {
                                            "value": "AMSP policy to deploy vWan policies"
                                          },
                                          "initiativeDisplayName": {
                                            "value": "[AMSP] vWan policies"
                                          },
                                          "initiativeName": {
                                            "value": "AMSP-vWan-PolicySet"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "category": {
                                            "value": "Monitoring"
                                          },
                                          "version": {
                                            "value": "[parameters('solutionVersion')]"
                                          },
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "policyDefinitions": {
                                            "value": [
                                              {
                                                "policyDefinitionId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-BGPPeerStatus', uniqueString(deployment().name))), '2022-09-01').outputs.policyId.value]"
                                              },
                                              {
                                                "policyDefinitionId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-TunnelAverageBandwidth', uniqueString(deployment().name))), '2022-09-01').outputs.policyId.value]"
                                              },
                                              {
                                                "policyDefinitionId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-TunnelEgressBytes', uniqueString(deployment().name))), '2022-09-01').outputs.policyId.value]"
                                              },
                                              {
                                                "policyDefinitionId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-vWanTunnetIgBytes', uniqueString(deployment().name))), '2022-09-01').outputs.policyId.value]"
                                              }
                                            ]
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "4000655677511406555"
                                            }
                                          },
                                          "parameters": {
                                            "initiativeName": {
                                              "type": "string",
                                              "maxLength": 64,
                                              "metadata": {
                                                "description": "PolicySet name"
                                              }
                                            },
                                            "initiativeDisplayName": {
                                              "type": "string",
                                              "maxLength": 128,
                                              "metadata": {
                                                "description": "PolicySet display Name"
                                              }
                                            },
                                            "initiativeDescription": {
                                              "type": "string",
                                              "metadata": {
                                                "description": "PolicySet description"
                                              }
                                            },
                                            "solutionTag": {
                                              "type": "string",
                                              "minLength": 1,
                                              "metadata": {
                                                "description": "array of policy IDs"
                                              }
                                            },
                                            "category": {
                                              "type": "string",
                                              "defaultValue": "Monitoring"
                                            },
                                            "version": {
                                              "type": "string",
                                              "defaultValue": "1.0.0"
                                            },
                                            "policyDefinitions": {
                                              "type": "array"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policySetDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('initiativeName')]",
                                              "properties": {
                                                "description": "[parameters('initiativeDescription')]",
                                                "displayName": "[parameters('initiativeDisplayName')]",
                                                "metadata": {
                                                  "category": "[parameters('category')]",
                                                  "version": "[parameters('version')]",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "parameters": {},
                                                "policyDefinitions": "[parameters('policyDefinitions')]",
                                                "policyType": "Custom"
                                              }
                                            },
                                            {
                                              "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('assignment-{0}', parameters('initiativeName'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "policyDefinitionId": {
                                                    "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "assignmentName": {
                                                    "value": "[format('[AMSP]AMA-{0}-Set', parameters('initiativeName'))]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "18204016525654709950"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "policyDefinitionId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentName": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "loc2": "[trim(parameters('location'))]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyAssignments",
                                                      "apiVersion": "2022-06-01",
                                                      "name": "[parameters('assignmentName')]",
                                                      "identity": {
                                                        "type": "UserAssigned",
                                                        "userAssignedIdentities": {
                                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                        }
                                                      },
                                                      "location": "[variables('loc2')]",
                                                      "properties": {
                                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                        "displayName": "[parameters('assignmentName')]",
                                                        "enforcementMode": "Default",
                                                        "metadata": {
                                                          "createdBy": "[parameters('solutionTag')]"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                              ]
                                            },
                                            {
                                              "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('assignment--{0}', parameters('initiativeName'))]",
                                              "subscriptionId": "[parameters('subscriptionId')]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "policyDefinitionId": {
                                                    "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "assignmentName": {
                                                    "value": "[format('[AMSP]AMA-{0}-Set', parameters('initiativeName'))]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "15632908880880169790"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "policyDefinitionId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentName": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "loc2": "[trim(parameters('location'))]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyAssignments",
                                                      "apiVersion": "2022-06-01",
                                                      "name": "[parameters('assignmentName')]",
                                                      "identity": {
                                                        "type": "UserAssigned",
                                                        "userAssignedIdentities": {
                                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                        }
                                                      },
                                                      "location": "[variables('loc2')]",
                                                      "properties": {
                                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                        "displayName": "[parameters('assignmentName')]",
                                                        "enforcementMode": "Default",
                                                        "metadata": {
                                                          "createdBy": "[parameters('solutionTag')]"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policySetDefId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                            }
                                          }
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-BGPPeerStatus', uniqueString(deployment().name)))]",
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-TunnelAverageBandwidth', uniqueString(deployment().name)))]",
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-TunnelEgressBytes', uniqueString(deployment().name)))]",
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-vWanTunnetIgBytes', uniqueString(deployment().name)))]"
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "LoadBalancersAlerts",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "assignmentLevel": {
                            "value": "[parameters('assignmentLevel')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "mgname": {
                            "value": "[parameters('mgname')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "packtag": {
                            "value": "ALB"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "grafanaName": {
                            "value": "[parameters('grafanaName')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "6028346188130658762"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string",
                              "defaultValue": "ALB"
                            },
                            "solutionTag": {
                              "type": "string",
                              "defaultValue": "MonitorStarterPacks"
                            },
                            "solutionVersion": {
                              "type": "string",
                              "defaultValue": "0.1.0"
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "rulename": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Name of the DCR rule to be created"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "subscriptionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "mgname": {
                              "type": "string"
                            },
                            "assignmentLevel": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "grafanaName": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "Platform",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "resourceType": "Microsoft.Network/loadBalancers",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-Alerts', parameters('packtag'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "packTag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "policyLocation": {
                                    "value": "[parameters('location')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "parResourceGroupName": {
                                    "value": "[variables('resourceGroupName')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  },
                                  "mgname": {
                                    "value": "[parameters('mgname')]"
                                  },
                                  "resourceType": {
                                    "value": "[variables('resourceType')]"
                                  },
                                  "assignmentLevel": {
                                    "value": "[parameters('assignmentLevel')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "solutionVersion": {
                                    "value": "[parameters('solutionVersion')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "10571234444994650191"
                                    }
                                  },
                                  "parameters": {
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "solutionVersion": {
                                      "type": "string"
                                    },
                                    "packTag": {
                                      "type": "string"
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    },
                                    "mgname": {
                                      "type": "string"
                                    },
                                    "resourceType": {
                                      "type": "string"
                                    },
                                    "policyLocation": {
                                      "type": "string"
                                    },
                                    "parResourceGroupName": {
                                      "type": "string"
                                    },
                                    "assignmentLevel": {
                                      "type": "string"
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "deploymentRoleDefinitionIds": {
                                      "type": "array",
                                      "defaultValue": [
                                        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                      ]
                                    },
                                    "parResourceGroupTags": {
                                      "type": "object",
                                      "defaultValue": {
                                        "environment": "test"
                                      }
                                    },
                                    "parAlertState": {
                                      "type": "string",
                                      "defaultValue": "true"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-ALBDipAvailabilityAlert', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertname": {
                                            "value": "AMSP - Load Balancer Dip Availability"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Load Balancer Dip Availability"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP policy to deploy Load Balancer Dip Availability"
                                          },
                                          "metricNamespace": {
                                            "value": "Microsoft.Network/loadBalancers"
                                          },
                                          "metricName": {
                                            "value": "DipAvailability"
                                          },
                                          "operator": {
                                            "value": "LessThan"
                                          },
                                          "parAlertSeverity": {
                                            "value": "0"
                                          },
                                          "parAutoMitigate": {
                                            "value": "false"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT1M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT1M"
                                          },
                                          "parThreshold": {
                                            "value": "90"
                                          },
                                          "assignmentSuffix": {
                                            "value": "ActALBDipAvl"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-ALBUsedSNATPortsAlert', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertname": {
                                            "value": "AMSP - Load Balancer Metric Alert for ALB Used SNAT Ports"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Metric Alert for ALB Used SNAT Ports"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP policy to deploy Metric Alert for ALB Used SNAT Ports"
                                          },
                                          "metricNamespace": {
                                            "value": "Microsoft.Network/loadBalancers"
                                          },
                                          "metricName": {
                                            "value": "UsedSNATPorts"
                                          },
                                          "operator": {
                                            "value": "GreaterThan"
                                          },
                                          "parAlertSeverity": {
                                            "value": "1"
                                          },
                                          "parAutoMitigate": {
                                            "value": "false"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT1M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT1M"
                                          },
                                          "parThreshold": {
                                            "value": "900"
                                          },
                                          "assignmentSuffix": {
                                            "value": "ActUserSNAT"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-ALBDGlobalBackendAvailAlert', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertname": {
                                            "value": "AMSP - Load Balancer Global Backend Availability"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Global Backend Availability "
                                          },
                                          "alertDescription": {
                                            "value": "AMSP policy to deploy Global Backend Availability alert"
                                          },
                                          "metricNamespace": {
                                            "value": "Microsoft.Network/loadBalancers"
                                          },
                                          "metricName": {
                                            "value": "GlobalBackendAvailability"
                                          },
                                          "operator": {
                                            "value": "GreaterThan"
                                          },
                                          "parAlertSeverity": {
                                            "value": "0"
                                          },
                                          "parAutoMitigate": {
                                            "value": "false"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT1M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT1M"
                                          },
                                          "parThreshold": {
                                            "value": "90"
                                          },
                                          "assignmentSuffix": {
                                            "value": "ActALBGlbBEAvl"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-ALBBackendAvailabilityAlert', uniqueString(deployment().name))]",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertname": {
                                            "value": "AMSP - Load Balancer VIP Availability Alert"
                                          },
                                          "alertDisplayName": {
                                            "value": "[AMSP] Deploy ALB VIP Availability Alert"
                                          },
                                          "alertDescription": {
                                            "value": "AMSP policy to deploy ALB VIP Availability Alert"
                                          },
                                          "metricNamespace": {
                                            "value": "Microsoft.Network/loadBalancers"
                                          },
                                          "parAlertSeverity": {
                                            "value": "0"
                                          },
                                          "parAutoMitigate": {
                                            "value": "false"
                                          },
                                          "parEvaluationFrequency": {
                                            "value": "PT1M"
                                          },
                                          "parPolicyEffect": {
                                            "value": "deployIfNotExists"
                                          },
                                          "parWindowSize": {
                                            "value": "PT5M"
                                          },
                                          "parThreshold": {
                                            "value": "90"
                                          },
                                          "assignmentSuffix": {
                                            "value": "ActALBAvl"
                                          },
                                          "metricName": {
                                            "value": "VipAvailability"
                                          },
                                          "operator": {
                                            "value": "LessThan"
                                          },
                                          "parAlertState": {
                                            "value": "[parameters('parAlertState')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "policyLocation": {
                                            "value": "[parameters('policyLocation')]"
                                          },
                                          "mgname": {
                                            "value": "[parameters('mgname')]"
                                          },
                                          "packTag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "resourceType": {
                                            "value": "[parameters('resourceType')]"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "deploymentRoleDefinitionIds": {
                                            "value": "[parameters('deploymentRoleDefinitionIds')]"
                                          },
                                          "initiativeMember": {
                                            "value": true
                                          },
                                          "packtype": {
                                            "value": "Platform"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "453254689165108562"
                                            }
                                          },
                                          "parameters": {
                                            "assignmentSuffix": {
                                              "type": "string"
                                            },
                                            "alertname": {
                                              "type": "string"
                                            },
                                            "alertDisplayName": {
                                              "type": "string"
                                            },
                                            "alertDescription": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "packTag": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "mgname": {
                                              "type": "string"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "resourceType": {
                                              "type": "string"
                                            },
                                            "timeAggregation": {
                                              "type": "string",
                                              "defaultValue": "Average"
                                            },
                                            "metricNamespace": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "metricName": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "initiativeMember": {
                                              "type": "bool"
                                            },
                                            "policyLocation": {
                                              "type": "string"
                                            },
                                            "deploymentRoleDefinitionIds": {
                                              "type": "array",
                                              "defaultValue": [
                                                "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                                              ]
                                            },
                                            "packtype": {
                                              "type": "string",
                                              "allowedValues": [
                                                "IaaS",
                                                "PaaS",
                                                "Platform"
                                              ]
                                            },
                                            "parAlertSeverity": {
                                              "type": "string",
                                              "defaultValue": "3",
                                              "allowedValues": [
                                                "0",
                                                "1",
                                                "2",
                                                "3",
                                                "4"
                                              ]
                                            },
                                            "parWindowSize": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H",
                                                "PT6H",
                                                "PT12H",
                                                "P1D"
                                              ]
                                            },
                                            "parEvaluationFrequency": {
                                              "type": "string",
                                              "defaultValue": "PT5M",
                                              "allowedValues": [
                                                "PT1M",
                                                "PT5M",
                                                "PT15M",
                                                "PT30M",
                                                "PT1H"
                                              ]
                                            },
                                            "parPolicyEffect": {
                                              "type": "string",
                                              "defaultValue": "disabled",
                                              "allowedValues": [
                                                "deployIfNotExists",
                                                "disabled"
                                              ]
                                            },
                                            "parAutoMitigate": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parAlertState": {
                                              "type": "string",
                                              "defaultValue": "true"
                                            },
                                            "parThreshold": {
                                              "type": "string",
                                              "defaultValue": "1000"
                                            },
                                            "parMonitorDisable": {
                                              "type": "string",
                                              "defaultValue": "MonitorDisable"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(parameters('alertname'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "name": {
                                                    "value": "[parameters('alertname')]"
                                                  },
                                                  "displayName": {
                                                    "value": "[parameters('alertDisplayName')]"
                                                  },
                                                  "description": {
                                                    "value": "[parameters('alertDescription')]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "metadata": {
                                                    "value": {
                                                      "version": "1.0.0",
                                                      "Category": "Monitoring",
                                                      "source": "https://github.com/Azure/AzureMonitorStarterPacks",
                                                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packTag')]",
                                                      "MonitoringPackType": "[parameters('packtype')]",
                                                      "initiativeMember": "[parameters('initiativeMember')]"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "value": {
                                                      "severity": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Severity",
                                                          "description": "Severity of the Alert"
                                                        },
                                                        "allowedValues": [
                                                          "0",
                                                          "1",
                                                          "2",
                                                          "3",
                                                          "4"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertSeverity')]"
                                                      },
                                                      "windowSize": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Window Size",
                                                          "description": "Window size for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H",
                                                          "PT6H",
                                                          "PT12H",
                                                          "P1D"
                                                        ],
                                                        "defaultValue": "[parameters('parWindowSize')]"
                                                      },
                                                      "evaluationFrequency": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Evaluation Frequency",
                                                          "description": "Evaluation frequency for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "PT1M",
                                                          "PT5M",
                                                          "PT15M",
                                                          "PT30M",
                                                          "PT1H"
                                                        ],
                                                        "defaultValue": "[parameters('parEvaluationFrequency')]"
                                                      },
                                                      "autoMitigate": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Auto Mitigate",
                                                          "description": "Auto Mitigate for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAutoMitigate')]"
                                                      },
                                                      "enabled": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Alert State",
                                                          "description": "Alert state for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "defaultValue": "[parameters('parAlertState')]"
                                                      },
                                                      "threshold": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Threshold",
                                                          "description": "Threshold for the alert"
                                                        },
                                                        "defaultValue": "[parameters('parThreshold')]"
                                                      },
                                                      "tagName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag name",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('solutionTag')]"
                                                      },
                                                      "tagValue": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Tag Value",
                                                          "description": "A tag to apply the association conditionally."
                                                        },
                                                        "defaultValue": "[parameters('packTag')]"
                                                      },
                                                      "metricNamespace": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Namespace",
                                                          "description": "Metric Namespace for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricNamespace')]"
                                                      },
                                                      "metricName": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Metric Name",
                                                          "description": "Metric Name for the alert"
                                                        },
                                                        "defaultValue": "[parameters('metricName')]"
                                                      },
                                                      "operator": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "allowedValues": [
                                                          "GreaterThan",
                                                          "LessThan",
                                                          "GreaterOrLessThan"
                                                        ],
                                                        "defaultValue": "[parameters('operator')]"
                                                      },
                                                      "alertname": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Operator",
                                                          "description": "Operator for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertname')]"
                                                      },
                                                      "effect": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Effect",
                                                          "description": "Effect of the policy"
                                                        },
                                                        "allowedValues": [
                                                          "deployIfNotExists",
                                                          "disabled"
                                                        ],
                                                        "defaultValue": "[parameters('parPolicyEffect')]"
                                                      },
                                                      "alertDescription": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Description",
                                                          "description": "Description for the alert"
                                                        },
                                                        "defaultValue": "[parameters('alertDescription')]"
                                                      },
                                                      "actionGroupResourceId": {
                                                        "type": "String",
                                                        "metadata": {
                                                          "displayName": "Action Group Resource Id",
                                                          "description": "Action Group Resource Id for the alert"
                                                        },
                                                        "defaultValue": "[parameters('AGId')]"
                                                      }
                                                    }
                                                  },
                                                  "policyRule": {
                                                    "value": {
                                                      "if": {
                                                        "allOf": [
                                                          {
                                                            "field": "type",
                                                            "equals": "[parameters('resourceType')]"
                                                          },
                                                          {
                                                            "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                                            "contains": "[[parameters('tagValue')]"
                                                          }
                                                        ]
                                                      },
                                                      "then": {
                                                        "effect": "[[parameters('effect')]",
                                                        "details": {
                                                          "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                                                          "type": "Microsoft.Insights/metricAlerts",
                                                          "existenceCondition": {
                                                            "allOf": [
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace",
                                                                "equals": "[[parameters('metricNamespace')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName",
                                                                "equals": "[[parameters('metricName')]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricalerts/scopes[*]",
                                                                "equals": "[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/',parameters('metricNamespace'),'/',field('fullName'))]"
                                                              },
                                                              {
                                                                "field": "Microsoft.Insights/metricAlerts/enabled",
                                                                "equals": "[[parameters('enabled')]"
                                                              }
                                                            ]
                                                          },
                                                          "deployment": {
                                                            "properties": {
                                                              "mode": "incremental",
                                                              "template": {
                                                                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                                                "contentVersion": "1.0.0.0",
                                                                "parameters": {
                                                                  "resourceName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceName",
                                                                      "description": "Name of the resource"
                                                                    }
                                                                  },
                                                                  "resourceId": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "resourceId",
                                                                      "description": "Resource ID of the resource emitting the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricNamespace": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricNamespace",
                                                                      "description": "Metric namespace of the metric that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "metricName": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "metricName",
                                                                      "description": "Metric Name that will be used for the comparison"
                                                                    }
                                                                  },
                                                                  "operator": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "operator",
                                                                      "description": "alert operator for metric threshold compatirson, like GreaterThan, LessThan, GreaterOrLessThan"
                                                                    }
                                                                  },
                                                                  "alertname": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "alertname",
                                                                      "description": "Name of the alert"
                                                                    }
                                                                  },
                                                                  "alertDescription": {
                                                                    "type": "String",
                                                                    "metadata": {
                                                                      "displayName": "description",
                                                                      "description": "Description of the alert"
                                                                    }
                                                                  },
                                                                  "severity": {
                                                                    "type": "String"
                                                                  },
                                                                  "windowSize": {
                                                                    "type": "String"
                                                                  },
                                                                  "evaluationFrequency": {
                                                                    "type": "String"
                                                                  },
                                                                  "autoMitigate": {
                                                                    "type": "String"
                                                                  },
                                                                  "enabled": {
                                                                    "type": "String"
                                                                  },
                                                                  "threshold": {
                                                                    "type": "String"
                                                                  },
                                                                  "solutionTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "packTag": {
                                                                    "type": "string"
                                                                  },
                                                                  "actionGroupResourceId": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "variables": {},
                                                                "resources": [
                                                                  {
                                                                    "type": "Microsoft.Insights/metricAlerts",
                                                                    "apiVersion": "2018-03-01",
                                                                    "name": "[[parameters('alertname')]",
                                                                    "location": "global",
                                                                    "tags": {
                                                                      "[[parameters('solutionTag')]": "[[parameters('packTag')]"
                                                                    },
                                                                    "properties": {
                                                                      "description": "[[parameters('alertDescription')]",
                                                                      "severity": "[[parameters('severity')]",
                                                                      "enabled": "[[parameters('enabled')]",
                                                                      "scopes": [
                                                                        "[[parameters('resourceId')]"
                                                                      ],
                                                                      "evaluationFrequency": "[[parameters('evaluationFrequency')]",
                                                                      "windowSize": "[[parameters('windowSize')]",
                                                                      "criteria": {
                                                                        "allOf": [
                                                                          {
                                                                            "name": "[[parameters('metricName')]",
                                                                            "metricNamespace": "[[parameters('metricNamespace')]",
                                                                            "metricName": "[[parameters('metricName')]",
                                                                            "operator": "[[parameters('operator')]",
                                                                            "threshold": "[[parameters('threshold')]",
                                                                            "timeAggregation": "[parameters('timeAggregation')]",
                                                                            "criterionType": "StaticThresholdCriterion"
                                                                          }
                                                                        ],
                                                                        "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                                                                      },
                                                                      "autoMitigate": "[[parameters('autoMitigate')]",
                                                                      "actions": [
                                                                        {
                                                                          "actionGroupId": "[[parameters('actionGroupResourceId')]"
                                                                        }
                                                                      ],
                                                                      "parameters": {
                                                                        "severity": {
                                                                          "type": "string"
                                                                        },
                                                                        "windowSize": {
                                                                          "type": "string"
                                                                        },
                                                                        "evaluationFrequency": {
                                                                          "type": "string"
                                                                        },
                                                                        "autoMitigate": {
                                                                          "type": "string"
                                                                        },
                                                                        "enabled": {
                                                                          "type": "string"
                                                                        },
                                                                        "threshold": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricNamespace": {
                                                                          "type": "string"
                                                                        },
                                                                        "metricName": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertname": {
                                                                          "type": "string"
                                                                        },
                                                                        "alertDescription": {
                                                                          "type": "string"
                                                                        },
                                                                        "solutionTag": {
                                                                          "type": "string"
                                                                        },
                                                                        "packTag": {
                                                                          "type": "string"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "parameters": {
                                                                "resourceName": {
                                                                  "value": "[[field('name')]"
                                                                },
                                                                "resourceId": {
                                                                  "value": "[[field('id')]"
                                                                },
                                                                "severity": {
                                                                  "value": "[[parameters('severity')]"
                                                                },
                                                                "windowSize": {
                                                                  "value": "[[parameters('windowSize')]"
                                                                },
                                                                "evaluationFrequency": {
                                                                  "value": "[[parameters('evaluationFrequency')]"
                                                                },
                                                                "autoMitigate": {
                                                                  "value": "[[parameters('autoMitigate')]"
                                                                },
                                                                "enabled": {
                                                                  "value": "[[parameters('enabled')]"
                                                                },
                                                                "threshold": {
                                                                  "value": "[[parameters('threshold')]"
                                                                },
                                                                "metricNamespace": {
                                                                  "value": "[[parameters('metricNamespace')]"
                                                                },
                                                                "metricName": {
                                                                  "value": "[[parameters('metricName')]"
                                                                },
                                                                "operator": {
                                                                  "value": "[[parameters('operator')]"
                                                                },
                                                                "alertname": {
                                                                  "value": "[[parameters('alertname')]"
                                                                },
                                                                "alertDescription": {
                                                                  "value": "[[parameters('alertDescription')]"
                                                                },
                                                                "solutionTag": {
                                                                  "value": "[[parameters('tagName')]"
                                                                },
                                                                "packTag": {
                                                                  "value": "[[parameters('tagValue')]"
                                                                },
                                                                "actionGroupResourceId": {
                                                                  "value": "[[parameters('actionGroupResourceId')]"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "1887629057415201122"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "name": {
                                                      "type": "string",
                                                      "maxLength": 64,
                                                      "metadata": {
                                                        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
                                                      }
                                                    },
                                                    "displayName": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "maxLength": 128,
                                                      "metadata": {
                                                        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
                                                      }
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "defaultValue": "",
                                                      "metadata": {
                                                        "description": "Optional. The policy definition description."
                                                      }
                                                    },
                                                    "mode": {
                                                      "type": "string",
                                                      "defaultValue": "All",
                                                      "allowedValues": [
                                                        "All",
                                                        "Indexed",
                                                        "Microsoft.KeyVault.Data",
                                                        "Microsoft.ContainerService.Data",
                                                        "Microsoft.Kubernetes.Data"
                                                      ],
                                                      "metadata": {
                                                        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
                                                      }
                                                    },
                                                    "metadata": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
                                                      }
                                                    },
                                                    "parameters": {
                                                      "type": "object",
                                                      "defaultValue": {},
                                                      "metadata": {
                                                        "description": "Optional. The policy definition parameters that can be used in policy definition references."
                                                      }
                                                    },
                                                    "policyRule": {
                                                      "type": "object",
                                                      "metadata": {
                                                        "description": "Required. The Policy Rule details for the Policy Definition."
                                                      }
                                                    },
                                                    "managementGroupId": {
                                                      "type": "string",
                                                      "defaultValue": "[managementGroup().name]",
                                                      "metadata": {
                                                        "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
                                                      }
                                                    },
                                                    "location": {
                                                      "type": "string",
                                                      "defaultValue": "[deployment().location]",
                                                      "metadata": {
                                                        "description": "Optional. Location deployment metadata."
                                                      }
                                                    },
                                                    "enableDefaultTelemetry": {
                                                      "type": "bool",
                                                      "defaultValue": false,
                                                      "metadata": {
                                                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                                                      }
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyDefinitions",
                                                      "apiVersion": "2021-06-01",
                                                      "name": "[parameters('name')]",
                                                      "properties": {
                                                        "policyType": "Custom",
                                                        "mode": "[parameters('mode')]",
                                                        "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                                                        "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                                                        "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                                                        "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                                                        "policyRule": "[parameters('policyRule')]"
                                                      }
                                                    }
                                                  ],
                                                  "outputs": {
                                                    "name": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition Name."
                                                      },
                                                      "value": "[parameters('name')]"
                                                    },
                                                    "resourceId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Definition resource ID."
                                                      },
                                                      "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    },
                                                    "roleDefinitionIds": {
                                                      "type": "array",
                                                      "metadata": {
                                                        "description": "Policy Definition Role Definition IDs."
                                                      },
                                                      "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
                                                    },
                                                    "policyId": {
                                                      "type": "string",
                                                      "metadata": {
                                                        "description": "Policy Id"
                                                      },
                                                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "condition": "[not(parameters('initiativeMember'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[guid(format('{0}-{1}', parameters('alertname'), parameters('assignmentSuffix')))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('policyLocation')]"
                                                  },
                                                  "mgname": {
                                                    "value": "[parameters('mgname')]"
                                                  },
                                                  "packtag": {
                                                    "value": "[parameters('packTag')]"
                                                  },
                                                  "policydefinitionId": {
                                                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                                  },
                                                  "resourceType": {
                                                    "value": "[parameters('resourceType')]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "subscriptionId": {
                                                    "value": "[parameters('subscriptionId')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  },
                                                  "assignmentLevel": {
                                                    "value": "[parameters('assignmentLevel')]"
                                                  },
                                                  "policyType": {
                                                    "value": "alert"
                                                  },
                                                  "assignmentSuffix": {
                                                    "value": "[parameters('assignmentSuffix')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "196652062591472434"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentSuffix": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "mgname": {
                                                      "type": "string"
                                                    },
                                                    "assignmentLevel": {
                                                      "type": "string",
                                                      "defaultValue": "managementGroup"
                                                    },
                                                    "subscriptionId": {
                                                      "type": "string"
                                                    },
                                                    "resourceType": {
                                                      "type": "string"
                                                    },
                                                    "policyType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "diag",
                                                        "alert"
                                                      ]
                                                    },
                                                    "policydefinitionId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "resourceShortType": "[split(parameters('resourceType'), '/')[1]]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "18204016525654709950"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[format('AM-{0}-{1}-{2}', parameters('packtag'), variables('resourceShortType'), parameters('assignmentSuffix'))]",
                                                      "subscriptionId": "[parameters('subscriptionId')]",
                                                      "location": "[deployment().location]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "policyDefinitionId": {
                                                            "value": "[parameters('policydefinitionId')]"
                                                          },
                                                          "assignmentName": {
                                                            "value": "[format('{0}-{1}-{2}-{3}', parameters('packtag'), variables('resourceShortType'), parameters('policyType'), parameters('assignmentSuffix'))]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "solutionTag": {
                                                            "value": "[parameters('solutionTag')]"
                                                          },
                                                          "userManagedIdentityResourceId": {
                                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.20.4.51522",
                                                              "templateHash": "15632908880880169790"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "policyDefinitionId": {
                                                              "type": "string"
                                                            },
                                                            "assignmentName": {
                                                              "type": "string"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "solutionTag": {
                                                              "type": "string"
                                                            },
                                                            "userManagedIdentityResourceId": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "variables": {
                                                            "loc2": "[trim(parameters('location'))]"
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Authorization/policyAssignments",
                                                              "apiVersion": "2022-06-01",
                                                              "name": "[parameters('assignmentName')]",
                                                              "identity": {
                                                                "type": "UserAssigned",
                                                                "userAssignedIdentities": {
                                                                  "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                                }
                                                              },
                                                              "location": "[variables('loc2')]",
                                                              "properties": {
                                                                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                                "displayName": "[parameters('assignmentName')]",
                                                                "enforcementMode": "Default",
                                                                "metadata": {
                                                                  "createdBy": "[parameters('solutionTag')]"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policyResourceId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.resourceId.value]"
                                            },
                                            "policyId": {
                                              "type": "string",
                                              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', guid(parameters('alertname'))), '2022-09-01').outputs.policyId.value]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "LB-PolicySet",
                                      "location": "[deployment().location]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "initiativeDescription": {
                                            "value": "AMSP Initiative to deploy Load Balancer Alert Policies"
                                          },
                                          "initiativeDisplayName": {
                                            "value": "[AMSP] Load Balancer Alerting policies"
                                          },
                                          "initiativeName": {
                                            "value": "AMSP-LB-PolicySet"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "category": {
                                            "value": "Monitoring"
                                          },
                                          "version": {
                                            "value": "[parameters('solutionVersion')]"
                                          },
                                          "assignmentLevel": {
                                            "value": "[parameters('assignmentLevel')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "subscriptionId": {
                                            "value": "[parameters('subscriptionId')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packTag')]"
                                          },
                                          "userManagedIdentityResourceId": {
                                            "value": "[parameters('userManagedIdentityResourceId')]"
                                          },
                                          "policyDefinitions": {
                                            "value": [
                                              {
                                                "policyDefinitionId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-ALBDipAvailabilityAlert', uniqueString(deployment().name))), '2022-09-01').outputs.policyId.value]"
                                              },
                                              {
                                                "policyDefinitionId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-ALBUsedSNATPortsAlert', uniqueString(deployment().name))), '2022-09-01').outputs.policyId.value]"
                                              },
                                              {
                                                "policyDefinitionId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-ALBDGlobalBackendAvailAlert', uniqueString(deployment().name))), '2022-09-01').outputs.policyId.value]"
                                              },
                                              {
                                                "policyDefinitionId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-ALBBackendAvailabilityAlert', uniqueString(deployment().name))), '2022-09-01').outputs.policyId.value]"
                                              }
                                            ]
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.20.4.51522",
                                              "templateHash": "4000655677511406555"
                                            }
                                          },
                                          "parameters": {
                                            "initiativeName": {
                                              "type": "string",
                                              "maxLength": 64,
                                              "metadata": {
                                                "description": "PolicySet name"
                                              }
                                            },
                                            "initiativeDisplayName": {
                                              "type": "string",
                                              "maxLength": 128,
                                              "metadata": {
                                                "description": "PolicySet display Name"
                                              }
                                            },
                                            "initiativeDescription": {
                                              "type": "string",
                                              "metadata": {
                                                "description": "PolicySet description"
                                              }
                                            },
                                            "solutionTag": {
                                              "type": "string",
                                              "minLength": 1,
                                              "metadata": {
                                                "description": "array of policy IDs"
                                              }
                                            },
                                            "category": {
                                              "type": "string",
                                              "defaultValue": "Monitoring"
                                            },
                                            "version": {
                                              "type": "string",
                                              "defaultValue": "1.0.0"
                                            },
                                            "policyDefinitions": {
                                              "type": "array"
                                            },
                                            "assignmentLevel": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "userManagedIdentityResourceId": {
                                              "type": "string"
                                            },
                                            "subscriptionId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Authorization/policySetDefinitions",
                                              "apiVersion": "2021-06-01",
                                              "name": "[parameters('initiativeName')]",
                                              "properties": {
                                                "description": "[parameters('initiativeDescription')]",
                                                "displayName": "[parameters('initiativeDisplayName')]",
                                                "metadata": {
                                                  "category": "[parameters('category')]",
                                                  "version": "[parameters('version')]",
                                                  "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                                                },
                                                "parameters": {},
                                                "policyDefinitions": "[parameters('policyDefinitions')]",
                                                "policyType": "Custom"
                                              }
                                            },
                                            {
                                              "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('assignment-{0}', parameters('initiativeName'))]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "policyDefinitionId": {
                                                    "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "assignmentName": {
                                                    "value": "[format('[AMSP]AMA-{0}-Set', parameters('initiativeName'))]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "18204016525654709950"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "policyDefinitionId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentName": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "loc2": "[trim(parameters('location'))]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyAssignments",
                                                      "apiVersion": "2022-06-01",
                                                      "name": "[parameters('assignmentName')]",
                                                      "identity": {
                                                        "type": "UserAssigned",
                                                        "userAssignedIdentities": {
                                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                        }
                                                      },
                                                      "location": "[variables('loc2')]",
                                                      "properties": {
                                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                        "displayName": "[parameters('assignmentName')]",
                                                        "enforcementMode": "Default",
                                                        "metadata": {
                                                          "createdBy": "[parameters('solutionTag')]"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                              ]
                                            },
                                            {
                                              "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('assignment--{0}', parameters('initiativeName'))]",
                                              "subscriptionId": "[parameters('subscriptionId')]",
                                              "location": "[deployment().location]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "policyDefinitionId": {
                                                    "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                                  },
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "assignmentName": {
                                                    "value": "[format('[AMSP]AMA-{0}-Set', parameters('initiativeName'))]"
                                                  },
                                                  "solutionTag": {
                                                    "value": "[parameters('solutionTag')]"
                                                  },
                                                  "userManagedIdentityResourceId": {
                                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                                  }
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.20.4.51522",
                                                      "templateHash": "15632908880880169790"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "policyDefinitionId": {
                                                      "type": "string"
                                                    },
                                                    "assignmentName": {
                                                      "type": "string"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "solutionTag": {
                                                      "type": "string"
                                                    },
                                                    "userManagedIdentityResourceId": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "variables": {
                                                    "loc2": "[trim(parameters('location'))]"
                                                  },
                                                  "resources": [
                                                    {
                                                      "type": "Microsoft.Authorization/policyAssignments",
                                                      "apiVersion": "2022-06-01",
                                                      "name": "[parameters('assignmentName')]",
                                                      "identity": {
                                                        "type": "UserAssigned",
                                                        "userAssignedIdentities": {
                                                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                                                        }
                                                      },
                                                      "location": "[variables('loc2')]",
                                                      "properties": {
                                                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                                                        "displayName": "[parameters('assignmentName')]",
                                                        "enforcementMode": "Default",
                                                        "metadata": {
                                                          "createdBy": "[parameters('solutionTag')]"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              "dependsOn": [
                                                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "policySetDefId": {
                                              "type": "string",
                                              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                                            }
                                          }
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-ALBBackendAvailabilityAlert', uniqueString(deployment().name)))]",
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-ALBDipAvailabilityAlert', uniqueString(deployment().name)))]",
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-ALBDGlobalBackendAvailAlert', uniqueString(deployment().name)))]",
                                        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('{0}-ALBUsedSNATPortsAlert', uniqueString(deployment().name)))]"
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'deployAG-new')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('azureManagedGrafana-{0}', parameters('instanceName')))]",
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment')]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', 'resourceGroup-Deployment')]"
      ]
    }
  ]
}