{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "14116435586215877864"
    }
  },
  "parameters": {
    "subscriptionId": {
      "type": "string"
    },
    "resourceGroupName": {
      "type": "string"
    },
    "createNewResourceGroup": {
      "type": "bool",
      "defaultValue": false
    },
    "location": {
      "type": "string"
    },
    "newLogAnalyticsWSName": {
      "type": "string",
      "defaultValue": ""
    },
    "createNewLogAnalyticsWS": {
      "type": "bool"
    },
    "existingLogAnalyticsWSId": {
      "type": "string",
      "defaultValue": ""
    },
    "grafanaLocation": {
      "type": "string",
      "defaultValue": ""
    },
    "grafanaName": {
      "type": "string",
      "defaultValue": ""
    },
    "newGrafana": {
      "type": "bool"
    },
    "storageAccountName": {
      "type": "string"
    },
    "createNewStorageAccount": {
      "type": "bool",
      "defaultValue": false
    },
    "instanceName": {
      "type": "string"
    },
    "deployGrafana": {
      "type": "bool"
    },
    "customerTags": {
      "type": "object"
    },
    "deployDiscovery": {
      "type": "bool",
      "defaultValue": false
    },
    "collectTelemetry": {
      "type": "bool",
      "defaultValue": true
    },
    "appInsightsLocation": {
      "type": "string"
    }
  },
  "variables": {
    "solutionTag": "MonitorStarterPacks",
    "solutionTagComponents": "MonitorStarterPacksComponents",
    "solutionVersion": "0.1",
    "tempTags": {
      "[format('{0}', variables('solutionTagComponents'))]": "BackendComponent",
      "solutionVersion": "[variables('solutionVersion')]",
      "instanceName": "[parameters('instanceName')]"
    },
    "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
    "functionName": "[format('AMP-{0}-{1}-Function', parameters('instanceName'), split(parameters('subscriptionId'), '-')[0])]",
    "logicAppName": "[format('AMP-{0}-LogicApp', parameters('instanceName'))]",
    "ImageGalleryName": "[format('AMP{0}Gallery', parameters('instanceName'))]"
  },
  "resources": [
    {
      "condition": "[parameters('createNewResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17175818948770477909"
            }
          },
          "parameters": {
            "resourceGroupName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2023-07-01",
              "name": "[parameters('resourceGroupName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]"
            }
          ],
          "outputs": {
            "newResourceGroupId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('createNewStorageAccount')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('STOmonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13373718962256926750"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'discovery')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'applications')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'amba')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'modules')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'deploy')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'dashboards')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "supportsHttpsTrafficOnly": true
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "condition": "[not(parameters('createNewStorageAccount'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('existingstorage-depl-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17947763426648198191"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'discovery')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'amba')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": false
                }
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('createNewLogAnalyticsWS')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('newLogAnalyticsWSName')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13376729168955437095"
            }
          },
          "parameters": {
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            }
          ],
          "outputs": {
            "customerId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]"
            },
            "lawresourceid": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "condition": "[parameters('deployDiscovery')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('DeployDiscovery-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "dceId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.dceId.value]"
          },
          "imageGalleryName": {
            "value": "[variables('ImageGalleryName')]"
          },
          "lawResourceId": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName'))), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "storageAccountname": {
            "value": "[parameters('storageAccountName')]"
          },
          "tableName": {
            "value": "Discovery"
          },
          "resultstableName": {
            "value": "DiscoveryResults"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          },
          "solutionVersion": {
            "value": "[variables('solutionVersion')]"
          },
          "functionName": {
            "value": "[variables('functionName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "11129375307687703410"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "storageAccountname": {
              "type": "string"
            },
            "imageGalleryName": {
              "type": "string"
            },
            "lawResourceId": {
              "type": "string"
            },
            "tableName": {
              "type": "string"
            },
            "resultstableName": {
              "type": "string"
            },
            "dceId": {
              "type": "string"
            },
            "customerTags": {
              "type": "object"
            },
            "instanceName": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "functionName": {
              "type": "string"
            }
          },
          "variables": {
            "solutionTagComponents": "MonitorStarterPacksComponents",
            "tempTags": {
              "[format('{0}', variables('solutionTagComponents'))]": "BackendComponent",
              "solutionVersion": "[parameters('solutionVersion')]",
              "instanceName": "[parameters('instanceName')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
            "tableNameToUse": "[format('{0}_CL', parameters('tableName'))]",
            "resultstableNameToUse": "[format('{0}_CL', parameters('resultstableName'))]",
            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parentname": {
                    "value": "[variables('lawFriendlyName')]"
                  },
                  "tableName": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "retentionDays": {
                    "value": 31
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2081426938105913058"
                    }
                  },
                  "parameters": {
                    "parentname": {
                      "type": "string"
                    },
                    "tableName": {
                      "type": "string"
                    },
                    "retentionDays": {
                      "type": "int",
                      "defaultValue": 31
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                      "apiVersion": "2022-10-01",
                      "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                      "properties": {
                        "totalRetentionInDays": "[parameters('retentionDays')]",
                        "plan": "Analytics",
                        "schema": {
                          "name": "[parameters('tableName')]",
                          "columns": [
                            {
                              "name": "TimeGenerated",
                              "type": "datetime"
                            },
                            {
                              "name": "RawData",
                              "type": "string"
                            }
                          ]
                        },
                        "retentionInDays": "[parameters('retentionDays')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('WinDisc-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "customerTags": {
                    "value": "[parameters('customerTags')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "packtag": {
                    "value": "WinDisc"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "storageAccountname": {
                    "value": "[parameters('storageAccountname')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('lawResourceId')]"
                  },
                  "tableNameToUse": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "18417405353617189310"
                    }
                  },
                  "parameters": {
                    "sasExpiry": {
                      "type": "string",
                      "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "storageAccountname": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "tableNameToUse": {
                      "type": "string"
                    },
                    "customerTags": {
                      "type": "object"
                    },
                    "solutionVersion": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "sasConfig": {
                      "signedResourceTypes": "sco",
                      "signedPermission": "r",
                      "signedServices": "b",
                      "signedExpiry": "[parameters('sasExpiry')]",
                      "signedProtocol": "https",
                      "keyToSign": "key2"
                    },
                    "tempTags": {
                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                      "instanceName": "[parameters('instanceName')]",
                      "MonitoringPackType": "Discovery",
                      "solutionVersion": "[parameters('solutionVersion')]"
                    },
                    "tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                    "appName": "[format('{0}-windiscovery', parameters('instanceName'))]",
                    "appDescription": "Windows Workload discovery",
                    "OS": "Windows",
                    "appVersionName": "1.0.0"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appDescription": {
                            "value": "[variables('appDescription')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "osType": {
                            "value": "[variables('OS')]"
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1322876657246934676"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "aigname": {
                              "type": "string"
                            },
                            "osType": {
                              "type": "string"
                            },
                            "appDescription": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications",
                              "apiVersion": "2024-03-03",
                              "name": "[format('{0}/{1}', parameters('aigname'), parameters('appName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "supportedOSType": "[parameters('osType')]",
                                "description": "[parameters('appDescription')]"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('upload-discovery-{0}', variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "containerName": {
                            "value": "discovery"
                          },
                          "filename": {
                            "value": "discover.zip"
                          },
                          "storageAccountName": {
                            "value": "[parameters('storageAccountname')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "5940884853601689467"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "storageAccountName": {
                              "type": "string"
                            },
                            "filename": {
                              "type": "string"
                            },
                            "containerName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "$fxv#0": "UEsDBBQAAAAIACx3nFqAZr56zAIAAL4HAAAMAAAAZGlzY292ZXIucHMxxZPNTttAEMfvlvwOIycSWMpaVXupInGI0qRQNRARBBcktHgnycJ6190dU1zCk/XQR+orVOuPEL4EiENv9szOf75+8/f3nw5MueUZElpYospBoEutzEkaHQZdW+gjmeHOAokJTghsbGzGCSIThUFnu7XHCRlHVurFdlSWZckmEyYE7O72s6zvXBSHQRh0hXSpuUJbjo0SaHeitH96IrUwP93gV2Hx9Ev7wIuvkz+bZTIRYnfXi8s5bFfPJGEGDxMBG1lr7CD1XcFMKtSkyqHRJHWBcQw3EAYAAFGbE/pwcJk00VxZ5KIEvJaOXAQrMAWxuVQIbcHfzSKhawI2yHPUIgxuIQxQOYSbx8pDi5ykXsC81n9ULtcCXHFeu10SwatS+jTZpZBPCNbOTu2NHrpPlVm46IU3RokoDG6rPc6RU2HR7XxFYs0Cx7VtBSdLtMgOzi8wJbjpniV72hFXakYVP/gDthoLiq1bWMEMFabURuzzDHu+yVzxsv5ppI/K3HswpyV0VjA3Fnm6hJuN2Xa3u2eJD4p71eeGTGPZ0GrfeME4gtuaonVzSWoKTcAWBB/ido0dOCw0yQx7dTUHs15d8ZBXJ9ODY9TC2HtF16FrYVjB2NgRT5frKd210Ds0CnvQDLWucKP8Jk3cm8jUGmfm9LitCPxUDwpiY8/L41XKdvxNlEtSdxW1IAEb6dQIz2dB88/Vzp8jed9A1RU6mJtCi+SVx+Gve2McAyHYBLNzf6n7hnBqTY6Wqr3B1mGdbuu+75irAmFdC5ty546WtoAVjK5zY4ml7sqbafmeEQxmw709YA8KHhp9hZaODPvmjH7rtC+c0VEYdHmeNyeUyYYENlTcOb/+Tx/PptaIIqVnTqQFrUECGny96LvQbWj1Ok+QegfqIM+VTHkV+iKu1V+tH0evxXOQ5+5ksvceOrnv4s1oNr3/RyxfaL2i8h9QSwMEFAAAAAgAJVfFWrUnIkOpAwAAPg4AABEAAABEaXNjb3ZlcnlUYXNrLnhtbJ2XXW/aWBCGn+tK+x8Q92Ag6X4g1lU+thuktBsFqtxwQ7FDrICNbBPC/vi2mjmOsX1MILkCzny/886cw88fAz7xzJIFDZ7wiUkIiAj5myZd2nRo0sAnZEaER0DIXKXfGPOZFl1+p8knXH7jAwPGTEl43Ouxpx5N1JBEzx9ISVnRx8EhYcYDPkv11GZJwIyYiISIe1Lams0Sh41m5BGxIcGhR4cOpzh06OGobYpDmmXVzPJs0GDALT5zAhJSYqakWa5DQu6JCrpG/1J1fFyN0+NE6+/S0l9junTo0+WUPif8RZuPKulwwikDnIKHsucz1qQ8EBHjqmb5pKz9jVuGuEy41OwFDYP2Vm1f5LtKnTfUKj2MCZgzzzpYjX/BlIWywmNKXNEvaxuLkXYgJuWciHVuuT2Apcj62lOp4TUvdsx/CJnyXTP1cLXuNb56qsrqMjYs9Fir1jlb7V5drB07tiSKqPQ45klxcunmva+X29Gdo+OL7rH9EN39vR1wozKZ9YCV+rR7b+s0CPB0joucLU5akbmJxh0q6iPteYuP+vlnxt2ihu3hVvt+ja+MF/SutB7BSrh9pqgGLPL+GvZXraoY2nWVcXsdG+GLr1vMbEgbty/aR5GvNCthgeQ7VZ+S+w0RC9110uMhc0JF0ucrPhvN4q1eqvtL5l9yX+jG3M3TkHv+I+RcN4NhZ6D+ynPzPg/lLMQmYqUW/xJliB0T/W2W1Q37kvOVZuwxVm25IcJ8KxejHWdh12bwuFNGhjV8dLnP+LOr6rBNOY7hs1S+YKt4CEdSNsqYxyOivsdDOQeZUDl/nfnlnku8FzvZwdW9/Jpe3S4wM2/QK9rY1e7XrG6C4+oqMmpU8nyZvV3s6o6zKEd57y020L3o4SmjqniUZYe4tR/V/Zpln3dMecRnTJRZVX3VaVSReMZnpneMebuMCVjic62f8tJzudG3w1WGzzEWdfebzIBIZYf+Udj/xfPi7bCfK8KTWR4/ocGFfpPt8Ux68N7c1V03AeJrWeDOBX0m3JVexRNG+u6QiEtO6FkacmdsdLeNdAMJSyc8Zf8AJqxyeZLL25q/6V01CzvPM2LmrBV7qV0QavGVSHGVV71sGp9GdnpNxJwo/23eqWa/TzM85SYXud3l4h3Y0JeT3NiJot/icx6rWYvXGf+z1nu37n1tn7VZkdClmc24XamNx122ZQ1fxKPEk7rkXNj19szMFB3yW912NrtMFUXOvvy3k9ej+R/l8gtQSwMEFAAAAAgAV3o/Wg+jY0EwAQAA2wEAAAsAAABpbnN0YWxsLnBzMW2QvW7CMBzE90h5h1NgKINTdUXqEFGY+oEKlTpksew/wYpjR7YDCbRP1qGP1FeoSCFSq66n+53u7uvjc4SZIx4IUnlhd+Q6bKyW5OJofHeRFr1ym4hpvldG2r3PDo2jfDAkcaQ2uLoqKDAVqMJY/mbB5s5Zl4mgrMFKaTJBdzNrgjINTSY4Io4AIBm7xqxVRZjiqUzPNNeOuOxArfLBJ3iDbQLbKE24dLi3RRraAJbVNRkZR+9xRNoTjj/BVSmVw99NvW00b2tuJMuc2KodIc0v7dODquNI2Lob/klrf/NPzDMVygdybCW2JBtNcs19CfZaafS3CGsCmYD0emBPjrSt9HmOD06ZYgJ20h95RUgerPGBOyy5KP0wtUvAFtYJAnvx5LDq/OnznlvysEWSJ99QSwECFAAUAAAACAAsd5xagGa+eswCAAC+BwAADAAAAAAAAAAAAAAAAAAAAAAAZGlzY292ZXIucHMxUEsBAhQAFAAAAAgAJVfFWrUnIkOpAwAAPg4AABEAAAAAAAAAAAAAAAAA9gIAAERpc2NvdmVyeVRhc2sueG1sUEsBAhQAFAAAAAgAV3o/Wg+jY0EwAQAA2wEAAAsAAAAAAAAAAAAAAAAAzgYAAGluc3RhbGwucHMxUEsFBgAAAAADAAMAsgAAACcIAAAAAA==",
                            "discoveryContainerName": "discovery",
                            "tempfilename": "download.tmp"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "deployscript-windiscover",
                              "tags": "[parameters('tags')]",
                              "location": "[parameters('location')]",
                              "kind": "AzureCLI",
                              "properties": {
                                "azCliVersion": "2.42.0",
                                "timeout": "PT5M",
                                "retentionInterval": "PT1H",
                                "environmentVariables": [
                                  {
                                    "name": "AZURE_STORAGE_ACCOUNT",
                                    "value": "[parameters('storageAccountName')]"
                                  },
                                  {
                                    "name": "AZURE_STORAGE_KEY",
                                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                                  },
                                  {
                                    "name": "CONTENT",
                                    "value": "[variables('$fxv#0')]"
                                  }
                                ],
                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                              }
                            }
                          ],
                          "outputs": {
                            "fileURL": {
                              "type": "string",
                              "value": "[format('{0}{1}/{2}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}-App', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "appVersionName": {
                            "value": "[variables('appVersionName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "targetRegion": {
                            "value": "[parameters('location')]"
                          },
                          "mediaLink": {
                            "value": "[format('{0}?{1}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}', variables('OS'))), '2022-09-01').outputs.fileURL.value, listAccountSAS(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Storage/storageAccounts', parameters('storageAccountname')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                          },
                          "installCommands": {
                            "value": "powershell -command \"ren windiscovery discover.zip; expand-archive ./discover.zip . ; ./install.ps1\""
                          },
                          "removeCommands": {
                            "value": "powershell -command \"Unregister-ScheduledTask -TaskName 'Monstar Packs Discovery' '\\'\""
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          },
                          "packageFileName": {
                            "value": "discover.zip"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "15746020392038745111"
                            }
                          },
                          "parameters": {
                            "aigname": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "appVersionName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "targetRegion": {
                              "type": "string"
                            },
                            "mediaLink": {
                              "type": "string"
                            },
                            "packageFileName": {
                              "type": "string"
                            },
                            "installCommands": {
                              "type": "string"
                            },
                            "removeCommands": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications/versions",
                              "apiVersion": "2024-03-03",
                              "name": "[format('{0}/{1}/{2}', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "publishingProfile": {
                                  "source": {
                                    "mediaLink": "[parameters('mediaLink')]"
                                  },
                                  "manageActions": {
                                    "install": "[parameters('installCommands')]",
                                    "remove": "[parameters('removeCommands')]"
                                  },
                                  "settings": {
                                    "packageFileName": "[parameters('packageFileName')]"
                                  },
                                  "enableHealthCheck": false,
                                  "targetRegions": [
                                    {
                                      "name": "[parameters('targetRegion')]",
                                      "regionalReplicaCount": 1,
                                      "storageAccountType": "Standard_LRS"
                                    }
                                  ],
                                  "replicaCount": 1,
                                  "excludeFromLatest": false,
                                  "storageAccountType": "Standard_LRS"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "appVersionId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Compute/galleries/applications/versions', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}', variables('OS')))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-DCR-{1}Discovery', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "endpointResourceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "filepatterns": {
                            "value": [
                              "C:\\WindowsAzure\\Discovery\\*.csv"
                            ]
                          },
                          "kind": {
                            "value": "Windows"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "lawResourceId": {
                            "value": "[parameters('lawResourceId')]"
                          },
                          "OS": {
                            "value": "Windows"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "tableName": {
                            "value": "[parameters('tableNameToUse')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "packtype": {
                            "value": "Discovery"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "10543326254836805846"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "lawResourceId": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "filepatterns": {
                              "type": "array"
                            },
                            "OS": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "endpointResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the resource id of the data collection endpoint."
                              }
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "streamName": "[format('Custom-{0}', parameters('tableName'))]",
                            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/dataCollectionRules",
                              "apiVersion": "2022-06-01",
                              "name": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                "instanceName": "[parameters('instanceName')]",
                                "MonitoringPackType": "[parameters('packtype')]"
                              },
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "dataSources": {
                                  "logFiles": [
                                    {
                                      "streams": [
                                        "[variables('streamName')]"
                                      ],
                                      "filePatterns": "[parameters('filepatterns')]",
                                      "format": "text",
                                      "settings": {
                                        "text": {
                                          "recordStartTimestampFormat": "ISO 8601"
                                        }
                                      },
                                      "name": "[parameters('tableName')]"
                                    }
                                  ]
                                },
                                "destinations": {
                                  "logAnalytics": [
                                    {
                                      "workspaceResourceId": "[parameters('lawResourceId')]",
                                      "name": "[variables('lawFriendlyName')]"
                                    }
                                  ]
                                },
                                "dataFlows": [
                                  {
                                    "streams": [
                                      "[variables('streamName')]"
                                    ],
                                    "destinations": [
                                      "[variables('lawFriendlyName')]"
                                    ],
                                    "transformKql": "source",
                                    "outputStream": "[variables('streamName')]"
                                  }
                                ],
                                "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                "streamDeclarations": {
                                  "[format('{0}', variables('streamName'))]": {
                                    "columns": [
                                      {
                                        "name": "TimeGenerated",
                                        "type": "datetime"
                                      },
                                      {
                                        "name": "RawData",
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ruleId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS')))]"
                            },
                            "ruleName": {
                              "type": "string",
                              "value": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('LxDisc-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "storageAccountname": {
                    "value": "[parameters('storageAccountname')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('lawResourceId')]"
                  },
                  "tableNameToUse": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "packtag": {
                    "value": "LxDisc"
                  },
                  "customerTags": {
                    "value": "[parameters('customerTags')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "13801060554999667818"
                    }
                  },
                  "parameters": {
                    "packtag": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "storageAccountname": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "tableNameToUse": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "customerTags": {
                      "type": "object"
                    },
                    "instanceName": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "sasExpiry": {
                      "type": "string",
                      "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                    }
                  },
                  "variables": {
                    "filename": "discover.tar",
                    "tempTags": {
                      "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                      "instanceName": "[parameters('instanceName')]",
                      "MonitoringPackType": "Discovery",
                      "solutionVersion": "[parameters('solutionVersion')]"
                    },
                    "tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                    "appName": "[format('{0}-LxDiscovery', parameters('instanceName'))]",
                    "appDescription": "Linux Workload discovery",
                    "OS": "Linux",
                    "appVersionName": "1.0.0",
                    "sasConfig": {
                      "signedResourceTypes": "sco",
                      "signedPermission": "r",
                      "signedServices": "b",
                      "signedExpiry": "[parameters('sasExpiry')]",
                      "signedProtocol": "https",
                      "keyToSign": "key2"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}-{2}', parameters('instanceName'), variables('OS'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appDescription": {
                            "value": "[variables('appDescription')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "osType": {
                            "value": "[variables('OS')]"
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1322876657246934676"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "aigname": {
                              "type": "string"
                            },
                            "osType": {
                              "type": "string"
                            },
                            "appDescription": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications",
                              "apiVersion": "2024-03-03",
                              "name": "[format('{0}/{1}', parameters('aigname'), parameters('appName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "supportedOSType": "[parameters('osType')]",
                                "description": "[parameters('appDescription')]"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('upload-discovery-{0}-{1}-{2}', variables('OS'), parameters('instanceName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "containerName": {
                            "value": "discovery"
                          },
                          "filename": {
                            "value": "[variables('filename')]"
                          },
                          "storageAccountName": {
                            "value": "[parameters('storageAccountname')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "16188282944346686318"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "storageAccountName": {
                              "type": "string"
                            },
                            "filename": {
                              "type": "string"
                            },
                            "containerName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "$fxv#0": "Y3JvbnRhYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDY2NiAAMDAwMDAwIAAwMDAwMDAgADAwMDAwMDAwMDYxIDE0NzQ3MjMwMDQ2IDAxMDYwNwAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhcgAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwIDAgKiAqICogL29wdC9taWNyb3NvZnQvZGlzY292ZXJ5L2Rpc2NvdmVyeS5zaA0KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRpc2NvdmVyeS5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDA2NjYgADAwMDAwMCAAMDAwMDAwIAAwMDAwMDAwMDMzNSAxNTAxNjEzNTY1NyAwMTE2MDUAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIAMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwIAAwMDAwMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyBSdW50aW1lLFR5cGUsIE9TLCBOYW1lLFZlcnNpb24KZHBrZyAtLWxpc3QgfCBhd2sgJy9eaWkvIHtwcmludCBzdHJmdGltZSgiJVktJW0tJWRUJUg6JU06JVMleiIpLCJhcHBsaWNhdGlvbiIsIkxpbnV4IiwkMiwkM30nIHwgc29ydCB8IHNlZCAncy8gLywvZycgfCBzZWQgJzFpIG5hbWUsdmVyc2lvbicgPj4gL29wdC9taWNyb3NvZnQvZGlzY292ZXJ5L2Rpc2NvdmVyZWRhcHBzLmNzdgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpbnN0YWxsLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNjY2IAAwMDAwMDAgADAwMDAwMCAAMDAwMDAwMDEwMzMgMTUwMTYxMzU2NTYgMDExMjM3ACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyADAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMCAAMDAwMDAwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9iYXNoCnNldCAtZQoKaWYgWyAhIC1kICIvb3B0L21pY3Jvc29mdC9kaXNjb3ZlcnkiIF07IHRoZW4KICAgIHN1ZG8gbWtkaXIgLXAgL29wdC9taWNyb3NvZnQvZGlzY292ZXJ5CmZpCgppZiBbICEgLWYgIi4vZGlzY292ZXJ5LnNoIiBdIHx8IFsgISAtZiAiLi91bmluc3RhbGwuc2giIF0gfHwgWyAhIC1mICIuL2Nyb250YWIiIF07IHRoZW4KICAgIGVjaG8gIlJlcXVpcmVkIGZpbGVzIChkaXNjb3Zlcnkuc2gsIHVuaW5zdGFsbC5zaCwgY3JvbnRhYikgbm90IGZvdW5kIGluIGN1cnJlbnQgZGlyZWN0b3J5LiIKICAgIGV4aXQgMQpmaQoKc3VkbyBjcCAuL2Rpc2NvdmVyeS5zaCAvb3B0L21pY3Jvc29mdC9kaXNjb3ZlcnkKc3VkbyBjcCAuL3VuaW5zdGFsbC5zaCAvb3B0L21pY3Jvc29mdC9kaXNjb3ZlcnkKY2F0IC4vY3JvbnRhYiB8IGNyb250YWIgLQpzdWRvIGNobW9kIDc1NSAvb3B0L21pY3Jvc29mdC9kaXNjb3ZlcnkvZGlzY292ZXJ5LnNoCnN1ZG8gY2htb2QgNzU1IC9vcHQvbWljcm9zb2Z0L2Rpc2NvdmVyeS91bmluc3RhbGwuc2gbmluc3RhbGwuc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNjY2IAAwMDAwMDAgADAwMDAwMCAAMDAwMDAwMDAxMzIgMTUwMTYxMzU2NTUgMDExNjAwACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyADAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMCAAMDAwMDAwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMgY29tbWFuZCB0byByZW1vdmUgdGhlIGVudHJ5IGZyb20gY3JvbnRhYgpjcm9udGFiIC1sIHwgZ3JlcCAtdiAnZGlzY292ZXJ5LnNoJyB8IGNyb250YWIg
                            "discoveryContainerName": "discovery",
                            "tempfilename": "download.tmp"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "deployscript-MonstarPacks",
                              "tags": "[parameters('tags')]",
                              "location": "[parameters('location')]",
                              "kind": "AzureCLI",
                              "properties": {
                                "azCliVersion": "2.42.0",
                                "timeout": "PT5M",
                                "retentionInterval": "PT1H",
                                "environmentVariables": [
                                  {
                                    "name": "AZURE_STORAGE_ACCOUNT",
                                    "value": "[parameters('storageAccountName')]"
                                  },
                                  {
                                    "name": "AZURE_STORAGE_KEY",
                                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                                  },
                                  {
                                    "name": "CONTENT",
                                    "value": "[variables('$fxv#0')]"
                                  }
                                ],
                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                              }
                            }
                          ],
                          "outputs": {
                            "fileURL": {
                              "type": "string",
                              "value": "[format('{0}{1}/{2}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}-App-{2}', parameters('instanceName'), variables('OS'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "appVersionName": {
                            "value": "[variables('appVersionName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "targetRegion": {
                            "value": "[parameters('location')]"
                          },
                          "mediaLink": {
                            "value": "[format('{0}?{1}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}-{1}-{2}', variables('OS'), parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value, listAccountSAS(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Storage/storageAccounts', parameters('storageAccountname')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                          },
                          "installCommands": {
                            "value": "[format('tar -xvf {0} && chmod +x ./install.sh && ./install.sh', variables('filename'))]"
                          },
                          "removeCommands": {
                            "value": "/opt/microsoft/discovery/uninstall.sh"
                          },
                          "tags": {
                            "value": "[variables('tags')]"
                          },
                          "packageFileName": {
                            "value": "[variables('filename')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "15746020392038745111"
                            }
                          },
                          "parameters": {
                            "aigname": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "appVersionName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "targetRegion": {
                              "type": "string"
                            },
                            "mediaLink": {
                              "type": "string"
                            },
                            "packageFileName": {
                              "type": "string"
                            },
                            "installCommands": {
                              "type": "string"
                            },
                            "removeCommands": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications/versions",
                              "apiVersion": "2024-03-03",
                              "name": "[format('{0}/{1}/{2}', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "publishingProfile": {
                                  "source": {
                                    "mediaLink": "[parameters('mediaLink')]"
                                  },
                                  "manageActions": {
                                    "install": "[parameters('installCommands')]",
                                    "remove": "[parameters('removeCommands')]"
                                  },
                                  "settings": {
                                    "packageFileName": "[parameters('packageFileName')]"
                                  },
                                  "enableHealthCheck": false,
                                  "targetRegions": [
                                    {
                                      "name": "[parameters('targetRegion')]",
                                      "regionalReplicaCount": 1,
                                      "storageAccountType": "Standard_LRS"
                                    }
                                  ],
                                  "replicaCount": 1,
                                  "excludeFromLatest": false,
                                  "storageAccountType": "Standard_LRS"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "appVersionId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Compute/galleries/applications/versions', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}-{2}', parameters('instanceName'), variables('OS'), parameters('location')))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}-{1}-{2}', variables('OS'), parameters('instanceName'), parameters('location')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('LinuxDiscoveryDCR-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "endpointResourceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "filepatterns": {
                            "value": [
                              "/opt/microsoft/discovery/*.csv"
                            ]
                          },
                          "kind": {
                            "value": "Linux"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "lawResourceId": {
                            "value": "[parameters('lawResourceId')]"
                          },
                          "OS": {
                            "value": "Linux"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "tableName": {
                            "value": "[parameters('tableNameToUse')]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "packtype": {
                            "value": "Discovery"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "10543326254836805846"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "lawResourceId": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "filepatterns": {
                              "type": "array"
                            },
                            "OS": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "endpointResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the resource id of the data collection endpoint."
                              }
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "streamName": "[format('Custom-{0}', parameters('tableName'))]",
                            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/dataCollectionRules",
                              "apiVersion": "2022-06-01",
                              "name": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                "instanceName": "[parameters('instanceName')]",
                                "MonitoringPackType": "[parameters('packtype')]"
                              },
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "dataSources": {
                                  "logFiles": [
                                    {
                                      "streams": [
                                        "[variables('streamName')]"
                                      ],
                                      "filePatterns": "[parameters('filepatterns')]",
                                      "format": "text",
                                      "settings": {
                                        "text": {
                                          "recordStartTimestampFormat": "ISO 8601"
                                        }
                                      },
                                      "name": "[parameters('tableName')]"
                                    }
                                  ]
                                },
                                "destinations": {
                                  "logAnalytics": [
                                    {
                                      "workspaceResourceId": "[parameters('lawResourceId')]",
                                      "name": "[variables('lawFriendlyName')]"
                                    }
                                  ]
                                },
                                "dataFlows": [
                                  {
                                    "streams": [
                                      "[variables('streamName')]"
                                    ],
                                    "destinations": [
                                      "[variables('lawFriendlyName')]"
                                    ],
                                    "transformKql": "source",
                                    "outputStream": "[variables('streamName')]"
                                  }
                                ],
                                "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                "streamDeclarations": {
                                  "[format('{0}', variables('streamName'))]": {
                                    "columns": [
                                      {
                                        "name": "TimeGenerated",
                                        "type": "datetime"
                                      },
                                      {
                                        "name": "RawData",
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ruleId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS')))]"
                            },
                            "ruleName": {
                              "type": "string",
                              "value": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('results{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parentname": {
                    "value": "[variables('lawFriendlyName')]"
                  },
                  "tableName": {
                    "value": "[variables('resultstableNameToUse')]"
                  },
                  "retentionDays": {
                    "value": 31
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "1255332294702827265"
                    }
                  },
                  "parameters": {
                    "parentname": {
                      "type": "string"
                    },
                    "tableName": {
                      "type": "string"
                    },
                    "retentionDays": {
                      "type": "int",
                      "defaultValue": 31
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                      "apiVersion": "2022-10-01",
                      "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                      "properties": {
                        "totalRetentionInDays": "[parameters('retentionDays')]",
                        "plan": "Analytics",
                        "schema": {
                          "name": "[parameters('tableName')]",
                          "columns": [
                            {
                              "name": "TimeGenerated",
                              "type": "datetime"
                            },
                            {
                              "name": "Tag",
                              "type": "string"
                            },
                            {
                              "name": "ResourceId",
                              "type": "string"
                            },
                            {
                              "name": "OS",
                              "type": "string"
                            },
                            {
                              "name": "Location",
                              "type": "string"
                            }
                          ]
                        },
                        "retentionInDays": "[parameters('retentionDays')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('DiscoveryResults-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceResourceId": {
                    "value": "[parameters('lawResourceId')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "ruleName": {
                    "value": "[format('discoveryResults-{0}', variables('lawFriendlyName'))]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "tableName": {
                    "value": "[variables('resultstableNameToUse')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8830504372643311254"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "workspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "ruleName": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "tableName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "streamname": "[format('Custom-{0}', parameters('tableName'))]",
                    "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2023-03-11",
                      "name": "[format('{0}-discovery', parameters('ruleName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "description": "Data collection rule for workload discovery.",
                        "dataCollectionEndpointId": "[parameters('dceId')]",
                        "streamDeclarations": {
                          "[format('{0}', variables('streamname'))]": {
                            "columns": [
                              {
                                "name": "TimeGenerated",
                                "type": "datetime"
                              },
                              {
                                "name": "Tag",
                                "type": "string"
                              },
                              {
                                "name": "ResourceId",
                                "type": "string"
                              },
                              {
                                "name": "OS",
                                "type": "string"
                              },
                              {
                                "name": "Location",
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                              "name": "[variables('wsfriendlyname')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "[format('{0}', variables('streamname'))]"
                            ],
                            "destinations": [
                              "[variables('wsfriendlyname')]"
                            ],
                            "transformKql": "source | project TimeGenerated, Tag, ResourceId, OS, Location",
                            "outputStream": "[variables('streamname')]"
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "RuleId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-discovery', parameters('ruleName')))]"
                    },
                    "dcrImmutableId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-discovery', parameters('ruleName'))), '2023-03-11').immutableId]"
                    },
                    "streamName": {
                      "type": "string",
                      "value": "[variables('streamname')]"
                    },
                    "tableName": {
                      "type": "string",
                      "value": "[format('{0}-discovery', parameters('ruleName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('results{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('updateSiteConfig-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "functionName": {
                    "value": "[parameters('functionName')]"
                  },
                  "appSettings": {
                    "value": {
                      "discoveryDCRImmutableId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('DiscoveryResults-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.dcrImmutableId.value]",
                      "DiscoveryResultsTableName": "[variables('resultstableNameToUse')]"
                    }
                  },
                  "currentAppSettings": {
                    "value": "[list(resourceId(parameters('subscriptionId'), parameters('resourceGroupName'), 'Microsoft.Web/sites/config', parameters('functionName'), 'appsettings'), '2024-04-01').properties]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "14660183399238099724"
                    }
                  },
                  "parameters": {
                    "functionName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the function app."
                      }
                    },
                    "appSettings": {
                      "type": "object",
                      "metadata": {
                        "description": "The new application settings to be added or updated."
                      }
                    },
                    "currentAppSettings": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('functionName'), 'appsettings')]",
                      "properties": "[union(parameters('currentAppSettings'), parameters('appSettings'))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('DiscoveryResults-{0}-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "condition": "[and(parameters('newGrafana'), parameters('deployGrafana'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('azureManagedGrafana-{0}', parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "location": {
            "value": "[parameters('grafanaLocation')]"
          },
          "grafanaName": {
            "value": "[parameters('grafanaName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17298094867159064977"
            }
          },
          "parameters": {
            "grafanaName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "solutionTag": {
              "type": "string"
            },
            "instanceName": {
              "type": "string"
            }
          },
          "variables": {
            "ReaderRoleId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "LogAnalyticsContribuorRoleId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
            "MonitoringContributorRoleId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa"
          },
          "resources": [
            {
              "type": "Microsoft.Dashboard/grafana",
              "apiVersion": "2022-08-01",
              "name": "[parameters('grafanaName')]",
              "tags": "[parameters('Tags')]",
              "sku": {
                "name": "Standard"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMGRReadP_{0}_{1}', parameters('grafanaName'), parameters('instanceName'))]",
              "subscriptionId": "[subscription().subscriptionId]",
              "location": "[resourceGroup().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('ReaderRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Reader"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "12046791720435112264"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMGLAWP-{0}_{1}', parameters('grafanaName'), parameters('instanceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('LogAnalyticsContribuorRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Log Analytics Contributor"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "18441567381332934980"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMGMonP_{0}_{1}', parameters('grafanaName'), parameters('instanceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('MonitoringContributorRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Monitor Contributor Role"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "18441567381332934980"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            }
          ],
          "outputs": {
            "grafanaId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName')))]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('MonitoringPacks-backend-{0}', parameters('instanceName'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsLocation": {
            "value": "[parameters('appInsightsLocation')]"
          },
          "functionname": {
            "value": "[variables('functionName')]"
          },
          "lawresourceid": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName'))), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "imageGalleryName": {
            "value": "[variables('ImageGalleryName')]"
          },
          "logicappname": {
            "value": "[variables('logicAppName')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          },
          "collectTelemetry": {
            "value": "[parameters('collectTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "14755242866713712078"
            }
          },
          "parameters": {
            "functionname": {
              "type": "string",
              "metadata": {
                "description": "The name for the function app that you wish to create"
              }
            },
            "logicappname": {
              "type": "string"
            },
            "instanceName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "lawresourceid": {
              "type": "string"
            },
            "appInsightsLocation": {
              "type": "string"
            },
            "Tags": {
              "type": "object",
              "metadata": {
                "description": "UTC timestamp used to create distinct deployment scripts for each deployment"
              }
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "imageGalleryName": {
              "type": "string"
            },
            "collectTelemetry": {
              "type": "bool"
            }
          },
          "variables": {
            "$fxv#0": "{\r\n  \"customerUsageAttribution\": {\r\n    \"SolutionIdentifier\": \"pid-be73d263-1f29-42ad-adf2-253234454db6\"\r\n  }\r\n}",
            "packPolicyRoleDefinitionIds": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ],
            "backendFunctionRoleDefinitionIds": [
              "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
              "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
              "48b40c6e-82e0-4eb3-90d5-19e40f49b624",
              "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
              "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "36243c78-bf99-498c-9df9-86d9f8d28608",
              "f1a07417-d97a-45cb-824c-7a7467783830",
              "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
              "3913510d-42f4-4e42-8a64-420c390055eb",
              "641177b8-a67a-45b9-a033-47bc880bb21e"
            ],
            "logicappRequiredRoleassignments": [
              "4633458b-17de-408a-b874-0445c86b69e6"
            ],
            "telemetryInfo": "[json(variables('$fxv#0'))]"
          },
          "resources": [
            {
              "condition": "[parameters('collectTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('telemetryInfo').customerUsageAttribution.SolutionIdentifier]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "16208364426447542075"
                    }
                  },
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('imageGalleryName')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "galleryname": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2475307255965847113"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "galleryname": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/galleries",
                      "apiVersion": "2022-03-03",
                      "name": "[parameters('galleryname')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "description": "Monitoring gallery"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('functionname')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "amgdStorageURL": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amgdupload-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.amgdstorageURL.value]"
                  },
                  "packsURL": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('PacksDefStorage-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value]"
                  },
                  "ambaJsonURL": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('ambaAlertsUpload-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value]"
                  },
                  "appInsightsLocation": {
                    "value": "[parameters('appInsightsLocation')]"
                  },
                  "functionname": {
                    "value": "[parameters('functionname')]"
                  },
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "userManagedIdentity": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "userManagedIdentityClientId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                  },
                  "packsUserManagedId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "packsModulesRootURL": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('modulesstorage-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.modulesURL.value]"
                  },
                  "applicationsURL": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('applicationstostorage-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.applicationsURL.value]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "5246552310212000034"
                    }
                  },
                  "parameters": {
                    "functionname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "userManagedIdentity": {
                      "type": "string"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string"
                    },
                    "packsUserManagedId": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "filename": {
                      "type": "string",
                      "defaultValue": "backend.zip"
                    },
                    "sasExpiry": {
                      "type": "string",
                      "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                    },
                    "lawresourceid": {
                      "type": "string"
                    },
                    "appInsightsLocation": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "packsURL": {
                      "type": "string"
                    },
                    "ambaJsonURL": {
                      "type": "string"
                    },
                    "packsModulesRootURL": {
                      "type": "string"
                    },
                    "applicationsURL": {
                      "type": "string"
                    },
                    "amgdStorageURL": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "apiManagementKey": {
                      "type": "string",
                      "defaultValue": "[base64(newGuid())]"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "deploymentContainerName": "deploy",
                    "tempfilename": "[format('{0}.tmp', parameters('filename'))]",
                    "sasConfig": {
                      "signedResourceTypes": "sco",
                      "signedPermission": "r",
                      "signedServices": "b",
                      "signedExpiry": "[parameters('sasExpiry')]",
                      "signedProtocol": "https",
                      "keyToSign": "key2"
                    },
                    "keyName": "monitoringKey"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('deployscript-Function-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "AZURE_STORAGE_KEY",
                            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('deploymentContainerName'), parameters('filename'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/config', parameters('functionname'), 'appsettings')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}-farm', parameters('functionname'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "sku": {
                        "name": "Y1",
                        "tier": "Dynamic",
                        "size": "Y1",
                        "family": "Y",
                        "capacity": 0
                      },
                      "kind": "functioapp",
                      "properties": {
                        "perSiteScaling": false,
                        "elasticScaleEnabled": false,
                        "maximumElasticWorkerCount": 1,
                        "isSpot": false,
                        "reserved": false,
                        "isXenon": false,
                        "hyperV": false,
                        "targetWorkerCount": 0,
                        "targetWorkerSizeId": 0,
                        "zoneRedundant": false
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2024-04-01",
                      "name": "[parameters('functionname')]",
                      "location": "[parameters('location')]",
                      "kind": "functionapp",
                      "tags": "[parameters('Tags')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentity'))]": {}
                        }
                      },
                      "properties": {
                        "enabled": true,
                        "hostNameSslStates": [
                          {
                            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
                            "sslState": "Disabled",
                            "hostType": "Standard"
                          },
                          {
                            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
                            "sslState": "Disabled",
                            "hostType": "Repository"
                          }
                        ],
                        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]",
                        "reserved": false,
                        "isXenon": false,
                        "hyperV": false,
                        "siteConfig": {
                          "numberOfWorkers": 1,
                          "acrUseManagedIdentityCreds": false,
                          "alwaysOn": false,
                          "ipSecurityRestrictions": [
                            {
                              "ipAddress": "Any",
                              "action": "Allow",
                              "priority": 1,
                              "name": "Allow all",
                              "description": "Allow all access"
                            }
                          ],
                          "scmIpSecurityRestrictions": [
                            {
                              "ipAddress": "Any",
                              "action": "Allow",
                              "priority": 1,
                              "name": "Allow all",
                              "description": "Allow all access"
                            }
                          ],
                          "http20Enabled": false,
                          "functionAppScaleLimit": 200,
                          "minimumElasticInstanceCount": 0,
                          "minTlsVersion": "1.2",
                          "cors": {
                            "allowedOrigins": [
                              "https://portal.azure.com"
                            ],
                            "supportCredentials": true
                          }
                        },
                        "scmSiteAlsoStopped": false,
                        "clientAffinityEnabled": false,
                        "clientCertEnabled": false,
                        "clientCertMode": "Required",
                        "hostNamesDisabled": false,
                        "containerSize": 1536,
                        "dailyMemoryTimeQuota": 0,
                        "httpsOnly": true,
                        "redundancyMode": "None",
                        "storageAccountRequired": false,
                        "keyVaultReferenceIdentity": "SystemAssigned"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', parameters('functionname'), 'appsettings')]",
                      "properties": {
                        "MSI_CLIENT_ID": "[parameters('userManagedIdentityClientId')]",
                        "PacksUserManagedId": "[parameters('packsUserManagedId')]",
                        "InstanceName": "[parameters('instanceName')]",
                        "AMBAJsonURL": "[parameters('ambaJsonURL')]",
                        "PacksURL": "[parameters('packsURL')]",
                        "PacksModulesRootURL": "[parameters('packsModulesRootURL')]",
                        "applicationsURL": "[parameters('applicationsURL')]",
                        "amgdStorageURL": "[parameters('amgdStorageURL')]",
                        "storageAccountName": "[parameters('storageAccountName')]",
                        "ResourceGroup": "[resourceGroup().name]",
                        "SolutionTag": "[parameters('solutionTag')]",
                        "galleryName": "[parameters('imageGalleryName')]",
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]",
                        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]",
                        "WEBSITE_CONTENTSHARE": "[parameters('storageAccountName')]",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey)]",
                        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                        "subscriptionId": "[parameters('subscriptionId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('functionname'))]",
                        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/extensions",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}', parameters('functionname'), 'MSDeploy')]",
                      "properties": {
                        "packageUri": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, variables('deploymentContainerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]",
                        "[resourceId('Microsoft.Resources/deploymentScripts', format('deployscript-Function-{0}-{1}', parameters('instanceName'), parameters('location')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('functionname')]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('appInsightsLocation')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "publicNetworkAccessForIngestion": "Enabled",
                        "publicNetworkAccessForQuery": "Enabled",
                        "WorkspaceResourceId": "[parameters('lawresourceid')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites/host/functionKeys",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/default/{1}', parameters('functionname'), variables('keyName'))]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "name": "[variables('keyName')]",
                        "value": "[parameters('apiManagementKey')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/config', parameters('functionname'), 'appsettings')]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('ambaAlertsUpload-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amgdupload-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('applicationstostorage-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('imageGalleryName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('modulesstorage-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('PacksDefStorage-{0}-{1}', parameters('instanceName'), parameters('location')))]",
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('logicappname')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "functioname": {
                    "value": "[parameters('functionname')]"
                  },
                  "logicAppName": {
                    "value": "[parameters('logicappname')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "keyvaultid": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))), '2022-09-01').outputs.kvResourceId.value]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "9044725033891192509"
                    }
                  },
                  "parameters": {
                    "functioname": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "location": {
                      "type": "string"
                    },
                    "keyvaultid": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "logicAppName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "keyVaultName": "[split(parameters('keyvaultid'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Logic/workflows",
                      "apiVersion": "2019-05-01",
                      "name": "[parameters('logicAppName')]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "state": "Enabled",
                        "definition": {
                          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "$connections": {
                              "defaultValue": {},
                              "type": "Object"
                            }
                          },
                          "triggers": {
                            "manual": {
                              "type": "Request",
                              "kind": "Http",
                              "inputs": {}
                            }
                          },
                          "actions": {
                            "Get_Secret": {
                              "runAfter": {
                                "Parse_JSON": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('FunctionKey')}/value"
                              }
                            },
                            "Parse_JSON": {
                              "runAfter": {},
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                  "properties": {
                                    "function": {
                                      "type": "string"
                                    },
                                    "functionBody": {
                                      "properties": {},
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Switch": {
                              "runAfter": {
                                "Get_Secret": [
                                  "Succeeded"
                                ]
                              },
                              "cases": {
                                "Case": {
                                  "case": "packmgmt",
                                  "actions": {
                                    "packmgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "Headers": {
                                          "x-functions-key": "[listKeys(resourceId('Microsoft.Web/sites/host', parameters('functioname'), 'default'), '2022-09-01').functionKeys.monitoringKey]"
                                        },
                                        "function": {
                                          "id": "[format('{0}/functions/packmgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_2": {
                                  "case": "alertmgmt",
                                  "actions": {
                                    "alertConfigMgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/alertConfigMgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_4": {
                                  "case": "agentMgmt",
                                  "actions": {
                                    "agentMgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/agentmgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "default": {
                                "actions": {}
                              },
                              "expression": "@body('Parse_JSON')?['Function']",
                              "type": "Switch"
                            }
                          },
                          "outputs": {}
                        },
                        "parameters": {
                          "$connections": {
                            "value": {
                              "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'keyvault')]",
                                "connectionName": "keyvault",
                                "connectionProperties": {
                                  "authentication": {
                                    "type": "ManagedServiceIdentity"
                                  }
                                },
                                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/eastus/managedApis/keyvault', parameters('subscriptionId'))]"
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/connections', 'keyvault')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/connections",
                      "apiVersion": "2018-07-01-preview",
                      "name": "keyvault",
                      "properties": {
                        "displayName": "KeyVault",
                        "authenticatedUser": {},
                        "overallStatus": "Ready",
                        "statuses": [
                          {
                            "status": "Ready"
                          }
                        ],
                        "connectionState": "Enabled",
                        "parameterValueSet": {
                          "name": "oauthMI",
                          "values": {
                            "vaultName": {
                              "value": "[variables('keyVaultName')]"
                            }
                          }
                        },
                        "customParameterValues": {},
                        "createdTime": "2023-10-12T20:52:26.0864876Z",
                        "changedTime": "2023-10-12T20:52:26.0864876Z",
                        "api": {
                          "name": "keyvault",
                          "displayName": "Azure Key Vault",
                          "description": "Azure Key Vault is a service to securely store and access secrets.",
                          "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1656/1.0.1656.3432/keyvault/icon.png",
                          "brandColor": "#0079d6",
                          "category": "Standard",
                          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/keyvault', parameters('subscriptionId'), parameters('location'))]",
                          "type": "Microsoft.Web/locations/managedApis"
                        },
                        "testLinks": [],
                        "testRequests": []
                      },
                      "location": "[parameters('location')]"
                    }
                  ],
                  "outputs": {
                    "logicAppPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '2019-05-01', 'full').identity.principalId]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('functionname'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6)))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('workbook2deployment-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7229675083161647125"
                    }
                  },
                  "parameters": {
                    "Tags": {
                      "type": "object"
                    },
                    "location": {
                      "type": "string"
                    },
                    "lawresourceid": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "version": "Notebook/1.0",
                      "items": [
                        {
                          "type": 1,
                          "content": {
                            "json": "# Azure Monitor Starter Packs - Extended Admin Centre - V3.0 (Preview)\n\n\n"
                          },
                          "customWidth": "50",
                          "name": "textTitle"
                        },
                        {
                          "type": 9,
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                              {
                                "id": "741661c9-5e51-44bc-8e8e-bfc6396f2646",
                                "version": "KqlParameterItem/1.0",
                                "name": "showHelp",
                                "label": "Show Help Info",
                                "type": 10,
                                "isRequired": true,
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[[\n    { \"value\":\"yes\", \"label\":\"Yes\",\"default\": \"yes\" },\n    { \"value\":\"no\", \"label\":\"No\" }\n]",
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "value": "no"
                              },
                              {
                                "version": "KqlParameterItem/1.0",
                                "name": "showHidden",
                                "label": "Show Hidden Items",
                                "type": 10,
                                "isRequired": true,
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[[\n    { \"value\":\"yes\", \"label\":\"Yes\",\"default\": \"yes\" },\n    { \"value\":\"no\", \"label\":\"No\" }\n]",
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "value": "no",
                                "id": "f538abc2-3e09-45aa-a81e-b966a64e0703"
                              }
                            ],
                            "style": "above",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          "customWidth": "50",
                          "name": "showHelpparameter"
                        },
                        {
                          "type": 11,
                          "content": {
                            "version": "LinkItem/1.0",
                            "style": "tabs",
                            "links": [
                              {
                                "id": "a9a63932-4a11-4fe1-938c-02619e609193",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Getting Started",
                                "subTarget": "gettingstarted",
                                "style": "link"
                              },
                              {
                                "id": "4f0ca437-37b0-42f6-a150-e994338f5185",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Status",
                                "subTarget": "status",
                                "style": "link"
                              },
                              {
                                "id": "15f0fa97-4286-48d6-9dea-26a956197d26",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Servers",
                                "subTarget": "discovery",
                                "style": "link"
                              },
                              {
                                "id": "c5269422-e723-43b6-b923-8bf44fd49320",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Services",
                                "subTarget": "paas",
                                "style": "link"
                              },
                              {
                                "id": "7499a88f-a536-41d7-9b58-9ebae1b5290e",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Alert Rules",
                                "subTarget": "alertmanagement",
                                "style": "link"
                              },
                              {
                                "id": "c2a67d72-dd46-44ea-adba-b9d70915c607",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Packs",
                                "subTarget": "rulemanagement",
                                "style": "link"
                              },
                              {
                                "id": "d8f7936d-170f-430d-af7d-ac22115a9e38",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Agents",
                                "subTarget": "agentmgmt",
                                "style": "link"
                              },
                              {
                                "id": "afec2944-3bd3-4bd3-8afa-6dc39d0b623a",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Discovery(Prototype)",
                                "subTarget": "autodiscovery",
                                "style": "link"
                              },
                              {
                                "id": "e1f636a4-1593-49ef-bf35-abf708e2be48",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Configuration",
                                "subTarget": "backend",
                                "style": "link"
                              },
                              {
                                "id": "295ed7b4-8237-409a-87d2-1efd439bea97",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Logs",
                                "subTarget": "logs",
                                "style": "link"
                              }
                            ]
                          },
                          "customWidth": "75",
                          "name": "mainLinksTab"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "loadType": "always",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "## General Parameters\n\n### Subscriptions\n\nSelect the Subscriptions that will be used in the Configuration\n\n### Logic App\n\nSelect the logic app to be used. Typically the shoulbe a single one but if more instances exist, select the one for the instance you want to use.\n\n### Function Apps\n\nSelect the Backend Function to be used. Typically the shoulbe a single one but if more instances exist, select the one for the instance you want to use.\n\n### Config Function Key\n\nThis field will be automatically populated once the function is selected.\n\n### Workspace\n\nSelect the Log Analytics Workspace to be used for this instance.\n\n### Azure Managed Grafana\n\nSelect the Azure Managed Grafana if you have deployed one along with the solution.",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - Configuration "
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "04f4ebcc-705a-4c79-a15a-bcba40d8dd51",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "instanceName",
                                      "label": "Instance",
                                      "type": 2,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\r\n| where type =~ 'microsoft.web/sites' and ['kind'] =~ 'functionapp'\r\n| where isnotempty(tags.MonitorStarterPacksComponents)\r\n| project instanceNames=tags.instanceName",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "mcp1"
                                    },
                                    {
                                      "id": "7a778b2c-619d-4f82-bd1c-810f853af6fd",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Subscriptions",
                                      "type": 6,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "multiSelect": true,
                                      "quote": "'",
                                      "delimiter": ",",
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::all"
                                        ],
                                        "includeAll": false,
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "value": [
                                        "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8"
                                      ]
                                    },
                                    {
                                      "id": "16d48fd3-189f-4604-9582-da7cf5c93d7c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "FunctionApps",
                                      "label": "Function Apps",
                                      "type": 5,
                                      "description": "Select the function to provide the access key.",
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\n| where type =~ 'microsoft.web/sites' and ['kind'] =~ 'functionapp'\n| where isnotempty(tags.MonitorStarterPacksComponents)\n| where tags.instanceName == '{instanceName}'\n| project id,name",
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources",
                                      "value": "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourceGroups/rg-MonstarPacks/providers/Microsoft.Web/sites/AMP-mcp1-e315fe54-Function"
                                    },
                                    {
                                      "id": "c9fbafc9-2806-4c24-8d34-18f7cae66299",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "configKey",
                                      "label": "Config Function Key",
                                      "type": 1,
                                      "description": "The function key is fetched automatically from the function selected on the left.",
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"{FunctionApps}/functions/config/listkeys?api-version=2022-03-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.default\",\"columns\":[]}}]}",
                                      "typeSettings": {
                                        "isPassword": true
                                      },
                                      "queryType": 12
                                    },
                                    {
                                      "id": "4552c35d-c26c-4cbf-a4cf-b2e57ff7ee78",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Workspace",
                                      "label": "WorkSpace",
                                      "type": 5,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\n| where type == \"microsoft.operationalinsights/workspaces\"\n| where tags.instanceName =~ '{instanceName}'\n| project id",
                                      "crossComponentResources": [
                                        "value::all"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "queryType": 1,
                                      "value": "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourceGroups/rg-MonstarPacks/providers/Microsoft.OperationalInsights/workspaces/Monstar-LAW"
                                    },
                                    {
                                      "id": "1efb8bbe-532a-491b-b3c4-55f1402ee280",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "logicAppResource",
                                      "label": "Logic App",
                                      "type": 5,
                                      "isRequired": true,
                                      "query": "resources\n| where type == \"microsoft.logic/workflows\" \n| where isnotempty(tags.MonitorStarterPacksComponents)\n| where tags.instanceName =~ '{instanceName}'\n| project Id=id, Name=name",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "resourceTypeFilter": {
                                          "microsoft.logic/workflows": true
                                        },
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourceGroups/rg-MonstarPacks/providers/Microsoft.Logic/workflows/AMP-mcp1-LogicApp"
                                    },
                                    {
                                      "id": "ea93902e-9856-4bd4-998d-ea88378907a7",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "GrafanaInstance",
                                      "label": "Azure Managed Grafana",
                                      "type": 2,
                                      "description": "Select an Azure Managed Grafana instance, if available.",
                                      "isGlobal": true,
                                      "query": "resources\n| where type =~ \"microsoft.dashboard/grafana\"\n| where isnotempty(tags.monitorStarterPacksComponents) or isnotempty(tags.MonitorStarterPacksComponents)\n| where tags.instanceName == '{instanceName}'\n| project id, label=properties.endpoint",
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources",
                                      "value": "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourceGroups/rg-MonstarPacks/providers/Microsoft.Dashboard/grafana/AMSPe315fe54"
                                    },
                                    {
                                      "id": "7961f447-f72b-401d-a26b-283a44e45b2e",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "DefaultAG",
                                      "label": "Default Action Group",
                                      "type": 5,
                                      "isRequired": true,
                                      "query": "resources\r\n| where type == \"microsoft.insights/actiongroups\"\r\n| where properties.enabled == 'true'\r\n| project id",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": []
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourceGroups/rg-Hub/providers/microsoft.insights/actiongroups/Jose"
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources"
                                },
                                "customWidth": "100",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "backend"
                                },
                                "name": "generalParams"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "03340268-1ac8-4d74-a76e-bc37a4bdd45c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "appInsightsName",
                                      "label": "",
                                      "type": 1,
                                      "isRequired": true,
                                      "query": "resources\n| where type == \"microsoft.insights/components\"\n| where name == \"{FunctionApps:name}\"\n| project id",
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources"
                                    },
                                    {
                                      "id": "28744950-d02c-4216-90eb-c4cda7d3fe2c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "AvailIaaSPacksParam",
                                      "type": 1,
                                      "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"Action\",\"value\":\"getavailableIaaSPacks\"}],\"transformers\":null}",
                                      "queryType": 10
                                    },
                                    {
                                      "id": "1bcfe6fb-a77a-4f2d-8f3d-6a44fe5aae05",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "AvailSupportedServices",
                                      "type": 1,
                                      "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices\",\"contentType\":\"text/plain\",\"urlParams\":[],\"transformers\":null}",
                                      "queryType": 10
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 10
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHidden",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "parameters - AvailableIaaSPacks"
                              },
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "f5b4b4b6-c5d7-4941-b807-8a61df48a0f4",
                                      "cellValue": "configTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Resource List",
                                      "subTarget": "resources",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 4"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where (isnotempty(tags.MonitorStarterPacks) or isnotempty(tags.MonitorStarterPacksComponents)) and (tags.instanceName == '{instanceName}')\n|union ( \npolicyresources | where isnotempty(properties.metadata.MonitorStarterPacks))\n| summarize count() by type, tostring(tags.instanceName)\n| sort by count_ desc ",
                                  "size": 0,
                                  "title": "Monitoring Packs resources and Components",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "filter": true
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "configTab",
                                  "comparison": "isEqualTo",
                                  "value": "resources"
                                },
                                "name": "Installed Components",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              }
                            ],
                            "exportParameters": true
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "backend"
                          },
                          "name": "ConfigStatusGroup"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
                            "size": 0,
                            "queryType": 10
                          },
                          "conditionalVisibility": {
                            "parameterName": "showHidden",
                            "comparison": "isEqualTo",
                            "value": "yes"
                          },
                          "name": "queryServiceTags - Global"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "# Getting Started\n\n## Instance: <span style=\"color: #0000FF\"> {instanceName} </span>\n\nWelcome to the Azure Monitoring Packs. This workbook was designed to help you configuring the solution. Here you can:\n- Enable/Disable monitoring packs for one or more VMs or services. You may also disable all the monitoring for a specific server or service. This will remove the tags and the rule associations. For services, right now, the alerts won´t be deleted by themselves.\n- Enable/Disable Alerts in bulk. You can also assign a different Action group to one or more alerts or delete the rules**\n- Check policy status and start remediation if required. By clicking in a policy, you can also assign that policy to another scope.\n- Check Monitor pack associations.\n- Review discovered applications (VMs only)\n- Manage agent configuration (install/remove)\n\n## Link to your managed [Grafana]({GrafanaInstance:label}) instance, if you enabled it. Make sure to property set permissions before attemping to access it.\n\n## <span style=\"color: #FF0000\">If this is the first time using this solution, please configure the parameters in the ***Configuration*** tab and save the workbook for proper functionality.</span>\n\n\n## Please check the Monitoring Packs repository for updates. [Azure MONitor STARter Packs](http://github.com/Azure/AzureMonitorStarterPacks)\n## Also check the Azure Monitor Baseline Alerts ([AMBA](http://aka.ms/amba)) website for the details on the alerts.\n\n\n\n\n\n"
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "gettingstarted"
                          },
                          "name": "textGetStarted"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "04e679ee-16ae-46f6-a85b-d47751c0bcca",
                                      "cellValue": "dashTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Active Alerts",
                                      "subTarget": "alerts",
                                      "preText": "",
                                      "style": "link"
                                    },
                                    {
                                      "id": "a4b4c83e-fce7-48e2-95ce-acf12c050eaa",
                                      "cellValue": "dashTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "IaaS Summary",
                                      "subTarget": "iaas",
                                      "style": "link"
                                    },
                                    {
                                      "id": "4e01b5fe-51d5-4ba4-9d3c-6f5b5ef2d93c",
                                      "cellValue": "dashTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Services Summary",
                                      "subTarget": "paas",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 3 - Copy"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## Active Alerts List\n\nThis tab shows all Monitoring Packs related alerts that are currently active.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "text - Summary - Active Alerts"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "alertsmanagementresources\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status,severity=properties.context.context.severity\n| where isnotempty(alertRule)\n| join (resources\n| where type == \"microsoft.insights/scheduledqueryrules\" or type ==\"microsoft.insights/metricalerts\" or type == 'microsoft.insights/activitylogalerts'\n| where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\n| extend alertRule=tolower(tostring(['id']))) on alertRule\n| project id, ['Alert Name']=name,['Details']=['Alert Id'], Status=status, Resource=resourceId, Sev=severity\n| where Status=='Activated'\n",
                                        "size": 0,
                                        "title": "Active Alerts",
                                        "exportedParameters": [
                                          {
                                            "fieldName": "Details",
                                            "parameterName": "selectedAlertId",
                                            "parameterType": 5
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Details",
                                              "formatter": 7,
                                              "formatOptions": {
                                                "linkTarget": "OpenBlade",
                                                "linkLabel": "Details",
                                                "linkIsContextBlade": true,
                                                "bladeOpenContext": {
                                                  "bladeName": "AlertDetails.ReactView",
                                                  "extensionName": "Microsoft_Azure_Monitoring_Alerts",
                                                  "bladeJsonParameters": "{\n    \"alertId\": \"{selectedAlertId}\",\n    \"invokedFrom\": \"CopyLinkFeature\"\n}"
                                                }
                                              }
                                            },
                                            {
                                              "columnMatch": "Status",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "Activated",
                                                    "representation": "up",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "Resource",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": "Resource",
                                                "linkIsContextBlade": true,
                                                "showIcon": true
                                              }
                                            },
                                            {
                                              "columnMatch": "Sev",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "1",
                                                    "representation": "Sev1",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "2",
                                                    "representation": "Sev2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "3",
                                                    "representation": "Sev3",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "4",
                                                    "representation": "Sev4",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "0",
                                                    "representation": "Sev0",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "unknown",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "Alert Id",
                                              "formatter": 7,
                                              "formatOptions": {
                                                "linkTarget": "Resource",
                                                "linkLabel": "Details",
                                                "linkIsContextBlade": true
                                              }
                                            },
                                            {
                                              "columnMatch": "Target",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": null,
                                                "showIcon": true
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "customWidth": "66",
                                      "name": "activeAlertsquery"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "alertsmanagementresources\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status\n| where isnotempty(alertRule)\n| join (resources\n| where type == \"microsoft.insights/scheduledqueryrules\" or type ==\"microsoft.insights/metricalerts\" or type == 'microsoft.insights/activitylogalerts'\n| where isnotempty(tags.MonitorStarterPacks) and tags.instanceName in ({alertsInstance})\n| extend alertRule=tolower(tostring(['id']))) on alertRule\n| summarize count() by AlertType=type\n\n",
                                        "size": 0,
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart"
                                      },
                                      "customWidth": "33",
                                      "name": "activeAlertsQueryPie"
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "dashTab",
                                  "comparison": "isEqualTo",
                                  "value": "alerts"
                                },
                                "name": "groupDashAlerts"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## IaaS Information\n\nThe summary below shows details related to the IaaS Monitoring packs.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "text - Summary - IaaS"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' or type =~ 'microsoft.compute/virtualmachines'\n| extend MonitorStatus=iff(isnotempty(tostring(tags.MonitorStarterPacks)),'Monitored','Not Monitored')\n| where tags.instanceName =~ '{instanceName}'\n| summarize count() by MonitorStatus",
                                        "size": 1,
                                        "title": "Monitoring Status (Tags)",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart",
                                        "chartSettings": {
                                          "seriesLabelSettings": [
                                            {
                                              "seriesName": "Monitored",
                                              "color": "green"
                                            },
                                            {
                                              "seriesName": "Not Monitored",
                                              "color": "orange"
                                            }
                                          ]
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "Monitoring Status Tags",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| where tags.instanceName =~ '{instanceName}'\n| extend\n    JoinID = toupper(id)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| where tags.instanceName =~ '{instanceName}'\n| extend\n    JoinID = toupper(id)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| summarize count() by AgentInstalled=iff(isempty(ExtensionName),\"No\",\"Yes\")",
                                        "size": 1,
                                        "title": "Agent Install Status",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart",
                                        "chartSettings": {
                                          "seriesLabelSettings": [
                                            {
                                              "seriesName": "Yes",
                                              "label": "AMA Installed",
                                              "color": "green"
                                            },
                                            {
                                              "seriesName": "No",
                                              "label": "No AMA",
                                              "color": "red"
                                            }
                                          ]
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "agentInstallStatus",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| where tags.instanceName =~ '{instanceName}'\n| summarize by Pack=MPs,rulename=tostring(name)\n//ruleId=properties.dataCollectionRuleId\n| join (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Associated=count() by Pack\n| sort by Pack asc",
                                        "size": 1,
                                        "title": "Servers/Pack (Association)",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart",
                                        "tileSettings": {
                                          "showBorder": false,
                                          "titleContent": {
                                            "columnMatch": "Pack",
                                            "formatter": 1
                                          },
                                          "leftContent": {
                                            "columnMatch": "Associated",
                                            "formatter": 12,
                                            "formatOptions": {
                                              "palette": "auto"
                                            },
                                            "numberFormat": {
                                              "unit": 17,
                                              "options": {
                                                "maximumSignificantDigits": 3,
                                                "maximumFractionDigits": 2
                                              }
                                            }
                                          }
                                        },
                                        "mapSettings": {
                                          "locInfo": "LatLong",
                                          "sizeSettings": "Associated",
                                          "sizeAggregation": "Sum",
                                          "legendMetric": "Associated",
                                          "legendAggregation": "Sum",
                                          "itemColorSettings": {
                                            "type": "heatmap",
                                            "colorAggregation": "Sum",
                                            "nodeColorField": "Associated",
                                            "heatmapPalette": "greenRed"
                                          }
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "AssociatedResourceStatsperTag - Copy - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' or type =~ 'microsoft.compute/virtualmachines'\n| project name, MPs=tags.MonitorStarterPacks\n| where isnotnull(MPs)\n| mv-expand (split(MPs,','))\n| summarize Total=count() by tostring(MPs)\n| sort by MPs asc\n\n\n",
                                        "size": 1,
                                        "title": "Tagged Resources per Tag",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "tiles",
                                        "tileSettings": {
                                          "titleContent": {
                                            "columnMatch": "MPs",
                                            "formatter": 1
                                          },
                                          "leftContent": {
                                            "columnMatch": "Total",
                                            "formatter": 12,
                                            "formatOptions": {
                                              "palette": "auto"
                                            },
                                            "numberFormat": {
                                              "unit": 17,
                                              "options": {
                                                "style": "decimal",
                                                "maximumFractionDigits": 2,
                                                "maximumSignificantDigits": 3
                                              }
                                            }
                                          },
                                          "showBorder": false
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "taggedResourceStatsperTag",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| where tags.instanceName =~ 'mcp1'\n| summarize by Pack=MPs,rulename=tostring(name)\n| join  (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Associated=count() by Pack\n| sort by Pack asc",
                                        "size": 1,
                                        "title": "Associated Servers per Pack",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "tiles",
                                        "tileSettings": {
                                          "showBorder": false,
                                          "titleContent": {
                                            "columnMatch": "Pack",
                                            "formatter": 1
                                          },
                                          "leftContent": {
                                            "columnMatch": "Associated",
                                            "formatter": 12,
                                            "formatOptions": {
                                              "palette": "auto"
                                            },
                                            "numberFormat": {
                                              "unit": 17,
                                              "options": {
                                                "maximumSignificantDigits": 3,
                                                "maximumFractionDigits": 2
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "AssociatedResourceStatsperTag - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "dashTab",
                                  "comparison": "isEqualTo",
                                  "value": "iaas"
                                },
                                "name": "groupDashboardIaaS"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices&Type=PaaS\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
                                  "size": 0,
                                  "queryType": 10
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "dashTab",
                                    "comparison": "isEqualTo",
                                    "value": "paas"
                                  },
                                  {
                                    "parameterName": "showHidden",
                                    "comparison": "isEqualTo",
                                    "value": "yes"
                                  }
                                ],
                                "name": "queryServiceTags"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices&Type=Platform\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
                                  "size": 0,
                                  "queryType": 10
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "dashTab",
                                    "comparison": "isEqualTo",
                                    "value": "paas"
                                  },
                                  {
                                    "parameterName": "showHidden",
                                    "comparison": "isEqualTo",
                                    "value": "yes"
                                  }
                                ],
                                "name": "queryServiceTags - Platform"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\n| project nameSpace=tolower(strcat(tostring(split(properties.scopes[0],\"/\")[-3]),\"/\",tostring(split(properties.scopes[0],\"/\")[-2]))),Target=split(properties.scopes[0],\"/\")[-1]\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\n| project nameSpace=tolower(strcat(tostring(split(properties.scopes[0],\"/\")[-3]),\"/\",tostring(split(properties.scopes[0],\"/\")[-2]))),Target=split(properties.scopes[0],\"/\")[-1])\n| distinct tostring(Target),nameSpace\n| summarize Total=count() by nameSpace",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "piechart"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "dashTab",
                                  "comparison": "isEqualTo",
                                  "value": "paas"
                                },
                                "name": "query - resourcestomerge - nonIaaS"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "status"
                          },
                          "name": "dashboardgroup"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "## Server Monitoring Setup\n\nSelect servers on the right to assign a pack. Once the backend is done with the assigning, the server will show on the left side grid.\n\nOn the left side grid, the monitoring can be updated to add more packs, as well as to remove a specific pack or remove any monitoring altogether from the server.",
                            "style": "info"
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "tabSelection",
                              "comparison": "isEqualTo",
                              "value": "discovery"
                            },
                            {
                              "parameterName": "showHelp",
                              "comparison": "isEqualTo",
                              "value": "yes"
                            }
                          ],
                          "name": "serversMonitoringHelptext"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Servers - {instanceName} instance",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "When Monitoring is first enabled, the Azure Monitoring Agent will also be installed to the selected servers.",
                                  "style": "info"
                                },
                                "name": "text - 3"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId=tolower(tostring(resourceId))//ruleId=properties.dataCollectionRuleId\n| join kind= inner  (\nresources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| where MPs !in~ ('WinDisc', 'LxDisc')\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| summarize by resourceId, Pack\n| summarize Packs=tostring(make_list(Pack)) by resourceId\n| project Packs2=tostring(Packs), resourceId",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Packs",
                                        "formatter": 1
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHidden",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "showPin": false,
                                "name": "query - associatedVMs"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources | where type =~ 'microsoft.hybridcompute/machines' \n| extend MP=tolower(tags.MonitorStarterPacks), instanceName=tolower(tags.instanceName),state=iff(properties.status =='Connected','On','Off')\n| where isnotempty(MP) and instanceName == '{instanceName}'\n| where MP !in~ ('WinDisc', 'LxDisc')\n//| extend overrides=tags.CustomThresholds\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.osType, subscriptionId, Location=location, state\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| extend MP=tolower(tags.MonitorStarterPacks), instanceName=tolower(tags.instanceName),state=iff(properties.extended.instanceView.powerState.code =='PowerState/running','On','Off')\n| where MP !in~ ('WinDisc', 'LxDisc')\n//| extend overrides=tags.CustomThresholds\n| where isnotempty(MP) and instanceName == '{instanceName}' and (tolower(tags.Vendor) != 'databricks')\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location, state)\n",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Packs",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "OS",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "Subscription",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHidden",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "showPin": false,
                                "name": "query - taggedVMs"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\",\"mergeType\":\"leftouter\",\"leftTable\":\"query - taggedVMs\",\"rightTable\":\"query - associatedVMs\",\"leftColumn\":\"Resource\",\"rightColumn\":\"resourceId\"}],\"projectRename\":[{\"originalName\":\"[query - associatedVMs].Packs2\",\"mergedName\":\"Associations\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].state\",\"mergedName\":\"state\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - associatedVMs].MPs\",\"mergedName\":\"MPs\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Resource Group\",\"mergedName\":\"Resource Group\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Packs\",\"mergedName\":\"Packs\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].OS\",\"mergedName\":\"OS\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Location\",\"mergedName\":\"Location\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].resourceId\",\"mergedName\":\"resourceId\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].instanceName\",\"mergedName\":\"instanceName\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].MP\",\"mergedName\":\"MP\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].overrides\",\"mergedName\":\"overrides\",\"fromId\":\"unknown\"}]}",
                                        "size": 0,
                                        "title": "Monitored Machines",
                                        "showRefreshButton": true,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "taggedVMs",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "queryType": 7,
                                        "visualization": "table",
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Associations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "linkColumn": "Associations",
                                                "linkTarget": "CellDetails",
                                                "linkIsContextBlade": true,
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "is Empty",
                                                    "representation": "cancelled",
                                                    "text": "",
                                                    "tooltipFormat": {
                                                      "tooltip": "{0}{1}"
                                                    }
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "",
                                                    "tooltipFormat": {
                                                      "tooltip": "{0}{1}"
                                                    }
                                                  }
                                                ],
                                                "customColumnWidthSetting": "12.2857ch"
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "Click to see associations."
                                              }
                                            },
                                            {
                                              "columnMatch": "state",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "On",
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "Off",
                                                    "representation": "stopped",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "unknown",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "resourceId",
                                              "formatter": 5
                                            },
                                            {
                                              "columnMatch": "subscriptionId",
                                              "formatter": 15,
                                              "formatOptions": {
                                                "linkTarget": null,
                                                "showIcon": true
                                              }
                                            },
                                            {
                                              "columnMatch": "overrides",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "linkTarget": "CellDetails",
                                                "linkIsContextBlade": true,
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "representation": "cancelled",
                                                    "text": ""
                                                  },
                                                  {
                                                    "operator": "!=",
                                                    "representation": "2",
                                                    "text": ""
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "Associated Packs",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "is Empty",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "showPin": false,
                                      "name": "query-mergeVMs",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "parameters": [
                                          {
                                            "id": "2415a274-9657-4eb6-9179-92c0cdb31728",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTagsLeft",
                                            "label": "Add/Remove",
                                            "type": 2,
                                            "isGlobal": true,
                                            "multiSelect": true,
                                            "quote": "",
                                            "delimiter": ",",
                                            "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"Action\",\"value\":\"getavailableIaaSPacks\"}],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[]}}]}",
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "queryType": 10,
                                            "value": [
                                              "VMI"
                                            ]
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 10
                                      },
                                      "customWidth": "25",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedVMs",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "param-IaaS-tagged"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                            "cellValue": "",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove Monitoring for {PackTagsLeft} Pack(s)",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "removeTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"{PackTagsLeft}\",\n    \"PackType\": \"IaaS\",\n    \"WorkspaceId\": \"{Workspace}\",\n    \"DefaultAG\": \"{DefaultAG}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove Monitoring for {PackTagsLeft} Pack(s) \n\nServers:\n\n{taggedVMs}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "550df977-06a8-4c40-9cd3-aba6286ebcdf",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Add Monitoring for {PackTagsLeft} Pack(s)",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddPack\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"{PackTagsLeft}\",\n    \"PackType\": \"IaaS\",\n    \"WorkspaceId\": \"{Workspace}\",\n    \"DefaultAG\": \"{DefaultAG}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Add Monitoring",
                                              "description": "# Please confirm the change.\n\nAdd Monitoring for {PackTagsLeft} Pack(s)",
                                              "actionName": "AddMonitoringPack",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "3b1af630-47ab-43e9-a5b2-d2f2e21880d0",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove All Monitoring",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"All\",\n    \"PackType\": \"IaaS\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove All Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove ALL Monitoring for Servers, including discovery configuration.",
                                              "actionName": "RemoveAllMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "75",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedVMs",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "links - 1"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "discovery"
                                },
                                "name": "TaggedGroup"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' | where isempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.osType, subscriptionId, Location=location, MP=tolower(tags.MonitorStarterPacks)\n| where isempty(MP) or MP =~ 'LxDisc' or MP =~ 'WinDisc'\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location,MP=tolower(tags.MonitorStarterPacks)\n| where isempty(MP) or MP =~ 'LxDisc' or MP =~ 'WinDisc')\n| union (resources | where type =~ 'microsoft.compute/virtualmachinescalesets' and properties.orchestrationMode == 'Uniform'\n| where isempty(tolower(tags.MonitorStarterPacks)) \n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.virtualMachineProfile.storageProfile.osDisk.osType, subscriptionId, Location=location,MP=tolower(tags.MonitorStarterPacks)\n| where isempty(MP) or MP =~ 'LxDisc' or MP =~ 'WinDisc')\n| join kind= leftouter  (\n    resourcecontainers| where type =~ 'microsoft.resources/subscriptions'\n    | project Subscription=name,subscriptionId\n    ) \non subscriptionId| project-away subscriptionId, subscriptionId1, MP",
                                        "size": 0,
                                        "title": "Non-monitored Machines",
                                        "noDataMessage": "No unmonitored servers. Good job!",
                                        "showRefreshButton": true,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "parameterName": "vmstotag",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "exportToExcelOptions": "all",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources",
                                        "crossComponentResources": [
                                          "{Subscriptions}"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "OS",
                                              "formatter": 1
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "$gen_link_Resource_0",
                                              "sortOrder": 1
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "$gen_link_Resource_0",
                                            "sortOrder": 1
                                          }
                                        ]
                                      },
                                      "name": "Non Monitores Servers",
                                      "styleSettings": {
                                        "margin": "400",
                                        "padding": "400",
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "parameters": [
                                          {
                                            "id": "8a177eab-edac-41cc-84f9-a5b7de931bea",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTags",
                                            "label": "Add Pack(s)",
                                            "type": 2,
                                            "isGlobal": true,
                                            "multiSelect": true,
                                            "quote": "",
                                            "delimiter": ",",
                                            "query": "{\"version\":\"1.0.0\",\"content\":\"{AvailIaaSPacksParam}\",\"transformers\":null}",
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 8,
                                            "value": []
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 8
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "vmstotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "param-IaaS-vmstotag"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Monitoring for {PackTags} Pack",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "addTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddPack\",\n    \"Resources\": [{vmstotag}],\n    \"Pack\": \"{PackTags}\",\n    \"PackType\": \"IaaS\",\n    \"WorkspaceId\" : \"{Workspace}\",\n    \"DefaultAG\" : \"{DefaultAG}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Monitoring Packs",
                                              "description": "# This will enable the pack for the following servers:\n{vmstotag}\n\nby adding the {PackTags} Pack(s) to the resource(s).\n\nWorkspace: {Workspace}\n\nAction Group: {DefaultAG}",
                                              "actionName": "EnableMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "vmstotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "links - 1 - Copy"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "discovery"
                                },
                                "name": "NonTaggedGroup"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "discovery"
                          },
                          "name": "Servers",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Azure Services - {instanceName} instance",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "## Services Monitoring Setup\n\nSelect service on the right to assign a pack. Once the backend is done with the assigning, the service will show on the left side grid.\n\nOn the left side grid, the monitoring can be updated to remove a specific pack from the service.",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - Monitoring - PaaS"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "69e06557-55cc-490c-86d2-892d7817b729",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "SelectPaasType",
                                            "label": "Select Service Type(s)",
                                            "type": 7,
                                            "multiSelect": true,
                                            "quote": "'",
                                            "delimiter": ",",
                                            "query": "resources | where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\r\n| where not(type in~ ('microsoft.compute/virtualmachines','microsoft.hybridcompute/machines',\"microsoft.insights/scheduledqueryrules\",\"microsoft.insights/metricalerts\",\"microsoft.insights/activitylogalerts\",'microsoft.insights/datacollectionrules'))\r\n| project Resource=id, type,tag=tostring(tags.MonitorStarterPacks),resourceGroup, location, subscriptionId, ['kind']\r\n| join kind=fullouter    (resources\r\n    | where tolower(type) in (\"microsoft.insights/metricalerts\",\"microsoft.insights/activitylogalerts\")\r\n    | where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\r\n    | summarize AlertCount=count() by Resource=tostring(properties.scopes[0]), MP=tostring(tags.MonitorStarterPacks)) on Resource\r\n| summarize by Type=['type']",
                                            "crossComponentResources": [
                                              "value::tenant"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [
                                                "value::all"
                                              ],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resources/tenants",
                                            "value": [
                                              "value::all"
                                            ]
                                          }
                                        ],
                                        "style": "above",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants"
                                      },
                                      "name": "parameters - service type tagged"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getMonitoredPaaS\",\"contentType\":\"text/plain\",\"urlParams\":[],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[{\"path\":\"$.Resource\",\"columnid\":\"Resource\"},{\"path\":\"$.type\",\"columnid\":\"Type\"},{\"path\":\"$.tag\",\"columnid\":\"tag\"},{\"path\":\"$.AlertCount\",\"columnid\":\"AlertRules\"},{\"path\":\"$.resourceGroup\",\"columnid\":\"resourceGroup\"},{\"path\":\"$.kind\",\"columnid\":\"kind\"}]}}]}",
                                        "size": 0,
                                        "title": "Monitored Services",
                                        "showRefreshButton": true,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "parameterName": "taggedPaaS",
                                            "parameterType": 1,
                                            "quote": ""
                                          },
                                          {
                                            "fieldName": "tag",
                                            "parameterName": "PaaSLeftTagsOnly",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "exportToExcelOptions": "all",
                                        "queryType": 10,
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "AlertRules",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "0",
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "is Empty",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "warning",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "Total number of alerts created by the policies. It can take a while for the alert rules to be created. If still a warning after a day, please check logs."
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "name": "query - Monitored Services",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                            "cellValue": "",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove Monitoring for {taggedPaaS:$.tag} Pack(s)",
                                            "preText": "",
                                            "postText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "removeTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedPaaS}],\n    \"Pack\": \"{PaaSLeftTagsOnly}\",\n    \"PackType\": \"PaaS\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove Monitoring for Pack(s).\n\nResources:\n\n{taggedPaaS:$.Resource}\n\nTags:\n\n{taggedPaaS:$.tag}",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "75",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedPaaS",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "actionsPaaSLeft"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "name": "TaggedGroupPaaS"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "parameters": [
                                          {
                                            "id": "f6a88467-77d9-4e0e-912a-3d7b94aab938",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "SelectPaaStypeToTag",
                                            "label": "Select Service Type(s)",
                                            "type": 7,
                                            "multiSelect": true,
                                            "quote": "'",
                                            "delimiter": ",",
                                            "query": "{\"version\":\"1.0.0\",\"content\":\"{AvailSupportedServices}\",\"transformers\":null}",
                                            "typeSettings": {
                                              "additionalResourceOptions": [
                                                "value::all"
                                              ],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 8,
                                            "value": [
                                              "value::all"
                                            ]
                                          }
                                        ],
                                        "style": "above",
                                        "queryType": 8
                                      },
                                      "name": "parameters - service type not tagged"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getNonMonitoredPaaS\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"resourceFilter\",\"value\":\"{SelectPaaStypeToTag}\"}],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[{\"path\":\"$.Resource\",\"columnid\":\"Resource\"},{\"path\":\"$.type\",\"columnid\":\"type\"},{\"path\":\"$.location\",\"columnid\":\"location\"},{\"path\":\"$.resourceGroup\",\"columnid\":\"resourceGroup\"},{\"path\":\"$.kind\",\"columnid\":\"kind\"}]}}]}",
                                        "size": 0,
                                        "title": "Non-Monitored Services",
                                        "showRefreshButton": true,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "parameterName": "paastotag",
                                            "parameterType": 1,
                                            "quote": ""
                                          },
                                          {
                                            "fieldName": "type",
                                            "parameterName": "passtotagtype",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "exportToExcelOptions": "all",
                                        "queryType": 10,
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Total",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">=",
                                                    "thresholdValue": "1",
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "<",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "unknown",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "Total number of Alerts assigned to this resource."
                                              }
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "type",
                                              "sortOrder": 1
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "type",
                                            "sortOrder": 1
                                          }
                                        ]
                                      },
                                      "name": "query - nonMonitored Paas - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Monitoring",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "addTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddPack\",\n    \"Resources\": [{paastotag}],\n    \"Pack\": \"{PackTagsPaaS}\",\n    \"PackType\": \"PaaS\",\n    \"Type\": \"{passtotagtype}\",\n    \"DefaultAG\": \"{DefaultAG}\",\n    \"WorkspaceId\": \"{Workspace}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Monitoring Packs",
                                              "description": "# This will enable the pack for the following services:\n***{paastotag:$.Resource}***\n\nby adding the specific Pack(s) to the resource(s).\n\n",
                                              "actionName": "EnableMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "paastotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "platformenableparameters"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "name": "NonTaggedGroup"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "paas"
                          },
                          "name": "PaaSMgmt",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Alerts - {instanceName} instance",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "355de2ec-11fb-4db8-9813-2e0bf7cdb3d0",
                                      "cellValue": "alertTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Packs' Alerts",
                                      "subTarget": "packs",
                                      "style": "link"
                                    },
                                    {
                                      "id": "d1f8bc9e-5a21-47f3-a2b3-e7fc213e04ee",
                                      "cellValue": "alertTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Other Alerts",
                                      "subTarget": "others",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 18"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "## Alert Rules Management\n\n### Select a pack on the left to visualize the alerts rules related to those packs. Select the Other Alerts tab to visualize any other alert rule that is not related to the packs.\n\nAlert rules are created dynamically when resources are assigned monitoring.",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - Alert - Packs Alerts"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "e99b4870-f7a6-4b8e-95b7-6aaeece1f438",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "AlertPack",
                                      "type": 2,
                                      "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\", \"microsoft.insights/metricalerts\",\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs\n",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "microsoft.network/publicipaddresses"
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "packs"
                                },
                                "name": "param-alerts-toAction"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1]\n| union (\nresources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| where tags.instanceName == '{instanceName}'\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| where MP=='{AlertPack}'",
                                  "size": 0,
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "fieldName": "",
                                      "parameterName": "alertsselected",
                                      "parameterType": 1,
                                      "quote": ""
                                    }
                                  ],
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "location",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "name",
                                        "formatter": 7
                                      }
                                    ],
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "$gen_link_Enabled_2",
                                        "sortOrder": 1
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "$gen_link_Enabled_2",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "customWidth": "70",
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "packs"
                                },
                                "name": "AlertConfigQuery",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "# Enable or Disable alerts. \n\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\n\n# Update Action Group\n## Select a list of alerts on the left and a new Action Group to assign to the alert.\n\n# Delete Alert rules\n## Select a list of alert rules to be deleted.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "AlertMgmtHelpText"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/actiongroups\"\n| where properties.enabled == 'true'\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\"(\",properties.emailReceivers[0].emailAddress,\")\")",
                                        "size": 1,
                                        "exportFieldName": "",
                                        "exportParameterName": "selectedAG",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "id",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": "OpenBlade",
                                                "linkIsContextBlade": true,
                                                "showIcon": true
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "alertsselected",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "ActionGroupsQuery",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "f5cb3ede-91d1-4414-bfa1-a1689f45d0c8",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Alerts",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Enable\", \n    \"alerts\":  [{alertsselected}]\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Alerts",
                                              "description": "# This action will Enable the selected Alerts\n\n{alertsselected}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "d9469141-a104-4696-b9cd-f0fc7e3f963e",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Disable Alerts",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Disable\", \n    \"alerts\":  [{alertsselected}]\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Disable Alerts",
                                              "description": "# This action will disable the selected Alerts\n\n{alertsselected}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "7942ba17-4942-4f4a-b2ea-e19ad806b49d",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Update Action Group",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Update\", \n    \"alerts\":  [{alertsselected}],\n    \"aGroup\": {selectedAG}\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Update Action Group",
                                              "description": "Updating alerts:\n\n\n{alertsselected}\n\nwith Action Group:\n\n{selectedAG}\n",
                                              "actionName": "updateAG",
                                              "runLabel": "Update"
                                            }
                                          },
                                          {
                                            "id": "f802b903-8a8a-458d-9c55-a428d96ba63d",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Delete Alert Rule",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Delete\", \n    \"alerts\":  [{alertsselected}]\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Delete",
                                              "description": "# Deleting Alerts\n\nThe following alert rules will be deleted:\n\n{alertsselected}",
                                              "actionName": "Delete",
                                              "runLabel": "Delete"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 8"
                                    }
                                  ]
                                },
                                "customWidth": "30",
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "packs"
                                },
                                "name": "AlertsSubGroup1"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "Alert Management - Other Alerts",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\")\n| where isempty(tags.MonitorStarterPacks)\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1]\n| union (\nresources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isempty(tags.MonitorStarterPacks)\n| project id, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isempty(tags.MonitorStarterPacks)\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])",
                                        "size": 0,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "alertsselectednopack",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "location",
                                              "formatter": 5
                                            },
                                            {
                                              "columnMatch": "name",
                                              "formatter": 7
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "$gen_link_Enabled_1",
                                              "sortOrder": 1
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "$gen_link_Enabled_1",
                                            "sortOrder": 1
                                          }
                                        ]
                                      },
                                      "customWidth": "70",
                                      "name": "queryOtherAlerts",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 12,
                                      "content": {
                                        "version": "NotebookGroup/1.0",
                                        "groupType": "editable",
                                        "items": [
                                          {
                                            "type": 1,
                                            "content": {
                                              "json": "# Enable or Disable alerts. \n\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\n\n# Update Action Group\n## Select a list of alerts on the left and a new Action Group to assign to the alert.",
                                              "style": "info"
                                            },
                                            "conditionalVisibility": {
                                              "parameterName": "showHelp",
                                              "comparison": "isEqualTo",
                                              "value": "yes"
                                            },
                                            "name": "text - 3"
                                          },
                                          {
                                            "type": 3,
                                            "content": {
                                              "version": "KqlItem/1.0",
                                              "query": "resources\n| where type == \"microsoft.insights/actiongroups\"\n| where properties.enabled == 'true'\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\"(\",properties.emailReceivers[0].emailAddress,\")\")",
                                              "size": 1,
                                              "exportFieldName": "",
                                              "exportParameterName": "selectedAG",
                                              "queryType": 1,
                                              "resourceType": "microsoft.resourcegraph/resources",
                                              "gridSettings": {
                                                "filter": true
                                              }
                                            },
                                            "name": "agQuery2",
                                            "styleSettings": {
                                              "showBorder": true
                                            }
                                          },
                                          {
                                            "type": 11,
                                            "content": {
                                              "version": "LinkItem/1.0",
                                              "style": "paragraph",
                                              "links": [
                                                {
                                                  "id": "f5cb3ede-91d1-4414-bfa1-a1689f45d0c8",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Enable Alerts",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Enable\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}",
                                                    "httpMethod": "POST",
                                                    "title": "Enable Alerts",
                                                    "description": "# This action will Enable the selected Alerts\n\n{alertsselected}",
                                                    "runLabel": "Confirm"
                                                  }
                                                },
                                                {
                                                  "id": "d9469141-a104-4696-b9cd-f0fc7e3f963e",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Disable Alerts",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Disable\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}\n",
                                                    "httpMethod": "POST",
                                                    "title": "Disable Alerts",
                                                    "description": "# This action will disable the selected Alerts\n\n{alertsselected}",
                                                    "runLabel": "Confirm"
                                                  }
                                                },
                                                {
                                                  "id": "7942ba17-4942-4f4a-b2ea-e19ad806b49d",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Update Action Group",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Update\", \n    \"alerts\":  [{alertsselectednopack}],\n    \"aGroup\": {selectedAG}\n  }\n}\n",
                                                    "httpMethod": "POST",
                                                    "title": "Update Action Group",
                                                    "description": "Updating alerts:\n\n\n{alertsselected}\n\nwith Action Group:\n\n{selectedAG}\n",
                                                    "actionName": "updateAG",
                                                    "runLabel": "Update"
                                                  }
                                                },
                                                {
                                                  "id": "eb46862a-b443-489e-a2bf-abc05c541b53",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Delete Alert Rule",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Delete\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}\n",
                                                    "httpMethod": "POST",
                                                    "title": "Delete",
                                                    "description": "# Deleting the following Alert rules:\n\n\n{alertsselectednopack}]\n",
                                                    "actionName": "Delete",
                                                    "runLabel": "Delete"
                                                  }
                                                }
                                              ]
                                            },
                                            "name": "links - 8"
                                          }
                                        ]
                                      },
                                      "customWidth": "30",
                                      "conditionalVisibility": {
                                        "parameterName": "alertsselectednopack",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "AlertsSubGroup1"
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "others"
                                },
                                "name": "AlertMGMT - Others"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "alertmanagement"
                          },
                          "name": "AlertMGMT"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "13be6531-5163-4697-b6bd-cb7381b15d65",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "IaaS Packs Associtation",
                                      "subTarget": "associations",
                                      "preText": "Iaas",
                                      "style": "link"
                                    },
                                    {
                                      "id": "82684c12-244f-4488-9223-da3e48a6206f",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "DCR Details",
                                      "subTarget": "dcrdetails",
                                      "style": "link"
                                    },
                                    {
                                      "id": "0f666555-5e2a-4eb9-bd6c-cef1365a6ce9",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "VMInsights Status",
                                      "subTarget": "vmistatus",
                                      "style": "link"
                                    },
                                    {
                                      "id": "ec137a21-cd22-46df-b002-a68a964465e4",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Import IaaS Packs",
                                      "subTarget": "importPack",
                                      "style": "link"
                                    },
                                    {
                                      "id": "2d44157f-bd79-4963-9133-518597498a1b",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "IaaS Packs Details",
                                      "subTarget": "IaaSPacksDetails",
                                      "style": "link"
                                    },
                                    {
                                      "id": "2cc2c20b-8b44-49d5-ab3f-8917f4bfa9ab",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Services Packs Details",
                                      "subTarget": "servicesPacksDetails",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 2"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "# VM Insights tab\r\n\r\n## Use this tab to check the configuration of any VM Insights rule in the environment. Use it to avoid duplication of data.\r\n\r\nThe first sections will show each machine and to how many VM Insights rule it is assigned to. Selecting the entry will trigger the details view on the right.\r\n\r\nThe second section will show each VM Insights rule and how many machines are assigned to it. Selecting the item will reveal details about each rule (which machines are assigned to it)\r\n\r\n",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - VM insights help"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "VMInsights Status",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=inner  (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(sourceResourceId), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| project serverName=sourceResourceId, name\n| summarize VMInsightsAssociations=count(name) by ['Server Name']=serverName \n",
                                        "size": 1,
                                        "title": "Servers and DCR associations",
                                        "exportFieldName": "Server Name",
                                        "exportParameterName": "vmiSelectedServer",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "VMInsightsAssociations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "If more than one VMInsights association is found, there may be data duplication to one or more Log Analytics workspaces."
                                              }
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "$gen_thresholds_VMInsightsAssociations_1",
                                              "sortOrder": 2
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "$gen_thresholds_VMInsightsAssociations_1",
                                            "sortOrder": 2
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "name": "query - 3",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=leftouter   (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(split(sourceResourceId,'/')[8]), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| where sourceResourceId=~'{vmiSelectedServer}'\n| summarize by DCRId=dataCollectionRuleId\n",
                                        "size": 1,
                                        "title": "Details for {vmiSelectedServer}",
                                        "exportFieldName": "DCR",
                                        "exportParameterName": "vmiSelectedDCR",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "VMInsightsAssociations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "If more than one VMInsights association is found, there may be data duplication to one or more Log Analytics workspaces."
                                              }
                                            }
                                          ],
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "customWidth": "50",
                                      "name": "query - VM Insights per DCR",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=inner   (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(split(sourceResourceId,'/')[8]), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| project serverName, dataCollectionRuleId\n| summarize Servers=count(serverName) by DCRId=dataCollectionRuleId\n",
                                        "size": 1,
                                        "title": "VMInsights DCRs and Servers",
                                        "exportFieldName": "DCRId",
                                        "exportParameterName": "VMIdataCollectionRuleId",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "dataCollectionRuleId",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": "Resource",
                                                "linkIsContextBlade": true,
                                                "showIcon": true
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "customWidth": "50",
                                      "name": "query - VMInsight rules details",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=leftouter   (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(split(sourceResourceId,'/')[8]), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| where dataCollectionRuleId=='{VMIdataCollectionRuleId}'\n| project ['Server Name']=sourceResourceId\n\n",
                                        "size": 1,
                                        "title": "Associated Servers",
                                        "exportFieldName": "DCR",
                                        "exportParameterName": "vmiSelectedDCR",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "VMInsightsAssociations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "If more than one VMInsights association is found, there may be data duplication to one or more Log Analytics workspaces."
                                              }
                                            }
                                          ],
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "customWidth": "50",
                                      "name": "query - VM Insights per DCR - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "packsTab",
                                  "comparison": "isEqualTo",
                                  "value": "vmistatus"
                                },
                                "name": "group - VMInsights status"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "IaaS Packs Association",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) and ['tags'].instanceName =~ '{instanceName}'//or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)\n| join (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n) on rulename\n| project-away rulename1,resourceId\n| summarize Associated=count() by Pack, rulename\n| order by Pack asc",
                                        "size": 0,
                                        "title": "Select Pack to see associated Machines",
                                        "exportFieldName": "rulename",
                                        "exportParameterName": "selectedRule",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Group",
                                              "formatter": 1
                                            }
                                          ],
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "customWidth": "50",
                                      "name": "query - 6 - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=split(properties.dataCollectionRuleId,\"/\")[8],resourceName=split(resourceId,\"/\")[8],resourceId//ruleId=properties.dataCollectionRuleId\n| where '{selectedRule}'==rulename",
                                        "size": 0,
                                        "title": "Associated Machines",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Group",
                                              "formatter": 1
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "customWidth": "50",
                                      "name": "query - 6 - Copy - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "packsTab",
                                  "comparison": "isEqualTo",
                                  "value": "associations"
                                },
                                "name": "rulemanagement",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.instanceName =~ '{instanceName}'\n| extend ds=properties.dataSources\n| project id,Type=kind, location,syslog=ds.syslog[0].streams[0], windowsEventLogs=ds.windowsEventLogs[0].streams[0], logsettings=ds.logFiles[0].name,iislogs=ds.iisLogs[0].name,performanceCounters=ds.performanceCounters[0].streams[0],\ndataCollectionEndpointId=properties.dataCollectionEndpointId,transformKql=properties.dataFlows[0].transformKql,workspaceResourceId=properties.destinations.logAnalytics[0].workspaceResourceId,State=properties.provisioningState\n",
                                  "size": 0,
                                  "title": "List of Currently Configured Data Collection Rules",
                                  "showRefreshButton": true,
                                  "exportedParameters": [
                                    {
                                      "parameterName": "selectedRule"
                                    },
                                    {
                                      "fieldName": "destinationName",
                                      "parameterName": "destinationName",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "",
                                      "parameterName": "resourceGroupName",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "workspaceResourceId",
                                      "parameterName": "workspace",
                                      "parameterType": 5
                                    },
                                    {
                                      "fieldName": "properties",
                                      "parameterName": "properties",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "name",
                                      "parameterName": "name",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "location",
                                      "parameterName": "location",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "Rule Type",
                                      "parameterName": "kind",
                                      "parameterType": 1
                                    },
                                    {
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "id",
                                      "parameterName": "id",
                                      "parameterType": 1
                                    }
                                  ],
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscriptions}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "id",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkColumn": "id",
                                          "linkTarget": "Resource",
                                          "linkIsContextBlade": true,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Type",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Windows",
                                              "representation": "Initial_Access",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Linux",
                                              "representation": "Console",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "Capture",
                                              "text": "Custom"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "location",
                                        "formatter": 17,
                                        "formatOptions": {
                                          "customColumnWidthSetting": "94px"
                                        }
                                      },
                                      {
                                        "columnMatch": "syslog",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "subTarget": "2",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "bladeOpenContext": {
                                            "bladeName": "DataCollectionRulesDataSourceManagementViewModel",
                                            "extensionName": "Microsoft_Azure_Monitoring",
                                            "bladeParameters": [
                                              {
                                                "name": "id",
                                                "source": "column",
                                                "value": "id"
                                              }
                                            ]
                                          },
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "windowsEventLogs",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "logsettings",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": ""
                                            }
                                          ],
                                          "customColumnWidthSetting": "10ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "iislogs",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": ""
                                            }
                                          ],
                                          "customColumnWidthSetting": "10ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "performanceCounters",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "performanceCounters",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured!"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "dataCollectionEndpointId",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "21.7143ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "transformKql",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "queries",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "stopped",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "|",
                                              "representation": "success",
                                              "text": "Ingestion KQL"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "stopped",
                                              "text": "Custom KQL"
                                            }
                                          ],
                                          "bladeOpenContext": {
                                            "bladeName": "CreateMicrosoftTableTransformBlade",
                                            "extensionName": "Microsoft_OperationsManagementSuite_Workspace",
                                            "bladeJsonParameters": "{\r\n\t\"workspaceResourceId\" : \"{workspace}\",\r\n\t\"providers\" : \"microsoft.operationalinsights\",\r\n\t\"table\" : { \r\n\t\t\"name\" : \"{selectedTableName}\",\r\n\t\t\"description\":\"Security events collected from windows machines by Azure Security Center or Azure Sentinel.\",\r\n\t\t\"hasData\":true,\r\n\t\t\"tableType\":\"Microsoft\",\r\n\t\t\"tableAPIState\":\"Any\",\r\n\t\t\"solutions\":[\"Security and Audit\",\"Microsoft Sentinel\"],\r\n\t\t\"categories\":[\"Security\"],\r\n\t\t\"retentionInDaysAsDefault\":false,\r\n\t\t\"totalRetentionInDaysAsDefault\":false,\r\n\t\t\"isEditTransformationEnabled\":true,\r\n\t\t\"isCreateTransformationEnabled\":true\r\n\t},\r\n\t\"isMicrosoftTable\" : true,\r\n\t\"isMigrationRequired\" : false\r\n}"
                                          },
                                          "customColumnWidthSetting": "22ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "workspaceResourceId",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "showIcon": true,
                                          "customColumnWidthSetting": "16.8571ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "State",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "properties",
                                        "formatter": 7,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkLabel": "📋",
                                          "linkIsContextBlade": true,
                                          "customColumnWidthSetting": "5ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "kind",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "Capture",
                                              "text": "{0}{1} Custom"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "Linux",
                                              "representation": "Console",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "Windows",
                                              "representation": "Initial_Access",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "WorkspaceTransforms",
                                              "representation": "Persistence",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "customColumnWidthSetting": "17ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "name",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "securityEvents",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "windowsEventLogs",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "destinations",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "queries",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "dataSources",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "dataFlows",
                                        "formatter": 5,
                                        "formatOptions": {
                                          "aggregation": "Sum"
                                        }
                                      },
                                      {
                                        "columnMatch": "description",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "destinationName",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "lastModifiedBy",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "customEvents",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "StepTab",
                                        "formatter": 5
                                      }
                                    ],
                                    "rowLimit": 1000,
                                    "filter": true
                                  },
                                  "sortBy": []
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "tabSelection",
                                    "comparison": "isEqualTo",
                                    "value": "rulemanagement"
                                  },
                                  {
                                    "parameterName": "packsTab",
                                    "comparison": "isEqualTo",
                                    "value": "dcrdetails"
                                  }
                                ],
                                "name": "Select Existing DCR - Copy",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "Add New Pack",
                                  "items": [
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "parameters": [
                                          {
                                            "id": "492e3bc2-3037-44fb-9129-4fc8aed5ec93",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "newPack",
                                            "label": "New Pack Definition",
                                            "type": 1,
                                            "description": "create a new pack",
                                            "typeSettings": {
                                              "multiLineText": true,
                                              "editorLanguage": "text",
                                              "multiLineHeight": 20
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            }
                                          }
                                        ],
                                        "style": "above",
                                        "queryType": 0,
                                        "resourceType": "microsoft.operationalinsights/workspaces"
                                      },
                                      "name": "parameters - 0"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "list",
                                        "links": [
                                          {
                                            "id": "84da816b-84fa-494e-a51b-9a4cd221c7dd",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Import Pack Definition",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "",
                                                  "value": ""
                                                }
                                              ],
                                              "body": "{ \r\n  \"function\": \"packmgmt\",\r\n  \"functionBody\" : {\r\n    \"Action\":\"importPack\",\r\n    \"PackDef\": {newPack}\r\n  }\r\n}\r\n\r\n",
                                              "httpMethod": "POST",
                                              "title": "Import New Pack",
                                              "description": "# Importing new Pack definition\n\n{newPack}",
                                              "actionName": "importPack",
                                              "runLabel": "Import"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 1"
                                    }
                                  ]
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "tabSelection",
                                    "comparison": "isEqualTo",
                                    "value": "rulemanagement"
                                  },
                                  {
                                    "parameterName": "packsTab",
                                    "comparison": "isEqualTo",
                                    "value": "importPack"
                                  }
                                ],
                                "name": "packAuthoringGroup"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"Action\",\"value\":\"getIaaSPacksDetails\"}],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[{\"path\":\"$.Name\",\"columnid\":\"Name\"},{\"path\":\"$.Tag\",\"columnid\":\"Tag\"},{\"path\":\"$.NumberOfRules\",\"columnid\":\"Rules\"},{\"path\":\"$.NumberOfAlerts\",\"columnid\":\"Alerts\"},{\"path\":\"$.AlertNames\",\"columnid\":\"AlertDetails\"}]}}]}",
                                  "size": 0,
                                  "title": "IaaS Packs Details",
                                  "queryType": 10,
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "AlertDetails",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "AlertDetails",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "more",
                                              "text": ""
                                            },
                                            {
                                              "operator": "!=",
                                              "representation": "1",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "packsTab",
                                  "comparison": "isEqualTo",
                                  "value": "IaaSPacksDetails"
                                },
                                "name": "query-IaaSPacksDetails"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"Action\",\"value\":\"getServicesPacksDetails\"}],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[{\"path\":\"$.namespace\",\"columnid\":\"NameSpace\"},{\"path\":\"$.NumberOfMetrics\",\"columnid\":\"NumberOfMetrics\"},{\"path\":\"$.Details\",\"columnid\":\"Details\"}]}}]}",
                                  "size": 0,
                                  "title": "Services Packs Details",
                                  "showExportToExcel": true,
                                  "queryType": 10,
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Details",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "Details",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "more",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": ""
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "AlertDetails",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "AlertDetails",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "more",
                                              "text": ""
                                            },
                                            {
                                              "operator": "!=",
                                              "representation": "1",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "NumberOfMetrics",
                                        "sortOrder": 2
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "NumberOfMetrics",
                                      "sortOrder": 2
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "packsTab",
                                  "comparison": "isEqualTo",
                                  "value": "servicesPacksDetails"
                                },
                                "name": "query-servicesPacksDetails"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "rulemanagement"
                          },
                          "name": "packMgmtGroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Agent Management",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "24d1e53a-ca25-4488-92af-4746e5411951",
                                      "cellValue": "agentTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Agents",
                                      "subTarget": "agents",
                                      "preText": "",
                                      "style": "link"
                                    },
                                    {
                                      "id": "230109a1-ed5a-4f33-b577-dab3c9b97c4d",
                                      "cellValue": "agentTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "HeartBeat",
                                      "subTarget": "heartbeat",
                                      "style": "link"
                                    },
                                    {
                                      "id": "7413ed40-fb13-48b3-acee-d27259ca7617",
                                      "cellValue": "agentTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "VM Applications",
                                      "subTarget": "vmapplications",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 3"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "Resources\n| where type == 'microsoft.compute/virtualmachines' and tolower(tags.Vendor) != 'databricks'\n| extend\n    JoinID = toupper(id),\n    OSType = tostring(properties.storageProfile.osDisk.osType),\n    Instance=tostring(tags.instanceName)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('DependencyAgentWindows','DependencyAgentLinux')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        DepAgent = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines' and tolower(tags.Vendor) != 'databricks'\n| extend\n    JoinID = toupper(id),\n    OSType = tostring(properties.osType),\n    Instance=tostring(tags.instanceName)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('DependencyAgentWindows','DependencyAgentLinux')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        DepAgent = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId)\n| summarize by id, OSType, ['Dependency Agent']=iff(isempty(DepAgent),'N/A',DepAgent),ExtensionName=iff(isempty(ExtensionName),'N/A',ExtensionName), ['AMA State']=State, ['AMA Upg']=UpgradeEnabled,['Subscription']=subscriptionId,['Resource Group']=resourceGroup, location, Instance\n| extend Install=iff(ExtensionName=='N/A','Install',iff(['AMA State']<> 'succeeded','Unhealthy','')), Uninstall=iff((ExtensionName<>'N/A') and (['AMA State'] == 'succeeded'),'Uninstall',iff(['AMA State'] <> 'succeeded','Warning',''))\n",
                                  "size": 0,
                                  "title": "Agent Install Status",
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "parameterType": 1
                                    },
                                    {
                                      "parameterName": "vmstoinstall",
                                      "parameterType": 5,
                                      "quote": ""
                                    }
                                  ],
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Dependency Agent",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "N/A",
                                              "representation": "1",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Not Installed"
                                              }
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "DependencyAgentWindows",
                                              "representation": "success",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Windows"
                                              }
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "DependencyAgentLinux",
                                              "representation": "success",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Linux"
                                              }
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "unknown",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "customColumnWidthSetting": "9.8555ch"
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "{0}{1}"
                                        }
                                      },
                                      {
                                        "columnMatch": "ExtensionName",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorLinuxAgent",
                                              "representation": "success",
                                              "text": "Linux Agent"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorWindowsAgent",
                                              "representation": "success",
                                              "text": "Windows Agent"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "stopped",
                                              "text": "No Agent"
                                            }
                                          ],
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}",
                                            "httpMethod": "POST",
                                            "title": "Install Agent",
                                            "description": "# Installing agent(s) for the following machine(s):\n\n{vmstoinstall}\n",
                                            "actionName": "InstallAgent",
                                            "runLabel": "InstallAgent"
                                          },
                                          "customColumnWidthSetting": "20ch"
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "Click To Install Agent"
                                        }
                                      },
                                      {
                                        "columnMatch": "State",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "succeeded",
                                              "representation": "success",
                                              "text": ""
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "failed",
                                              "representation": "3",
                                              "text": "failed"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "unknown",
                                              "text": ""
                                            }
                                          ],
                                          "customColumnWidthSetting": "17.5ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "AMA Upg",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "1",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Auto Upgrade not enabled"
                                              }
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Enabled"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "Subscription",
                                        "formatter": 15,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Resource Group",
                                        "formatter": 14,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Install",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "ArmAction",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "success",
                                              "text": "Ok"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Unhealthy",
                                              "representation": "2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "Add",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}\n",
                                            "httpMethod": "POST",
                                            "title": "Install Agent",
                                            "description": "# Installing agent(s) for the following machine(s):\n\n\n{vmstoinstall}\n",
                                            "actionName": "Install Agent",
                                            "runLabel": "Install Agent"
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "Uninstall",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "ArmAction",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "3",
                                              "text": "Not Installed"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Warning",
                                              "representation": "1",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "warning",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}\n",
                                            "httpMethod": "POST",
                                            "title": "Remove Agent",
                                            "description": "# Removing agent(s) for the following machine(s):\n\n## <span style=\"color:red\">Warning! </span> Removing the agent from the machine(s) may result in data not being collected.\n\n\n{vmstoinstall}\n",
                                            "actionName": "RemoveAgent",
                                            "runLabel": "RemoveAgent"
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "subscriptionId",
                                        "formatter": 15,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "DepAgent",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "N/A",
                                              "representation": "1",
                                              "text": "{0}{1}",
                                              "tooltipFormat": {
                                                "tooltip": "Not Installed"
                                              }
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}",
                                              "tooltipFormat": {
                                                "tooltip": "Installed"
                                              }
                                            }
                                          ]
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "Dependency Agent Status"
                                        }
                                      },
                                      {
                                        "columnMatch": "UpgradeEnabled",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "true",
                                              "representation": "success",
                                              "text": ""
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "false",
                                              "representation": "2",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "unknown",
                                              "text": ""
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "filter": true
                                  },
                                  "sortBy": []
                                },
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "agents"
                                },
                                "name": "query - agent install status",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.storageProfile.osDisk.osType)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.osType)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| extend ExtensionName = iff(isnotempty(ExtensionName),ExtensionName, \"NotInstalled\")\n| summarize count() by ExtensionName\n| sort by ExtensionName asc",
                                  "size": 1,
                                  "title": "Agent Install Status",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "tiles",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "ExtensionName",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorLinuxAgent",
                                              "representation": "success",
                                              "text": "Linux Agent"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorWindowsAgent",
                                              "representation": "success",
                                              "text": "Windows Agent"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "stopped",
                                              "text": "No Agent"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      }
                                    ],
                                    "filter": true
                                  },
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "ExtensionName",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "count_",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "maximumSignificantDigits": 3,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    "showBorder": false
                                  },
                                  "chartSettings": {
                                    "seriesLabelSettings": [
                                      {
                                        "seriesName": "",
                                        "label": "No Agent",
                                        "color": "red"
                                      }
                                    ]
                                  }
                                },
                                "customWidth": "25",
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "agents"
                                },
                                "name": "query - agent install status - graph",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "Heartbeat | where Category == \"Azure Monitor Agent\"\n| summarize arg_max(TimeGenerated, *) by Computer\n| project  Computer,LastHeartbeat=TimeGenerated, ['SecondsAgo']=datetime_diff('second',now(),TimeGenerated)\n| sort by SecondsAgo asc",
                                  "size": 0,
                                  "title": "Last Heartbeat (24 hours)",
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "SecondsAgo",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "<=",
                                              "thresholdValue": "600",
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": ">",
                                              "thresholdValue": "600",
                                              "representation": "2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": null,
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "$gen_thresholds_SecondsAgo_2",
                                        "sortOrder": 1
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "$gen_thresholds_SecondsAgo_2",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "heartbeat"
                                },
                                "name": "query - active alerts",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where type =~ \"microsoft.compute/virtualmachines\"\n| mvexpand with_itemindex=i apps=properties.applicationProfile.galleryApplications\n| where apps != ''\n| extend splitFields = split(apps.packageReferenceId, '/')\n| extend Gallery = strcat('/',strcat_array(array_slice(splitFields, 1, 8), '/'))\n| project Computer=id, ['Application Version']=tostring(apps.packageReferenceId), Gallery\n| summarize by Gallery,['Application Version'], Computer\n| sort by Gallery asc",
                                  "size": 0,
                                  "title": "Client Status (VM Applications)",
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Gallery",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Application Name",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Computer",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "showIcon": true
                                        }
                                      }
                                    ],
                                    "filter": true
                                  },
                                  "sortBy": []
                                },
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "vmapplications"
                                },
                                "name": "query - vmapplications",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "agentmgmt"
                          },
                          "name": "AgentMGMTGroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Auto Discovery Prototype - Use with caution.",
                            "loadType": "always",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "6346adc4-5e50-4b56-ab9d-0d8b17b8a86f",
                                      "cellValue": "discTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Discovery Results",
                                      "subTarget": "discResults",
                                      "preText": "",
                                      "style": "link"
                                    },
                                    {
                                      "id": "a914f6ed-4d20-4895-bed4-48a32f3a5c21",
                                      "cellValue": "discTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Discovery Config",
                                      "subTarget": "discConfig",
                                      "style": "link"
                                    },
                                    {
                                      "id": "3a11d108-b694-4989-9302-48010831377a",
                                      "cellValue": "discTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Discovery Data",
                                      "subTarget": "discData",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 10"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "VM Discovery",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "When Discovery is first enabled, the Azure Monitoring Agent will also be installed to the selected servers along with a VM Application agent to collect discovery data. Data will be sent to the Log Analytics agent.",
                                        "style": "info"
                                      },
                                      "name": "text - 3"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId=tostring(resourceId)//ruleId=properties.dataCollectionRuleId\n| join kind= inner  (\nresources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks), instanceName = ['tags'].instanceName\n| where instanceName == '{instanceName}'\n| where isnotempty(MPs) and (MPs =~ 'WinDisc' or MPs =~ 'LxDisc')//or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| summarize by resourceId, Pack\n| summarize Packs=make_list(Pack) by resourceId",
                                        "size": 0,
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Packs",
                                              "formatter": 1
                                            }
                                          ]
                                        }
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "test",
                                        "comparison": "isEqualTo",
                                        "value": "1"
                                      },
                                      "showPin": false,
                                      "name": "query - associatedVMs"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.compute/virtualmachines' \n| extend MPs=tostring(['tags'].MonitorStarterPacks), instanceName = ['tags'].instanceName\n| where instanceName == '{instanceName}'\n| where isnotempty(MPs) and (MPs contains 'WinDisc' or MPs contains 'LxDisc')\n| extend Packs = iff(MPs contains 'WinDisc','WinDisc','LxDisc')\n| project Resource=id,['Resource Group']=resourceGroup,Packs, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location\n",
                                        "size": 0,
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Packs",
                                              "formatter": 1
                                            },
                                            {
                                              "columnMatch": "subscriptionId",
                                              "formatter": 15,
                                              "formatOptions": {
                                                "linkTarget": null,
                                                "showIcon": true
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHidden",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "showPin": false,
                                      "name": "query - taggedVMs"
                                    },
                                    {
                                      "type": 12,
                                      "content": {
                                        "version": "NotebookGroup/1.0",
                                        "groupType": "editable",
                                        "items": [
                                          {
                                            "type": 3,
                                            "content": {
                                              "version": "KqlItem/1.0",
                                              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\",\"mergeType\":\"outer\",\"leftTable\":\"query - taggedVMs\",\"rightTable\":\"query - associatedVMs\",\"leftColumn\":\"Resource\",\"rightColumn\":\"resourceId\"}],\"projectRename\":[{\"originalName\":\"[query - taggedVMs].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Resource Group\",\"mergedName\":\"Resource Group\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Packs\",\"mergedName\":\"Packs\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].OS\",\"mergedName\":\"OS\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Location\",\"mergedName\":\"Location\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].Packs\",\"mergedName\":\"Associated\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - associatedVMs].resourceId\"}]}",
                                              "size": 0,
                                              "title": "Discoverable Machines",
                                              "exportMultipleValues": true,
                                              "exportedParameters": [
                                                {
                                                  "fieldName": "",
                                                  "parameterName": "taggedVMsDiscovery",
                                                  "parameterType": 1,
                                                  "quote": ""
                                                }
                                              ],
                                              "showExportToExcel": true,
                                              "queryType": 7,
                                              "visualization": "table",
                                              "gridSettings": {
                                                "formatters": [
                                                  {
                                                    "columnMatch": "Packs",
                                                    "formatter": 18,
                                                    "formatOptions": {
                                                      "thresholdsOptions": "icons",
                                                      "thresholdsGrid": [
                                                        {
                                                          "operator": "contains",
                                                          "thresholdValue": "WinDisc",
                                                          "text": "WinDisc"
                                                        },
                                                        {
                                                          "operator": "contains",
                                                          "thresholdValue": "LxDisc",
                                                          "text": "LxDisc"
                                                        },
                                                        {
                                                          "operator": "Default",
                                                          "thresholdValue": null,
                                                          "representation": "unknown",
                                                          "text": "{0}{1}"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "OS",
                                                    "formatter": 1
                                                  },
                                                  {
                                                    "columnMatch": "Associated",
                                                    "formatter": 1
                                                  },
                                                  {
                                                    "columnMatch": "subscriptionId",
                                                    "formatter": 15,
                                                    "formatOptions": {
                                                      "linkTarget": null,
                                                      "showIcon": true
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "Associated Packs",
                                                    "formatter": 1
                                                  }
                                                ],
                                                "filter": true
                                              }
                                            },
                                            "showPin": false,
                                            "name": "query-mergeVMsDiscovery",
                                            "styleSettings": {
                                              "showBorder": true
                                            }
                                          },
                                          {
                                            "type": 11,
                                            "content": {
                                              "version": "LinkItem/1.0",
                                              "style": "paragraph",
                                              "links": [
                                                {
                                                  "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                                  "cellValue": "",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Remove Discovery Pack(s)",
                                                  "preText": "",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [
                                                      {
                                                        "key": "action",
                                                        "value": "removeTag"
                                                      }
                                                    ],
                                                    "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMsDiscovery}],\n    \"PackType\":\"Discovery\"\n  }\n}",
                                                    "httpMethod": "POST",
                                                    "title": "Remove Monitoring",
                                                    "description": "# Please confirm the change.\n\nRemove Monitoring for Discovery Pack(s) \n\nServers:\n\n{taggedVMsDiscovery}",
                                                    "runLabel": "Confirm"
                                                  }
                                                }
                                              ]
                                            },
                                            "customWidth": "75",
                                            "conditionalVisibility": {
                                              "parameterName": "taggedVMsDiscovery",
                                              "comparison": "isNotEqualTo"
                                            },
                                            "name": "links - 1"
                                          }
                                        ],
                                        "exportParameters": true
                                      },
                                      "customWidth": "50",
                                      "name": "TaggedGroupDiscovery"
                                    },
                                    {
                                      "type": 12,
                                      "content": {
                                        "version": "NotebookGroup/1.0",
                                        "groupType": "editable",
                                        "items": [
                                          {
                                            "type": 3,
                                            "content": {
                                              "version": "KqlItem/1.0",
                                              "query": "resources | where type =~ 'microsoft.compute/virtualmachines' \n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isempty(MPs) or (MPs notcontains 'WinDisc' and MPs notcontains 'LxDisc')//and subscriptionId in split('{Subscriptions:subscriptionId}',',')\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, Subscription=subscriptionId, Location=location\n| extend Pack=iff(OS=~'Windows',\"WinDisc\", \"LxDisc\")\n\n",
                                              "size": 0,
                                              "title": "Non-discoverable Machines",
                                              "showRefreshButton": true,
                                              "exportMultipleValues": true,
                                              "exportedParameters": [
                                                {
                                                  "parameterName": "vmstotagDiscovery",
                                                  "parameterType": 1,
                                                  "quote": ""
                                                }
                                              ],
                                              "showExportToExcel": true,
                                              "queryType": 1,
                                              "resourceType": "microsoft.resourcegraph/resources",
                                              "crossComponentResources": [
                                                "{Subscriptions}"
                                              ],
                                              "visualization": "table",
                                              "gridSettings": {
                                                "formatters": [
                                                  {
                                                    "columnMatch": "Resource Group",
                                                    "formatter": 14,
                                                    "formatOptions": {
                                                      "linkTarget": null,
                                                      "showIcon": true
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "tag",
                                                    "formatter": 5
                                                  },
                                                  {
                                                    "columnMatch": "subscriptionId",
                                                    "formatter": 13,
                                                    "formatOptions": {
                                                      "linkTarget": null,
                                                      "showIcon": true
                                                    }
                                                  }
                                                ],
                                                "filter": true
                                              },
                                              "sortBy": []
                                            },
                                            "name": "Non Discoverable Servers",
                                            "styleSettings": {
                                              "margin": "400",
                                              "padding": "400",
                                              "showBorder": true
                                            }
                                          },
                                          {
                                            "type": 11,
                                            "content": {
                                              "version": "LinkItem/1.0",
                                              "style": "paragraph",
                                              "links": [
                                                {
                                                  "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Enable Discovery for servers.",
                                                  "preText": "",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [
                                                      {
                                                        "key": "action",
                                                        "value": "addTag"
                                                      }
                                                    ],
                                                    "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddPack\",\n    \"Resources\": [{vmstotagDiscovery}],\n    \"PackType\": \"Discovery\",\n    \"WorkspaceId\": \"{Workspace}\",\n    \"DefaultAG\" : \"{DefaultAG}\"\n  }\n}",
                                                    "httpMethod": "POST",
                                                    "title": "Enable Discovery Packs",
                                                    "description": "# This will enable the pack for the following servers:\n{vmstotagDiscovery}\n\nby adding the Pack(s) to the resource(s).\n",
                                                    "actionName": "EnableDiscovery",
                                                    "runLabel": "Confirm"
                                                  }
                                                }
                                              ]
                                            },
                                            "customWidth": "50",
                                            "conditionalVisibility": {
                                              "parameterName": "vmstotagDiscovery",
                                              "comparison": "isNotEqualTo"
                                            },
                                            "name": "links - 1 - Copy"
                                          }
                                        ],
                                        "exportParameters": true
                                      },
                                      "customWidth": "50",
                                      "name": "NonTaggedGroupDiscovery"
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discConfig"
                                },
                                "name": "Servers - Discovery",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "list",
                                        "links": [
                                          {
                                            "id": "b3bb5a4d-0f95-4e9a-8634-9cb027f860aa",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remediate (all policies)",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Remediate\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Rmediate policies",
                                              "description": "# Please confirm remediation\n\nThis button will trigger a global policy remeadiation. \n\nThe backend script will go through the policies and initiatives, finding the ones that are not compliant, and will trigger remediation. \n\nIt is not restricted to the ones in this screen.",
                                              "actionName": "Remediate",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "8dfc5afa-108a-4713-8a0c-651c3a32c5f1",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Check Compliance",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Scan\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Check Policy Compliance",
                                              "description": "# Please confirm the scan.",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 3"
                                    },
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## Policy Compliance Check\nThis task will trigger a tenant wide check for policy compliance.\n\n## Policy Remediation\n\nThis Task will trigger remediation for the policies in the list that are considered not compliant at this time.",
                                        "style": "info"
                                      },
                                      "conditionalVisibilities": [
                                        {
                                          "parameterName": "tabSelection",
                                          "comparison": "isEqualTo",
                                          "value": "policystatus"
                                        },
                                        {
                                          "parameterName": "showHelp",
                                          "comparison": "isEqualTo",
                                          "value": "yes"
                                        }
                                      ],
                                      "name": "text - 7"
                                    }
                                  ]
                                },
                                "customWidth": "25",
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discPolicies"
                                },
                                "name": "ComplianceButtons - Copy"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "d1f20750-4a22-4433-9c5d-a4d9a4f62f9d",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "discoveryPeriod",
                                      "label": "Period",
                                      "type": 4,
                                      "typeSettings": {
                                        "selectableValues": [
                                          {
                                            "durationMs": 300000
                                          },
                                          {
                                            "durationMs": 900000
                                          },
                                          {
                                            "durationMs": 1800000
                                          },
                                          {
                                            "durationMs": 3600000
                                          },
                                          {
                                            "durationMs": 14400000
                                          },
                                          {
                                            "durationMs": 43200000
                                          },
                                          {
                                            "durationMs": 86400000
                                          },
                                          {
                                            "durationMs": 172800000
                                          },
                                          {
                                            "durationMs": 259200000
                                          },
                                          {
                                            "durationMs": 604800000
                                          },
                                          {
                                            "durationMs": 1209600000
                                          },
                                          {
                                            "durationMs": 2419200000
                                          }
                                        ]
                                      },
                                      "value": {
                                        "durationMs": 86400000
                                      }
                                    },
                                    {
                                      "id": "079a4550-40c9-44cd-a223-40097e453659",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "ComputerDiscovery",
                                      "label": "Select Server",
                                      "type": 5,
                                      "query": "Discovery_CL\n| parse RawData with timestamp \",\" rest1\n| extend Computer=_ResourceId,timestamp=todatetime(timestamp)\n| summarize by tostring(Computer)",
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 0
                                      },
                                      "timeContextFromParameter": "discoveryPeriod",
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "value": "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourcegroups/rg-mgmt/providers/microsoft.compute/virtualmachines/lx2"
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discData"
                                },
                                "name": "param-discovery-period"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "//let maxts=\nlet maxts=Discovery_CL\n| project timestamp=todatetime(tostring(split(RawData,\",\")[0])), _ResourceId\n| where isnotempty(timestamp) and _ResourceId =~ '{ComputerDiscovery}'\n| summarize maxts=max(timestamp);\nDiscovery_CL\n| extend Computer=_ResourceId\n| where Computer =~ '{ComputerDiscovery}'\n| extend fields=split(RawData,\",\")\n| extend timestamp=todatetime(fields[0])\n| extend type=tostring(fields[1])\n| extend platform=tostring(fields[2])\n| extend package=iff (platform =~ 'linux', tostring(fields[4]),'')\n| extend name=iff (platform =~ 'linux', tostring(fields[3]), tostring(fields[3]))\n| extend othertype=tostring(fields[5])\n| extend vendor=tostring(fields[6])\n| extend OSVersion=iff(platform =~ 'linux', '',tostring(fields[3]))\n| where timestamp == toscalar(maxts)\n| project timestamp,Computer,type,name,platform,OSVersion,othertype,vendor",
                                  "size": 0,
                                  "title": "All Discovery Data",
                                  "timeContextFromParameter": "discoveryPeriod",
                                  "showExportToExcel": true,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "gridSettings": {
                                    "rowLimit": 1000,
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "name",
                                        "sortOrder": 1
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "name",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discData"
                                },
                                "name": "query - discovery - all"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "18e396d2-d597-4f30-a863-c47a8d579c58",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "discoveryQueryPeriod",
                                      "label": "Discovery Period ",
                                      "type": 4,
                                      "typeSettings": {
                                        "selectableValues": [
                                          {
                                            "durationMs": 300000
                                          },
                                          {
                                            "durationMs": 900000
                                          },
                                          {
                                            "durationMs": 1800000
                                          },
                                          {
                                            "durationMs": 3600000
                                          },
                                          {
                                            "durationMs": 14400000
                                          },
                                          {
                                            "durationMs": 43200000
                                          },
                                          {
                                            "durationMs": 86400000
                                          },
                                          {
                                            "durationMs": 172800000
                                          },
                                          {
                                            "durationMs": 259200000
                                          },
                                          {
                                            "durationMs": 604800000
                                          },
                                          {
                                            "durationMs": 1209600000
                                          }
                                        ]
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "value": {
                                        "durationMs": 1800000
                                      }
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces"
                                },
                                "name": "parameters - 7"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let maxts=DiscoveryResults_CL\r\n| summarize maxts=max(TimeGenerated);\r\nDiscoveryResults_CL\r\n| where TimeGenerated == toscalar(maxts)\r\n| project Resource=ResourceId, OS, Pack=Tag, Location, ['Discovery Time']=TimeGenerated",
                                  "size": 0,
                                  "title": "Discovery Results",
                                  "timeContextFromParameter": "discoveryQueryPeriod",
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "fieldName": "",
                                      "parameterName": "vmsDiscoveryTag",
                                      "parameterType": 1,
                                      "quote": ""
                                    }
                                  ],
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "resourceId",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discResults"
                                },
                                "name": "query - 0"
                              },
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "list",
                                  "links": [
                                    {
                                      "id": "af7d39e4-d1a9-40c5-89e7-d6fcfb191dc5",
                                      "linkTarget": "ArmAction",
                                      "linkLabel": "Enable Monitoring",
                                      "style": "primary",
                                      "linkIsContextBlade": true,
                                      "armActionContext": {
                                        "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                        "headers": [],
                                        "params": [],
                                        "body": "{ \r\n  \"function\": \"packmgmt\",\r\n  \"functionBody\" : {\r\n    \"Action\":\"AddPack\",\r\n    \"Resources\": [{vmsDiscoveryTag}],\r\n    \"PackType\": \"IaaS\",\r\n    \"WorkspaceId\" : \"{Workspace}\",\r\n    \"DefaultAG\" : \"{DefaultAG}\"\r\n  }\r\n}",
                                        "httpMethod": "POST",
                                        "title": "Enable Monitoring",
                                        "description": "# Enable Discovery\n\nResources:\n\n{vmsDiscoveryTag}",
                                        "actionName": "AddPack",
                                        "runLabel": "Enable"
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "discTab",
                                    "comparison": "isEqualTo",
                                    "value": "discResults"
                                  },
                                  {
                                    "parameterName": "vmsDiscoveryTag",
                                    "comparison": "isNotEqualTo"
                                  }
                                ],
                                "name": "links - enableDiscoveryMonitoring"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "autodiscovery"
                          },
                          "name": "AutoDiscoveryGroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "{appInsightsName}"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "dffde712-0ef1-4c46-922a-47a42643130c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "appInsightsTimeframe",
                                      "label": "Time Range",
                                      "type": 4,
                                      "typeSettings": {
                                        "selectableValues": [
                                          {
                                            "durationMs": 300000
                                          },
                                          {
                                            "durationMs": 900000
                                          },
                                          {
                                            "durationMs": 1800000
                                          },
                                          {
                                            "durationMs": 3600000
                                          },
                                          {
                                            "durationMs": 14400000
                                          },
                                          {
                                            "durationMs": 43200000
                                          },
                                          {
                                            "durationMs": 86400000
                                          },
                                          {
                                            "durationMs": 172800000
                                          },
                                          {
                                            "durationMs": 259200000
                                          },
                                          {
                                            "durationMs": 604800000
                                          },
                                          {
                                            "durationMs": 1209600000
                                          },
                                          {
                                            "durationMs": 2419200000
                                          },
                                          {
                                            "durationMs": 2592000000
                                          }
                                        ]
                                      },
                                      "timeContext": {
                                        "durationMs": 2592000000
                                      },
                                      "value": {
                                        "durationMs": 2419200000
                                      }
                                    },
                                    {
                                      "id": "70107de5-d9cd-46ea-9027-43d83053dac3",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "FunctionApp",
                                      "label": "Function App",
                                      "type": 2,
                                      "query": "requests\n| project\n    timestamp,\n    id,\n    operation_Name,\n    success,\n    resultCode,\n    duration,\n    operation_Id,\n    cloud_RoleName,\n    invocationId=customDimensions['InvocationId']\n| order by timestamp desc\n| take 20\n| summarize by Functions=operation_Name\n",
                                      "crossComponentResources": [
                                        "{appInsightsName}"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 2592000000
                                      },
                                      "queryType": 0,
                                      "resourceType": "microsoft.insights/components",
                                      "value": "config"
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components"
                                },
                                "name": "parameters - 18"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "requests\n| project\n    timestamp,\n    id,\n    operation_Name,\n    success,\n    resultCode,\n    duration,\n    operation_Id,\n    cloud_RoleName,\n    invocationId=customDimensions['InvocationId']\n| where operation_Name =~ '{FunctionApp}'\n| order by timestamp desc\n| take 20",
                                  "size": 0,
                                  "title": "Invocations",
                                  "timeContextFromParameter": "appInsightsTimeframe",
                                  "exportedParameters": [
                                    {
                                      "fieldName": "invocationId",
                                      "parameterName": "invocationid",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "operation_Id",
                                      "parameterName": "operationid",
                                      "parameterType": 1
                                    }
                                  ],
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsName}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "id",
                                        "formatter": 5
                                      }
                                    ]
                                  }
                                },
                                "customWidth": "30",
                                "name": "queryInvocations"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "union traces\n| union exceptions\n| where operation_Id == '{operationid}'\n| where customDimensions['InvocationId'] == '{invocationid}'\n| order by timestamp asc\n| project\n    timestamp,\n    message = iff(message != '', message, iff(innermostMessage != '', innermostMessage, customDimensions.[strcat('prop__{','OriginalFormat}')])),\n    logLevel = customDimensions.['LogLevel']",
                                  "size": 0,
                                  "title": "Invocation Details",
                                  "noDataMessage": "No Invocation Selected",
                                  "timeContextFromParameter": "appInsightsTimeframe",
                                  "exportFieldName": "invocationId",
                                  "exportParameterName": "invocationid",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsName}"
                                  ]
                                },
                                "customWidth": "70",
                                "name": "queryInvocationDetails"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "logs"
                          },
                          "name": "groupLogs"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getdiscoveryresults\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"WSId\",\"value\":\"{Workspace}\"}],\"transformers\":null}",
                            "size": 0,
                            "exportedParameters": [
                              {
                                "parameterName": "vmsDiscoveryTag",
                                "parameterType": 1
                              },
                              {
                                "fieldName": "tag",
                                "parameterName": "vmsDiscoveryTagValue",
                                "parameterType": 1
                              }
                            ],
                            "queryType": 10,
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "tag",
                                  "formatter": 1,
                                  "formatOptions": {
                                    "linkTarget": "ArmAction",
                                    "linkIsContextBlade": true,
                                    "armActionContext": {
                                      "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                      "headers": [],
                                      "params": [],
                                      "body": "{ \n  \"function\": \"packmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddPack\",\n    \"Resources\": [{vmsDiscoveryTag}],\n    \"Pack\": \"{vmsDiscoveryTagValue}\"\n  }\n}",
                                      "httpMethod": "POST",
                                      "title": "Enable Monitoring",
                                      "description": "# Adding Tag(s) To VMs\n\n\"Resources\": {vmsDiscoveryTag:$.Computer}\n\n\"Pack\": \"{vmsDiscoveryTagValue}\"",
                                      "runLabel": "Enable"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "discTab",
                            "comparison": "isEqualTo",
                            "value": "discResults"
                          },
                          "name": "query - discovery Results"
                        }
                      ],
                      "fallbackResourceIds": [
                        "/subscriptions/e315fe54-eae5-464d-8266-0f41a0908da8/resourcegroups/rg-monstarpacks/providers/microsoft.operationalinsights/workspaces/monstar-law"
                      ],
                      "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
                    },
                    "wbConfig": "[string(variables('$fxv#0'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/workbooks",
                      "apiVersion": "2022-04-01",
                      "name": "[guid('Azure Monitor Starter Packs V2')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "shared",
                      "properties": {
                        "displayName": "Azure Monitor Starter Packs Extended",
                        "serializedData": "[variables('wbConfig')]",
                        "category": "workbook",
                        "sourceId": "[parameters('lawresourceid')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "dceName": {
                    "value": "[format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3784354634483652394"
                    }
                  },
                  "parameters": {
                    "dceName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionEndpoints",
                      "apiVersion": "2021-09-01-preview",
                      "name": "[parameters('dceName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "networkAcls": {
                          "publicNetworkAccess": "Enabled"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "dceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dceName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('packPolicyRoleDefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "[format('AMP-{0}-UMI-Packs', parameters('instanceName'))]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "addRGRoleAssignments": {
                    "value": true
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "17842332302260083262"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "addRGRoleAssignments": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "RGroleDefinitionIds": [
                      "b24988ac-6180-42a0-ab88-20f7382dd24c",
                      "22926164-76b3-42b3-bc55-97df8dab3e41"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1567859393178125257"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('Tags')]"
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-{2}', parameters('userIdentityName'), copyIndex(), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "12046791720435112264"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignmentRG",
                        "count": "[length(variables('RGroleDefinitionIds'))]"
                      },
                      "condition": "[parameters('addRGRoleAssignments')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-RG', parameters('userIdentityName'), copyIndex())]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "18441567381332934980"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('backendFunctionRoleDefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "[format('AMP-{0}-UMI-Function', parameters('instanceName'))]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "17842332302260083262"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "addRGRoleAssignments": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "RGroleDefinitionIds": [
                      "b24988ac-6180-42a0-ab88-20f7382dd24c",
                      "22926164-76b3-42b3-bc55-97df8dab3e41"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1567859393178125257"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('Tags')]"
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-{2}', parameters('userIdentityName'), copyIndex(), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "12046791720435112264"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignmentRG",
                        "count": "[length(variables('RGroleDefinitionIds'))]"
                      },
                      "condition": "[parameters('addRGRoleAssignments')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-RG', parameters('userIdentityName'), copyIndex())]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "18441567381332934980"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "kvName": {
                    "value": "[format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "functionName": {
                    "value": "[parameters('functionname')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8871134978585325884"
                    }
                  },
                  "parameters": {
                    "kvName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "functionName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2024-12-01-preview",
                      "name": "[parameters('kvName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "tenantId": "[subscription().tenantId]",
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": false,
                        "enabledForTemplateDeployment": false,
                        "enableSoftDelete": true,
                        "softDeleteRetentionInDays": 90,
                        "enableRbacAuthorization": true,
                        "provisioningState": "Succeeded",
                        "publicNetworkAccess": "Enabled",
                        "enablePurgeProtection": true
                      }
                    },
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2021-11-01-preview",
                      "name": "[format('{0}/{1}', parameters('kvName'), 'FunctionKey')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "attributes": {
                          "enabled": true
                        },
                        "contentType": "string",
                        "value": "[listKeys(resourceId('Microsoft.Web/sites/host', parameters('functionName'), 'default'), '2022-09-01').functionKeys.monitoringKey]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "kvResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('functionname'))]"
              ]
            },
            {
              "copy": {
                "name": "userIdentityRoleAssignments",
                "count": "[length(variables('logicappRequiredRoleassignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('logiapprbac-{0}', copyIndex())]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "resourcename": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))), '2022-09-01').outputs.kvResourceId.value]"
                  },
                  "principalId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('logicappname')), '2022-09-01').outputs.logicAppPrincipalId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('logicappRequiredRoleassignments')[copyIndex()]]"
                  },
                  "roleShortName": {
                    "value": "[variables('logicappRequiredRoleassignments')[copyIndex()]]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "12046791720435112264"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6)))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('logicappname'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('PacksDefStorage-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerName": {
                    "value": "amba"
                  },
                  "filename": {
                    "value": "PacksDef.json"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "16298652573223470247"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "filename": {
                      "type": "string"
                    },
                    "containerName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "tempfilename": "download"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('deployscript-PacksDef-{0}', parameters('filename'))]",
                      "tags": "[parameters('tags')]",
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "AZURE_STORAGE_KEY",
                            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0}.tmp && cat {1}.tmp | base64 -d > {2}.zip && unzip {3}.zip  && az storage blob upload -f {4} -c {5} -n {6} --overwrite true', variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('containerName'), parameters('filename'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "fileURL": {
                      "type": "string",
                      "value": "[format('{0}{1}/{2}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('ambaAlertsUpload-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerName": {
                    "value": "amba"
                  },
                  "filename": {
                    "value": "amba-alerts.json"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "15001363766537026464"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "filename": {
                      "type": "string"
                    },
                    "containerName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "tempfilename": "download"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('DS-amba-{0}-{1}-{2}', parameters('filename'), parameters('storageAccountName'), parameters('location'))]",
                      "tags": "[parameters('tags')]",
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "AZURE_STORAGE_KEY",
                            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0}.tmp && cat {1}.tmp | base64 -d > {2}.zip && unzip {3}.zip  && az storage blob upload -f {4} -c {5} -n {6} --overwrite true', variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('containerName'), parameters('filename'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "fileURL": {
                      "type": "string",
                      "value": "[format('{0}{1}/{2}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('modulesstorage-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerName": {
                    "value": "modules"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2288007407109399581"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "containerName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "tempfilename": "download"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('deployscript-Modules-{0}', parameters('location'))]",
                      "tags": "[parameters('tags')]",
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "AZURE_STORAGE_KEY",
                            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0}.tmp && cat {1}.tmp | base64 -d > {2}.zip && unzip {3}.zip  && for file in *.bicep; do az storage blob upload -f \"$file\" -c {4} -n \"$file\" --overwrite true; done', variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), parameters('containerName'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "modulesURL": {
                      "type": "string",
                      "value": "[format('{0}{1}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('applicationstostorage-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerName": {
                    "value": "applications"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "4683971673523798158"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "containerName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": "UEsDBBQAAAAIAMZN11qti4JwuwoAACsLAAAIAAAAQUREUy56aXB1lldQk4sWRn+kKE1BCEWKIEWaURGkgyBNQhPphN4lhBZKKIomQqgBFBAIohSxEJBQJAlNweBRigQ0EJrU0JFyRCXAnXPnzpzRmfs97tl7v3wza5YthJVNEACAY4BjvIGr/rsy2BQbAHgeBwBeAAC8/XzDYDB/XwQ4POpin5N32Nhlvn3wlcPpzlMvm1wttB93fjW84qAMT6fX81eJpZMURDZVovLN7+gSI+gHu3fy1mSt0pvG0ufvP5/dnJydkEHeAqBzJJWL1c+asUkbLDh8JXuJmIsArFpFNrjY8J6fH/yOMsvpTNnGK8o1yWrhzh9OkudHsg2bG24Ks7LjwnDseR8pUpZNeZW8346AmqTxYjntWhsJ4EWcmIf0kzugAvVjqz+u4RPrAk9Fyytnclfahhsd66Hb45KDFxJO/NJJ4Mtt9qtU+gVrGIW9XVITPJKNTXVQbyxgP/7SKbrFDgRx51K7+DE1w6Dy5C9UaNE5KBj6Ve+bE//TG9LZWHcvIvrWijyncgv7kenci3RZ4thJP4KxyXxAJejaZy++TrNvegDQzHpPunfSbBaufp43sp6lNadABWXzWIxrTKmSuhCfFVCegQEfe1tZe51zao+nPbXK5EecztZ7qbPPuUYI5L7XeKeoyaRRzBsNb23ccltOrMlO20A7DUINViakgaHPHsr5hGEiyTHIVIY5vlkqLDOi3OWU8Sv1Af7Gm4Hoxg1DEaLpY9BZ5yU7REieoIU7bJ5esuijAtF9NyMHl+KIYUaqSoAJtNHRQcTF5Rmytoh7gHkGT5/rQpDw2cDg5pGPVPDDjb9XcUM3yzNaDsUVEw2d+7JqBz9xGGmwe3beO9tq5KV49lb/uXWkyzMtvDNfUvSH3fgQd4umYfwyjQRTQl+IFnskRUQRArcXvuEh9OAKc0fNZHDZ8XigYzsSCGx91U6T8Rj5objdhoW5mzAJ6UoJtkumg9xvUmpoU4amoR4fheRFCG/Ud5vAl5BpGhOlci3TjjHB4WylK9mKe6sJq8831qo0zamhFHppFbV9AJrP0GojKHC0HZSkDy2vhQchKrqt3t+oabG3Ax3V6DUw0NcVZ55kQ8V0rdf0nuKS4Hjl9gKaqGjeLHAJbaZEeyuRl1LQEUMb7gA9HclPiC0izBaa1U1ZBVT4bcGLM7M9ceL7rKFPXY4kyBFLCXvlTLdu3MKGz17SzY5qV+sGWauypkaGVhbvzL7Tq/zCY/GjdEFOMc5ru8tbzABOLSo4aSJqDai1FzAWsGfHH5yuSsKiZbNe74msxu50oS/8DOap9Y4YQOl/LpZK0YA6/yywovrp62pecL3/KvTWuaIdWUjTEGycaHaksFVxCe1kB7LmjDNsp5WItRWsD2LvyD23ahhdZdr0/nVvsMICN30P5SNK6uenW2Czar9OC8UgTto0Vhmn1etcRol9PeEy9n4p15GLnK2UIsDki5HiWyBRJ3LkllSShNyRMTzfywazg1sZzHtdNaafA2sj3MiUHi9rOsyLsRZvwPB0qPX95XYKP1ZwVWdyFGo6kwSv1UF8csrE0Q66duOrH4bImFrnRhzeHB1kX+D1NjhWHiIZOrP+AJFnTXGPd0vzgOxOaEz46eocNmRptVhPH70GsviIv0dfFJ84X1y1x/14nEw2ZbXp9KnNDzfqX5HX32mruvxp4xrmxG3UI/Qr2bgZU6wkO7lghKifHubxaW1NbWoG8Wza3Cn6apBrqek3Tu2JFLLRafdhaNp+9OXiDq67x6Vl4Aq9Ft2n3tZUHMOSHR+qbVJzo9WOP4I2JLaZnnvSCm/Hm+J3gw5uvsIyPQsZ521/I6EI16I8lRUAMo8DgNB/SegX9T8WBofBEd5RIeC4UFhpoXsY3YIvpWzFgmHgPI76aW5tw5+a/qDZ0CKh3ChfDD7+lU/ZSwZmRD09Jdm36sM0kSYarfb3t26v61xameqIb2WkyXGLS266CAjw8W+dV3dVC7LrenN2rgAjyiIdNbHfj7YZDt7UUJ8cYpyf/OR716y3yxAb+ndQeUo36ZaN0dt0MBh88fX4bIO9DW8B2zhB/oz8TDY6pdxlhuBgfOlMc3dLYzB1jqdQPhSqV/I1z9lePWPozZMejcQFtm7Zmk1zlS/80rHGom6+BvZiZe2U4KFBptvw31NoIStSo2YFJDVWTZNWKi/RvzgdoDund2IkJ9ymu7jddcFp68vUTwpG/wYHT4SIKmWalZ9b6Mf40yLNpSTMwARRj3WdWzOH7C5wIRAe1owJMeo82eFV+Jp+qeMtLYiM8dfxVTZHN6hj41QWo/rQUe0KB1vwpsKLnPzKHLI8o3OR+89OLUdVS/ok/p34IS0yYD2NKGosGXISjBl5ZvbzELe8Ypnvv/P5elJbxcvi5Rf9sQonkIo9guOSBvZydz3XE323z63Pb3zRiydTFnKM4qErjxB5yfn+JJEq2CzfhSFwLh4DkwhcMVqH95lvYpu0V3ArGwbNRwhCDiRBjrpvTQlpxWD100tmdtKsDi6dZ/w/jMdt2ueSIz2Qkwe9WUEmOw9GDtwW1rjFhEgddvZ2oLu0G2V3913JKITddQpG64nq0jaoDF8e97zQJ/YB+MyIMB27+0E8ouc2GhrEXnSTd9jT407ddo5Z/UtXrc2i96oxFjuFpSrfNyQWICa6vuVfVG+/bWQEVpTGlONKpmdNQaKOi/UvMiQM7mN9d1SKzsc56hvLcLo59HZxXveclcYaKtl/OaxhMkshrRNE99Ra0rQSeVkUVL3qP/CgQQ/msspWPZ/vMKzJQAZ5ms6vWuvkYrd+IaWSIiiWIIc5mY5YS7dUFz1Y0S4S1YOyfvr+kdKvFwQF1c3K89VW2g2x2+sWt/0LSgp73OhQ1xRrrRvq05Vcfk6kxbFetve1gYwu7yaM3feNtpF21r6SxbS5xbnxQA8H1pmQousDR0mWxL/aSNWZSMf9jH7tRoiQqnozfYJCRxlX35BcE6Y8cCCdrt7jfRcGr8OUZ0Z1FmuJzXtECqcsJ8rZecy/NIzPwvo61WEeClQd9iXQEHEDW4oN0O8fX+NK7x4X1l3pzc7f1y6jOjdZtHMwh2mVYVMbVymWmw+XnPoO2Ke8TCwzivHrkSn+knDYbXXtXKRSRHdJTcYLaxO/FwsPX/vEKof85TWghNitUqgz2Q6lMm7/TgH+E7gnsiwAUMICANwAAATDoxDeMNg/NmSSU2/ddYEvZdccmXp/6crRo/WOPpjiGKNk81wRgvN3db139TJ7VPlzuqKs2G7lxwXA9u2p6sOOOuzAKN0NNW29aBItFciUXujR98oXNlGkopvDk9xlID4wbxIHketNKvQS8qicCwLWUxVrWdvzU9w6Rx4AfITiXz8R8mbBWl0e/MBhH8AmrhAp+I2jPZAol2FrO3wLOz1JEz3Bo7qhjZC3mhxiCzXW3MeMUWx/4KOu1TlercblIj/p0GX88ougo7kktcF2MUPRNbxJn4tw2OFmYI2iKofLskTxZPnos5HkxNBzUErIhojE1ZiKzLT7qFZfUAksaE1NOlLKacDw0ebRz2cwrcnl6PnTLAzzZOjeY/45SDcwLzIw0GZrkx4rpbTJawthOSII/H+9/D2/yeafp3/y+N9wsf8/Ov/54882/w0f52/d2kLYOf4ZswKsQAsAAO5c/2z9B1BLAQIUABQAAAAIAMZN11qti4JwuwoAACsLAAAIAAAAAAAAAAAAAAAAAAAAAABBRERTLnppcFBLBQYAAAAAAQABADYAAADhCgAAAAA=",
                    "tempfilename": "download"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('deployscript-applications-{0}', parameters('location'))]",
                      "tags": "[parameters('tags')]",
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "AZURE_STORAGE_KEY",
                            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0}.tmp && cat {1}.tmp | base64 -d > {2}.zip && unzip {3}.zip  && for file in *.zip; do az storage blob upload -f \"$file\" -c {4} -n \"$file\" --overwrite true; done', variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), parameters('containerName'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "applicationsURL": {
                      "type": "string",
                      "value": "[format('{0}{1}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('amgdupload-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "containerName": {
                    "value": "dashboards"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "1659159301658937485"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "containerName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "tempfilename": "download"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[format('deployscript-amgd-{0}', parameters('location'))]",
                      "tags": "[parameters('tags')]",
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "AZURE_STORAGE_KEY",
                            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0}.tmp && cat {1}.tmp | base64 -d > {2}.zip && unzip {3}.zip  && for file in *.zip; do az storage blob upload -f \"$file\" -c {4} -n \"$file\" --overwrite true; done', variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), variables('tempfilename'), parameters('containerName'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "amgdstorageURL": {
                      "type": "string",
                      "value": "[format('{0}{1}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'))]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "amgdStorageURL": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amgdupload-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.amgdstorageURL.value]"
            },
            "packsDefStorageURL": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('PacksDefStorage-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value]"
            },
            "ambaStorageURL": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('ambaAlertsUpload-{0}-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value]"
            },
            "packsUserManagedIdentityId": {
              "type": "string",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
            },
            "packsUserManagedResourceId": {
              "type": "string",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
            },
            "dceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.dceId.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('logAnalytics-Deployment-{0}-{1}', parameters('location'), parameters('instanceName')))]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('STOmonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    }
  ]
}