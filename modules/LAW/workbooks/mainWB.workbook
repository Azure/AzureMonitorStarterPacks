{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# FTA - Azure Monitor Starter Packs"
      },
      "name": "text - 0"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "b859a03f-2283-43dd-8536-42714bbfced6",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "query": "resources\r\n| where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by subscriptionId\r\n| project value = strcat('/subscriptions/', subscriptionId), label = subscriptionId, selected = true",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "e101dbda-5c3b-469e-a505-7377f2ff5a43",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "isRequired": true,
            "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by id, name\r\n| project label = id, value = id, selected = true",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": "/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca/resourceGroups/LogAnalytics/providers/Microsoft.OperationalInsights/workspaces/MSEye"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "Parameters"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "6a683959-7ed3-42b1-a509-3cdcd18017cf",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Alerts",
            "subTarget": "alerts",
            "style": "link"
          },
          {
            "id": "6a683959-7fd3-42b1-a509-3cdcd18017cf",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Alert Rules",
            "subTarget": "alertrules",
            "style": "link"
          },
          {
            "id": "6a683359-5ed3-42b1-a509-3cdcd18017cf",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "DCRs",
            "subTarget": "dcrs",
            "style": "link"
          },
          {
            "id": "6a383959-1ed3-42b1-a509-3cdcd18017cf",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Servers",
            "subTarget": "servers",
            "style": "link"
          },
          {
            "id": "6b683959-7ed3-42b1-a509-3cdcd18017cf",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Inventory",
            "subTarget": "inventory",
            "style": "link"
          }
        ]
      },
      "name": "links - 1"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "6f564c50-7400-450d-a76d-4b82b7cf15c9",
            "version": "KqlParameterItem/1.0",
            "name": "ShowResolved",
            "label": "Show Resolved",
            "type": 10,
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"[\\n    { \\\"value\\\":\\\"True\\\", \\\"label\\\":\\\"Yes\\\" },\\n    { \\\"value\\\":\\\"False\\\", \\\"label\\\":\\\"No\\\", \\\"selected\\\":true }\\n]\",\"transformers\":null}",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 8
          }
        ],
        "style": "pills",
        "queryType": 8
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "alerts"
      },
      "name": "parameters - 9"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "alertsmanagementresources\n| where type == \"microsoft.alertsmanagement/alerts\"\n| extend ruleId = tostring(properties.essentials.alertRule)\n| where ruleId != '' \n| project name, subscriptionId, Value=properties.context.context.condition.allOf[0].metricValue, Threshold=properties.context.context.condition.allOf[0].threshold, Time=properties.essentials.startDateTime, properties.essentials.monitorCondition\n| where Time > ago(24h)",
        "size": 0,
        "title": "Alerts - Last 24h",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "alerts"
      },
      "name": "Rule Alerts"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources  \n| where type=='microsoft.insights/metricalerts' or type == \"microsoft.insights/scheduledqueryrules\"\n| mv-expand tags \n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey])\n| where tagKey == 'MonitoredBy' and tagValue  == 'Azure Monitor Starter Packs'\n| project name, AlertType=replace(\"microsoft.insights/\", '',type), Metric=properties.criteria.allOf[0].name",
        "size": 0,
        "title": "Alert Rules",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Metric",
              "formatter": 1
            }
          ],
          "sortBy": [
            {
              "itemKey": "name",
              "sortOrder": 1
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "name",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "alertrules"
      },
      "name": "Alert Rules"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type == \"microsoft.compute/virtualmachines\"\r\n| extend PowerStatus = properties.extended.instanceView.powerState.displayStatus,\r\n\tOSType = properties.storageProfile.osDisk.osType,\r\n    IdentityType = identity.type\r\n| project name, id, location, resourceGroup, PowerStatus, OSType, IdentityType\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"microsoft.compute/virtualmachines/extensions\" and (name == \"MicrosoftMonitoringAgent\" or name == \"OmsAgentForLinux\" or name == \"MMAExtension\")\r\n| parse id with * \"/virtualMachines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion\r\n| project ComputerName, MMA = name, MMAStatus = status, version\r\n) on $left.name == $right.ComputerName\r\n| join kind=leftouter (\r\nresources\r\n| where type contains \"microsoft.compute/virtualmachines/extensions\" and (name == \"AzureMonitorWindowsAgent\" or name == \"AzureMonitorLinuxAgent\")\r\n| parse id with * \"/virtualMachines/\" ComputerName \"/\" *\r\n| extend extensionType = properties.type, \r\n\tstatus = properties.provisioningState,\r\n\tversion = properties.typeHandlerVersion\r\n| project ComputerName, AMA = name, AMAStatus = status, AMAVersion = version\r\n) on $left.name == $right.ComputerName\r\n| extend Progress = case(isnotempty(MMA) and isnotempty(AMA), \"In Progress\",\r\n                        isnotempty(MMA) and isempty(AMA), \"Not Started\",\r\n                        isempty(MMA) and isnotempty(AMA), \"Completed\", \"Other\")\r\n| project name, id, location, resourceGroup, OSType, PowerStatus, MMA, MMAStatus, IdentityType, AMA, AMAStatus, AMAVersion, Progress",
        "size": 1,
        "showAnalytics": true,
        "noDataMessage": "No Azure Virtual Machines in the selected subscriptions. Please select the subscription(s) that contain your virtual machine(s)",
        "showRefreshButton": true,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "rowLimit": 5000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "id",
              "label": "VM"
            },
            {
              "columnId": "location",
              "label": "Location"
            },
            {
              "columnId": "resourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "PowerStatus",
              "label": "VM Status"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "0",
        "comparison": "isEqualTo",
        "value": "0"
      },
      "name": "azurevmquery-arg"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| mv-expand tags \n| extend tagKey = tostring(bag_keys(tags)[0])\n| extend tagValue = tostring(tags[tagKey])\n| where (tagKey == 'MonitoredBy' and tagValue  == 'Azure Monitor Starter Packs') or name has \"MSVMI\"\n| project name, streams=properties.dataFlows[0].streams",
        "size": 0,
        "title": "DCR Rules",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "dcrs"
      },
      "name": "dcrs"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Heartbeat\r\n| where ResourceProvider == \"Microsoft.Compute\" and ResourceType != \"virtualMachineScaleSets\"  and ComputerEnvironment != \"Non-Azure\" //and SubscriptionId == '{Subscription:id}'\r\n| summarize LastHeartBeat = arg_max(TimeGenerated, *) by _ResourceId\r\n| extend TimeFromNow = now() - LastHeartBeat\r\n| extend [\"TimeAgo\"] = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1s), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\r\n| join kind=leftouter  (Heartbeat\r\n| where Category == \"SCOM Agent\"\r\n| summarize arg_max(TimeGenerated, *) by Computer\r\n| project _ResourceId, Category, Computer) on _ResourceId\r\n| extend SCOMAgent = iff(isnotempty(Computer1), \"Yes\", \"No\")\r\n| project LastHeartBeat, [\"Time\"]=strcat('🕒 ', TimeAgo), _ResourceId, Computer, SCOMAgent",
        "size": 1,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "gridSettings": {
          "rowLimit": 5000
        }
      },
      "conditionalVisibility": {
        "parameterName": "0",
        "comparison": "isEqualTo",
        "value": "0"
      },
      "name": "heartbeatquery"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\",\"mergeType\":\"leftouter\",\"leftTable\":\"heartbeatquery\",\"rightTable\":\"azurevmquery-arg\",\"leftColumn\":\"_ResourceId\",\"rightColumn\":\"id\"}],\"projectRename\":[{\"originalName\":\"[azurevmquery-arg].id\",\"mergedName\":\"VM\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].name\",\"mergedName\":\"name\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[heartbeatquery]._ResourceId\",\"mergedName\":\"_ResourceId\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[heartbeatquery].Computer\",\"mergedName\":\"Computer\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].location\",\"mergedName\":\"Location\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].resourceGroup\",\"mergedName\":\"Resource Group\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].OSType\",\"mergedName\":\"OSType\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].PowerStatus\",\"mergedName\":\"VM Status\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[heartbeatquery].LastHeartBeat\",\"mergedName\":\"LastHeartBeat\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].MMA\",\"mergedName\":\"MMA\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].MMAStatus\",\"mergedName\":\"MMAStatus\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].IdentityType\",\"mergedName\":\"IdentityType\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].AMA\",\"mergedName\":\"AMA\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].AMAStatus\",\"mergedName\":\"AMAStatus\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].AMAVersion\",\"mergedName\":\"AMAVersion\",\"fromId\":\"unknown\"},{\"originalName\":\"[heartbeatquery].Time\",\"mergedName\":\"Time\",\"fromId\":\"fec3768e-dd50-424e-a15f-0919f1cc20ce\"},{\"originalName\":\"[azurevmquery-arg].Progress\",\"mergedName\":\"Progress\",\"fromId\":\"unknown\"},{\"originalName\":\"[heartbeatquery].Category\",\"mergedName\":\"Category\",\"fromId\":\"unknown\"},{\"originalName\":\"[heartbeatquery].SCOMAgent\",\"mergedName\":\"SCOMAgent\",\"fromId\":\"unknown\"}]}",
        "size": 0,
        "title": "{$rowCount} Azure Virtual Machines",
        "noDataMessage": "No Virtual Machines found in the selected workspace with a relationship with the selected workspace and a heartbeat in the last 7 days. Please select a different workspace/subscription.",
        "showRefreshButton": true,
        "showExportToExcel": true,
        "exportToExcelOptions": "all",
        "queryType": 7,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "VM",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "linkIsContextBlade": true,
                "showIcon": true,
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "name",
              "formatter": 5
            },
            {
              "columnMatch": "_ResourceId",
              "formatter": 5
            },
            {
              "columnMatch": "Computer",
              "formatter": 5
            },
            {
              "columnMatch": "Location",
              "formatter": 17,
              "formatOptions": {
                "customColumnWidthSetting": "16ch"
              }
            },
            {
              "columnMatch": "Resource Group",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "OSType",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "22ch"
              }
            },
            {
              "columnMatch": "LastHeartBeat",
              "formatter": 5
            },
            {
              "columnMatch": "MMA",
              "formatter": 5
            },
            {
              "columnMatch": "MMAStatus",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Succeeded",
                    "representation": "success",
                    "text": "Installed"
                  },
                  {
                    "operator": "is Empty",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "question",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "IdentityType",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "SystemAssigned",
                    "representation": "Blank",
                    "text": "Yes"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "No"
                  }
                ]
              }
            },
            {
              "columnMatch": "AMA",
              "formatter": 5
            },
            {
              "columnMatch": "AMAStatus",
              "formatter": 5
            },
            {
              "columnMatch": "AMAVersion",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "is Empty",
                    "representation": "Blank",
                    "text": "Not Installed"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "Agent Version {0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Progress",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Not Started",
                    "representation": "GetStarted",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "In Progress",
                    "representation": "Postpone",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Completed",
                    "representation": "SmileyHappy",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Monitoring",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "SCOMAgent",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Yes",
                    "representation": "1",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "Blank",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ],
          "rowLimit": 5000,
          "filter": true,
          "sortBy": [
            {
              "itemKey": "$gen_link_VM_0",
              "sortOrder": 1
            }
          ],
          "labelSettings": [
            {
              "columnId": "VM",
              "label": "VM Name"
            },
            {
              "columnId": "OSType",
              "label": "Operating System"
            },
            {
              "columnId": "MMAStatus",
              "label": "MMA/OMS Status"
            },
            {
              "columnId": "IdentityType",
              "label": "Managed Identity Enabled?"
            },
            {
              "columnId": "AMAVersion",
              "label": "AMA Installed"
            },
            {
              "columnId": "Time",
              "label": "AMA Status"
            },
            {
              "columnId": "Progress",
              "label": "Migration Status"
            },
            {
              "columnId": "SCOMAgent",
              "label": "SCOM Agent"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_link_VM_0",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "servers"
      },
      "name": "AzureVM-Combo"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "1113c4b3-f39b-4590-b0cd-705a69eb46e1",
            "version": "KqlParameterItem/1.0",
            "name": "ServersInv",
            "label": "Servers",
            "type": 2,
            "query": "let maxTimeGenerated=AzMAWindowsFeatures_CL_CL | summarize max(TimeGenerated);\nAzMAWindowsFeatures_CL_CL\n| where TimeGenerated == toscalar (maxTimeGenerated)\n| parse RawData with Time \",\" DisplayName \",\" Name \",\" FeatureType \",\" Depth\n| project-away RawData, Time\n| extend ServerName=split(_ResourceId,\"/\")[8]\n| summarize by tostring(ServerName)",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 172800000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": null
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "inventory"
      },
      "name": "parameters - 11"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let maxTimeGenerated=AzMAWindowsFeatures_CL_CL | summarize max(TimeGenerated);\nAzMAWindowsFeatures_CL_CL\n| where TimeGenerated == toscalar (maxTimeGenerated)\n| parse RawData with Time \",\" DisplayName \",\" Name \",\" FeatureType \",\" Depth\n| project-away RawData, Time\n| extend ServerName=split(_ResourceId,\"/\")[8]\n| where ServerName == \"{ServersInv}\"\n| summarize by DisplayName, FeatureType",
        "size": 0,
        "timeContext": {
          "durationMs": 604800000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "inventory"
      },
      "name": "query - 10"
    }
  ],
  "fallbackResourceIds": [
