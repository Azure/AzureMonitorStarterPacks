{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "3455671255350174580"
    }
  },
  "parameters": {
    "mgname": {
      "type": "string"
    },
    "subscriptionId": {
      "type": "string"
    },
    "resourceGroupName": {
      "type": "string"
    },
    "createNewResourceGroup": {
      "type": "bool",
      "defaultValue": false
    },
    "location": {
      "type": "string"
    },
    "assignmentLevel": {
      "type": "string"
    },
    "newLogAnalyticsWSName": {
      "type": "string",
      "defaultValue": ""
    },
    "createNewLogAnalyticsWS": {
      "type": "bool"
    },
    "existingLogAnalyticsWSId": {
      "type": "string",
      "defaultValue": ""
    },
    "deployAMApolicy": {
      "type": "bool"
    },
    "functionName": {
      "type": "string"
    },
    "grafanaLocation": {
      "type": "string"
    },
    "grafanaName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    }
  },
  "variables": {
    "solutionTag": "MonitorStarterPacks",
    "solutionVersion": "0.1"
  },
  "resources": [
    {
      "condition": "[parameters('createNewResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "resourceGroup-Deployment",
      "subscriptionId": "[parameters('subscriptionId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[variables('solutionVersion')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "9195451697593365350"
            }
          },
          "parameters": {
            "resourceGroupName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2023-07-01",
              "name": "[parameters('resourceGroupName')]",
              "location": "[parameters('location')]",
              "tags": {
                "solutionTag": "[parameters('solutionTag')]",
                "solutionVersion": "[parameters('solutionVersion')]"
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[parameters('createNewLogAnalyticsWS')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logAnalytics-Deployment",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('newLogAnalyticsWSName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "createNewLogAnalyticsWS": {
            "value": "[parameters('createNewLogAnalyticsWS')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "8619474227524068963"
            }
          },
          "parameters": {
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "newLogAnalyticsWSName": {
              "type": "string",
              "defaultValue": ""
            },
            "createNewLogAnalyticsWS": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', parameters('solutionTag'))]": "Log Analytics workspace"
              },
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            }
          ],
          "outputs": {
            "customerId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]"
            },
            "lawresourceid": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', 'resourceGroup-Deployment')]"
      ]
    },
    {
      "condition": "[parameters('deployAMApolicy')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "DeployAMAPolicy",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[variables('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "16550274399618917623"
            }
          },
          "parameters": {
            "solutionTag": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string"
            }
          },
          "variables": {
            "roledefinitionIds": [
              "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
              "48b40c6e-82e0-4eb3-90d5-19e40f49b624"
            ],
            "rulename": "[format('{0}-amaPolicy', parameters('solutionTag'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "amaPolicymg",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "initiativeDescription": {
                    "value": "[format('[{0}] This initiative deploys the AMA policy set', parameters('solutionTag'))]"
                  },
                  "initiativeDisplayName": {
                    "value": "[format('[{0}] Deploy agent with managed identity to Windows, Linux, VMs and Arc Servers and Scale Sets', parameters('solutionTag'))]"
                  },
                  "initiativeName": {
                    "value": "[format('[{0}]-DeployAMA', parameters('solutionTag'))]"
                  },
                  "category": {
                    "value": "Monitoring"
                  },
                  "version": {
                    "value": "1.0.0"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "4838987670497437880"
                    }
                  },
                  "parameters": {
                    "initiativeName": {
                      "type": "string",
                      "maxLength": 64,
                      "metadata": {
                        "description": "PolicySet name"
                      }
                    },
                    "initiativeDisplayName": {
                      "type": "string",
                      "maxLength": 128,
                      "metadata": {
                        "description": "PolicySet display Name"
                      }
                    },
                    "initiativeDescription": {
                      "type": "string",
                      "metadata": {
                        "description": "PolicySet description"
                      }
                    },
                    "solutionTag": {
                      "type": "string",
                      "minLength": 1,
                      "metadata": {
                        "description": "array of policy IDs"
                      }
                    },
                    "category": {
                      "type": "string",
                      "defaultValue": "Monitoring"
                    },
                    "version": {
                      "type": "string",
                      "defaultValue": "1.0.0"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policySetDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('initiativeName')]",
                      "properties": {
                        "description": "[parameters('initiativeDescription')]",
                        "displayName": "[parameters('initiativeDisplayName')]",
                        "metadata": {
                          "category": "[parameters('category')]",
                          "version": "[parameters('version')]",
                          "[format('{0}', parameters('solutionTag'))]": "Policy Set"
                        },
                        "parameters": {},
                        "policyDefinitions": [
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', 'ca817e41-e85a-4783-bc7f-dc532d36235e')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', 'a4034bc6-ae50-406d-bf76-50f4ee5a7811')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', '845857af-0333-4c5d-bbbc-6076697da122')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', '94f686d6-9a24-4e19-91f1-de937dc171a4')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', '4efbd9d8-6bc6-45f6-9be2-7fe9dd5d89ff')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {},
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', '17b3de92-f710-4cf4-aa55-0e7859f1ed7b')]",
                            "policyDefinitionReferenceId": ""
                          },
                          {
                            "parameters": {
                              "bringYourOwnUserAssignedManagedIdentity": {
                                "value": false
                              }
                            },
                            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', '59c3d93f-900b-4827-a8bd-562e7b956e7c')]",
                            "policyDefinitionReferenceId": ""
                          }
                        ],
                        "policyType": "Custom"
                      }
                    }
                  ],
                  "outputs": {
                    "policySetDefId": {
                      "type": "string",
                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policySetDefinitions', parameters('initiativeName'))]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('assignment-{0}', variables('rulename'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "policyDefinitionId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'amaPolicymg'), '2022-09-01').outputs.policySetDefId.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "assignmentName": {
                    "value": "[AMSP]AMA-Policies"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "18204016525654709950"
                    }
                  },
                  "parameters": {
                    "policyDefinitionId": {
                      "type": "string"
                    },
                    "assignmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "loc2": "[trim(parameters('location'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policyAssignments",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('assignmentName')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                        }
                      },
                      "location": "[variables('loc2')]",
                      "properties": {
                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                        "displayName": "[parameters('assignmentName')]",
                        "enforcementMode": "Default",
                        "metadata": {
                          "createdBy": "[parameters('solutionTag')]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'amaPolicymg')]",
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity')]"
              ]
            },
            {
              "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('assignment-{0}', variables('rulename'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "policyDefinitionId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'amaPolicymg'), '2022-09-01').outputs.policySetDefId.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "assignmentName": {
                    "value": "[format('assign-{0}', variables('rulename'))]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15632908880880169790"
                    }
                  },
                  "parameters": {
                    "policyDefinitionId": {
                      "type": "string"
                    },
                    "assignmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "loc2": "[trim(parameters('location'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policyAssignments",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('assignmentName')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                        }
                      },
                      "location": "[variables('loc2')]",
                      "properties": {
                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                        "displayName": "[parameters('assignmentName')]",
                        "enforcementMode": "Default",
                        "metadata": {
                          "createdBy": "[parameters('solutionTag')]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'amaPolicymg')]",
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AMAUserManagedIdentity",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('roledefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "AMAUserManagedIdentity"
                  },
                  "mgname": {
                    "value": "[managementGroup().name]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "2392605353847140975"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('userIdentityName')]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "17260189257503072595"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('userIdentityName')]",
                                "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                              }
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), copyIndex())]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "6314791387466906825"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "copy": {
                "name": "userIdentityRoleAssignments",
                "count": "[length(variables('roledefinitionIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMAUserManagedIdentityRoles-{0}', copyIndex())]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "resourcename": {
                    "value": "AMAUserManagedIdentity"
                  },
                  "principalId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('roledefinitionIds')[copyIndex()]]"
                  },
                  "roleShortName": {
                    "value": "[variables('roledefinitionIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "6314791387466906825"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'AMAUserManagedIdentity')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', 'resourceGroup-Deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "backend",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsLocation": {
            "value": "[parameters('location')]"
          },
          "functionname": {
            "value": "[parameters('functionName')]"
          },
          "grafanalocation": {
            "value": "[parameters('grafanaLocation')]"
          },
          "grafanaName": {
            "value": "[parameters('grafanaName')]"
          },
          "lawresourceid": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment'), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[variables('solutionVersion')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "2201698488874703278"
            }
          },
          "parameters": {
            "functionname": {
              "type": "string",
              "metadata": {
                "description": "The name for the function app that you wish to create"
              }
            },
            "location": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "lawresourceid": {
              "type": "string"
            },
            "grafanaName": {
              "type": "string"
            },
            "grafanalocation": {
              "type": "string"
            },
            "appInsightsLocation": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string",
              "metadata": {
                "description": "UTC timestamp used to create distinct deployment scripts for each deployment"
              }
            },
            "solutionVersion": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "mgname": {
              "type": "string"
            }
          },
          "variables": {
            "packPolicyRoleDefinitionIds": [
              "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "92aaf0da-9dab-42b6-94a3-d43ce8d16293"
            ],
            "backendFunctionRoleDefinitionIds": [
              "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
              "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
              "48b40c6e-82e0-4eb3-90d5-19e40f49b624",
              "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
              "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "36243c78-bf99-498c-9df9-86d9f8d28608",
              "f1a07417-d97a-45cb-824c-7a7467783830"
            ],
            "logicappRequiredRoleassignments": [
              "4633458b-17de-408a-b874-0445c86b69e6"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "backendFunction",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "appInsightsLocation": {
                    "value": "[parameters('appInsightsLocation')]"
                  },
                  "functionname": {
                    "value": "[parameters('functionname')]"
                  },
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "userManagedIdentity": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'functionUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "userManagedIdentityClientId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'functionUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                  },
                  "packsUserManagedId": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'packsUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "13830923059818661406"
                    }
                  },
                  "parameters": {
                    "functionname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "userManagedIdentity": {
                      "type": "string"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string"
                    },
                    "packsUserManagedId": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "filename": {
                      "type": "string",
                      "defaultValue": "discovery.zip"
                    },
                    "sasExpiry": {
                      "type": "string",
                      "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                    },
                    "lawresourceid": {
                      "type": "string"
                    },
                    "appInsightsLocation": {
                      "type": "string"
                    },
                    "apiManagementKey": {
                      "type": "string",
                      "defaultValue": "[base64(newGuid())]"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "discoveryContainerName": "discovery",
                    "tempfilename": "[format('{0}.tmp', parameters('filename'))]",
                    "sasConfig": {
                      "signedResourceTypes": "sco",
                      "signedPermission": "r",
                      "signedServices": "b",
                      "signedExpiry": "[parameters('sasExpiry')]",
                      "signedProtocol": "https",
                      "keyToSign": "key2"
                    },
                    "keyName": "monitoringKey"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "deployscript-MonstarPacks",
                      "tags": {
                        "[format('{0}', parameters('solutionTag'))]": "deploymentScript",
                        "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                      },
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.26.1",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "AZURE_STORAGE_KEY",
                            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5}', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/config', parameters('functionname'), 'appsettings')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}-farm', parameters('functionname'))]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "[format('{0}', parameters('solutionTag'))]": "serverfarm",
                        "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                      },
                      "sku": {
                        "name": "Y1",
                        "tier": "Dynamic",
                        "size": "Y1",
                        "family": "Y",
                        "capacity": 0
                      },
                      "kind": "functioapp",
                      "properties": {
                        "perSiteScaling": false,
                        "elasticScaleEnabled": false,
                        "maximumElasticWorkerCount": 1,
                        "isSpot": false,
                        "reserved": false,
                        "isXenon": false,
                        "hyperV": false,
                        "targetWorkerCount": 0,
                        "targetWorkerSizeId": 0,
                        "zoneRedundant": false
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2021-03-01",
                      "name": "[parameters('functionname')]",
                      "location": "[parameters('location')]",
                      "kind": "functionapp",
                      "tags": {
                        "[format('{0}', parameters('solutionTag'))]": "site",
                        "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                      },
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentity'))]": {}
                        }
                      },
                      "properties": {
                        "enabled": true,
                        "hostNameSslStates": [
                          {
                            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
                            "sslState": "Disabled",
                            "hostType": "Standard"
                          },
                          {
                            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
                            "sslState": "Disabled",
                            "hostType": "Repository"
                          }
                        ],
                        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]",
                        "reserved": false,
                        "isXenon": false,
                        "hyperV": false,
                        "siteConfig": {
                          "numberOfWorkers": 1,
                          "acrUseManagedIdentityCreds": false,
                          "alwaysOn": false,
                          "ipSecurityRestrictions": [
                            {
                              "ipAddress": "Any",
                              "action": "Allow",
                              "priority": 1,
                              "name": "Allow all",
                              "description": "Allow all access"
                            }
                          ],
                          "scmIpSecurityRestrictions": [
                            {
                              "ipAddress": "Any",
                              "action": "Allow",
                              "priority": 1,
                              "name": "Allow all",
                              "description": "Allow all access"
                            }
                          ],
                          "http20Enabled": false,
                          "functionAppScaleLimit": 200,
                          "minimumElasticInstanceCount": 0
                        },
                        "scmSiteAlsoStopped": false,
                        "clientAffinityEnabled": false,
                        "clientCertEnabled": false,
                        "clientCertMode": "Required",
                        "hostNamesDisabled": false,
                        "containerSize": 1536,
                        "dailyMemoryTimeQuota": 0,
                        "httpsOnly": false,
                        "redundancyMode": "None",
                        "storageAccountRequired": false,
                        "keyVaultReferenceIdentity": "SystemAssigned"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', parameters('functionname'), 'appsettings')]",
                      "properties": {
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]",
                        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]",
                        "WEBSITE_CONTENTSHARE": "[parameters('storageAccountName')]",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "ResourceGroup": "[resourceGroup().name]",
                        "SolutionTag": "[parameters('solutionTag')]",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey)]",
                        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                        "MSI_CLIENT_ID": "[parameters('userManagedIdentityClientId')]",
                        "PacksUserManagedId": "[parameters('packsUserManagedId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('functionname'))]",
                        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/extensions",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}', parameters('functionname'), 'MSDeploy')]",
                      "properties": {
                        "packageUri": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, variables('discoveryContainerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]",
                        "[resourceId('Microsoft.Resources/deploymentScripts', 'deployscript-MonstarPacks')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('functionname')]",
                      "tags": {
                        "[format('{0}', parameters('solutionTag'))]": "InsightsComponent",
                        "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                      },
                      "location": "[parameters('appInsightsLocation')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "publicNetworkAccessForIngestion": "Enabled",
                        "publicNetworkAccessForQuery": "Enabled",
                        "WorkspaceResourceId": "[parameters('lawresourceid')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites/host/functionKeys",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/default/{1}', parameters('functionname'), variables('keyName'))]",
                      "properties": {
                        "name": "[variables('keyName')]",
                        "value": "[parameters('apiManagementKey')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/config', parameters('functionname'), 'appsettings')]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'functionUserManagedIdentity')]",
                "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'packsUserManagedIdentity')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "BackendLogicApp",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "functioname": {
                    "value": "[parameters('functionname')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "keyvaultid": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monstarkeyvault'), '2022-09-01').outputs.kvResourceId.value]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "8748128381032461425"
                    }
                  },
                  "parameters": {
                    "functioname": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "keyvaultid": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "keyVaultName": "[split(parameters('keyvaultid'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Logic/workflows",
                      "apiVersion": "2019-05-01",
                      "name": "MonitorStarterPacks-Backend",
                      "tags": {
                        "[format('{0}', parameters('solutionTag'))]": "logicapp",
                        "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                      },
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "state": "Enabled",
                        "definition": {
                          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "$connections": {
                              "defaultValue": {},
                              "type": "Object"
                            }
                          },
                          "triggers": {
                            "manual": {
                              "type": "Request",
                              "kind": "Http",
                              "inputs": {}
                            }
                          },
                          "actions": {
                            "Get_Secret": {
                              "runAfter": {
                                "Parse_JSON": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('FunctionKey')}/value"
                              }
                            },
                            "Parse_JSON": {
                              "runAfter": {},
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                  "properties": {
                                    "function": {
                                      "type": "string"
                                    },
                                    "functionBody": {
                                      "properties": {},
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Switch": {
                              "runAfter": {
                                "Get_Secret": [
                                  "Succeeded"
                                ]
                              },
                              "cases": {
                                "Case": {
                                  "case": "tagmgmt",
                                  "actions": {
                                    "tagmgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "Headers": {
                                          "x-functions-key": "[listKeys(resourceId('Microsoft.Web/sites/host', parameters('functioname'), 'default'), '2022-09-01').functionKeys.monitoringKey]"
                                        },
                                        "function": {
                                          "id": "[format('{0}/functions/tagmgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_2": {
                                  "case": "alertmgmt",
                                  "actions": {
                                    "alertConfigMgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/alertConfigMgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_3": {
                                  "case": "policymgmt",
                                  "actions": {
                                    "policymgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/policymgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "default": {
                                "actions": {}
                              },
                              "expression": "@body('Parse_JSON')?['Function']",
                              "type": "Switch"
                            }
                          },
                          "outputs": {}
                        },
                        "parameters": {
                          "$connections": {
                            "value": {
                              "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'keyvault')]",
                                "connectionName": "keyvault",
                                "connectionProperties": {
                                  "authentication": {
                                    "type": "ManagedServiceIdentity"
                                  }
                                },
                                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/eastus/managedApis/keyvault', parameters('subscriptionId'))]"
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/connections', 'keyvault')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/connections",
                      "apiVersion": "2018-07-01-preview",
                      "name": "keyvault",
                      "properties": {
                        "displayName": "KeyVault",
                        "authenticatedUser": {},
                        "overallStatus": "Ready",
                        "statuses": [
                          {
                            "status": "Ready"
                          }
                        ],
                        "connectionState": "Enabled",
                        "parameterValueSet": {
                          "name": "oauthMI",
                          "values": {
                            "vaultName": {
                              "value": "[variables('keyVaultName')]"
                            }
                          }
                        },
                        "customParameterValues": {},
                        "createdTime": "2023-10-12T20:52:26.0864876Z",
                        "changedTime": "2023-10-12T20:52:26.0864876Z",
                        "api": {
                          "name": "keyvault",
                          "displayName": "Azure Key Vault",
                          "description": "Azure Key Vault is a service to securely store and access secrets.",
                          "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1656/1.0.1656.3432/keyvault/icon.png",
                          "brandColor": "#0079d6",
                          "category": "Standard",
                          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/keyvault', parameters('subscriptionId'), parameters('location'))]",
                          "type": "Microsoft.Web/locations/managedApis"
                        },
                        "testLinks": [],
                        "testRequests": []
                      },
                      "location": "[parameters('location')]"
                    }
                  ],
                  "outputs": {
                    "logicAppPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Logic/workflows', 'MonitorStarterPacks-Backend'), '2019-05-01', 'full').identity.principalId]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'backendFunction')]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monstarkeyvault')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "workbookdeployment",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "17645314487710736353"
                    }
                  },
                  "parameters": {
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "lawresourceid": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "wbConfig": "{\n    \"version\": \"Notebook/1.0\",\n    \"items\": [\n      {\n        \"type\": 1,\n        \"content\": {\n          \"json\": \"# Azure Monitor Starter Packs - Admin Centre\\n\\n\\n\"\n        },\n        \"customWidth\": \"50\",\n        \"name\": \"textTitle\"\n      },\n      {\n        \"type\": 9,\n        \"content\": {\n          \"version\": \"KqlParameterItem/1.0\",\n          \"parameters\": [\n            {\n              \"id\": \"741661c9-5e51-44bc-8e8e-bfc6396f2646\",\n              \"version\": \"KqlParameterItem/1.0\",\n              \"name\": \"showHelp\",\n              \"label\": \"Show Help Info\",\n              \"type\": 10,\n              \"isRequired\": true,\n              \"typeSettings\": {\n                \"additionalResourceOptions\": [],\n                \"showDefault\": false\n              },\n              \"jsonData\": \"[\\n    { \\\"value\\\":\\\"yes\\\", \\\"label\\\":\\\"Yes\\\",\\\"default\\\": \\\"yes\\\" },\\n    { \\\"value\\\":\\\"no\\\", \\\"label\\\":\\\"No\\\" }\\n]\",\n              \"timeContext\": {\n                \"durationMs\": 86400000\n              },\n              \"value\": \"no\"\n            }\n          ],\n          \"style\": \"above\",\n          \"queryType\": 0,\n          \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n        },\n        \"customWidth\": \"50\",\n        \"name\": \"showHelpparameter\"\n      },\n      {\n        \"type\": 11,\n        \"content\": {\n          \"version\": \"LinkItem/1.0\",\n          \"style\": \"tabs\",\n          \"links\": [\n            {\n              \"id\": \"a9a63932-4a11-4fe1-938c-02619e609193\",\n              \"cellValue\": \"tabSelection\",\n              \"linkTarget\": \"parameter\",\n              \"linkLabel\": \"Getting Started\",\n              \"subTarget\": \"gettingstarted\",\n              \"style\": \"link\"\n            },\n            {\n              \"id\": \"4f0ca437-37b0-42f6-a150-e994338f5185\",\n              \"cellValue\": \"tabSelection\",\n              \"linkTarget\": \"parameter\",\n              \"linkLabel\": \"Status\",\n              \"subTarget\": \"status\",\n              \"style\": \"link\"\n            },\n            {\n              \"id\": \"15f0fa97-4286-48d6-9dea-26a956197d26\",\n              \"cellValue\": \"tabSelection\",\n              \"linkTarget\": \"parameter\",\n              \"linkLabel\": \"Servers\",\n              \"subTarget\": \"discovery\",\n              \"style\": \"link\"\n            },\n            {\n              \"id\": \"7499a88f-a536-41d7-9b58-9ebae1b5290e\",\n              \"cellValue\": \"tabSelection\",\n              \"linkTarget\": \"parameter\",\n              \"linkLabel\": \"Alert Setup\",\n              \"subTarget\": \"alertmanagement\",\n              \"style\": \"link\"\n            },\n            {\n              \"id\": \"3a19e3a9-d64d-41d8-a313-3a60db36bcc4\",\n              \"cellValue\": \"tabSelection\",\n              \"linkTarget\": \"parameter\",\n              \"linkLabel\": \"Policy Management\",\n              \"subTarget\": \"policystatus\",\n              \"style\": \"link\"\n            },\n            {\n              \"id\": \"c2a67d72-dd46-44ea-adba-b9d70915c607\",\n              \"cellValue\": \"tabSelection\",\n              \"linkTarget\": \"parameter\",\n              \"linkLabel\": \"Pack Status\",\n              \"subTarget\": \"rulemanagement\",\n              \"style\": \"link\"\n            },\n            {\n              \"id\": \"d8f7936d-170f-430d-af7d-ac22115a9e38\",\n              \"cellValue\": \"tabSelection\",\n              \"linkTarget\": \"parameter\",\n              \"linkLabel\": \"Agent Info\",\n              \"subTarget\": \"agentmgmt\",\n              \"style\": \"link\"\n            },\n            {\n              \"id\": \"e1f636a4-1593-49ef-bf35-abf708e2be48\",\n              \"cellValue\": \"tabSelection\",\n              \"linkTarget\": \"parameter\",\n              \"linkLabel\": \"Configuration\",\n              \"subTarget\": \"backend\",\n              \"style\": \"link\"\n            }\n          ]\n        },\n        \"name\": \"mainLinksTab\"\n      },\n      {\n        \"type\": 12,\n        \"content\": {\n          \"version\": \"NotebookGroup/1.0\",\n          \"groupType\": \"editable\",\n          \"items\": [\n            {\n              \"type\": 1,\n              \"content\": {\n                \"json\": \"## General Parameters\",\n                \"style\": \"info\"\n              },\n              \"name\": \"text - 3\"\n            },\n            {\n              \"type\": 9,\n              \"content\": {\n                \"version\": \"KqlParameterItem/1.0\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"parameters\": [\n                  {\n                    \"id\": \"7a778b2c-619d-4f82-bd1c-810f853af6fd\",\n                    \"version\": \"KqlParameterItem/1.0\",\n                    \"name\": \"Subscriptions\",\n                    \"type\": 6,\n                    \"isRequired\": true,\n                    \"isGlobal\": true,\n                    \"multiSelect\": true,\n                    \"quote\": \"'\",\n                    \"delimiter\": \",\",\n                    \"typeSettings\": {\n                      \"additionalResourceOptions\": [\n                        \"value::all\"\n                      ],\n                      \"includeAll\": false,\n                      \"showDefault\": false\n                    },\n                    \"timeContext\": {\n                      \"durationMs\": 86400000\n                    },\n                    \"value\": [\n                      \"/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca\",\n                      \"/subscriptions/b1e924f9-d16f-4260-a3c8-ff1ee462956b\"\n                    ]\n                  },\n                  {\n                    \"id\": \"1efb8bbe-532a-491b-b3c4-55f1402ee280\",\n                    \"version\": \"KqlParameterItem/1.0\",\n                    \"name\": \"logicAppResource\",\n                    \"label\": \"Logic App\",\n                    \"type\": 5,\n                    \"isRequired\": true,\n                    \"query\": \"resources\\n| where type == \\\"microsoft.logic/workflows\\\" \\n| where isnotempty(tags.MonitorStarterPacks)\\n| project Id=id, Name=name\",\n                    \"crossComponentResources\": [\n                      \"value::tenant\"\n                    ],\n                    \"typeSettings\": {\n                      \"resourceTypeFilter\": {\n                        \"microsoft.logic/workflows\": true\n                      },\n                      \"additionalResourceOptions\": [],\n                      \"showDefault\": false\n                    },\n                    \"timeContext\": {\n                      \"durationMs\": 86400000\n                    },\n                    \"queryType\": 1,\n                    \"resourceType\": \"microsoft.resources/tenants\",\n                    \"value\": \"/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca/resourceGroups/monstar-rg/providers/Microsoft.Logic/workflows/MonitorStarterPacks-Backend\"\n                  },\n                  {\n                    \"id\": \"ea93902e-9856-4bd4-998d-ea88378907a7\",\n                    \"version\": \"KqlParameterItem/1.0\",\n                    \"name\": \"GrafanaInstance\",\n                    \"label\": \"Azure Managed Grafana\",\n                    \"type\": 2,\n                    \"isRequired\": true,\n                    \"isGlobal\": true,\n                    \"query\": \"resources\\n| where type =~ \\\"microsoft.dashboard/grafana\\\"\\n| where isnotempty(tags.monitorStarterPacks) or isnotempty(tags.MonitorStarterPacks)\\n| project id, label=properties.endpoint\",\n                    \"crossComponentResources\": [\n                      \"value::tenant\"\n                    ],\n                    \"typeSettings\": {\n                      \"additionalResourceOptions\": [],\n                      \"showDefault\": false\n                    },\n                    \"timeContext\": {\n                      \"durationMs\": 86400000\n                    },\n                    \"queryType\": 1,\n                    \"resourceType\": \"microsoft.resources/tenants\",\n                    \"value\": null\n                  },\n                  {\n                    \"id\": \"4552c35d-c26c-4cbf-a4cf-b2e57ff7ee78\",\n                    \"version\": \"KqlParameterItem/1.0\",\n                    \"name\": \"Workspace\",\n                    \"label\": \"WorkSpace\",\n                    \"type\": 5,\n                    \"isRequired\": true,\n                    \"isGlobal\": true,\n                    \"query\": \"resources\\n| where type == \\\"microsoft.operationalinsights/workspaces\\\"\\n| project id\",\n                    \"crossComponentResources\": [\n                      \"value::all\"\n                    ],\n                    \"typeSettings\": {\n                      \"additionalResourceOptions\": [],\n                      \"showDefault\": false\n                    },\n                    \"queryType\": 1,\n                    \"resourceType\": \"microsoft.resourcegraph/resources\",\n                    \"value\": \"/subscriptions/6c64f9ed-88d2-4598-8de6-7a9527dc16ca/resourceGroups/MonStar-rg/providers/Microsoft.OperationalInsights/workspaces/monstar-la\"\n                  }\n                ],\n                \"style\": \"above\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\"\n              },\n              \"customWidth\": \"100\",\n              \"conditionalVisibility\": {\n                \"parameterName\": \"tabSelection\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"backend\"\n              },\n              \"name\": \"generalParams\"\n            }\n          ],\n          \"exportParameters\": true\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"backend\"\n        },\n        \"name\": \"ConfigStatusGroup\"\n      },\n      {\n        \"type\": 1,\n        \"content\": {\n          \"json\": \"# Getting Started\\n\\nWelcome to the Azure Monitor Starter Packs. This workbook was designed to help you configuring the solution. Here you can:\\n- Enable/Disable monitoring packs for one or more VMs. You may also disable all the monitoring for a specific server. This will remove the tags and the rule associations*\\n- Enable/Disable Alerts in bulk. You can also assign a different Action group to one or more alerts.\\n- Check policy status and start remediation if required. By clicking in a policy, you can also assign that policy to another scope.\\n- Check Monitor pack associations\\n\\n## ***If this is the first time using this solution, please configure parameters in the Configuration tab and save the workbook for proper functionality.***\\n\\n\\n[Azure MONitor STARter Packs](http://github.com/Azure/AzureMonitorStarterPacks)\\n\\n[Azure Managed Grafana ({GrafanaInstance:label})]({GrafanaInstance:label})\\n\\n\"\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"gettingstarted\"\n        },\n        \"name\": \"textGetStarted\"\n      },\n      {\n        \"type\": 12,\n        \"content\": {\n          \"version\": \"NotebookGroup/1.0\",\n          \"groupType\": \"editable\",\n          \"items\": [\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"resources | where type =~ 'microsoft.hybridcompute/machines' or type =~ 'microsoft.compute/virtualmachines'\\n| extend MonitorStatus=iff(isempty(tostring(tags.MonitorStarterPacks)),'Monitored','Not Monitored')\\n| summarize count() by MonitorStatus\",\n                \"size\": 1,\n                \"title\": \"Monitoring Status (Tags)\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"visualization\": \"piechart\",\n                \"chartSettings\": {\n                  \"seriesLabelSettings\": [\n                    {\n                      \"seriesName\": \"Monitored\",\n                      \"color\": \"green\"\n                    },\n                    {\n                      \"seriesName\": \"Not Monitored\",\n                      \"color\": \"orange\"\n                    }\n                  ]\n                }\n              },\n              \"customWidth\": \"33\",\n              \"name\": \"Monitoring Status Tags\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"Resources\\n| where type == 'microsoft.compute/virtualmachines'\\n| extend\\n    JoinID = toupper(id)\\n| join kind=leftouter(\\n    Resources\\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId\\n| union (Resources\\n| where type == 'microsoft.hybridcompute/machines'\\n| extend\\n    JoinID = toupper(id)\\n| join kind=leftouter(\\n    Resources\\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId)\\n| summarize count() by AgentInstalled=iff(isempty(ExtensionName),\\\"No\\\",\\\"Yes\\\")\",\n                \"size\": 1,\n                \"title\": \"Agent Install Status\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"visualization\": \"piechart\",\n                \"chartSettings\": {\n                  \"seriesLabelSettings\": [\n                    {\n                      \"seriesName\": \"Yes\",\n                      \"label\": \"AMA Installed\",\n                      \"color\": \"green\"\n                    },\n                    {\n                      \"seriesName\": \"No\",\n                      \"label\": \"No AMA\",\n                      \"color\": \"red\"\n                    }\n                  ]\n                }\n              },\n              \"customWidth\": \"33\",\n              \"name\": \"agentInstallStatus\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"policyresources | where type == \\\"microsoft.policyinsights/policystates\\\" | extend policyName=tostring(properties.policyDefinitionName), complianceState=properties.complianceState\\n| join (policyresources | where type == \\\"microsoft.authorization/policydefinitions\\\" and isnotempty(properties.metadata.MonitorStarterPacks) | project policyId=id, policyName=name, pack=tostring(properties.metadata.MonitorStarterPacks)) on policyName\\n| project policyId, policyName, complianceState=tostring(complianceState), pack,type='Policy'\\n| union( policyresources\\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\\n| extend complianceState = tostring(properties.complianceState)\\n| extend\\n\\tresourceId = tostring(properties.resourceId),\\n\\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\\n\\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\\n\\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\\n\\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\\n\\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\\n\\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\\n| summarize overallStateWeight = max(max_stateWeight),\\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\\ncompliantCount = sumif(counts, max_stateWeight == 200),\\nconflictCount = sumif(counts, max_stateWeight == 100),\\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\\ncompliancePercentage,\\ncompliantCount,\\nnonCompliantCount,\\nconflictCount,\\nexemptCount\\n| where isnotempty(policySetDefinitionId)\\n| join (policyresources\\n| where type =~ 'microsoft.authorization/policysetdefinitions' and isnotempty(properties.metadata.MonitorStarterPacks)\\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\\n| project policyId=policySetDefinitionId, policyName=name,complianceState,pack='N/A', type='Set')\\n| summarize count() by complianceState,policyName\",\n                \"size\": 1,\n                \"title\": \"Assignment Policies Status\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"visualization\": \"piechart\",\n                \"chartSettings\": {\n                  \"seriesLabelSettings\": [\n                    {\n                      \"seriesName\": \"Compliant\",\n                      \"label\": \"Compliant\",\n                      \"color\": \"green\"\n                    },\n                    {\n                      \"seriesName\": \"nonCompliant\",\n                      \"label\": \"Not Compliant\",\n                      \"color\": \"redDark\"\n                    }\n                  ]\n                }\n              },\n              \"customWidth\": \"33\",\n              \"name\": \"policyComplianceStatus\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"insightsresources\\n| where type == \\\"microsoft.insights/datacollectionruleassociations\\\"\\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\\n| where isnotnull(properties.dataCollectionRuleId)\\n| project rulename=tostring(split(properties.dataCollectionRuleId,\\\"/\\\")[8]),resourceName=tostring(split(resourceId,\\\"/\\\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\\n| join (resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\\n| project-away rulename,rulename1,resourceId\\n| summarize Associated=count() by Pack\\n| sort by Pack asc\",\n                \"size\": 1,\n                \"title\": \"Servers/Pack (Association)\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"visualization\": \"piechart\",\n                \"tileSettings\": {\n                  \"showBorder\": false,\n                  \"titleContent\": {\n                    \"columnMatch\": \"Pack\",\n                    \"formatter\": 1\n                  },\n                  \"leftContent\": {\n                    \"columnMatch\": \"Associated\",\n                    \"formatter\": 12,\n                    \"formatOptions\": {\n                      \"palette\": \"auto\"\n                    },\n                    \"numberFormat\": {\n                      \"unit\": 17,\n                      \"options\": {\n                        \"maximumSignificantDigits\": 3,\n                        \"maximumFractionDigits\": 2\n                      }\n                    }\n                  }\n                },\n                \"mapSettings\": {\n                  \"locInfo\": \"LatLong\",\n                  \"sizeSettings\": \"Associated\",\n                  \"sizeAggregation\": \"Sum\",\n                  \"legendMetric\": \"Associated\",\n                  \"legendAggregation\": \"Sum\",\n                  \"itemColorSettings\": {\n                    \"type\": \"heatmap\",\n                    \"colorAggregation\": \"Sum\",\n                    \"nodeColorField\": \"Associated\",\n                    \"heatmapPalette\": \"greenRed\"\n                  }\n                }\n              },\n              \"customWidth\": \"33\",\n              \"name\": \"AssociatedResourceStatsperTag - Copy - Copy\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"insightsresources\\n| where type == \\\"microsoft.insights/datacollectionruleassociations\\\"\\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\\n| where isnotnull(properties.dataCollectionRuleId)\\n| project rulename=tostring(split(properties.dataCollectionRuleId,\\\"/\\\")[8]),resourceName=tostring(split(resourceId,\\\"/\\\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\\n| join (resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\\n| project-away rulename,rulename1,resourceId\\n| summarize Tagged=count() by Pack\\n| sort by Pack asc\\n\\n\\n\",\n                \"size\": 1,\n                \"title\": \"Tagged Resources per Tag\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"visualization\": \"tiles\",\n                \"tileSettings\": {\n                  \"showBorder\": false,\n                  \"titleContent\": {\n                    \"columnMatch\": \"Pack\",\n                    \"formatter\": 1\n                  },\n                  \"leftContent\": {\n                    \"columnMatch\": \"Tagged\",\n                    \"formatter\": 12,\n                    \"formatOptions\": {\n                      \"palette\": \"auto\"\n                    },\n                    \"numberFormat\": {\n                      \"unit\": 17,\n                      \"options\": {\n                        \"maximumSignificantDigits\": 3,\n                        \"maximumFractionDigits\": 2\n                      }\n                    }\n                  }\n                }\n              },\n              \"customWidth\": \"33\",\n              \"name\": \"taggedResourceStatsperTag\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"insightsresources\\n| where type == \\\"microsoft.insights/datacollectionruleassociations\\\"\\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\\n| where isnotnull(properties.dataCollectionRuleId)\\n| project rulename=tostring(split(properties.dataCollectionRuleId,\\\"/\\\")[8]),resourceName=tostring(split(resourceId,\\\"/\\\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\\n| join (resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\\n| project-away rulename,rulename1,resourceId\\n| summarize Associated=count() by Pack\\n| sort by Pack asc\",\n                \"size\": 1,\n                \"title\": \"Associated Servers per Pack\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"visualization\": \"tiles\",\n                \"tileSettings\": {\n                  \"showBorder\": false,\n                  \"titleContent\": {\n                    \"columnMatch\": \"Pack\",\n                    \"formatter\": 1\n                  },\n                  \"leftContent\": {\n                    \"columnMatch\": \"Associated\",\n                    \"formatter\": 12,\n                    \"formatOptions\": {\n                      \"palette\": \"auto\"\n                    },\n                    \"numberFormat\": {\n                      \"unit\": 17,\n                      \"options\": {\n                        \"maximumSignificantDigits\": 3,\n                        \"maximumFractionDigits\": 2\n                      }\n                    }\n                  }\n                }\n              },\n              \"customWidth\": \"33\",\n              \"name\": \"AssociatedResourceStatsperTag - Copy\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"alertsmanagementresources\\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status,severity=properties.context.context.severity\\n| where isnotempty(alertRule)\\n| join (resources\\n| where type == \\\"microsoft.insights/scheduledqueryrules\\\" or type ==\\\"microsoft.insights/metricalerts\\\" or type == 'microsoft.insights/activitylogalerts'\\n| where isnotempty(tags.MonitorStarterPacks)\\n| extend alertRule=tolower(tostring(['id']))) on alertRule\\n| project ['Alert Name']=name,['Details']=['Alert Id'], Status=status, Resource=resourceId, Sev=severity\\n| where Status=='Activated'\\n\",\n                \"size\": 0,\n                \"title\": \"Active Alerts\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"gridSettings\": {\n                  \"formatters\": [\n                    {\n                      \"columnMatch\": \"Details\",\n                      \"formatter\": 7,\n                      \"formatOptions\": {\n                        \"linkTarget\": \"Resource\",\n                        \"linkLabel\": \"Details\",\n                        \"linkIsContextBlade\": true\n                      }\n                    },\n                    {\n                      \"columnMatch\": \"Status\",\n                      \"formatter\": 18,\n                      \"formatOptions\": {\n                        \"thresholdsOptions\": \"icons\",\n                        \"thresholdsGrid\": [\n                          {\n                            \"operator\": \"==\",\n                            \"thresholdValue\": \"Activated\",\n                            \"representation\": \"up\",\n                            \"text\": \"{0}{1}\"\n                          },\n                          {\n                            \"operator\": \"Default\",\n                            \"thresholdValue\": null,\n                            \"representation\": \"success\",\n                            \"text\": \"{0}{1}\"\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"columnMatch\": \"Resource\",\n                      \"formatter\": 13,\n                      \"formatOptions\": {\n                        \"linkTarget\": \"Resource\",\n                        \"linkIsContextBlade\": true,\n                        \"showIcon\": true\n                      }\n                    },\n                    {\n                      \"columnMatch\": \"Sev\",\n                      \"formatter\": 18,\n                      \"formatOptions\": {\n                        \"thresholdsOptions\": \"icons\",\n                        \"thresholdsGrid\": [\n                          {\n                            \"operator\": \"==\",\n                            \"thresholdValue\": \"1\",\n                            \"representation\": \"Sev1\",\n                            \"text\": \"{0}{1}\"\n                          },\n                          {\n                            \"operator\": \"==\",\n                            \"thresholdValue\": \"2\",\n                            \"representation\": \"Sev2\",\n                            \"text\": \"{0}{1}\"\n                          },\n                          {\n                            \"operator\": \"==\",\n                            \"thresholdValue\": \"3\",\n                            \"representation\": \"Sev3\",\n                            \"text\": \"{0}{1}\"\n                          },\n                          {\n                            \"operator\": \"==\",\n                            \"thresholdValue\": \"4\",\n                            \"representation\": \"Sev4\",\n                            \"text\": \"{0}{1}\"\n                          },\n                          {\n                            \"operator\": \"==\",\n                            \"thresholdValue\": \"0\",\n                            \"representation\": \"Sev0\",\n                            \"text\": \"{0}{1}\"\n                          },\n                          {\n                            \"operator\": \"Default\",\n                            \"thresholdValue\": null,\n                            \"representation\": \"unknown\",\n                            \"text\": \"{0}{1}\"\n                          }\n                        ]\n                      }\n                    },\n                    {\n                      \"columnMatch\": \"Alert Id\",\n                      \"formatter\": 7,\n                      \"formatOptions\": {\n                        \"linkTarget\": \"Resource\",\n                        \"linkLabel\": \"Details\",\n                        \"linkIsContextBlade\": true\n                      }\n                    },\n                    {\n                      \"columnMatch\": \"Target\",\n                      \"formatter\": 13,\n                      \"formatOptions\": {\n                        \"linkTarget\": null,\n                        \"showIcon\": true\n                      }\n                    }\n                  ]\n                }\n              },\n              \"customWidth\": \"66\",\n              \"name\": \"activeAlertsquery\"\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"alertsmanagementresources\\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status\\n| where isnotempty(alertRule)\\n| join (resources\\n| where type == \\\"microsoft.insights/scheduledqueryrules\\\" or type ==\\\"microsoft.insights/metricalerts\\\" or type == 'microsoft.insights/activitylogalerts'\\n| where isnotempty(tags.MonitorStarterPacks)\\n| extend alertRule=tolower(tostring(['id']))) on alertRule\\n| summarize count() by AlertType=type\\n\\n\",\n                \"size\": 0,\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"visualization\": \"piechart\"\n              },\n              \"customWidth\": \"33\",\n              \"name\": \"activeAlertsQueryPie\"\n            }\n          ]\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"status\"\n        },\n        \"name\": \"dashboardgroup\"\n      },\n      {\n        \"type\": 1,\n        \"content\": {\n          \"json\": \"## Server Monitoring Setup\\n\\nSelect servers on the right to assign a pack. Once the backend is done with the assigning, the server will show on the left side grid.\\n\\nOn the left side grid, the monitoring can be updated to add more packs, as well as to remove a specific pack or remove any monitoring altogether from the server.\",\n          \"style\": \"info\"\n        },\n        \"conditionalVisibilities\": [\n          {\n            \"parameterName\": \"tabSelection\",\n            \"comparison\": \"isEqualTo\",\n            \"value\": \"discovery\"\n          },\n          {\n            \"parameterName\": \"showHelp\",\n            \"comparison\": \"isEqualTo\",\n            \"value\": \"yes\"\n          }\n        ],\n        \"name\": \"serversMonitoringHelptext\"\n      },\n      {\n        \"type\": 12,\n        \"content\": {\n          \"version\": \"NotebookGroup/1.0\",\n          \"groupType\": \"editable\",\n          \"title\": \"Servers\",\n          \"items\": [\n            {\n              \"type\": 12,\n              \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                  {\n                    \"type\": 3,\n                    \"content\": {\n                      \"version\": \"KqlItem/1.0\",\n                      \"query\": \"resources | where type =~ 'microsoft.hybridcompute/machines' \\n| where isnotempty(tolower(tags.MonitorStarterPacks))\\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.osType, subscriptionId\\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \\n| where isnotempty(tolower(tags.MonitorStarterPacks))\\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId)\\n| join kind= leftouter   (resourcecontainers\\n| where type =~ 'microsoft.resources/subscriptions'\\n| project Subscription=name,subscriptionId) on subscriptionId\\n| project-away subscriptionId, subscriptionId1\",\n                      \"size\": 0,\n                      \"title\": \"Monitored Machines\",\n                      \"exportMultipleValues\": true,\n                      \"exportedParameters\": [\n                        {\n                          \"fieldName\": \"\",\n                          \"parameterName\": \"taggedVMs\",\n                          \"parameterType\": 5,\n                          \"quote\": \"\"\n                        }\n                      ],\n                      \"queryType\": 1,\n                      \"resourceType\": \"microsoft.resourcegraph/resources\",\n                      \"crossComponentResources\": [\n                        \"{Subscriptions}\"\n                      ],\n                      \"visualization\": \"table\",\n                      \"gridSettings\": {\n                        \"filter\": true\n                      },\n                      \"sortBy\": []\n                    },\n                    \"name\": \"Monitored Servers\",\n                    \"styleSettings\": {\n                      \"margin\": \"400\",\n                      \"padding\": \"400\",\n                      \"showBorder\": true\n                    }\n                  },\n                  {\n                    \"type\": 9,\n                    \"content\": {\n                      \"version\": \"KqlParameterItem/1.0\",\n                      \"crossComponentResources\": [\n                        \"{Workspace}\"\n                      ],\n                      \"parameters\": [\n                        {\n                          \"id\": \"54f2c7fb-7251-43b6-aa4d-fd94647cac4a\",\n                          \"version\": \"KqlParameterItem/1.0\",\n                          \"name\": \"PackTagsLeft\",\n                          \"label\": \"Add/Remove\",\n                          \"type\": 2,\n                          \"isGlobal\": true,\n                          \"query\": \"resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project MPs=tostring(tags.MonitorStarterPacks)\\n| summarize by MPs\\n\",\n                          \"crossComponentResources\": [\n                            \"{Workspace}\"\n                          ],\n                          \"typeSettings\": {\n                            \"additionalResourceOptions\": [],\n                            \"showDefault\": false\n                          },\n                          \"timeContext\": {\n                            \"durationMs\": 86400000\n                          },\n                          \"queryType\": 1,\n                          \"resourceType\": \"microsoft.resourcegraph/resources\",\n                          \"value\": null\n                        }\n                      ],\n                      \"style\": \"pills\",\n                      \"queryType\": 1,\n                      \"resourceType\": \"microsoft.resourcegraph/resources\"\n                    },\n                    \"customWidth\": \"25\",\n                    \"conditionalVisibility\": {\n                      \"parameterName\": \"taggedVMs\",\n                      \"comparison\": \"isNotEqualTo\"\n                    },\n                    \"name\": \"parameters - 5 - Copy\"\n                  },\n                  {\n                    \"type\": 11,\n                    \"content\": {\n                      \"version\": \"LinkItem/1.0\",\n                      \"style\": \"paragraph\",\n                      \"links\": [\n                        {\n                          \"id\": \"36b65f94-1c3d-4e7a-b771-677a2081d288\",\n                          \"cellValue\": \"\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Remove Monitoring for {PackTagsLeft} Pack \",\n                          \"preText\": \"\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [\n                              {\n                                \"key\": \"action\",\n                                \"value\": \"removeTag\"\n                              }\n                            ],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"tagmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"RemoveTag\\\",\\n    \\\"Resources\\\": [{taggedVMs}],\\n    \\\"Pack\\\": \\\"{PackTagsLeft}\\\"\\n  }\\n}\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Remove Monitoring\",\n                            \"description\": \"# Please confirm the change.\\n\\nRemove Monitoring for {PackTagsLeft} Pack \\n\\nServers:\\n\\n{taggedVMs}\",\n                            \"runLabel\": \"Confirm\"\n                          }\n                        },\n                        {\n                          \"id\": \"550df977-06a8-4c40-9cd3-aba6286ebcdf\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Add Monitoring for {PackTagsLeft} Pack\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"tagmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"AddTag\\\",\\n    \\\"Resources\\\": [{taggedVMs}],\\n    \\\"Pack\\\": \\\"{PackTagsLeft}\\\"\\n  }\\n}\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Add Monitoring\",\n                            \"description\": \"# Please confirm the change.\\n\\nAdd Monitoring for {PackTagsLeft} Pack \",\n                            \"actionName\": \"AddMonitoringPack\",\n                            \"runLabel\": \"Confirm\"\n                          }\n                        },\n                        {\n                          \"id\": \"3b1af630-47ab-43e9-a5b2-d2f2e21880d0\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Remove All Monitoring for VM\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"tagmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"RemoveTag\\\",\\n    \\\"Resources\\\": [{taggedVMs}],\\n    \\\"Pack\\\": \\\"All\\\"\\n  }\\n}\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Remove All Monitoring\",\n                            \"description\": \"# Please confirm the change.\\n\\nRemove All Monitoring for {PackTagsLeft} Pack \",\n                            \"actionName\": \"RemoveAllMonitoring\",\n                            \"runLabel\": \"Confirm\"\n                          }\n                        }\n                      ]\n                    },\n                    \"customWidth\": \"75\",\n                    \"conditionalVisibility\": {\n                      \"parameterName\": \"taggedVMs\",\n                      \"comparison\": \"isNotEqualTo\"\n                    },\n                    \"name\": \"links - 1\"\n                  }\n                ],\n                \"exportParameters\": true\n              },\n              \"customWidth\": \"50\",\n              \"conditionalVisibility\": {\n                \"parameterName\": \"tabSelection\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"discovery\"\n              },\n              \"name\": \"TaggedGroup\"\n            },\n            {\n              \"type\": 12,\n              \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                  {\n                    \"type\": 3,\n                    \"content\": {\n                      \"version\": \"KqlItem/1.0\",\n                      \"query\": \"resources | where type =~ 'microsoft.hybridcompute/machines' \\n| where isempty(tolower(tags.MonitorStarterPacks)) //and subscriptionId in split('{Subscriptions:subscriptionId}',',')\\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.osType, subscriptionId\\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \\n| where isempty(tolower(tags.MonitorStarterPacks)) //and subscriptionId in split('{Subscriptions:subscriptionId}',',')\\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, subscriptionId)\\n| join kind= leftouter   (resourcecontainers\\n| where type =~ 'microsoft.resources/subscriptions'\\n| project Subscription=name,subscriptionId) on subscriptionId\\n| project-away subscriptionId, subscriptionId1\",\n                      \"size\": 0,\n                      \"title\": \"Non-monitored Machines\",\n                      \"exportMultipleValues\": true,\n                      \"exportedParameters\": [\n                        {\n                          \"parameterName\": \"vmstotag\",\n                          \"parameterType\": 1,\n                          \"quote\": \"\"\n                        }\n                      ],\n                      \"queryType\": 1,\n                      \"resourceType\": \"microsoft.resourcegraph/resources\",\n                      \"crossComponentResources\": [\n                        \"{Subscriptions}\"\n                      ],\n                      \"visualization\": \"table\",\n                      \"gridSettings\": {\n                        \"filter\": true\n                      },\n                      \"sortBy\": []\n                    },\n                    \"name\": \"Non Monitores Servers\",\n                    \"styleSettings\": {\n                      \"margin\": \"400\",\n                      \"padding\": \"400\",\n                      \"showBorder\": true\n                    }\n                  },\n                  {\n                    \"type\": 9,\n                    \"content\": {\n                      \"version\": \"KqlParameterItem/1.0\",\n                      \"crossComponentResources\": [\n                        \"value::tenant\"\n                      ],\n                      \"parameters\": [\n                        {\n                          \"id\": \"8a177eab-edac-41cc-84f9-a5b7de931bea\",\n                          \"version\": \"KqlParameterItem/1.0\",\n                          \"name\": \"PackTags\",\n                          \"label\": \"Select Pack to Enable\",\n                          \"type\": 2,\n                          \"isGlobal\": true,\n                          \"query\": \"resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project MPs=tostring(tags.MonitorStarterPacks)\\n| summarize by MPs\",\n                          \"crossComponentResources\": [\n                            \"value::tenant\"\n                          ],\n                          \"typeSettings\": {\n                            \"additionalResourceOptions\": [],\n                            \"showDefault\": false\n                          },\n                          \"timeContext\": {\n                            \"durationMs\": 86400000\n                          },\n                          \"queryType\": 1,\n                          \"resourceType\": \"microsoft.resources/tenants\",\n                          \"value\": null\n                        }\n                      ],\n                      \"style\": \"pills\",\n                      \"queryType\": 1,\n                      \"resourceType\": \"microsoft.resources/tenants\"\n                    },\n                    \"customWidth\": \"50\",\n                    \"conditionalVisibility\": {\n                      \"parameterName\": \"vmstotag\",\n                      \"comparison\": \"isNotEqualTo\"\n                    },\n                    \"name\": \"parameters - 5\"\n                  },\n                  {\n                    \"type\": 11,\n                    \"content\": {\n                      \"version\": \"LinkItem/1.0\",\n                      \"style\": \"paragraph\",\n                      \"links\": [\n                        {\n                          \"id\": \"91fb0fed-0e4f-41ce-9024-98a3cc4432a7\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Enable Monitoring for {PackTags} Pack\",\n                          \"preText\": \"\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [\n                              {\n                                \"key\": \"action\",\n                                \"value\": \"addTag\"\n                              }\n                            ],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"tagmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"AddTag\\\",\\n    \\\"Resources\\\": [{vmstotag}],\\n    \\\"Pack\\\": \\\"{PackTags}\\\"\\n  }\\n}\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Enable Monitoring Packs\",\n                            \"description\": \"# This will enable the pack for the following servers:\\n{vmstotag}\\n\\nby adding the {PackTags} to the server.\",\n                            \"actionName\": \"EnableMonitoring\",\n                            \"runLabel\": \"Confirm\"\n                          }\n                        }\n                      ]\n                    },\n                    \"customWidth\": \"50\",\n                    \"conditionalVisibility\": {\n                      \"parameterName\": \"vmstotag\",\n                      \"comparison\": \"isNotEqualTo\"\n                    },\n                    \"name\": \"links - 1 - Copy\"\n                  }\n                ],\n                \"exportParameters\": true\n              },\n              \"customWidth\": \"50\",\n              \"conditionalVisibility\": {\n                \"parameterName\": \"tabSelection\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"discovery\"\n              },\n              \"name\": \"NonTaggedGroup\"\n            }\n          ]\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"discovery\"\n        },\n        \"name\": \"Servers\",\n        \"styleSettings\": {\n          \"showBorder\": true\n        }\n      },\n      {\n        \"type\": 12,\n        \"content\": {\n          \"version\": \"NotebookGroup/1.0\",\n          \"groupType\": \"editable\",\n          \"title\": \"Alert Management - MonStar Alerts\",\n          \"items\": [\n            {\n              \"type\": 9,\n              \"content\": {\n                \"version\": \"KqlParameterItem/1.0\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"parameters\": [\n                  {\n                    \"id\": \"e99b4870-f7a6-4b8e-95b7-6aaeece1f438\",\n                    \"version\": \"KqlParameterItem/1.0\",\n                    \"name\": \"AlertPack\",\n                    \"type\": 2,\n                    \"query\": \"resources\\n| where tolower(type) in (\\\"microsoft.insights/scheduledqueryrules\\\", \\\"microsoft.insights/metricalerts\\\",\\\"microsoft.insights/activitylogalerts\\\")\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project MPs=tostring(tags.MonitorStarterPacks)\\n| summarize by MPs\\n\",\n                    \"crossComponentResources\": [\n                      \"value::tenant\"\n                    ],\n                    \"typeSettings\": {\n                      \"additionalResourceOptions\": [],\n                      \"showDefault\": false\n                    },\n                    \"timeContext\": {\n                      \"durationMs\": 86400000\n                    },\n                    \"queryType\": 1,\n                    \"resourceType\": \"microsoft.resources/tenants\",\n                    \"value\": \"vWan\"\n                  }\n                ],\n                \"style\": \"pills\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\"\n              },\n              \"name\": \"parameters - 7\"\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"resources\\n| where tolower(type) in (\\\"microsoft.insights/scheduledqueryrules\\\")\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1]\\n| union (\\nresources\\n| where tolower(type) in (\\\"microsoft.insights/metricalerts\\\")\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1])\\n| union (resources\\n| where tolower(type) in (\\\"microsoft.insights/activitylogalerts\\\")\\n| where isnotempty(tags.MonitorStarterPacks)\\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1])\\n| where MP=='{AlertPack}'\",\n                \"size\": 0,\n                \"exportMultipleValues\": true,\n                \"exportedParameters\": [\n                  {\n                    \"fieldName\": \"\",\n                    \"parameterName\": \"alertsselected\",\n                    \"parameterType\": 1,\n                    \"quote\": \"\"\n                  }\n                ],\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"visualization\": \"table\",\n                \"gridSettings\": {\n                  \"formatters\": [\n                    {\n                      \"columnMatch\": \"location\",\n                      \"formatter\": 5\n                    },\n                    {\n                      \"columnMatch\": \"name\",\n                      \"formatter\": 7\n                    }\n                  ],\n                  \"filter\": true\n                }\n              },\n              \"customWidth\": \"70\",\n              \"name\": \"AlertConfigQuery\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 12,\n              \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                  {\n                    \"type\": 1,\n                    \"content\": {\n                      \"json\": \"# Enable or Disable alerts. \\n\\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\\n\\n# Update Action Group\\n## Select a list of alerts on the left and a new Action Group to assign to the alert.\",\n                      \"style\": \"info\"\n                    },\n                    \"conditionalVisibility\": {\n                      \"parameterName\": \"showHelp\",\n                      \"comparison\": \"isEqualTo\",\n                      \"value\": \"yes\"\n                    },\n                    \"name\": \"AlertMgmtHelpText\"\n                  },\n                  {\n                    \"type\": 3,\n                    \"content\": {\n                      \"version\": \"KqlItem/1.0\",\n                      \"query\": \"resources\\n| where type == \\\"microsoft.insights/actiongroups\\\"\\n| where properties.enabled == 'true'\\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\\\"(\\\",properties.emailReceivers[0].emailAddress,\\\")\\\")\",\n                      \"size\": 1,\n                      \"exportFieldName\": \"\",\n                      \"exportParameterName\": \"selectedAG\",\n                      \"queryType\": 1,\n                      \"resourceType\": \"microsoft.resources/tenants\",\n                      \"crossComponentResources\": [\n                        \"value::tenant\"\n                      ],\n                      \"gridSettings\": {\n                        \"formatters\": [\n                          {\n                            \"columnMatch\": \"id\",\n                            \"formatter\": 13,\n                            \"formatOptions\": {\n                              \"linkTarget\": \"OpenBlade\",\n                              \"linkIsContextBlade\": true,\n                              \"showIcon\": true\n                            }\n                          }\n                        ],\n                        \"filter\": true\n                      }\n                    },\n                    \"conditionalVisibility\": {\n                      \"parameterName\": \"alertsselected\",\n                      \"comparison\": \"isNotEqualTo\"\n                    },\n                    \"name\": \"ActionGroupsQuery\",\n                    \"styleSettings\": {\n                      \"showBorder\": true\n                    }\n                  },\n                  {\n                    \"type\": 11,\n                    \"content\": {\n                      \"version\": \"LinkItem/1.0\",\n                      \"style\": \"paragraph\",\n                      \"links\": [\n                        {\n                          \"id\": \"f5cb3ede-91d1-4414-bfa1-a1689f45d0c8\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Enable Alerts\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Enable\\\", \\n    \\\"alerts\\\":  [{alertsselected}]\\n  }\\n}\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Enable Alerts\",\n                            \"description\": \"# This action will Enable the selected Alerts\\n\\n{alertsselected}\",\n                            \"runLabel\": \"Confirm\"\n                          }\n                        },\n                        {\n                          \"id\": \"d9469141-a104-4696-b9cd-f0fc7e3f963e\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Disable Alerts\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Disable\\\", \\n    \\\"alerts\\\":  [{alertsselected}]\\n  }\\n}\\n\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Disable Alerts\",\n                            \"description\": \"# This action will disable the selected Alerts\\n\\n{alertsselected}\",\n                            \"runLabel\": \"Confirm\"\n                          }\n                        },\n                        {\n                          \"id\": \"7942ba17-4942-4f4a-b2ea-e19ad806b49d\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Update Action Group\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Update\\\", \\n    \\\"alerts\\\":  [{alertsselected}],\\n    \\\"aGroup\\\": {selectedAG}\\n  }\\n}\\n\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Update Action Group\",\n                            \"description\": \"Updating alerts:\\n\\n\\n{alertsselected}\\n\\nwith Action Group:\\n\\n{selectedAG}\\n\",\n                            \"actionName\": \"updateAG\",\n                            \"runLabel\": \"Update\"\n                          }\n                        }\n                      ]\n                    },\n                    \"name\": \"links - 8\"\n                  }\n                ]\n              },\n              \"customWidth\": \"30\",\n              \"name\": \"AlertsSubGroup1\"\n            }\n          ]\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"alertmanagement\"\n        },\n        \"name\": \"AlertMGMT\"\n      },\n      {\n        \"type\": 12,\n        \"content\": {\n          \"version\": \"NotebookGroup/1.0\",\n          \"groupType\": \"editable\",\n          \"title\": \"Alert Management - Other Alerts\",\n          \"items\": [\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"resources\\n| where tolower(type) in (\\\"microsoft.insights/scheduledqueryrules\\\")\\n| where isempty(tags.MonitorStarterPacks)\\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1]\\n| union (\\nresources\\n| where tolower(type) in (\\\"microsoft.insights/metricalerts\\\")\\n| where isempty(tags.MonitorStarterPacks)\\n| project id, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1])\\n| union (resources\\n| where tolower(type) in (\\\"microsoft.insights/activitylogalerts\\\")\\n| where isempty(tags.MonitorStarterPacks)\\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\\\"/\\\")[8], location, Target=split(properties.scopes[0],\\\"/\\\")[-1])\",\n                \"size\": 0,\n                \"exportMultipleValues\": true,\n                \"exportedParameters\": [\n                  {\n                    \"fieldName\": \"\",\n                    \"parameterName\": \"alertsselectednopack\",\n                    \"parameterType\": 1,\n                    \"quote\": \"\"\n                  }\n                ],\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"visualization\": \"table\",\n                \"gridSettings\": {\n                  \"formatters\": [\n                    {\n                      \"columnMatch\": \"location\",\n                      \"formatter\": 5\n                    },\n                    {\n                      \"columnMatch\": \"name\",\n                      \"formatter\": 7\n                    }\n                  ],\n                  \"filter\": true\n                }\n              },\n              \"customWidth\": \"70\",\n              \"name\": \"queryOtherAlerts\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 12,\n              \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                  {\n                    \"type\": 1,\n                    \"content\": {\n                      \"json\": \"# Enable or Disable alerts. \\n\\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\\n\\n# Update Action Group\\n## Select a list of alerts on the left and a new Action Group to assign to the alert.\",\n                      \"style\": \"info\"\n                    },\n                    \"conditionalVisibility\": {\n                      \"parameterName\": \"showHelp\",\n                      \"comparison\": \"isEqualTo\",\n                      \"value\": \"yes\"\n                    },\n                    \"name\": \"text - 3\"\n                  },\n                  {\n                    \"type\": 3,\n                    \"content\": {\n                      \"version\": \"KqlItem/1.0\",\n                      \"query\": \"resources\\n| where type == \\\"microsoft.insights/actiongroups\\\"\\n| where properties.enabled == 'true'\\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\\\"(\\\",properties.emailReceivers[0].emailAddress,\\\")\\\")\",\n                      \"size\": 1,\n                      \"exportFieldName\": \"\",\n                      \"exportParameterName\": \"selectedAG\",\n                      \"queryType\": 1,\n                      \"resourceType\": \"microsoft.resourcegraph/resources\",\n                      \"gridSettings\": {\n                        \"filter\": true\n                      }\n                    },\n                    \"name\": \"agQuery2\",\n                    \"styleSettings\": {\n                      \"showBorder\": true\n                    }\n                  },\n                  {\n                    \"type\": 11,\n                    \"content\": {\n                      \"version\": \"LinkItem/1.0\",\n                      \"style\": \"paragraph\",\n                      \"links\": [\n                        {\n                          \"id\": \"f5cb3ede-91d1-4414-bfa1-a1689f45d0c8\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Enable Alerts\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Enable\\\", \\n    \\\"alerts\\\":  [{alertsselectednopack}]\\n  }\\n}\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Enable Alerts\",\n                            \"description\": \"# This action will Enable the selected Alerts\\n\\n{alertsselected}\",\n                            \"runLabel\": \"Confirm\"\n                          }\n                        },\n                        {\n                          \"id\": \"d9469141-a104-4696-b9cd-f0fc7e3f963e\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Disable Alerts\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Disable\\\", \\n    \\\"alerts\\\":  [{alertsselectednopack}]\\n  }\\n}\\n\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Disable Alerts\",\n                            \"description\": \"# This action will disable the selected Alerts\\n\\n{alertsselected}\",\n                            \"runLabel\": \"Confirm\"\n                          }\n                        },\n                        {\n                          \"id\": \"7942ba17-4942-4f4a-b2ea-e19ad806b49d\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Update Action Group\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"alertmgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"Action\\\":\\\"Update\\\", \\n    \\\"alerts\\\":  [{alertsselectednopack}],\\n    \\\"aGroup\\\": {selectedAG}\\n  }\\n}\\n\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Update Action Group\",\n                            \"description\": \"Updating alerts:\\n\\n\\n{alertsselected}\\n\\nwith Action Group:\\n\\n{selectedAG}\\n\",\n                            \"actionName\": \"updateAG\",\n                            \"runLabel\": \"Update\"\n                          }\n                        }\n                      ]\n                    },\n                    \"name\": \"links - 8\"\n                  }\n                ]\n              },\n              \"customWidth\": \"30\",\n              \"conditionalVisibility\": {\n                \"parameterName\": \"alertsselectednopack\",\n                \"comparison\": \"isNotEqualTo\"\n              },\n              \"name\": \"AlertsSubGroup1\"\n            }\n          ]\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"alertmanagement\"\n        },\n        \"name\": \"AlertMGMT - Others\"\n      },\n      {\n        \"type\": 12,\n        \"content\": {\n          \"version\": \"NotebookGroup/1.0\",\n          \"groupType\": \"editable\",\n          \"title\": \"IaaS Packs Association\",\n          \"items\": [\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\\n| summarize by Pack=MPs,rulename=tostring(name)\\n| join (insightsresources\\n| where type == \\\"microsoft.insights/datacollectionruleassociations\\\"\\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\\n| where isnotnull(properties.dataCollectionRuleId)\\n| project rulename=tostring(split(properties.dataCollectionRuleId,\\\"/\\\")[8]),resourceName=tostring(split(resourceId,\\\"/\\\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\\n) on rulename\\n| project-away rulename1,resourceId\\n| summarize Associated=count() by Pack, rulename\\n| order by Pack asc\",\n                \"size\": 0,\n                \"title\": \"Select Pack to see associated Machines\",\n                \"exportFieldName\": \"rulename\",\n                \"exportParameterName\": \"selectedRule\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"gridSettings\": {\n                  \"formatters\": [\n                    {\n                      \"columnMatch\": \"Group\",\n                      \"formatter\": 1\n                    }\n                  ],\n                  \"filter\": true\n                },\n                \"sortBy\": []\n              },\n              \"customWidth\": \"50\",\n              \"name\": \"query - 6 - Copy\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"insightsresources\\n| where type == \\\"microsoft.insights/datacollectionruleassociations\\\"\\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\\n| where isnotnull(properties.dataCollectionRuleId)\\n| project rulename=split(properties.dataCollectionRuleId,\\\"/\\\")[8],resourceName=split(resourceId,\\\"/\\\")[8],resourceId//ruleId=properties.dataCollectionRuleId\\n| where '{selectedRule}'==rulename\",\n                \"size\": 0,\n                \"title\": \"Associated Machines\",\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"gridSettings\": {\n                  \"formatters\": [\n                    {\n                      \"columnMatch\": \"Group\",\n                      \"formatter\": 1\n                    }\n                  ],\n                  \"filter\": true\n                }\n              },\n              \"customWidth\": \"50\",\n              \"name\": \"query - 6 - Copy - Copy\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            }\n          ]\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"rulemanagement\"\n        },\n        \"name\": \"rulemanagement\",\n        \"styleSettings\": {\n          \"showBorder\": true\n        }\n      },\n      {\n        \"type\": 3,\n        \"content\": {\n          \"version\": \"KqlItem/1.0\",\n          \"query\": \"resources\\n| where type == \\\"microsoft.insights/datacollectionrules\\\"\\n| where isnotempty(tags.MonitorStarterPacks)\\n| extend ds=properties.dataSources\\n| project id,Type=kind, location,syslog=ds.syslog[0].streams[0], windowsEventLogs=ds.windowsEventLogs[0].streams[0], logsettings=ds.logFiles, performanceCounters=ds.performanceCounters[0].streams[0],provisioningState=properties.provisioningState, \\ndataCollectionEndpointId=properties.dataCollectionEndpointId,transformKql=properties.dataFlows[0].transformKql,workspaceResourceId=properties.destinations.logAnalytics[0].workspaceResourceId\\n\",\n          \"size\": 1,\n          \"title\": \"List of Currently Configured Data Collection Rules\",\n          \"showRefreshButton\": true,\n          \"exportedParameters\": [\n            {\n              \"parameterName\": \"selectedRule\"\n            },\n            {\n              \"fieldName\": \"destinationName\",\n              \"parameterName\": \"destinationName\",\n              \"parameterType\": 1\n            },\n            {\n              \"fieldName\": \"\",\n              \"parameterName\": \"resourceGroupName\",\n              \"parameterType\": 1\n            },\n            {\n              \"fieldName\": \"workspaceResourceId\",\n              \"parameterName\": \"workspace\",\n              \"parameterType\": 5\n            },\n            {\n              \"fieldName\": \"properties\",\n              \"parameterName\": \"properties\",\n              \"parameterType\": 1\n            },\n            {\n              \"fieldName\": \"name\",\n              \"parameterName\": \"name\",\n              \"parameterType\": 1\n            },\n            {\n              \"fieldName\": \"location\",\n              \"parameterName\": \"location\",\n              \"parameterType\": 1\n            },\n            {\n              \"fieldName\": \"Rule Type\",\n              \"parameterName\": \"kind\",\n              \"parameterType\": 1\n            },\n            {\n              \"parameterType\": 1\n            },\n            {\n              \"fieldName\": \"id\",\n              \"parameterName\": \"id\",\n              \"parameterType\": 1\n            }\n          ],\n          \"showExportToExcel\": true,\n          \"exportToExcelOptions\": \"all\",\n          \"queryType\": 1,\n          \"resourceType\": \"microsoft.resourcegraph/resources\",\n          \"crossComponentResources\": [\n            \"{Subscriptions}\"\n          ],\n          \"gridSettings\": {\n            \"formatters\": [\n              {\n                \"columnMatch\": \"id\",\n                \"formatter\": 13,\n                \"formatOptions\": {\n                  \"linkColumn\": \"id\",\n                  \"linkTarget\": \"Resource\",\n                  \"linkIsContextBlade\": true,\n                  \"showIcon\": true\n                }\n              },\n              {\n                \"columnMatch\": \"Type\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"==\",\n                      \"thresholdValue\": \"Windows\",\n                      \"representation\": \"Initial_Access\",\n                      \"text\": \"{0}{1}\"\n                    },\n                    {\n                      \"operator\": \"==\",\n                      \"thresholdValue\": \"Linux\",\n                      \"representation\": \"Console\",\n                      \"text\": \"{0}{1}\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"Capture\",\n                      \"text\": \"Custom\"\n                    }\n                  ]\n                }\n              },\n              {\n                \"columnMatch\": \"location\",\n                \"formatter\": 17,\n                \"formatOptions\": {\n                  \"customColumnWidthSetting\": \"94px\"\n                }\n              },\n              {\n                \"columnMatch\": \"syslog\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"linkTarget\": \"CellDetails\",\n                  \"subTarget\": \"2\",\n                  \"linkIsContextBlade\": true,\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"is Empty\",\n                      \"representation\": \"cancelled\",\n                      \"text\": \"Not Configured\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"success\",\n                      \"text\": \"Configured\"\n                    }\n                  ],\n                  \"bladeOpenContext\": {\n                    \"bladeName\": \"DataCollectionRulesDataSourceManagementViewModel\",\n                    \"extensionName\": \"Microsoft_Azure_Monitoring\",\n                    \"bladeParameters\": [\n                      {\n                        \"name\": \"id\",\n                        \"source\": \"column\",\n                        \"value\": \"id\"\n                      }\n                    ]\n                  },\n                  \"customColumnWidthSetting\": \"20ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"windowsEventLogs\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"linkTarget\": \"CellDetails\",\n                  \"linkIsContextBlade\": true,\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"is Empty\",\n                      \"representation\": \"cancelled\",\n                      \"text\": \"Not Configured\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"success\",\n                      \"text\": \"Configured\"\n                    }\n                  ],\n                  \"customColumnWidthSetting\": \"20ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"logsettings\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"is Empty\",\n                      \"representation\": \"cancelled\",\n                      \"text\": \"Not Configured\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"success\",\n                      \"text\": \"Configured\"\n                    }\n                  ],\n                  \"customColumnWidthSetting\": \"20ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"performanceCounters\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"linkColumn\": \"performanceCounters\",\n                  \"linkTarget\": \"CellDetails\",\n                  \"linkIsContextBlade\": true,\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"is Empty\",\n                      \"representation\": \"cancelled\",\n                      \"text\": \"Not Configured!\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"success\",\n                      \"text\": \"Configured\"\n                    }\n                  ],\n                  \"customColumnWidthSetting\": \"20ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"provisioningState\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"contains\",\n                      \"thresholdValue\": \"succeeded\",\n                      \"representation\": \"success\",\n                      \"text\": \"{0}{1}\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"success\",\n                      \"text\": \"{0}{1}\"\n                    }\n                  ],\n                  \"customColumnWidthSetting\": \"17ch\"\n                },\n                \"numberFormat\": {\n                  \"unit\": 0,\n                  \"options\": {\n                    \"style\": \"decimal\"\n                  }\n                }\n              },\n              {\n                \"columnMatch\": \"dataCollectionEndpointId\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"linkTarget\": \"Resource\",\n                  \"linkIsContextBlade\": true,\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"is Empty\",\n                      \"representation\": \"cancelled\",\n                      \"text\": \"Not Configured\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"success\",\n                      \"text\": \"Configured\"\n                    }\n                  ],\n                  \"customColumnWidthSetting\": \"21.7143ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"transformKql\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"linkColumn\": \"queries\",\n                  \"linkTarget\": \"CellDetails\",\n                  \"linkIsContextBlade\": true,\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"is Empty\",\n                      \"representation\": \"stopped\",\n                      \"text\": \"Not Configured\"\n                    },\n                    {\n                      \"operator\": \"contains\",\n                      \"thresholdValue\": \"|\",\n                      \"representation\": \"success\",\n                      \"text\": \"Ingestion KQL\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"stopped\",\n                      \"text\": \"Custom KQL\"\n                    }\n                  ],\n                  \"bladeOpenContext\": {\n                    \"bladeName\": \"CreateMicrosoftTableTransformBlade\",\n                    \"extensionName\": \"Microsoft_OperationsManagementSuite_Workspace\",\n                    \"bladeJsonParameters\": \"{\\r\\n\\t\\\"workspaceResourceId\\\" : \\\"{workspace}\\\",\\r\\n\\t\\\"providers\\\" : \\\"microsoft.operationalinsights\\\",\\r\\n\\t\\\"table\\\" : { \\r\\n\\t\\t\\\"name\\\" : \\\"{selectedTableName}\\\",\\r\\n\\t\\t\\\"description\\\":\\\"Security events collected from windows machines by Azure Security Center or Azure Sentinel.\\\",\\r\\n\\t\\t\\\"hasData\\\":true,\\r\\n\\t\\t\\\"tableType\\\":\\\"Microsoft\\\",\\r\\n\\t\\t\\\"tableAPIState\\\":\\\"Any\\\",\\r\\n\\t\\t\\\"solutions\\\":[\\\"Security and Audit\\\",\\\"Microsoft Sentinel\\\"],\\r\\n\\t\\t\\\"categories\\\":[\\\"Security\\\"],\\r\\n\\t\\t\\\"retentionInDaysAsDefault\\\":false,\\r\\n\\t\\t\\\"totalRetentionInDaysAsDefault\\\":false,\\r\\n\\t\\t\\\"isEditTransformationEnabled\\\":true,\\r\\n\\t\\t\\\"isCreateTransformationEnabled\\\":true\\r\\n\\t},\\r\\n\\t\\\"isMicrosoftTable\\\" : true,\\r\\n\\t\\\"isMigrationRequired\\\" : false\\r\\n}\"\n                  },\n                  \"customColumnWidthSetting\": \"22ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"workspaceResourceId\",\n                \"formatter\": 13,\n                \"formatOptions\": {\n                  \"linkTarget\": \"Resource\",\n                  \"showIcon\": true,\n                  \"customColumnWidthSetting\": \"16.8571ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"properties\",\n                \"formatter\": 7,\n                \"formatOptions\": {\n                  \"linkTarget\": \"CellDetails\",\n                  \"linkLabel\": \"📋\",\n                  \"linkIsContextBlade\": true,\n                  \"customColumnWidthSetting\": \"5ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"kind\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"is Empty\",\n                      \"representation\": \"Capture\",\n                      \"text\": \"{0}{1} Custom\"\n                    },\n                    {\n                      \"operator\": \"contains\",\n                      \"thresholdValue\": \"Linux\",\n                      \"representation\": \"Console\",\n                      \"text\": \"{0}{1}\"\n                    },\n                    {\n                      \"operator\": \"contains\",\n                      \"thresholdValue\": \"Windows\",\n                      \"representation\": \"Initial_Access\",\n                      \"text\": \"{0}{1}\"\n                    },\n                    {\n                      \"operator\": \"contains\",\n                      \"thresholdValue\": \"WorkspaceTransforms\",\n                      \"representation\": \"Persistence\",\n                      \"text\": \"{0}{1}\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"success\",\n                      \"text\": \"{0}{1}\"\n                    }\n                  ],\n                  \"customColumnWidthSetting\": \"17ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"name\",\n                \"formatter\": 5\n              },\n              {\n                \"columnMatch\": \"securityEvents\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"linkColumn\": \"windowsEventLogs\",\n                  \"linkTarget\": \"CellDetails\",\n                  \"linkIsContextBlade\": true,\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"is Empty\",\n                      \"representation\": \"cancelled\",\n                      \"text\": \"Not Configured\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"success\",\n                      \"text\": \"Configured\"\n                    }\n                  ],\n                  \"customColumnWidthSetting\": \"20ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"destinations\",\n                \"formatter\": 5\n              },\n              {\n                \"columnMatch\": \"queries\",\n                \"formatter\": 5\n              },\n              {\n                \"columnMatch\": \"dataSources\",\n                \"formatter\": 5\n              },\n              {\n                \"columnMatch\": \"dataFlows\",\n                \"formatter\": 5,\n                \"formatOptions\": {\n                  \"aggregation\": \"Sum\"\n                }\n              },\n              {\n                \"columnMatch\": \"description\",\n                \"formatter\": 5\n              },\n              {\n                \"columnMatch\": \"destinationName\",\n                \"formatter\": 5\n              },\n              {\n                \"columnMatch\": \"lastModifiedBy\",\n                \"formatter\": 5\n              },\n              {\n                \"columnMatch\": \"customEvents\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"linkTarget\": \"CellDetails\",\n                  \"linkIsContextBlade\": true,\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"is Empty\",\n                      \"representation\": \"cancelled\",\n                      \"text\": \"Not Configured\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"success\",\n                      \"text\": \"Configured\"\n                    }\n                  ],\n                  \"customColumnWidthSetting\": \"20ch\"\n                }\n              },\n              {\n                \"columnMatch\": \"StepTab\",\n                \"formatter\": 5\n              }\n            ],\n            \"rowLimit\": 1000,\n            \"filter\": true\n          },\n          \"sortBy\": []\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"rulemanagement\"\n        },\n        \"name\": \"Select Existing DCR - Copy\",\n        \"styleSettings\": {\n          \"showBorder\": true\n        }\n      },\n      {\n        \"type\": 12,\n        \"content\": {\n          \"version\": \"NotebookGroup/1.0\",\n          \"groupType\": \"editable\",\n          \"title\": \"Policy Assignment Status\",\n          \"items\": [\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"policyresources | where type == \\\"microsoft.policyinsights/policystates\\\" | extend policyName=tostring(properties.policyDefinitionName), complianceState=properties.complianceState\\n| join (policyresources | where type == \\\"microsoft.authorization/policydefinitions\\\" and isnotempty(properties.metadata.MonitorStarterPacks) | project policyId=id, policyName=name, pack=tostring(properties.metadata.MonitorStarterPacks)) on policyName\\n| project policyId, policyName, complianceState=tostring(complianceState), pack,type='Policy'\\n| union( policyresources\\n| where type =~ 'Microsoft.PolicyInsights/PolicyStates'\\n| extend complianceState = tostring(properties.complianceState)\\n| extend\\n\\tresourceId = tostring(properties.resourceId),\\n\\tpolicyAssignmentId = tostring(properties.policyAssignmentId),\\n\\tpolicyAssignmentScope = tostring(properties.policyAssignmentScope),\\n\\tpolicyAssignmentName = tostring(properties.policyAssignmentName),\\n\\tpolicyDefinitionId = tostring(properties.policyDefinitionId),\\n    policySetDefinitionId=tostring(properties.policySetDefinitionId),\\n\\tpolicyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId),\\n\\tstateWeight = iff(complianceState == 'NonCompliant', int(300), iff(complianceState == 'Compliant', int(200), iff(complianceState == 'Conflict', int(100), iff(complianceState == 'Exempt', int(50), int(0)))))\\n| summarize max(stateWeight) by resourceId, policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\\n| summarize counts = count() by policyAssignmentId, policyAssignmentScope, max_stateWeight, policyAssignmentName,policySetDefinitionId\\n| summarize overallStateWeight = max(max_stateWeight),\\nnonCompliantCount = sumif(counts, max_stateWeight == 300),\\ncompliantCount = sumif(counts, max_stateWeight == 200),\\nconflictCount = sumif(counts, max_stateWeight == 100),\\nexemptCount = sumif(counts, max_stateWeight == 50) by policyAssignmentId, policyAssignmentScope, policyAssignmentName,policySetDefinitionId\\n| extend totalResources = todouble(nonCompliantCount + compliantCount + conflictCount + exemptCount)\\n| extend compliancePercentage = iff(totalResources == 0, todouble(100), 100 * todouble(compliantCount + exemptCount) / totalResources)\\n| project policyAssignmentName, scope = policyAssignmentScope,policySetDefinitionId,\\ncomplianceState = iff(overallStateWeight == 300, 'nonCompliant', iff(overallStateWeight == 200, 'Compliant', iff(overallStateWeight == 100, 'conflict', iff(overallStateWeight == 50, 'exempt', 'notstarted')))),\\ncompliancePercentage,\\ncompliantCount,\\nnonCompliantCount,\\nconflictCount,\\nexemptCount\\n| where isnotempty(policySetDefinitionId)\\n| join (policyresources\\n| where type =~ 'microsoft.authorization/policysetdefinitions' and isnotempty(properties.metadata.MonitorStarterPacks)\\n| extend policySetDefinitionId=tostring(id)) on policySetDefinitionId\\n| project policyId=policySetDefinitionId, policyName=name,complianceState,pack='N/A', type='Set')\",\n                \"size\": 0,\n                \"title\": \"Assignment Status (Compliance)\",\n                \"exportedParameters\": [\n                  {\n                    \"parameterName\": \"policiesToRemediate\",\n                    \"parameterType\": 5\n                  }\n                ],\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"gridSettings\": {\n                  \"formatters\": [\n                    {\n                      \"columnMatch\": \"complianceState\",\n                      \"formatter\": 18,\n                      \"formatOptions\": {\n                        \"thresholdsOptions\": \"icons\",\n                        \"thresholdsGrid\": [\n                          {\n                            \"operator\": \"==\",\n                            \"thresholdValue\": \"Compliant\",\n                            \"representation\": \"success\",\n                            \"text\": \"Compliant\"\n                          },\n                          {\n                            \"operator\": \"==\",\n                            \"thresholdValue\": \"Non-compliant\",\n                            \"representation\": \"2\",\n                            \"text\": \"Non-Compliant\"\n                          },\n                          {\n                            \"operator\": \"Default\",\n                            \"thresholdValue\": null,\n                            \"representation\": \"warning\",\n                            \"text\": \"{0}{1}\"\n                          }\n                        ]\n                      }\n                    }\n                  ],\n                  \"filter\": true\n                }\n              },\n              \"customWidth\": \"75\",\n              \"conditionalVisibility\": {\n                \"parameterName\": \"tabSelection\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"policystatus\"\n              },\n              \"name\": \"query - 8\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 12,\n              \"content\": {\n                \"version\": \"NotebookGroup/1.0\",\n                \"groupType\": \"editable\",\n                \"items\": [\n                  {\n                    \"type\": 11,\n                    \"content\": {\n                      \"version\": \"LinkItem/1.0\",\n                      \"style\": \"list\",\n                      \"links\": [\n                        {\n                          \"id\": \"b3bb5a4d-0f95-4e9a-8634-9cb027f860aa\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Remediate (all policies)\",\n                          \"preText\": \"\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"policymgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"SolutionTag\\\":\\\"MonitorStarterPacks\\\",\\n    \\\"Action\\\": \\\"Remediate\\\"\\n  }\\n}\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Rmediate policies\",\n                            \"description\": \"# Please confirm remediation\\n\\nThis button will trigger a global policy remeadiation. \\n\\nThe backend script will go through the policies and initiatives, finding the ones that are not compliant, and will trigger remediation. \\n\\nIt is not restricted to the ones in this screen.\",\n                            \"actionName\": \"Remediate\",\n                            \"runLabel\": \"Confirm\"\n                          }\n                        },\n                        {\n                          \"id\": \"8dfc5afa-108a-4713-8a0c-651c3a32c5f1\",\n                          \"linkTarget\": \"ArmAction\",\n                          \"linkLabel\": \"Check Compliance\",\n                          \"style\": \"primary\",\n                          \"linkIsContextBlade\": true,\n                          \"armActionContext\": {\n                            \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                            \"headers\": [],\n                            \"params\": [],\n                            \"body\": \"{ \\n  \\\"function\\\": \\\"policymgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"SolutionTag\\\":\\\"MonitorStarterPacks\\\",\\n    \\\"Action\\\": \\\"Scan\\\"\\n  }\\n}\",\n                            \"httpMethod\": \"POST\",\n                            \"title\": \"Check Policy Compliance\",\n                            \"description\": \"# Please confirm the scan.\",\n                            \"runLabel\": \"Confirm\"\n                          }\n                        }\n                      ]\n                    },\n                    \"name\": \"links - 3\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"content\": {\n                      \"json\": \"## Policy Compliance Check\\nThis task will trigger a tenant wide check for policy compliance.\\n\\n## Policy Remediation\\n\\nThis Task will trigger remediation for the policies in the list that are considered not compliant at this time.\",\n                      \"style\": \"info\"\n                    },\n                    \"conditionalVisibilities\": [\n                      {\n                        \"parameterName\": \"tabSelection\",\n                        \"comparison\": \"isEqualTo\",\n                        \"value\": \"policystatus\"\n                      },\n                      {\n                        \"parameterName\": \"showHelp\",\n                        \"comparison\": \"isEqualTo\",\n                        \"value\": \"yes\"\n                      }\n                    ],\n                    \"name\": \"text - 7\"\n                  }\n                ]\n              },\n              \"customWidth\": \"25\",\n              \"name\": \"ComplianceButtons\"\n            },\n            {\n              \"type\": 1,\n              \"content\": {\n                \"json\": \"## Installed Policies and Initiatives with Assignments\\n\\nThis grid can be used to visualize the policies and currenct assignments as well as assing/unassign policies to/from different scopes.\\n\\nOnce one or more policies are selected, the diaglog of scopes (subscriptions and management groups) is displayed along with the respective buttons.\\n\",\n                \"style\": \"info\"\n              },\n              \"conditionalVisibilities\": [\n                {\n                  \"parameterName\": \"tabSelection\",\n                  \"comparison\": \"isEqualTo\",\n                  \"value\": \"policystatus\"\n                },\n                {\n                  \"parameterName\": \"showHelp\",\n                  \"comparison\": \"isEqualTo\",\n                  \"value\": \"yes\"\n                }\n              ],\n              \"name\": \"text - 7\"\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"policyresources\\n| where type == \\\"microsoft.authorization/policydefinitions\\\"\\n| where  isnotempty(properties.metadata.MonitorStarterPacks)\\n| project Name=name, Type='Policy',['id'],Pack=tostring(properties.metadata.MonitorStarterPacks)\\n| join kind = leftouter (policyresources\\n| where type == \\\"microsoft.authorization/policyassignments\\\"\\n| project AssignmentName=name,scope=properties.scope,PolicyId=tostring(properties.policyDefinitionId), PolicyName=split(properties.PolicyId,\\\"/\\\")[8]\\n| join kind=leftouter  (policyresources\\n| where type == \\\"microsoft.authorization/policydefinitions\\\"\\n| where  isnotempty(properties.metadata.MonitorStarterPacks)) on $left.PolicyId == $right.id\\n| project tostring(AssignmentName),Name=tostring(split(PolicyId,\\\"/\\\")[8]), PolicyId,ScopeLevel=iff(scope contains 'subscriptions',\\\"Sub\\\", \\\"MG\\\"), Scope=scope) on Name\\n| project-away Name1, id\\n| union ( policyresources\\n| where type == \\\"microsoft.authorization/policysetdefinitions\\\"\\n| where  isnotempty(properties.metadata.MonitorStarterPacks)\\n| project Name=name, Type='Initiative',['id'],Pack=\\\"_N/A\\\"\\n| join kind = leftouter (policyresources\\n| where type == \\\"microsoft.authorization/policyassignments\\\"\\n| project AssignmentName=name,scope=properties.scope,PolicyId=tostring(properties.policyDefinitionId), PolicyName=split(properties.PolicyId,\\\"/\\\")[8]\\n| join kind=leftouter  (policyresources\\n| where type == \\\"microsoft.authorization/policysetdefinitions\\\"\\n| where  isnotempty(properties.metadata.MonitorStarterPacks)) on $left.PolicyId == $right.id\\n| project tostring(AssignmentName),Name=tostring(split(PolicyId,\\\"/\\\")[8]), PolicyId, ScopeLevel=iff(scope contains 'subscriptions',\\\"Sub\\\", \\\"MG\\\"),Scope=scope) on Name\\n| project-away Name1, id)\\n| sort by Pack asc, AssignmentName asc \",\n                \"size\": 0,\n                \"title\": \"Installed Policies and Initiatives with Assignments\",\n                \"noDataMessage\": \"No MonStar policies (packs) installed.\",\n                \"exportMultipleValues\": true,\n                \"exportedParameters\": [\n                  {\n                    \"fieldName\": \"\",\n                    \"parameterName\": \"policyseletedpolicy\",\n                    \"parameterType\": 1\n                  }\n                ],\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ],\n                \"gridSettings\": {\n                  \"formatters\": [\n                    {\n                      \"columnMatch\": \"Group\",\n                      \"formatter\": 1\n                    }\n                  ],\n                  \"filter\": true\n                }\n              },\n              \"conditionalVisibility\": {\n                \"parameterName\": \"tabSelection\",\n                \"comparison\": \"isEqualTo\",\n                \"value\": \"policystatus\"\n              },\n              \"name\": \"query - 8 - Copy\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 1,\n              \"content\": {\n                \"json\": \"Select Scope below to assign a policy. There is no need to Select a scope to Unassign the policy.\",\n                \"style\": \"info\"\n              },\n              \"conditionalVisibility\": {\n                \"parameterName\": \"policyseletedpolicy\",\n                \"comparison\": \"isNotEqualTo\"\n              },\n              \"name\": \"text - 6\"\n            },\n            {\n              \"type\": 3,\n              \"content\": {\n                \"version\": \"KqlItem/1.0\",\n                \"query\": \"resourcecontainers\\n| where type == 'microsoft.management/managementgroups' or type =~ 'microsoft.resources/subscriptions'\\n| project name, id, subscriptionId, type=split(type,'/')[1]\",\n                \"size\": 0,\n                \"exportMultipleValues\": true,\n                \"exportedParameters\": [\n                  {\n                    \"parameterName\": \"policyscopes\",\n                    \"parameterType\": 1,\n                    \"quote\": \"\\\"\"\n                  }\n                ],\n                \"queryType\": 1,\n                \"resourceType\": \"microsoft.resources/tenants\",\n                \"crossComponentResources\": [\n                  \"value::tenant\"\n                ]\n              },\n              \"conditionalVisibility\": {\n                \"parameterName\": \"policyseletedpolicy\",\n                \"comparison\": \"isNotEqualTo\"\n              },\n              \"name\": \"query - 15\",\n              \"styleSettings\": {\n                \"showBorder\": true\n              }\n            },\n            {\n              \"type\": 11,\n              \"content\": {\n                \"version\": \"LinkItem/1.0\",\n                \"style\": \"paragraph\",\n                \"links\": [\n                  {\n                    \"id\": \"63320366-2b93-4e52-831c-55f7c6de4043\",\n                    \"linkTarget\": \"ArmAction\",\n                    \"linkLabel\": \"Assign Policy\",\n                    \"style\": \"primary\",\n                    \"linkIsContextBlade\": true,\n                    \"armActionContext\": {\n                      \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                      \"headers\": [],\n                      \"params\": [],\n                      \"body\": \"{ \\n  \\\"function\\\": \\\"policymgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"SolutionTag\\\":\\\"MonitorStarterPacks\\\",\\n    \\\"Action\\\": \\\"Assign\\\",\\n    \\\"Scopes\\\": [{policyscopes}],\\n    \\\"policies\\\": [{policyseletedpolicy}]\\n  }\\n}\",\n                      \"httpMethod\": \"POST\",\n                      \"title\": \"Assign Policy\",\n                      \"description\": \"# Assign policy below to selected scope:\\n\\n## Policy\\n\\n{policyseletedpolicy}\\n\\n## Scope\\n\\n{policyscopes}\",\n                      \"runLabel\": \"Assign\"\n                    }\n                  },\n                  {\n                    \"id\": \"ed3b8c20-e2ef-4768-b0b9-bfcc254602e6\",\n                    \"linkTarget\": \"ArmAction\",\n                    \"linkLabel\": \"Unassign Policy\",\n                    \"style\": \"primary\",\n                    \"linkIsContextBlade\": true,\n                    \"armActionContext\": {\n                      \"path\": \"{logicAppResource}/triggers/manual/run?api-version=2016-06-01\",\n                      \"headers\": [],\n                      \"params\": [],\n                      \"body\": \"{ \\n  \\\"function\\\": \\\"policymgmt\\\",\\n  \\\"functionBody\\\" : {\\n    \\\"SolutionTag\\\":\\\"MonitorStarterPacks\\\",\\n    \\\"Action\\\": \\\"Unassign\\\",\\n    \\\"policies\\\": [{policyseletedpolicy}]\\n  }\\n}\",\n                      \"httpMethod\": \"POST\",\n                      \"title\": \"Unassign Policies\",\n                      \"description\": \"# Unassign policy or policies below from their scopes.\\n\\n## Policy\\n\\n{policyseletedpolicy}\\n\\n\",\n                      \"actionName\": \"Unassign Policies\",\n                      \"runLabel\": \"Unassign\"\n                    }\n                  }\n                ]\n              },\n              \"customWidth\": \"25\",\n              \"conditionalVisibility\": {\n                \"parameterName\": \"policyseletedpolicy\",\n                \"comparison\": \"isNotEqualTo\"\n              },\n              \"name\": \"links - 2 - Copy\"\n            },\n            {\n              \"type\": 1,\n              \"content\": {\n                \"json\": \"## Policies To Assign: \\n\\n`{policyseletedpolicy}`\\n\\n## Scopes: \\n\\n{policyscopes}\"\n              },\n              \"conditionalVisibilities\": [\n                {\n                  \"parameterName\": \"policyseletedpolicy\",\n                  \"comparison\": \"isNotEqualTo\"\n                },\n                {\n                  \"parameterName\": \"showHelp\",\n                  \"comparison\": \"isEqualTo\",\n                  \"value\": \"yes\"\n                }\n              ],\n              \"name\": \"text - 4\"\n            }\n          ]\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"policystatus\"\n        },\n        \"name\": \"policymgmt\"\n      },\n      {\n        \"type\": 3,\n        \"content\": {\n          \"version\": \"KqlItem/1.0\",\n          \"query\": \"Resources\\n| where type == 'microsoft.compute/virtualmachines'\\n| extend\\n    JoinID = toupper(id),\\n    OSName = tostring(properties.osProfile.computerName),\\n    OSType = tostring(properties.storageProfile.osDisk.osType)\\n| join kind=leftouter(\\n    Resources\\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId\\n| union (Resources\\n| where type == 'microsoft.hybridcompute/machines'\\n| extend\\n    JoinID = toupper(id),\\n    OSName = tostring(properties.osProfile.computerName),\\n    OSType = tostring(properties.osType)\\n| join kind=leftouter(\\n    Resources\\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId)\\n| summarize by id, OSName, OSType, ExtensionName, subscriptionId\\n| join kind= leftouter   (resourcecontainers\\n| where type =~ 'microsoft.resources/subscriptions'\\n| project Subscription=name,subscriptionId) on subscriptionId\\n| project-away subscriptionId, subscriptionId1\\n| order by tolower(OSName) asc\",\n          \"size\": 0,\n          \"title\": \"Agent Install Status\",\n          \"queryType\": 1,\n          \"resourceType\": \"microsoft.resources/tenants\",\n          \"crossComponentResources\": [\n            \"value::tenant\"\n          ],\n          \"visualization\": \"table\",\n          \"gridSettings\": {\n            \"formatters\": [\n              {\n                \"columnMatch\": \"ExtensionName\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"linkTarget\": \"CellDetails\",\n                  \"linkIsContextBlade\": true,\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"==\",\n                      \"thresholdValue\": \"AzureMonitorLinuxAgent\",\n                      \"representation\": \"success\",\n                      \"text\": \"Linux Agent\"\n                    },\n                    {\n                      \"operator\": \"==\",\n                      \"thresholdValue\": \"AzureMonitorWindowsAgent\",\n                      \"representation\": \"success\",\n                      \"text\": \"Windows Agent\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"stopped\",\n                      \"text\": \"No Agent\"\n                    }\n                  ],\n                  \"customColumnWidthSetting\": \"20ch\"\n                }\n              }\n            ],\n            \"filter\": true\n          },\n          \"sortBy\": []\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"agentmgmt\"\n        },\n        \"customWidth\": \"50\",\n        \"name\": \"query - agent install status\",\n        \"styleSettings\": {\n          \"showBorder\": true\n        }\n      },\n      {\n        \"type\": 3,\n        \"content\": {\n          \"version\": \"KqlItem/1.0\",\n          \"query\": \"Resources\\n| where type == 'microsoft.compute/virtualmachines'\\n| extend\\n    JoinID = toupper(id),\\n    OSName = tostring(properties.osProfile.computerName),\\n    OSType = tostring(properties.storageProfile.osDisk.osType)\\n| join kind=leftouter(\\n    Resources\\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId\\n| union (Resources\\n| where type == 'microsoft.hybridcompute/machines'\\n| extend\\n    JoinID = toupper(id),\\n    OSName = tostring(properties.osProfile.computerName),\\n    OSType = tostring(properties.osType)\\n| join kind=leftouter(\\n    Resources\\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\\n    | extend\\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\\n        ExtensionName = name\\n) on $left.JoinID == $right.VMId)\\n| summarize count() by ExtensionName\",\n          \"size\": 1,\n          \"title\": \"Agent Install Status\",\n          \"queryType\": 1,\n          \"resourceType\": \"microsoft.resources/tenants\",\n          \"crossComponentResources\": [\n            \"value::tenant\"\n          ],\n          \"visualization\": \"piechart\",\n          \"gridSettings\": {\n            \"formatters\": [\n              {\n                \"columnMatch\": \"ExtensionName\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"linkTarget\": \"CellDetails\",\n                  \"linkIsContextBlade\": true,\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"==\",\n                      \"thresholdValue\": \"AzureMonitorLinuxAgent\",\n                      \"representation\": \"success\",\n                      \"text\": \"Linux Agent\"\n                    },\n                    {\n                      \"operator\": \"==\",\n                      \"thresholdValue\": \"AzureMonitorWindowsAgent\",\n                      \"representation\": \"success\",\n                      \"text\": \"Windows Agent\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": \"stopped\",\n                      \"text\": \"No Agent\"\n                    }\n                  ],\n                  \"customColumnWidthSetting\": \"20ch\"\n                }\n              }\n            ],\n            \"filter\": true\n          },\n          \"chartSettings\": {\n            \"seriesLabelSettings\": [\n              {\n                \"seriesName\": \"\",\n                \"label\": \"No Agent\",\n                \"color\": \"red\"\n              }\n            ]\n          }\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"agentmgmt\"\n        },\n        \"customWidth\": \"50\",\n        \"name\": \"query - agent install status - Copy\",\n        \"styleSettings\": {\n          \"showBorder\": true\n        }\n      },\n      {\n        \"type\": 3,\n        \"content\": {\n          \"version\": \"KqlItem/1.0\",\n          \"query\": \"Heartbeat | where Category == \\\"Azure Monitor Agent\\\"\\n| summarize arg_max(TimeGenerated, *) by Computer\\n| project  Computer,LastHeartbeat=TimeGenerated, ['SecondsAgo']=datetime_diff('second',now(),TimeGenerated)\\n| sort by SecondsAgo asc\",\n          \"size\": 4,\n          \"title\": \"Last Heartbeat (24 hours)\",\n          \"timeContext\": {\n            \"durationMs\": 86400000\n          },\n          \"queryType\": 0,\n          \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n          \"crossComponentResources\": [\n            \"{Workspace}\"\n          ],\n          \"gridSettings\": {\n            \"formatters\": [\n              {\n                \"columnMatch\": \"SecondsAgo\",\n                \"formatter\": 18,\n                \"formatOptions\": {\n                  \"thresholdsOptions\": \"icons\",\n                  \"thresholdsGrid\": [\n                    {\n                      \"operator\": \"<=\",\n                      \"thresholdValue\": \"600\",\n                      \"representation\": \"success\",\n                      \"text\": \"{0}{1}\"\n                    },\n                    {\n                      \"operator\": \">\",\n                      \"thresholdValue\": \"600\",\n                      \"representation\": \"2\",\n                      \"text\": \"{0}{1}\"\n                    },\n                    {\n                      \"operator\": \"Default\",\n                      \"thresholdValue\": null,\n                      \"representation\": null,\n                      \"text\": \"{0}{1}\"\n                    }\n                  ]\n                }\n              }\n            ],\n            \"filter\": true\n          }\n        },\n        \"conditionalVisibility\": {\n          \"parameterName\": \"tabSelection\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"agentmgmt\"\n        },\n        \"customWidth\": \"50\",\n        \"name\": \"query - 16\",\n        \"styleSettings\": {\n          \"showBorder\": true\n        }\n      }\n    ],\n    \"fallbackResourceIds\": [\n      \"Azure Monitor\"\n    ],\n    \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n  }"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/workbooks",
                      "apiVersion": "2022-04-01",
                      "name": "[guid('monstar')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "[format('{0}', parameters('solutionTag'))]": "mainworkbook",
                        "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                      },
                      "kind": "shared",
                      "properties": {
                        "displayName": "Azure Monitor Starter Packs",
                        "serializedData": "[variables('wbConfig')]",
                        "category": "workbook",
                        "sourceId": "[parameters('lawresourceid')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "azureManagedGrafana",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "location": {
                    "value": "[parameters('grafanalocation')]"
                  },
                  "grafanaName": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "lawresourceId": {
                    "value": "[parameters('lawresourceid')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "13556570943843783224"
                    }
                  },
                  "parameters": {
                    "grafanaName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    },
                    "lawresourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "lawResourceGroup": "[split(parameters('lawresourceId'), '/')[4]]",
                    "GrafanaAdminRoleId": "22926164-76b3-42b3-bc55-97df8dab3e41",
                    "ReaderRoleId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                    "LogAnalyticsContribuorRoleId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                    "MonitoringContributorRoleId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Dashboard/grafana",
                      "apiVersion": "2022-08-01",
                      "name": "[parameters('grafanaName')]",
                      "tags": {
                        "[format('{0}', parameters('solutionTag'))]": "grafana",
                        "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                      },
                      "sku": {
                        "name": "Standard"
                      },
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "location": "[parameters('location')]"
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "grafanaReadPermissions",
                      "subscriptionId": "[subscription().subscriptionId]",
                      "location": "[resourceGroup().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "principalId": {
                            "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                          },
                          "resourcename": {
                            "value": "[parameters('grafanaName')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('ReaderRoleId')]"
                          },
                          "roleShortName": {
                            "value": "Reader"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "9640557259126127493"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "grafanaLAWPermissions",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "principalId": {
                            "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                          },
                          "resourcename": {
                            "value": "[parameters('grafanaName')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('LogAnalyticsContribuorRoleId')]"
                          },
                          "roleShortName": {
                            "value": "Log Analytics Contributor"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13765506848823263645"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "grafanaMonitorPermissions",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "principalId": {
                            "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                          },
                          "resourcename": {
                            "value": "[parameters('grafanaName')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('MonitoringContributorRoleId')]"
                          },
                          "roleShortName": {
                            "value": "Monitor Contributor Role"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "13765506848823263645"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "grafanaId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('DCE-{0}-{1}', parameters('solutionTag'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "packtag": {
                    "value": "dceMainRegion"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "dceName": {
                    "value": "[format('DCE-{0}-{1}', parameters('solutionTag'), parameters('location'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "6439354615761736870"
                    }
                  },
                  "parameters": {
                    "dceName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionEndpoints",
                      "apiVersion": "2021-09-01-preview",
                      "name": "[parameters('dceName')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                      },
                      "properties": {
                        "networkAcls": {
                          "publicNetworkAccess": "Enabled"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "dceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dceName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "packsUserManagedIdentity",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('packPolicyRoleDefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "packsUserManagedIdentity"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "2392605353847140975"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('userIdentityName')]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "17260189257503072595"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('userIdentityName')]",
                                "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                              }
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), copyIndex())]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "6314791387466906825"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "functionUserManagedIdentity",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('backendFunctionRoleDefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "functionUserManagedIdentity"
                  },
                  "mgname": {
                    "value": "[parameters('mgname')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "2392605353847140975"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "mgname": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('userIdentityName')]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "17260189257503072595"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('userIdentityName')]",
                                "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                              }
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), copyIndex())]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "6314791387466906825"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('userIdentityName')), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "monstarkeyvault",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "kvName": {
                    "value": "[format('amspkv-{0}', split(parameters('functionname'), '-')[1])]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "functionName": {
                    "value": "[parameters('functionname')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "4736340622063428816"
                    }
                  },
                  "parameters": {
                    "kvName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "functionName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "vaultUri": "[format('https://{0}.vault.azure.net', parameters('kvName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2021-06-01-preview",
                      "name": "[parameters('kvName')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "[format('{0}', parameters('solutionTag'))]": "KeyVault",
                        "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                      },
                      "properties": {
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "tenantId": "[subscription().tenantId]",
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": false,
                        "enabledForTemplateDeployment": false,
                        "enableSoftDelete": false,
                        "softDeleteRetentionInDays": 90,
                        "enableRbacAuthorization": true,
                        "vaultUri": "[variables('vaultUri')]",
                        "provisioningState": "Succeeded",
                        "publicNetworkAccess": "Enabled"
                      }
                    },
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2021-11-01-preview",
                      "name": "[format('{0}/{1}', parameters('kvName'), 'FunctionKey')]",
                      "properties": {
                        "attributes": {
                          "enabled": true
                        },
                        "contentType": "string",
                        "value": "[listKeys(resourceId('Microsoft.Web/sites/host', parameters('functionName'), 'default'), '2022-09-01').functionKeys.monitoringKey]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "kvResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'backendFunction')]"
              ]
            },
            {
              "copy": {
                "name": "userIdentityRoleAssignments",
                "count": "[length(variables('logicappRequiredRoleassignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('logiapprbac-{0}', copyIndex())]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "resourcename": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monstarkeyvault'), '2022-09-01').outputs.kvResourceId.value]"
                  },
                  "principalId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'BackendLogicApp'), '2022-09-01').outputs.logicAppPrincipalId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('logicappRequiredRoleassignments')[copyIndex()]]"
                  },
                  "roleShortName": {
                    "value": "[variables('logicappRequiredRoleassignments')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "6314791387466906825"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(managementGroup().name, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'monstarkeyvault')]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'BackendLogicApp')]"
              ]
            }
          ],
          "outputs": {
            "packsUserManagedIdentityId": {
              "type": "string",
              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'packsUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
            },
            "packsUserManagedResourceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'packsUserManagedIdentity'), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment')]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', 'resourceGroup-Deployment')]"
      ]
    }
  ]
}