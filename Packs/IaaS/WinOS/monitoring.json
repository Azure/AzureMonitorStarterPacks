{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "16730519839120098854"
    }
  },
  "parameters": {
    "rulename": {
      "type": "string",
      "defaultValue": "AMSP-Windows-OS",
      "metadata": {
        "description": "Name of the DCR rule to be created"
      }
    },
    "actionGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Action Group to be used or created."
      }
    },
    "emailreceivers": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Email receiver names to be used for the Action Group if being created."
      }
    },
    "emailreiceversemails": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Email addresses to be used for the Action Group if being created."
      }
    },
    "useExistingAG": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "If set to true, a new Action group will be created"
      }
    },
    "existingAGRG": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the existing resource group to be used for the Action Group if existing."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "location for the deployment."
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "Full resource ID of the log analytics workspace to be used for the deployment."
      }
    },
    "packtag": {
      "type": "string",
      "defaultValue": "WinOS"
    },
    "solutionTag": {
      "type": "string"
    },
    "solutionVersion": {
      "type": "string"
    },
    "dceId": {
      "type": "string"
    },
    "userManagedIdentityResourceId": {
      "type": "string"
    },
    "mgname": {
      "type": "string"
    },
    "subscriptionId": {
      "type": "string"
    },
    "resourceGroupId": {
      "type": "string"
    },
    "assignmentLevel": {
      "type": "string"
    },
    "grafanaName": {
      "type": "string"
    }
  },
  "variables": {
    "ruleshortname": "VMI-OS",
    "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "actiongroup",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "actionGroupName": {
            "value": "[parameters('actionGroupName')]"
          },
          "existingAGRG": {
            "value": "[parameters('existingAGRG')]"
          },
          "emailreceivers": {
            "value": "[parameters('emailreceivers')]"
          },
          "emailreiceversemails": {
            "value": "[parameters('emailreiceversemails')]"
          },
          "useExistingAG": {
            "value": "[parameters('useExistingAG')]"
          },
          "newRGresourceGroup": {
            "value": "[variables('resourceGroupName')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "1962184090603211748"
            }
          },
          "parameters": {
            "subscriptionId": {
              "type": "string"
            },
            "actionGroupName": {
              "type": "string"
            },
            "emailreceivers": {
              "type": "array",
              "defaultValue": []
            },
            "emailreiceversemails": {
              "type": "array",
              "defaultValue": []
            },
            "useExistingAG": {
              "type": "bool"
            },
            "existingAGRG": {
              "type": "string",
              "defaultValue": ""
            },
            "newRGresourceGroup": {
              "type": "string",
              "defaultValue": ""
            },
            "solutionTag": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "variables": {
            "deploymentName": "ag-test"
          },
          "resources": [
            {
              "condition": "[not(parameters('useExistingAG'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('deploymentName')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('newRGresourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "actiongroupname": {
                    "value": "[parameters('actionGroupName')]"
                  },
                  "emailreceivers": {
                    "value": "[parameters('emailreceivers')]"
                  },
                  "emailreiceversemails": {
                    "value": "[parameters('emailreiceversemails')]"
                  },
                  "groupshortname": {
                    "value": "[parameters('actionGroupName')]"
                  },
                  "location": {
                    "value": "global"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "2425853910946393933"
                    }
                  },
                  "parameters": {
                    "actiongroupname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "groupshortname": {
                      "type": "string"
                    },
                    "emailreceivers": {
                      "type": "array"
                    },
                    "emailreiceversemails": {
                      "type": "array"
                    },
                    "solutionTag": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/actionGroups",
                      "apiVersion": "2023-01-01",
                      "name": "[parameters('actiongroupname')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "[format('{0}', parameters('solutionTag'))]": "AG"
                      },
                      "properties": {
                        "copy": [
                          {
                            "name": "emailReceivers",
                            "count": "[length(range(0, length(parameters('emailreceivers'))))]",
                            "input": {
                              "name": "[parameters('emailreceivers')[range(0, length(parameters('emailreceivers')))[copyIndex('emailReceivers')]]]",
                              "emailAddress": "[parameters('emailreiceversemails')[range(0, length(parameters('emailreceivers')))[copyIndex('emailReceivers')]]]",
                              "useCommonAlertSchema": false
                            }
                          }
                        ],
                        "groupShortName": "[parameters('groupshortname')]",
                        "enabled": true
                      }
                    }
                  ],
                  "outputs": {
                    "agGroupId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('actiongroupname'))]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "actionGroupResourceId": {
              "type": "string",
              "value": "[if(parameters('useExistingAG'), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('existingAGRG')), 'Microsoft.Insights/actionGroups', parameters('actionGroupName')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('newRGresourceGroup')), 'Microsoft.Resources/deployments', variables('deploymentName')), '2022-09-01').outputs.agGroupId.value)]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('vmInsightsDCR-{0}', parameters('packtag'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "workspaceResourceId": {
            "value": "[parameters('workspaceId')]"
          },
          "packtag": {
            "value": "[parameters('packtag')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "ruleName": {
            "value": "[parameters('rulename')]"
          },
          "dceId": {
            "value": "[parameters('dceId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "14984211964460870742"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "workspaceResourceId": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "packtag": {
              "type": "string"
            },
            "ruleName": {
              "type": "string"
            },
            "dceId": {
              "type": "string"
            }
          },
          "variables": {
            "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/dataCollectionRules",
              "apiVersion": "2021-09-01-preview",
              "name": "[format('{0}-VMI', parameters('ruleName'))]",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
              },
              "properties": {
                "description": "Data collection rule for VM Insights.",
                "dataCollectionEndpointId": "[parameters('dceId')]",
                "dataSources": {
                  "performanceCounters": [
                    {
                      "name": "VMInsightsPerfCounters",
                      "streams": [
                        "Microsoft-InsightsMetrics"
                      ],
                      "samplingFrequencyInSeconds": 60,
                      "counterSpecifiers": [
                        "\\VmInsights\\DetailedMetrics"
                      ]
                    }
                  ]
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[parameters('workspaceResourceId')]",
                      "name": "[variables('wsfriendlyname')]"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Microsoft-InsightsMetrics"
                    ],
                    "destinations": [
                      "[variables('wsfriendlyname')]"
                    ]
                  }
                ]
              }
            }
          ],
          "outputs": {
            "VMIRuleId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-VMI', parameters('ruleName')))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Alerts-{0}', parameters('packtag'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "workspaceId": {
            "value": "[parameters('workspaceId')]"
          },
          "AGId": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'actiongroup'), '2022-09-01').outputs.actionGroupResourceId.value]"
          },
          "packtag": {
            "value": "[parameters('packtag')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "16154953958319206945"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "workspaceId": {
              "type": "string"
            },
            "AGId": {
              "type": "string"
            },
            "packtag": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            }
          },
          "variables": {
            "moduleprefix": "AMSP-Win-VMI",
            "alertlist": [
              {
                "alertRuleDescription": "Alert for Memory over 90%",
                "alertRuleDisplayName": "Memory over 90%",
                "alertRuleName": "MemoveryOverPercentWarning",
                "alertRuleSeverity": 2,
                "autoMitigate": true,
                "evaluationFrequency": "PT15M",
                "windowSize": "PT15M",
                "alertType": "Aggregated",
                "metricMeasureColumn": "AvgMemUse",
                "operator": "GreaterThan",
                "threshold": 90,
                "query": "InsightsMetrics | where Namespace == \"Memory\" and Name == \"AvailableMB\" | extend memorySizeMB = todouble(parse_json(Tags).[\"vm.azm.ms/memorySizeMB\"]) | extend PercentageBytesinUse = Val/memorySizeMB*100    | summarize AvgMemUse = avg(PercentageBytesinUse) by bin(TimeGenerated, 15m), _ResourceId,Computer"
              },
              {
                "alertRuleDescription": "Alert for disk space under 10%",
                "alertRuleDisplayName": "Disk space under 10%",
                "alertRuleName": "DiskSpaceUnderPercentWarning",
                "alertRuleSeverity": 2,
                "autoMitigate": true,
                "evaluationFrequency": "PT15M",
                "windowSize": "PT15M",
                "alertType": "rows",
                "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 10 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
              },
              {
                "alertRuleDescription": "Alert for disk space under 5%",
                "alertRuleDisplayName": "Disk space under 5%",
                "alertRuleName": "DiskSpaceUnderPercentCritical",
                "alertRuleSeverity": 1,
                "autoMitigate": true,
                "evaluationFrequency": "PT15M",
                "windowSize": "PT15M",
                "alertType": "rows",
                "query": "InsightsMetrics\n| where Namespace == 'LogicalDisk'\n    and Name == 'FreeSpacePercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Val < 5 //would use a low value...\n| summarize by _ResourceId,Computer, Disk, Val\n| where Disk notcontains \"snap\"\n\n"
              },
              {
                "alertRuleDescription": "Heartbeat alert for VMs - 5 minutes",
                "alertRuleDisplayName": "Heartbeat alert for VMs",
                "alertRuleName": "HeartbeatAlert",
                "alertRuleSeverity": 2,
                "autoMitigate": true,
                "evaluationFrequency": "PT5M",
                "windowSize": "PT5M",
                "alertType": "rows",
                "query": "InsightsMetrics| where Namespace == 'Computer' and Name == 'Heartbeat'| summarize arg_max(TimeGenerated, *) by _ResourceId, Computer| where TimeGenerated < ago(5m)"
              },
              {
                "alertRuleDescription": "Alert for CPU usage over 90%",
                "alertRuleDisplayName": "CPU usage over 90%",
                "alertRuleName": "CPUUsageOverPercentWarning",
                "alertRuleSeverity": 2,
                "autoMitigate": true,
                "evaluationFrequency": "PT15M",
                "windowSize": "PT15M",
                "alertType": "rows",
                "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 90 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
              },
              {
                "alertRuleDescription": "Alert for CPU usage over 95%",
                "alertRuleDisplayName": "CPU usage over 95%",
                "alertRuleName": "CPUUsageOverPercentcritical",
                "alertRuleSeverity": 1,
                "autoMitigate": true,
                "evaluationFrequency": "PT15M",
                "windowSize": "PT15M",
                "alertType": "rows",
                "query": "InsightsMetrics\n| where Namespace == 'Processor'\n    and Name == 'UtilizationPercentage'\n    and Origin == \"vm.azm.ms\"\n| extend Computer=tostring(todynamic(Tags)[\"vm.azm.ms/computer\"])\n| where Val > 95 //would use a low value...\n| summarize by _ResourceId,Computer, Val\n\n"
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "alertlist": {
                    "value": "[variables('alertlist')]"
                  },
                  "AGId": {
                    "value": "[parameters('AGId')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "moduleprefix": {
                    "value": "[variables('moduleprefix')]"
                  },
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "17921040337123514091"
                    }
                  },
                  "parameters": {
                    "alertlist": {
                      "type": "array"
                    },
                    "location": {
                      "type": "string"
                    },
                    "workspaceId": {
                      "type": "string"
                    },
                    "AGId": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "moduleprefix": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "Alerts",
                        "count": "[length(parameters('alertlist'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('AGId')]"
                          },
                          "alertRuleDescription": {
                            "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                          },
                          "alertRuleDisplayName": {
                            "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                          },
                          "alertRuleName": {
                            "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                          },
                          "alertRuleSeverity": {
                            "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                          },
                          "autoMitigate": {
                            "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                          },
                          "evaluationFrequency": {
                            "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                          },
                          "windowSize": {
                            "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                          },
                          "scope": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "query": {
                            "value": "[parameters('alertlist')[copyIndex()].query]"
                          },
                          "packtag": {
                            "value": "[parameters('packtag')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "alertType": {
                            "value": "[parameters('alertlist')[copyIndex()].alertType]"
                          },
                          "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                          "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                          "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.20.4.51522",
                              "templateHash": "982917926388079909"
                            }
                          },
                          "parameters": {
                            "alertType": {
                              "type": "string",
                              "allowedValues": [
                                "rows",
                                "Aggregated"
                              ]
                            },
                            "alertRuleName": {
                              "type": "string"
                            },
                            "alertRuleDisplayName": {
                              "type": "string"
                            },
                            "alertRuleDescription": {
                              "type": "string"
                            },
                            "scope": {
                              "type": "string"
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "alertRuleSeverity": {
                              "type": "int"
                            },
                            "location": {
                              "type": "string"
                            },
                            "windowSize": {
                              "type": "string",
                              "defaultValue": "PT15M"
                            },
                            "evaluationFrequency": {
                              "type": "string",
                              "defaultValue": "PT15M"
                            },
                            "autoMitigate": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "query": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "threshold": {
                              "type": "int",
                              "defaultValue": 0
                            },
                            "metricMeasureColumn": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "operator": {
                              "type": "string",
                              "defaultValue": "GreaterThan",
                              "allowedValues": [
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "Equal",
                                "NotEqual"
                              ]
                            }
                          },
                          "resources": [
                            {
                              "condition": "[equals(parameters('alertType'), 'rows')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('rowAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "alertRuleName": {
                                    "value": "[parameters('alertRuleName')]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[parameters('alertRuleDisplayName')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertRuleDescription')]"
                                  },
                                  "scope": {
                                    "value": "[parameters('scope')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertRuleSeverity')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('windowSize')]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('evaluationFrequency')]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('autoMitigate')]"
                                  },
                                  "query": {
                                    "value": "[parameters('query')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "solutionVersion": {
                                    "value": "[parameters('solutionVersion')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "17294789744221740203"
                                    }
                                  },
                                  "parameters": {
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "solutionVersion": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/scheduledQueryRules",
                                      "apiVersion": "2023-03-15-preview",
                                      "name": "[parameters('alertRuleName')]",
                                      "location": "[parameters('location')]",
                                      "tags": {
                                        "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                        "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                                      },
                                      "properties": {
                                        "description": "[parameters('alertRuleDescription')]",
                                        "ruleResolveConfiguration": {},
                                        "displayName": "[parameters('alertRuleDisplayName')]",
                                        "enabled": true,
                                        "scopes": [
                                          "[parameters('scope')]"
                                        ],
                                        "targetResourceTypes": [
                                          "Microsoft.OperationalInsights/workspaces"
                                        ],
                                        "windowSize": "[parameters('windowSize')]",
                                        "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                        "severity": "[parameters('alertRuleSeverity')]",
                                        "criteria": {
                                          "allOf": [
                                            {
                                              "query": "[parameters('query')]",
                                              "timeAggregation": "Count",
                                              "dimensions": [
                                                {
                                                  "name": "Computer",
                                                  "operator": "Include",
                                                  "values": [
                                                    "*"
                                                  ]
                                                }
                                              ],
                                              "resourceIdColumn": "_ResourceId",
                                              "operator": "GreaterThan",
                                              "threshold": 0,
                                              "failingPeriods": {
                                                "numberOfEvaluationPeriods": 1,
                                                "minFailingPeriodsToAlert": 1
                                              }
                                            }
                                          ]
                                        },
                                        "autoMitigate": "[parameters('autoMitigate')]",
                                        "actions": {
                                          "actionGroups": [
                                            "[parameters('actionGroupResourceId')]"
                                          ],
                                          "customProperties": {}
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('AggregateAlert-{0}-{1}', parameters('packtag'), parameters('alertRuleName'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "alertRuleName": {
                                    "value": "[parameters('alertRuleName')]"
                                  },
                                  "alertRuleDisplayName": {
                                    "value": "[parameters('alertRuleDisplayName')]"
                                  },
                                  "alertRuleDescription": {
                                    "value": "[parameters('alertRuleDescription')]"
                                  },
                                  "scope": {
                                    "value": "[parameters('scope')]"
                                  },
                                  "actionGroupResourceId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "alertRuleSeverity": {
                                    "value": "[parameters('alertRuleSeverity')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "windowSize": {
                                    "value": "[parameters('windowSize')]"
                                  },
                                  "evaluationFrequency": {
                                    "value": "[parameters('evaluationFrequency')]"
                                  },
                                  "autoMitigate": {
                                    "value": "[parameters('autoMitigate')]"
                                  },
                                  "query": {
                                    "value": "[parameters('query')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "solutionVersion": {
                                    "value": "[parameters('solutionVersion')]"
                                  },
                                  "threshold": {
                                    "value": "[parameters('threshold')]"
                                  },
                                  "metricMeasureColumn": {
                                    "value": "[parameters('metricMeasureColumn')]"
                                  },
                                  "operator": {
                                    "value": "[parameters('operator')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.20.4.51522",
                                      "templateHash": "17705228431369681648"
                                    }
                                  },
                                  "parameters": {
                                    "alertRuleName": {
                                      "type": "string"
                                    },
                                    "alertRuleDisplayName": {
                                      "type": "string"
                                    },
                                    "alertRuleDescription": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "actionGroupResourceId": {
                                      "type": "string"
                                    },
                                    "alertRuleSeverity": {
                                      "type": "int"
                                    },
                                    "location": {
                                      "type": "string"
                                    },
                                    "windowSize": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "evaluationFrequency": {
                                      "type": "string",
                                      "defaultValue": "PT15M"
                                    },
                                    "autoMitigate": {
                                      "type": "bool",
                                      "defaultValue": false
                                    },
                                    "query": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "solutionVersion": {
                                      "type": "string"
                                    },
                                    "threshold": {
                                      "type": "int"
                                    },
                                    "metricMeasureColumn": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string",
                                      "allowedValues": [
                                        "GreaterThan",
                                        "GreaterThanOrEqual",
                                        "LessThan",
                                        "LessThanOrEqual",
                                        "Equal",
                                        "NotEqual"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/scheduledQueryRules",
                                      "apiVersion": "2023-03-15-preview",
                                      "name": "[parameters('alertRuleName')]",
                                      "location": "[parameters('location')]",
                                      "tags": {
                                        "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                        "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
                                      },
                                      "properties": {
                                        "description": "[parameters('alertRuleDescription')]",
                                        "ruleResolveConfiguration": {},
                                        "displayName": "[parameters('alertRuleDisplayName')]",
                                        "enabled": true,
                                        "scopes": [
                                          "[parameters('scope')]"
                                        ],
                                        "targetResourceTypes": [
                                          "Microsoft.OperationalInsights/workspaces"
                                        ],
                                        "windowSize": "[parameters('windowSize')]",
                                        "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                        "severity": "[parameters('alertRuleSeverity')]",
                                        "criteria": {
                                          "allOf": [
                                            {
                                              "query": "[parameters('query')]",
                                              "timeAggregation": "Average",
                                              "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                              "dimensions": [
                                                {
                                                  "name": "Computer",
                                                  "operator": "Include",
                                                  "values": [
                                                    "*"
                                                  ]
                                                }
                                              ],
                                              "resourceIdColumn": "_ResourceId",
                                              "operator": "[parameters('operator')]",
                                              "threshold": "[parameters('threshold')]",
                                              "failingPeriods": {
                                                "numberOfEvaluationPeriods": 1,
                                                "minFailingPeriodsToAlert": 1
                                              }
                                            }
                                          ]
                                        },
                                        "autoMitigate": "[parameters('autoMitigate')]",
                                        "actions": {
                                          "actionGroups": [
                                            "[parameters('actionGroupResourceId')]"
                                          ],
                                          "customProperties": {}
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', 'actiongroup')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('policysetup-{0}', parameters('packtag'))]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "dcrId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag'))), '2022-09-01').outputs.VMIRuleId.value]"
          },
          "packtag": {
            "value": "[parameters('packtag')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "rulename": {
            "value": "[parameters('rulename')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[parameters('userManagedIdentityResourceId')]"
          },
          "mgname": {
            "value": "[parameters('mgname')]"
          },
          "ruleshortname": {
            "value": "[variables('ruleshortname')]"
          },
          "assignmentLevel": {
            "value": "[parameters('assignmentLevel')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "12301075469741441796"
            }
          },
          "parameters": {
            "packtag": {
              "type": "string"
            },
            "dcrId": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "rulename": {
              "type": "string"
            },
            "ruleshortname": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "userManagedIdentityResourceId": {
              "type": "string"
            },
            "mgname": {
              "type": "string"
            },
            "assignmentLevel": {
              "type": "string",
              "defaultValue": "managementGroup"
            },
            "subscriptionId": {
              "type": "string"
            }
          },
          "variables": {
            "roledefinitionIds": [
              "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
            ],
            "dcrName": "[split(parameters('dcrId'), '/')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "policyDescription": {
                    "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                  },
                  "policyDisplayName": {
                    "value": "[format('Associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                  },
                  "policyName": {
                    "value": "[format('Associate-{0}-{1}-vms', parameters('rulename'), parameters('packtag'))]"
                  },
                  "DCRId": {
                    "value": "[parameters('dcrId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "roledefinitionIds": {
                    "value": "[variables('roledefinitionIds')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "7060261485268467714"
                    }
                  },
                  "parameters": {
                    "DCRId": {
                      "type": "string"
                    },
                    "policyName": {
                      "type": "string"
                    },
                    "policyDisplayName": {
                      "type": "string"
                    },
                    "policyDescription": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "roledefinitionIds": {
                      "type": "array",
                      "defaultValue": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ]
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('policyName')]",
                      "properties": {
                        "description": "[parameters('policyDescription')]",
                        "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                        "metadata": {
                          "category": "Monitoring",
                          "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                        },
                        "policyType": "Custom",
                        "mode": "Indexed",
                        "parameters": {
                          "tagName": {
                            "type": "String",
                            "metadata": {
                              "displayName": "Tag name",
                              "description": "A tag to apply the association conditionally."
                            },
                            "defaultValue": "[parameters('solutionTag')]"
                          },
                          "tagValue": {
                            "type": "String",
                            "metadata": {
                              "displayName": "Tag value",
                              "description": "The value of the tag."
                            },
                            "defaultValue": "[parameters('packtag')]"
                          },
                          "effect": {
                            "type": "String",
                            "metadata": {
                              "displayName": "Effect",
                              "description": "Enable or disable the execution of the policy"
                            },
                            "allowedValues": [
                              "DeployIfNotExists",
                              "Disabled"
                            ],
                            "defaultValue": "DeployIfNotExists"
                          },
                          "DCRid": {
                            "type": "String",
                            "metadata": {
                              "displayName": "DCRId",
                              "description": "The value of the DCRId."
                            },
                            "defaultValue": "[parameters('DCRId')]"
                          }
                        },
                        "policyRule": {
                          "if": {
                            "allOf": [
                              {
                                "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                "contains": "[[parameters('tagValue')]"
                              },
                              {
                                "field": "type",
                                "equals": "Microsoft.Compute/virtualMachines"
                              }
                            ]
                          },
                          "then": {
                            "effect": "[[parameters('effect')]",
                            "details": {
                              "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                              "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                              "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                              "deployment": {
                                "properties": {
                                  "mode": "incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                      "resourceGroup": {
                                        "type": "string"
                                      },
                                      "vmName": {
                                        "type": "string"
                                      },
                                      "DCRId2": {
                                        "type": "string"
                                      },
                                      "packTag": {
                                        "type": "string"
                                      }
                                    },
                                    "variables": {
                                      "locationLongNameToShortMap": {
                                        "canadacentral": "CCA",
                                        "canadaeast": "CCA",
                                        "centralus": "CUS",
                                        "eastus2euap": "eus2p",
                                        "eastus": "EUS",
                                        "eastus2": "EUS2",
                                        "southcentralus": "SCUS",
                                        "westcentralus": "WCUS",
                                        "westus": "WUS",
                                        "westus2": "WUS2"
                                      },
                                      "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                      "subscriptionId": "[[subscription().subscriptionId]",
                                      "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                    },
                                    "resources": [
                                      {
                                        "type": "Microsoft.Compute/virtualMachines/providers/dataCollectionRuleAssociations",
                                        "name": "[[variables('dcraName')]",
                                        "apiVersion": "2021-04-01",
                                        "properties": {
                                          "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                          "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                        }
                                      }
                                    ]
                                  },
                                  "parameters": {
                                    "resourceGroup": {
                                      "value": "[[resourceGroup().name]"
                                    },
                                    "vmName": {
                                      "value": "[[field('name')]"
                                    },
                                    "DCRId2": {
                                      "value": "[[parameters('DCRId')]"
                                    },
                                    "packTag": {
                                      "value": "[[parameters('tagValue')]"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "policyId": {
                      "type": "string",
                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "packtag": {
                    "value": "[parameters('packtag')]"
                  },
                  "policyDescription": {
                    "value": "[format('Policy to associate the {0} DCR with the VMs tagged with {1} tag.', parameters('rulename'), parameters('packtag'))]"
                  },
                  "policyDisplayName": {
                    "value": "[format('Associate the {0} DCR to ARC Servers. Tag: {1}', parameters('rulename'), parameters('packtag'))]"
                  },
                  "policyName": {
                    "value": "[format('Associate-{0}-{1}-arc', parameters('rulename'), parameters('packtag'))]"
                  },
                  "DCRId": {
                    "value": "[parameters('dcrId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "roledefinitionIds": {
                    "value": "[variables('roledefinitionIds')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "13782378815920433053"
                    }
                  },
                  "parameters": {
                    "DCRId": {
                      "type": "string"
                    },
                    "policyName": {
                      "type": "string"
                    },
                    "policyDisplayName": {
                      "type": "string"
                    },
                    "policyDescription": {
                      "type": "string"
                    },
                    "packtag": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "roledefinitionIds": {
                      "type": "array",
                      "defaultValue": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                      ]
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policyDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "[parameters('policyName')]",
                      "properties": {
                        "description": "[parameters('policyDescription')]",
                        "displayName": "[format('[AMSP]-{0}', parameters('policyDisplayName'))]",
                        "metadata": {
                          "category": "Monitoring",
                          "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]"
                        },
                        "policyType": "Custom",
                        "mode": "Indexed",
                        "parameters": {
                          "tagName": {
                            "type": "String",
                            "metadata": {
                              "displayName": "Tag name",
                              "description": "A tag to apply the association conditionally."
                            },
                            "defaultValue": "[parameters('solutionTag')]"
                          },
                          "tagValue": {
                            "type": "String",
                            "metadata": {
                              "displayName": "Tag value",
                              "description": "The value of the tag."
                            },
                            "defaultValue": "[parameters('packtag')]"
                          },
                          "effect": {
                            "type": "String",
                            "metadata": {
                              "displayName": "Effect",
                              "description": "Enable or disable the execution of the policy"
                            },
                            "allowedValues": [
                              "DeployIfNotExists",
                              "Disabled"
                            ],
                            "defaultValue": "DeployIfNotExists"
                          },
                          "DCRid": {
                            "type": "String",
                            "metadata": {
                              "displayName": "DCRId",
                              "description": "The value of the DCRId."
                            },
                            "defaultValue": "[parameters('DCRId')]"
                          }
                        },
                        "policyRule": {
                          "if": {
                            "allOf": [
                              {
                                "field": "[[concat('tags[', parameters('tagName'), ']')]",
                                "contains": "[[parameters('tagValue')]"
                              },
                              {
                                "field": "type",
                                "equals": "Microsoft.HybridCompute/Machines"
                              }
                            ]
                          },
                          "then": {
                            "effect": "[[parameters('effect')]",
                            "details": {
                              "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                              "name": "[format('MonStar-{0}-{1}', parameters('packtag'), split(parameters('DCRId'), '/')[8])]",
                              "roleDefinitionIds": "[parameters('roledefinitionIds')]",
                              "deployment": {
                                "properties": {
                                  "mode": "incremental",
                                  "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                      "resourceGroup": {
                                        "type": "string"
                                      },
                                      "vmName": {
                                        "type": "string"
                                      },
                                      "DCRId2": {
                                        "type": "string"
                                      },
                                      "packTag": {
                                        "type": "string"
                                      }
                                    },
                                    "variables": {
                                      "locationLongNameToShortMap": {
                                        "canadacentral": "CCA",
                                        "canadaeast": "CCA",
                                        "centralus": "CUS",
                                        "eastus2euap": "eus2p",
                                        "eastus": "EUS",
                                        "eastus2": "EUS2",
                                        "southcentralus": "SCUS",
                                        "westcentralus": "WCUS",
                                        "westus": "WUS",
                                        "westus2": "WUS2"
                                      },
                                      "DCRName": "[[split(parameters('DCRId2'),'/')[8]]",
                                      "subscriptionId": "[[subscription().subscriptionId]",
                                      "dcraName": "[[concat(parameters('vmName'),'/Microsoft.Insights/MonStar-',parameters('packTag'),'-',split(parameters('DCRId2'),'/')[8])]"
                                    },
                                    "resources": [
                                      {
                                        "type": "Microsoft.HybridCompute/Machines/providers/dataCollectionRuleAssociations",
                                        "name": "[[variables('dcraName')]",
                                        "apiVersion": "2021-04-01",
                                        "properties": {
                                          "description": "Association of data collection rule for Azure Monitor Starter Packs for VMs",
                                          "dataCollectionRuleId": "[[parameters('DCRId2')]"
                                        }
                                      }
                                    ]
                                  },
                                  "parameters": {
                                    "resourceGroup": {
                                      "value": "[[resourceGroup().name]"
                                    },
                                    "vmName": {
                                      "value": "[[field('name')]"
                                    },
                                    "DCRId2": {
                                      "value": "[[parameters('DCRId')]"
                                    },
                                    "packTag": {
                                      "value": "[[parameters('tagValue')]"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "policyId": {
                      "type": "string",
                      "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyName'))]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Assignment-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "policyDefinitionId": {
                    "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "assignmentName": {
                    "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "18204016525654709950"
                    }
                  },
                  "parameters": {
                    "policyDefinitionId": {
                      "type": "string"
                    },
                    "assignmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "loc2": "[trim(parameters('location'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policyAssignments",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('assignmentName')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                        }
                      },
                      "location": "[variables('loc2')]",
                      "properties": {
                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                        "displayName": "[parameters('assignmentName')]",
                        "enforcementMode": "Default",
                        "metadata": {
                          "createdBy": "[parameters('solutionTag')]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
              ]
            },
            {
              "condition": "[equals(parameters('assignmentLevel'), 'managementGroup')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Assignment-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
              "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('mgname'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "policyDefinitionId": {
                    "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                  },
                  "assignmentName": {
                    "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "18204016525654709950"
                    }
                  },
                  "parameters": {
                    "policyDefinitionId": {
                      "type": "string"
                    },
                    "assignmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "loc2": "[trim(parameters('location'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policyAssignments",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('assignmentName')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                        }
                      },
                      "location": "[variables('loc2')]",
                      "properties": {
                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                        "displayName": "[parameters('assignmentName')]",
                        "enforcementMode": "Default",
                        "metadata": {
                          "createdBy": "[parameters('solutionTag')]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
              ]
            },
            {
              "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AssignSub-{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "policyDefinitionId": {
                    "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                  },
                  "assignmentName": {
                    "value": "[format('{0}-{1}-vm', parameters('packtag'), parameters('ruleshortname'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15632908880880169790"
                    }
                  },
                  "parameters": {
                    "policyDefinitionId": {
                      "type": "string"
                    },
                    "assignmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "loc2": "[trim(parameters('location'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policyAssignments",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('assignmentName')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                        }
                      },
                      "location": "[variables('loc2')]",
                      "properties": {
                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                        "displayName": "[parameters('assignmentName')]",
                        "enforcementMode": "Default",
                        "metadata": {
                          "createdBy": "[parameters('solutionTag')]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyVM-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
              ]
            },
            {
              "condition": "[not(equals(parameters('assignmentLevel'), 'managementGroup'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AssigSub-{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "policyDefinitionId": {
                    "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName'))), '2022-09-01').outputs.policyId.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "assignmentName": {
                    "value": "[format('{0}-{1}-arc', parameters('packtag'), parameters('ruleshortname'))]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.20.4.51522",
                      "templateHash": "15632908880880169790"
                    }
                  },
                  "parameters": {
                    "policyDefinitionId": {
                      "type": "string"
                    },
                    "assignmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "loc2": "[trim(parameters('location'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policyAssignments",
                      "apiVersion": "2022-06-01",
                      "name": "[parameters('assignmentName')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentityResourceId'))]": {}
                        }
                      },
                      "location": "[variables('loc2')]",
                      "properties": {
                        "policyDefinitionId": "[parameters('policyDefinitionId')]",
                        "displayName": "[parameters('assignmentName')]",
                        "enforcementMode": "Default",
                        "metadata": {
                          "createdBy": "[parameters('solutionTag')]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('mgname')), 'Microsoft.Resources/deployments', format('associationpolicyARC-{0}-{1}', parameters('packtag'), variables('dcrName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('vmInsightsDCR-{0}', parameters('packtag')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "grafana",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "fileName": {
            "value": "grafana.json"
          },
          "grafanaName": {
            "value": "[parameters('grafanaName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[variables('resourceGroupName')]"
          },
          "solutionTag": {
            "value": "[parameters('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[parameters('solutionVersion')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "5462116417930270824"
            }
          },
          "parameters": {
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "grafanaName": {
              "type": "string"
            },
            "fileName": {
              "type": "string"
            }
          },
          "variables": {
            "$fxv#0": "",
            "tempfilename": "[format('{0}.tmp', parameters('fileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "deployscript-MonstarPacks",
              "tags": {
                "[format('{0}', parameters('solutionTag'))]": "deploymentScript",
                "[format('{0}-Version', parameters('solutionTag'))]": "[parameters('solutionVersion')]"
              },
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "2.26.1",
                "timeout": "PT5M",
                "retentionInterval": "PT1H",
                "environmentVariables": [
                  {
                    "name": "CONTENT",
                    "value": "[variables('$fxv#0')]"
                  }
                ],
                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az grafana dashboard import -g {3} -n {4} --definition {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('fileName'), parameters('resourceGroupName'), parameters('grafanaName'), parameters('fileName'))]"
              }
            }
          ]
        }
      }
    }
  ]
}