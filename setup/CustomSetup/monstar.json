{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "17576211287304663888"
    }
  },
  "parameters": {
    "subscriptionId": {
      "type": "string"
    },
    "resourceGroupName": {
      "type": "string"
    },
    "createNewResourceGroup": {
      "type": "bool",
      "defaultValue": false
    },
    "location": {
      "type": "string"
    },
    "newLogAnalyticsWSName": {
      "type": "string",
      "defaultValue": ""
    },
    "createNewLogAnalyticsWS": {
      "type": "bool"
    },
    "existingLogAnalyticsWSId": {
      "type": "string",
      "defaultValue": ""
    },
    "grafanaLocation": {
      "type": "string",
      "defaultValue": ""
    },
    "grafanaName": {
      "type": "string",
      "defaultValue": ""
    },
    "newGrafana": {
      "type": "bool"
    },
    "existingGrafanaResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "storageAccountName": {
      "type": "string"
    },
    "createNewStorageAccount": {
      "type": "bool",
      "defaultValue": false
    },
    "resourceGroupId": {
      "type": "string",
      "defaultValue": ""
    },
    "instanceName": {
      "type": "string"
    },
    "deployGrafana": {
      "type": "bool"
    },
    "actionGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Action Group to be used or created."
      }
    },
    "existingActionGroupId": {
      "type": "string",
      "defaultValue": ""
    },
    "emailreceiver": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Email receiver names to be used for the Action Group if being created."
      }
    },
    "emailreiceversemail": {
      "type": "string",
      "metadata": {
        "description": "Email addresses to be used for the Action Group if being created."
      }
    },
    "useExistingAG": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "If set to true, a new Action group will be created"
      }
    },
    "customerTags": {
      "type": "object"
    },
    "deployAllPacks": {
      "type": "bool"
    },
    "deployIaaSPacks": {
      "type": "bool",
      "defaultValue": false
    },
    "deployDiscovery": {
      "type": "bool",
      "defaultValue": false
    },
    "collectTelemetry": {
      "type": "bool",
      "defaultValue": true
    },
    "appInsightsLocation": {
      "type": "string"
    }
  },
  "variables": {
    "deployPacks": "[or(parameters('deployAllPacks'), parameters('deployIaaSPacks'))]",
    "solutionTag": "MonitorStarterPacks",
    "solutionTagComponents": "MonitorStarterPacksComponents",
    "solutionVersion": "0.1",
    "tempTags": {
      "[format('{0}', variables('solutionTagComponents'))]": "BackendComponent",
      "solutionVersion": "[variables('solutionVersion')]",
      "instanceName": "[parameters('instanceName')]"
    },
    "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
    "functionName": "[format('AMP-{0}-{1}-Function', parameters('instanceName'), split(parameters('subscriptionId'), '-')[0])]",
    "logicAppName": "[format('AMP-{0}-LogicApp', parameters('instanceName'))]",
    "ImageGalleryName": "[format('AMP{0}Gallery', parameters('instanceName'))]"
  },
  "resources": [
    {
      "condition": "[parameters('createNewResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17175818948770477909"
            }
          },
          "parameters": {
            "resourceGroupName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2023-07-01",
              "name": "[parameters('resourceGroupName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]"
            }
          ],
          "outputs": {
            "newResourceGroupId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('createNewStorageAccount')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('STOmonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17027540109173456102"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'discovery')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'applications')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'amba')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "supportsHttpsTrafficOnly": true
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "condition": "[not(parameters('createNewStorageAccount'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "existingstorage-deployment",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "2152510934760472014"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'discovery')]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "denyEncryptionScopeOverride": false,
                "defaultEncryptionScope": "$account-encryption-key",
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": false
                }
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageAccountResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('createNewLogAnalyticsWS')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logAnalytics-Deployment",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('newLogAnalyticsWSName')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "createNewLogAnalyticsWS": {
            "value": "[parameters('createNewLogAnalyticsWS')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "1432940353596262082"
            }
          },
          "parameters": {
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "newLogAnalyticsWSName": {
              "type": "string",
              "defaultValue": ""
            },
            "createNewLogAnalyticsWS": {
              "type": "bool",
              "defaultValue": false
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            }
          ],
          "outputs": {
            "customerId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]"
            },
            "lawresourceid": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "condition": "[parameters('deployDiscovery')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('DeployDiscovery-{0}', parameters('instanceName'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[variables('solutionVersion')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "dceId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.dceId.value]"
          },
          "imageGalleryName": {
            "value": "[variables('ImageGalleryName')]"
          },
          "lawResourceId": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment'), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "storageAccountname": {
            "value": "[parameters('storageAccountName')]"
          },
          "tableName": {
            "value": "Discovery"
          },
          "userManagedIdentityResourceId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.packsUserManagedResourceId.value]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "8988969204822844684"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "storageAccountname": {
              "type": "string"
            },
            "imageGalleryName": {
              "type": "string"
            },
            "lawResourceId": {
              "type": "string"
            },
            "tableName": {
              "type": "string"
            },
            "userManagedIdentityResourceId": {
              "type": "string"
            },
            "dceId": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "instanceName": {
              "type": "string"
            }
          },
          "variables": {
            "tableNameToUse": "[format('{0}_CL', parameters('tableName'))]",
            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parentname": {
                    "value": "[variables('lawFriendlyName')]"
                  },
                  "tableName": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "retentionDays": {
                    "value": 31
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2081426938105913058"
                    }
                  },
                  "parameters": {
                    "parentname": {
                      "type": "string"
                    },
                    "tableName": {
                      "type": "string"
                    },
                    "retentionDays": {
                      "type": "int",
                      "defaultValue": 31
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                      "apiVersion": "2022-10-01",
                      "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                      "properties": {
                        "totalRetentionInDays": "[parameters('retentionDays')]",
                        "plan": "Analytics",
                        "schema": {
                          "name": "[parameters('tableName')]",
                          "columns": [
                            {
                              "name": "TimeGenerated",
                              "type": "datetime"
                            },
                            {
                              "name": "RawData",
                              "type": "string"
                            }
                          ]
                        },
                        "retentionInDays": "[parameters('retentionDays')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('WindowsDiscovery-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "storageAccountname": {
                    "value": "[parameters('storageAccountname')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('lawResourceId')]"
                  },
                  "tableNameToUse": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7926704064855259971"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "storageAccountname": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "instanceName": {
                      "type": "string"
                    },
                    "tableNameToUse": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "ruleshortname": "[format('amp{0}windisc', parameters('instanceName'))]",
                    "appName": "[format('{0}-windiscovery', parameters('instanceName'))]",
                    "appDescription": "Windows Workload discovery",
                    "OS": "Windows",
                    "appVersionName": "1.0.0"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appDescription": {
                            "value": "[variables('appDescription')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "osType": {
                            "value": "[variables('OS')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "17117017597267615596"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "aigname": {
                              "type": "string"
                            },
                            "osType": {
                              "type": "string"
                            },
                            "appDescription": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications",
                              "apiVersion": "2022-03-03",
                              "name": "[format('{0}/{1}', parameters('aigname'), parameters('appName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "supportedOSType": "[parameters('osType')]",
                                "description": "[parameters('appDescription')]"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('upload-discovery-{0}', variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "containerName": {
                            "value": "discovery"
                          },
                          "filename": {
                            "value": "discover.zip"
                          },
                          "storageAccountName": {
                            "value": "[parameters('storageAccountname')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "17364207548447032469"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "storageAccountName": {
                              "type": "string"
                            },
                            "sasExpiry": {
                              "type": "string",
                              "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                            },
                            "filename": {
                              "type": "string"
                            },
                            "containerName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "$fxv#0": "UEsDBBQAAAAIAGpQf1qAZr56zAIAAL4HAAAMAAAAZGlzY292ZXIucHMxxZPNTttAEMfvlvwOIycSWMpaVXupInGI0qRQNRARBBcktHgnycJ6190dU1zCk/XQR+orVOuPEL4EiENv9szOf75+8/f3nw5MueUZElpYospBoEutzEkaHQZdW+gjmeHOAokJTghsbGzGCSIThUFnu7XHCRlHVurFdlSWZckmEyYE7O72s6zvXBSHQRh0hXSpuUJbjo0SaHeitH96IrUwP93gV2Hx9Ev7wIuvkz+bZTIRYnfXi8s5bFfPJGEGDxMBG1lr7CD1XcFMKtSkyqHRJHWBcQw3EAYAAFGbE/pwcJk00VxZ5KIEvJaOXAQrMAWxuVQIbcHfzSKhawI2yHPUIgxuIQxQOYSbx8pDi5ykXsC81n9ULtcCXHFeu10SwatS+jTZpZBPCNbOTu2NHrpPlVm46IU3RokoDG6rPc6RU2HR7XxFYs0Cx7VtBSdLtMgOzi8wJbjpniV72hFXakYVP/gDthoLiq1bWMEMFabURuzzDHu+yVzxsv5ppI/K3HswpyV0VjA3Fnm6hJuN2Xa3u2eJD4p71eeGTGPZ0GrfeME4gtuaonVzSWoKTcAWBB/ido0dOCw0yQx7dTUHs15d8ZBXJ9ODY9TC2HtF16FrYVjB2NgRT5frKd210Ds0CnvQDLWucKP8Jk3cm8jUGmfm9LitCPxUDwpiY8/L41XKdvxNlEtSdxW1IAEb6dQIz2dB88/Vzp8jed9A1RU6mJtCi+SVx+Gve2McAyHYBLNzf6n7hnBqTY6Wqr3B1mGdbuu+75irAmFdC5ty546WtoAVjK5zY4ml7sqbafmeEQxmw709YA8KHhp9hZaODPvmjH7rtC+c0VEYdHmeNyeUyYYENlTcOb/+Tx/PptaIIqVnTqQFrUECGny96LvQbWj1Ok+QegfqIM+VTHkV+iKu1V+tH0evxXOQ5+5ksvceOrnv4s1oNr3/RyxfaL2i8h9QSwMEFAAAAAgAV3o/Wl3kd4qrAwAAQA4AABEAAABEaXNjb3ZlcnlUYXNrLnhtbJ2XXW/aWBCGn+uV9j8g7sFA0u0uYl3lo22Qst0oUOWGGxY7xArYyDYh9Me3q5njGNvHBJIr4Mz3O++ZOfz6OeATzyxZ0OAJn5iEgIiQv2nSpU2HJg18QmZEeASEzFX6nTFfaNHlD5p8wuV3fmPAmCkJj3s99tSjiRqS6PkDKSkr+jg4JMx4wGepntosCZgRE5EQcU9KW7NZ4rDRjDwiNiQ49OjQ4RSHDj0ctU1xSLOsmlmeDRoMuMVnTkBCSsyUNMt1SMg9UUHX6F+qjo+rcXqcaP1dWvprTJcOfbqc0ueEv2jzQSUdTjhlgFPwUPZ8xpqUByJiXNUsn5S1v3PLEJcJl5q9oGHQ3qrti3xXqfOGWqWHMQFz5lkHq/EvmLJQVnhMiSv6ZW1jMdIOxKScE7HOLbcHsBRZX3sqNbzmxY75mZAp/2mmHq7WvcZXT1VZXcaGhR5r1Tpnq92ri7Vjx5ZEEZUexzwpTi7dvPf1cju6c3R80T22H6K7v7cDblQmdz1gpT7t3ts6DQI8vcdFzhZvWpG5icYdKuoj7XmLD/r5Z8bdoobt4Vb7fo2vjBf0rrQewUq4faaoBizy/hr2V62qGNp1lXF7HRvhi69TzExIG7d/tI8iX2lWwgLJd6o+JfcbIhY666THQ+aEiqTPN3w2msVbvVTnl9x/yX2hE3N3n4bc8y8h5zoZDDsD9Ve+N+/zUM5CbCJWavGVKEPsmOhvs6xO2JecrzRjj7Fqy4YI86lcjHachV2bweNOGRnW8NHlPuPPrqrDNuU4hs9S+YKt4iEcSdkoYx6PiPoeD+Uc5IbK+evML/dc4r3YyQyuzuXX9OpmgbnzBr2ijV3tfs3qJDiuriKjRiXPl9nbxa7uOItylPdusYHORQ9PGVXFoyw7xK39qO7XLPu8Y8ojPmOizKrqq06jisQzPjPdMebtMiZgic+1fspLz+WGMR/pcZUhdIxN3YaTWyBSmaIfCxugeF7cD/vZIkyZ5fETGlzoN5kfz6QHN+eu8ro7IL6WBfZc0GfCXeldPGGkLw+JuOSEnqUhW2Oj022kM0h4OuEp+w8wYZXLk1ze1vxN96pZ2HmeETNnrdhL7YJQi29Eiqu862XW+DSy02si5kT5b/NSNRN+muEpu1zkdpeLW7ChbyfZ2Ymi3+JLHqtZi9cZP1jr5q17YdtnbVYkdGlmt9yu1MbjLpuzhi/iUeJJXXIu7Hp7ZuYeHfJbnXc2u0wVRc6+/LuT96P5J+XyP1BLAwQUAAAACABXej9aD6NjQTABAADbAQAACwAAAGluc3RhbGwucHMxbZC9bsIwHMT3SHmHU2Aog1N1ReoQUZj6gQqVOmSx7D/BimNHtgMJtE/WoY/UV6hIIVKrrqf7ne7u6+NzhJkjHghSeWF35DpsrJbk4mh8d5EWvXKbiGm+V0bavc8OjaN8MCRxpDa4uiooMBWowlj+ZsHmzlmXiaCswUppMkF3M2uCMg1NJjgijgAgGbvGrFVFmOKpTM8014647ECt8sEneINtAtsoTbh0uLdFGtoAltU1GRlH73FE2hOOP8FVKZXD3029bTRva24ky5zYqh0hzS/t04Oq40jYuhv+SWt/80/MMxXKB3JsJbYkG01yzX0J9lpp9LcIawKZgPR6YE+OtK30eY4PTpliAnbSH3lFSB6s8YE7LLko/TC1S8AW1gkCe/HksOr86fOeW/KwRZIn31BLAQIUABQAAAAIAGpQf1qAZr56zAIAAL4HAAAMAAAAAAAAAAAAAAAAAAAAAABkaXNjb3Zlci5wczFQSwECFAAUAAAACABXej9aXeR3iqsDAABADgAAEQAAAAAAAAAAAAAAAAD2AgAARGlzY292ZXJ5VGFzay54bWxQSwECFAAUAAAACABXej9aD6NjQTABAADbAQAACwAAAAAAAAAAAAAAAADQBgAAaW5zdGFsbC5wczFQSwUGAAAAAAMAAwCyAAAAKQgAAAAA",
                            "discoveryContainerName": "discovery",
                            "tempfilename": "download.tmp",
                            "sasConfig": {
                              "signedResourceTypes": "sco",
                              "signedPermission": "r",
                              "signedServices": "b",
                              "signedExpiry": "[parameters('sasExpiry')]",
                              "signedProtocol": "https",
                              "keyToSign": "key2"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "deployscript-windiscover",
                              "tags": "[parameters('tags')]",
                              "location": "[parameters('location')]",
                              "kind": "AzureCLI",
                              "properties": {
                                "azCliVersion": "2.42.0",
                                "timeout": "PT5M",
                                "retentionInterval": "PT1H",
                                "environmentVariables": [
                                  {
                                    "name": "AZURE_STORAGE_ACCOUNT",
                                    "value": "[parameters('storageAccountName')]"
                                  },
                                  {
                                    "name": "AZURE_STORAGE_KEY",
                                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                                  },
                                  {
                                    "name": "CONTENT",
                                    "value": "[variables('$fxv#0')]"
                                  }
                                ],
                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                              }
                            }
                          ],
                          "outputs": {
                            "fileURL": {
                              "type": "string",
                              "value": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}-App', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "appVersionName": {
                            "value": "[variables('appVersionName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "targetRegion": {
                            "value": "[parameters('location')]"
                          },
                          "mediaLink": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}', variables('OS'))), '2022-09-01').outputs.fileURL.value]"
                          },
                          "installCommands": {
                            "value": "powershell -command \"ren windiscovery discover.zip; expand-archive ./discover.zip . ; ./install.ps1\""
                          },
                          "removeCommands": {
                            "value": "powershell -command \"Unregister-ScheduledTask -TaskName 'Monstar Packs Discovery' '\\'\""
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "packageFileName": {
                            "value": "discover.zip"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "12441285522123093851"
                            }
                          },
                          "parameters": {
                            "aigname": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "appVersionName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "targetRegion": {
                              "type": "string"
                            },
                            "mediaLink": {
                              "type": "string"
                            },
                            "packageFileName": {
                              "type": "string"
                            },
                            "installCommands": {
                              "type": "string"
                            },
                            "removeCommands": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications/versions",
                              "apiVersion": "2022-03-03",
                              "name": "[format('{0}/{1}/{2}', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "publishingProfile": {
                                  "source": {
                                    "mediaLink": "[parameters('mediaLink')]"
                                  },
                                  "manageActions": {
                                    "install": "[parameters('installCommands')]",
                                    "remove": "[parameters('removeCommands')]"
                                  },
                                  "settings": {
                                    "packageFileName": "[parameters('packageFileName')]"
                                  },
                                  "enableHealthCheck": false,
                                  "targetRegions": [
                                    {
                                      "name": "[parameters('targetRegion')]",
                                      "regionalReplicaCount": 1,
                                      "storageAccountType": "Standard_LRS"
                                    }
                                  ],
                                  "replicaCount": 1,
                                  "excludeFromLatest": false,
                                  "storageAccountType": "Standard_LRS"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "appVersionId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Compute/galleries/applications/versions', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}', variables('OS')))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}', parameters('instanceName'), variables('OS')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-DCR-{1}Discovery', parameters('instanceName'), variables('OS'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "endpointResourceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "filepatterns": {
                            "value": [
                              "C:\\WindowsAzure\\Discovery\\*.csv"
                            ]
                          },
                          "kind": {
                            "value": "Windows"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "lawResourceId": {
                            "value": "[parameters('lawResourceId')]"
                          },
                          "OS": {
                            "value": "Windows"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "tableName": {
                            "value": "[parameters('tableNameToUse')]"
                          },
                          "packtag": {
                            "value": "WinDisc"
                          },
                          "packtype": {
                            "value": "Discovery"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1128108251442731456"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "lawResourceId": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "filepatterns": {
                              "type": "array"
                            },
                            "OS": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "endpointResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the resource id of the data collection endpoint."
                              }
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "streamName": "[format('Custom-{0}', parameters('tableName'))]",
                            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/dataCollectionRules",
                              "apiVersion": "2022-06-01",
                              "name": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                "MonitoringPackType": "[parameters('packtype')]"
                              },
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "dataSources": {
                                  "logFiles": [
                                    {
                                      "streams": [
                                        "[variables('streamName')]"
                                      ],
                                      "filePatterns": "[parameters('filepatterns')]",
                                      "format": "text",
                                      "settings": {
                                        "text": {
                                          "recordStartTimestampFormat": "ISO 8601"
                                        }
                                      },
                                      "name": "[parameters('tableName')]"
                                    }
                                  ]
                                },
                                "destinations": {
                                  "logAnalytics": [
                                    {
                                      "workspaceResourceId": "[parameters('lawResourceId')]",
                                      "name": "[variables('lawFriendlyName')]"
                                    }
                                  ]
                                },
                                "dataFlows": [
                                  {
                                    "streams": [
                                      "[variables('streamName')]"
                                    ],
                                    "destinations": [
                                      "[variables('lawFriendlyName')]"
                                    ],
                                    "transformKql": "source",
                                    "outputStream": "[variables('streamName')]"
                                  }
                                ],
                                "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                "streamDeclarations": {
                                  "[format('{0}', variables('streamName'))]": {
                                    "columns": [
                                      {
                                        "name": "TimeGenerated",
                                        "type": "datetime"
                                      },
                                      {
                                        "name": "RawData",
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ruleId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS')))]"
                            },
                            "ruleName": {
                              "type": "string",
                              "value": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('LinuxDiscovery-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "storageAccountname": {
                    "value": "[parameters('storageAccountname')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "lawResourceId": {
                    "value": "[parameters('lawResourceId')]"
                  },
                  "tableNameToUse": {
                    "value": "[variables('tableNameToUse')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "7382661391065213462"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "storageAccountname": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "lawResourceId": {
                      "type": "string"
                    },
                    "tableNameToUse": {
                      "type": "string"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "ruleshortname": "[format('amp{0}lxdisc', parameters('instanceName'))]",
                    "appName": "[format('{0}-LxDiscovery', parameters('instanceName'))]",
                    "appDescription": "Linux Workload discovery",
                    "OS": "Linux",
                    "appVersionName": "1.0.0"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}-{2}', parameters('instanceName'), variables('OS'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appDescription": {
                            "value": "[variables('appDescription')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "osType": {
                            "value": "[variables('OS')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "17117017597267615596"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "aigname": {
                              "type": "string"
                            },
                            "osType": {
                              "type": "string"
                            },
                            "appDescription": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications",
                              "apiVersion": "2022-03-03",
                              "name": "[format('{0}/{1}', parameters('aigname'), parameters('appName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "supportedOSType": "[parameters('osType')]",
                                "description": "[parameters('appDescription')]"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('upload-discovery-{0}-{1}-{2}', variables('OS'), parameters('instanceName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "containerName": {
                            "value": "discovery"
                          },
                          "filename": {
                            "value": "discover.tar"
                          },
                          "storageAccountName": {
                            "value": "[parameters('storageAccountname')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "15925273555610006101"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "storageAccountName": {
                              "type": "string"
                            },
                            "sasExpiry": {
                              "type": "string",
                              "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                            },
                            "filename": {
                              "type": "string"
                            },
                            "containerName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "$fxv#0": "Y3JvbnRhYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDY2NiAAMDAwMDAwIAAwMDAwMDAgADAwMDAwMDAwMDYxIDE0NzQ3MjMwMDQ2IDAxMDYwNwAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhcgAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwIDAgKiAqICogL29wdC9taWNyb3NvZnQvZGlzY292ZXJ5L2Rpc2NvdmVyeS5zapc2NvdmVyeS5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDA2NjYgADAwMDAwMCAAMDAwMDAwIAAwMDAwMDAwMDMzNyAxNDc3MjUyMDI1MCAwMTE2MDIAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIAMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwIAAwMDAwMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyBSdW50aW1lLFR5cGUsIE9TLCBOYW1lLFZlcnNpb24NCmRwa2cgLS1saXN0IHwgYXdrICcvXmlpLyB7cHJpbnQgc3RyZnRpbWUoIiVZLSVtLSVkVCVIOiVNOiVTJXoiKSwiYXBwbGljYXRpb24iLCJMaW51eCIsJDIsJDN9JyB8IHNvcnQgfCBzZWQgJ3MvIC8sL2cnIHwgc2VkICcxaSBuYW1lLHZlcnNpb24nID4+IC9vcHQvbWljcm9zb2Z0L2Rpc2NvdmVyeS9kaXNjb3ZlcmVkYXBwcy5jc3YNCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpbnN0YWxsLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNjY2IAAwMDAwMDAgADAwMDAwMCAAMDAwMDAwMDAzMDQgMTQ3NDcyMzAwNDYgMDExMjM2ACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyADAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMCAAMDAwMDAwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1rZGlyIC9vcHQvbWljcm9zb2Z0L2Rpc2NvdmVyeQ0KY3AgLi9kaXNjb3Zlcnkuc2ggL29wdC9taWNyb3NvZnQvZGlzY292ZXJ5DQpjcCAuL3VuaW5zdGFsbC5zaCAvb3B0L21pY3Jvc29mdC9kaXNjb3ZlcnkNCmNhdCAuL2Nyb250YWIgfCBjcm9udGFiIC0NCmNobW9kIDc3NyAvb3B0L21pY3Jvc29mdC9kaXNjb3ZlcnkvZGlzY292ZXJ5LnNoDQo
                            "discoveryContainerName": "discovery",
                            "tempfilename": "download.tmp",
                            "sasConfig": {
                              "signedResourceTypes": "sco",
                              "signedPermission": "r",
                              "signedServices": "b",
                              "signedExpiry": "[parameters('sasExpiry')]",
                              "signedProtocol": "https",
                              "keyToSign": "key2"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2020-10-01",
                              "name": "deployscript-MonstarPacks",
                              "tags": "[parameters('tags')]",
                              "location": "[parameters('location')]",
                              "kind": "AzureCLI",
                              "properties": {
                                "azCliVersion": "2.42.0",
                                "timeout": "PT5M",
                                "retentionInterval": "PT1H",
                                "environmentVariables": [
                                  {
                                    "name": "AZURE_STORAGE_ACCOUNT",
                                    "value": "[parameters('storageAccountName')]"
                                  },
                                  {
                                    "name": "AZURE_STORAGE_KEY",
                                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                                  },
                                  {
                                    "name": "CONTENT",
                                    "value": "[variables('$fxv#0')]"
                                  }
                                ],
                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                              }
                            }
                          ],
                          "outputs": {
                            "fileURL": {
                              "type": "string",
                              "value": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('amp-{0}-Discovery-{1}-App-{2}', parameters('instanceName'), variables('OS'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "aigname": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "appName": {
                            "value": "[variables('appName')]"
                          },
                          "appVersionName": {
                            "value": "[variables('appVersionName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "targetRegion": {
                            "value": "[parameters('location')]"
                          },
                          "mediaLink": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}-{1}-{2}', variables('OS'), parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.fileURL.value]"
                          },
                          "installCommands": {
                            "value": "[format('tar -xvf {0} && chmod +x ./install.sh && ./install.sh', variables('appName'))]"
                          },
                          "removeCommands": {
                            "value": "/opt/microsoft/discovery/uninstall.sh"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "packageFileName": {
                            "value": "discover.tar"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "12441285522123093851"
                            }
                          },
                          "parameters": {
                            "aigname": {
                              "type": "string"
                            },
                            "appName": {
                              "type": "string"
                            },
                            "appVersionName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "targetRegion": {
                              "type": "string"
                            },
                            "mediaLink": {
                              "type": "string"
                            },
                            "packageFileName": {
                              "type": "string"
                            },
                            "installCommands": {
                              "type": "string"
                            },
                            "removeCommands": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/galleries/applications/versions",
                              "apiVersion": "2022-03-03",
                              "name": "[format('{0}/{1}/{2}', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "publishingProfile": {
                                  "source": {
                                    "mediaLink": "[parameters('mediaLink')]"
                                  },
                                  "manageActions": {
                                    "install": "[parameters('installCommands')]",
                                    "remove": "[parameters('removeCommands')]"
                                  },
                                  "settings": {
                                    "packageFileName": "[parameters('packageFileName')]"
                                  },
                                  "enableHealthCheck": false,
                                  "targetRegions": [
                                    {
                                      "name": "[parameters('targetRegion')]",
                                      "regionalReplicaCount": 1,
                                      "storageAccountType": "Standard_LRS"
                                    }
                                  ],
                                  "replicaCount": 1,
                                  "excludeFromLatest": false,
                                  "storageAccountType": "Standard_LRS"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "appVersionId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Compute/galleries/applications/versions', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-Discovery-{1}-{2}', parameters('instanceName'), variables('OS'), parameters('location')))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-discovery-{0}-{1}-{2}', variables('OS'), parameters('instanceName'), parameters('location')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "LinuxDiscoveryDCR",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "endpointResourceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "filepatterns": {
                            "value": [
                              "/opt/microsoft/discovery/*.csv"
                            ]
                          },
                          "kind": {
                            "value": "Linux"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "lawResourceId": {
                            "value": "[parameters('lawResourceId')]"
                          },
                          "OS": {
                            "value": "Linux"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "tableName": {
                            "value": "[parameters('tableNameToUse')]"
                          },
                          "packtag": {
                            "value": "LxDisc"
                          },
                          "packtype": {
                            "value": "Discovery"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1128108251442731456"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "lawResourceId": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "packtag": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "filepatterns": {
                              "type": "array"
                            },
                            "OS": {
                              "type": "string"
                            },
                            "packtype": {
                              "type": "string"
                            },
                            "endpointResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Specifies the resource id of the data collection endpoint."
                              }
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "streamName": "[format('Custom-{0}', parameters('tableName'))]",
                            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/dataCollectionRules",
                              "apiVersion": "2022-06-01",
                              "name": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]",
                              "location": "[parameters('location')]",
                              "tags": {
                                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                "MonitoringPackType": "[parameters('packtype')]"
                              },
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "dataSources": {
                                  "logFiles": [
                                    {
                                      "streams": [
                                        "[variables('streamName')]"
                                      ],
                                      "filePatterns": "[parameters('filepatterns')]",
                                      "format": "text",
                                      "settings": {
                                        "text": {
                                          "recordStartTimestampFormat": "ISO 8601"
                                        }
                                      },
                                      "name": "[parameters('tableName')]"
                                    }
                                  ]
                                },
                                "destinations": {
                                  "logAnalytics": [
                                    {
                                      "workspaceResourceId": "[parameters('lawResourceId')]",
                                      "name": "[variables('lawFriendlyName')]"
                                    }
                                  ]
                                },
                                "dataFlows": [
                                  {
                                    "streams": [
                                      "[variables('streamName')]"
                                    ],
                                    "destinations": [
                                      "[variables('lawFriendlyName')]"
                                    ],
                                    "transformKql": "source",
                                    "outputStream": "[variables('streamName')]"
                                  }
                                ],
                                "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                "streamDeclarations": {
                                  "[format('{0}', variables('streamName'))]": {
                                    "columns": [
                                      {
                                        "name": "TimeGenerated",
                                        "type": "datetime"
                                      },
                                      {
                                        "name": "RawData",
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ruleId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS')))]"
                            },
                            "ruleName": {
                              "type": "string",
                              "value": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}-{2}', variables('tableNameToUse'), parameters('instanceName'), parameters('location')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment')]"
      ]
    },
    {
      "condition": "[and(parameters('newGrafana'), parameters('deployGrafana'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('azureManagedGrafana-{0}', parameters('instanceName'))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "location": {
            "value": "[parameters('grafanaLocation')]"
          },
          "grafanaName": {
            "value": "[parameters('grafanaName')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "3386978890188642965"
            }
          },
          "parameters": {
            "grafanaName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "solutionTag": {
              "type": "string"
            },
            "instanceName": {
              "type": "string"
            }
          },
          "variables": {
            "ReaderRoleId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "LogAnalyticsContribuorRoleId": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
            "MonitoringContributorRoleId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa"
          },
          "resources": [
            {
              "type": "Microsoft.Dashboard/grafana",
              "apiVersion": "2022-08-01",
              "name": "[parameters('grafanaName')]",
              "tags": "[parameters('Tags')]",
              "sku": {
                "name": "Standard"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMGRReadP-{0}-{1}', parameters('grafanaName'), parameters('location'))]",
              "subscriptionId": "[subscription().subscriptionId]",
              "location": "[resourceGroup().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('ReaderRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Reader"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "12046791720435112264"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMGLAWP-{0}-{1}', parameters('grafanaName'), parameters('location'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('LogAnalyticsContribuorRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Log Analytics Contributor"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "18441567381332934980"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMGMonitorP-{0}-{1}', parameters('grafanaName'), parameters('location'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName')), '2022-08-01', 'full').identity.principalId]"
                  },
                  "resourcename": {
                    "value": "[parameters('grafanaName')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('MonitoringContributorRoleId')]"
                  },
                  "roleShortName": {
                    "value": "Monitor Contributor Role"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "18441567381332934980"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
              ]
            }
          ],
          "outputs": {
            "grafanaId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Dashboard/grafana', parameters('grafanaName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment')]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('MonitoringPacks-backend-{0}', parameters('instanceName'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsLocation": {
            "value": "[parameters('appInsightsLocation')]"
          },
          "functionname": {
            "value": "[variables('functionName')]"
          },
          "lawresourceid": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment'), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "Tags": {
            "value": "[variables('Tags')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "imageGalleryName": {
            "value": "[variables('ImageGalleryName')]"
          },
          "logicappname": {
            "value": "[variables('logicAppName')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          },
          "collectTelemetry": {
            "value": "[parameters('collectTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "4290289380514843596"
            }
          },
          "parameters": {
            "functionname": {
              "type": "string",
              "metadata": {
                "description": "The name for the function app that you wish to create"
              }
            },
            "logicappname": {
              "type": "string"
            },
            "instanceName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "solutionTag": {
              "type": "string"
            },
            "lawresourceid": {
              "type": "string"
            },
            "appInsightsLocation": {
              "type": "string"
            },
            "Tags": {
              "type": "object",
              "metadata": {
                "description": "UTC timestamp used to create distinct deployment scripts for each deployment"
              }
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "imageGalleryName": {
              "type": "string"
            },
            "collectTelemetry": {
              "type": "bool"
            }
          },
          "variables": {
            "$fxv#0": "{\r\n  \"customerUsageAttribution\": {\r\n    \"SolutionIdentifier\": \"pid-be73d263-1f29-42ad-adf2-253234454db6\"\r\n  }\r\n}",
            "packPolicyRoleDefinitionIds": [
              "b24988ac-6180-42a0-ab88-20f7382dd24c"
            ],
            "backendFunctionRoleDefinitionIds": [
              "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
              "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
              "48b40c6e-82e0-4eb3-90d5-19e40f49b624",
              "acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
              "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "36243c78-bf99-498c-9df9-86d9f8d28608",
              "f1a07417-d97a-45cb-824c-7a7467783830"
            ],
            "logicappRequiredRoleassignments": [
              "4633458b-17de-408a-b874-0445c86b69e6"
            ],
            "telemetryInfo": "[json(variables('$fxv#0'))]"
          },
          "resources": [
            {
              "condition": "[parameters('collectTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('telemetryInfo').customerUsageAttribution.SolutionIdentifier]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "16208364426447542075"
                    }
                  },
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('imageGalleryName')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "galleryname": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "2475307255965847113"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "galleryname": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/galleries",
                      "apiVersion": "2022-03-03",
                      "name": "[parameters('galleryname')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "description": "Monitoring gallery"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('functionname')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "appInsightsLocation": {
                    "value": "[parameters('appInsightsLocation')]"
                  },
                  "functionname": {
                    "value": "[parameters('functionname')]"
                  },
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "userManagedIdentity": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "userManagedIdentityClientId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                  },
                  "packsUserManagedId": {
                    "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "15474348743875473476"
                    }
                  },
                  "parameters": {
                    "functionname": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "userManagedIdentity": {
                      "type": "string"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string"
                    },
                    "packsUserManagedId": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "filename": {
                      "type": "string",
                      "defaultValue": "discovery.zip"
                    },
                    "sasExpiry": {
                      "type": "string",
                      "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                    },
                    "lawresourceid": {
                      "type": "string"
                    },
                    "appInsightsLocation": {
                      "type": "string"
                    },
                    "apiManagementKey": {
                      "type": "string",
                      "defaultValue": "[base64(newGuid())]"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": "UEsDBBQAAAAIAFd6P1q+vQzZlQAAAFYBAAAXAAAAYWdlbnRNZ210L2Z1bmN0aW9uLmpzb251j00KwjAQhfeCd3jM2hP0DK7EnbiodkwGbBKbiSAldxdT+pOFu8f7Yb4Z9zsAoJu4TpyJ1OAyWcA4C4DapPbIb35SA3okd1fxjg6bhn4C/0KrGs6DGMNDlXcy8LRqQFJvXduX7YlfiaNWWc9qfVeBFd9w1QMo+Ki0OtdZ5qW2/WjL+x/Up5pmJY3Bu8jLvTyJcjR/AVBLAwQUAAAACABqUH9anPIpL8ACAABOBwAAEQAAAGFnZW50TWdtdC9ydW4ucHMx7VVRa9swEH4X+D8cbiAJzB7saRQCcwujYbQpSWgfSh8U6RyL2pIrndJmI/99yI4Tp+32upfpSbq77+70nfw5Yt4pvQbNK3Q1FwiLrSOs0hukiEXsDKa69gQrpaXSawfcItTcOZSgNGwUh5pbXsGqNOIpjVhzGg3m+OzR0ScYLK1ar9FeI3HJiY9Dzu9eC1JGAxngUkJ2nTVbuLsGY4FbARUXhdIYopcFAvFQW0qUIZAKBHwl1C4kCS0JUyuUkFtTNV6LzngrMA0J7q0i7HDZT2/x0IGD0qzBkUVepRFrIpMr4wjiW/OCdlFgWcLVcnkL1F4E8q752hqBDRMcbHvfNG4pI7RcELwoKuDZo922LCGhdeGGoZGVkVsw+b7dFh6xQde5gwl0NKYXRm7TeeeJWHzYx31IxAa87e0tNmvMYaIqh9ERMYZfEQMAiO+NfQovwWgY9AJSYbym8YHQkRun0GY7h321FLKS0AZ0mKQwOldrb3nji9v87kWRKGC0hxzqhjXMpMzWqGnYt4aVG4u8gXX1w6v7oP3+OjsG3PAKJ4dTqmTq6lLRaPh5OH74+vhX7MKvhFV16HYq/5jkywdJ4rnXOrDRTSM39rSn4/vc09NfmZRJQwckXdhUHvGpkpB0858teo7ZYrmtEZLSiIb7nqsznVbbHY+97XCOldng/4kcVkvIPx2KxJz7kt6y2xesqd7wUsn91xm/S7OL2C5iWDqMWPfV35jDxV0QtI2SKAMFu4gNGoWaQLwslDvRwKC0nQriKwpPKMF5EeQw92W5TT/UkBe0CDxIBcqjEjSamTlnhOKEsOGlRxfU2ng6+fWstiB4WYYxDm+9K5JZE3DR+odpxN5bIWmGO0dXG+0QkruQHkYPV0R1Z700mvCVHr/tWVkQJ+8ujUSYQBN5tDyen89+tGFBWIPQBpoithtH7DdQSwMEFAAAAAgAV3o/Ws9WOwyUAAAAMgEAAB0AAABhbGVydENvbmZpZ01nbXQvZnVuY3Rpb24uanNvbnWOMQ7CMAxF90q9g+WZE+QMTIgNdSjUJJFoEhIHCVW5O0pTqBemb/v/L7+l7wDwat1knU6o4FIPAEsTABwzmyO96IEK8J7dja13ePj5/A5ULcMcztFqTVG4k43UGgrQyp4b57V3omemxMKZiY2fBMx61SQyABh8YvzuQxvKFtjpJd0/LJ/l950rBe8SbT9KlaHvygdQSwMEFAAAAAgAalB/Wg38eeCzBQAA+RcAABcAAABhbGVydENvbmZpZ01nbXQvcnVuLnBzMe0YXW/bNvDdgP/DQQ7gGIjkJO26wICxuulHjDat5zjtQ+AHRjrLXGRSJU9O3cz/fSApO7KtJN6WYu02vkg63h3vW8fLNBcxCDZBnbIQ4WymCSfBe6RqpVqpQVekGcElFxEXsQamEFKmNUbABUw5g5QpNoHLRIZXQbViv3Z3+vg5Q017sDNQPI5RnSKxiBFrOK6fFCcEkkBjhM7XTCG8zkRIXAoNiYxBk0I2CaoVi+mfSE3g9eQ1qrMxJgmcDAY9IMcbRjkppEqGaIVjoJwIgbfQg1CxkOCa0xg+Z6hmTnQkVBqksqJcymgGcmTfFwyqlR2WoCINbVgoFryQ0SzoWLDZd8dv7FuwPX9nwOKPLMlwA6nHwiuDwkewmx/UgJtqBfJlSd+zCbbrp1JwkuqMmCJUhlDXHeISZwfFtJV/uC3D90KT4iIetlpciyxJpMJJSrPdBVlj5cRtDjTLO+XaRk+OH0AvQaYRNJK1YA4HFFOupJigIJgyxdllggGcIZGhJgkvccSyhDzHe+4e3ieprgyCFLCzME0QykxQAzSqKapd3QjAWbkFuRcCyNnoa07h2BjVwldUrL8SRoh6EWZVNwHgGLaf53wWaw3VipgqmaIijtprlSEAeGhPirwWeKQyXGNa0Lfw6T1fBY2kQuZ0MVYwqVcWKkst7B4XI9l2rwGPAp0mnHa9pteA2iFwDTq71KHiqVF2D54akEItMxUixEpm6R48g2ueJHCJ4M6lWYp7UDsyuA5iCkeJXfqZEMZ1i8wYSbX0oZHr4mjYcBxMfm7Kn/IpKm28ECP5FrGT8o8OBg7QjXJFAx6V8EgZhePz/ru2NyZKdavZnDDBYjRRGDBTcoJQTppFK+jmzf68uTCCtYFu3hzMm6mSUx6h0s1THiqp5YiCrtA8HpNu3jyZN28O57+wlPsLqQsaeOCPCh65OBzuFb6eDveKm0ernz8PNxXriqm8Qr/ztY+aTpHGMgI/f/Y6g+MT8M8Vv9Uf/B6bJZJFxeDeiLiS1/pLrv+BJBmxRP83suQxwrxm6/tKyICPn6FuEm/KafZOxu43VS81Qm1DEu9w/3DfP9j39w9KvFBb98NjpPuPmqrfTaaepxGjkkR17nhjrNONNjoPZjc2wqoGntlurXmqtkr9f+p9F6lX+1PJB5030I1aa4FRctZt71TQrlQLs0o0vgvVyby90rc0Yza1N4YRV5ogzlvM3O1yCQgzpUyfmRvDxgkkXNPdvHdipEevPjeHc1dunj5OuXm23hmsFaN71LNox1KMeNzeva8ovXk1yEuSs0gjOJaCjDV/h1CKKSoaKTnxf9PrdWnVVTRGAQrTxFworZfWneFuYWZL4DVIgduJH9y2EoHjuXjaUNYX+8Pidzdqr0b6g0L3zgdLqVxohe7ge+RLs3919BSavaIrbkOCpA0I8F9iSmM4+OluZnfv3PuvPF+EpTP1Fv/JxSqpmGbVJ0iKh3+lVh0c+ftP7q9V36if+T5jYv0CUFz32HXLi8EaQZ7zXgsutkAvkCz+dC3wHvz3ra/5PZaw+3dvl1xSvnGD+IBQkRu0wA3UdDjGKEswgl/tMExlCeq7ZXUtpt/5erags2T9LEHw+3ncWqPakc9K2IG/Djsagu/EtyQLettwPVywS5QrAW13x8UESzrnH62f/Zs3sD5O5DQPRCfP0qXFHhj811KFuI1hl4G2ilyc5nbFlCU8yud33gabuZmKzqsVTDRWKzkj7710amjIK2NkFJpXKzYloA3eYMz1ynwYo9sJMX7BMCOMQGehGRWPsiSZBZvzxWtUxgdkqZcjRHNUDTpay5AzQpiaia427afMaGVOfjmDkCWJcUm9l+mx/8EivHD79aBa2YTmadJHnUqhEXw3MN69OCEyKWKhtiP7QsPnuUHOiFGmj2VkJssW8xYybLU+vHVo5spmLoDGSNXKvFGt/AFQSwMEFAAAAAgAV3o/Wr69DNmVAAAAVgEAABQAAABjb25maWcvZnVuY3Rpb24uanNvbnWPTQrCMBCF94J3eMzaE/QMrsSduKh2TAZsEpuJICV3F1P6k4W7x/thvhn3OwCgm7hOnInU4DJZwDgLgNqk9shvflIDeiR3V/GODpuGfgL/QqsazoMYw0OVdzLwtGpAUm9d25ftiV+Jo1ZZz2p9V4EV33DVAyj4qLQ611nmpbb9aMv7H9SnmmYljcG7yMu9PIlyNH8BUEsDBBQAAAAIAHZPglqlGaIaPwkAANsiAAAOAAAAY29uZmlnL3J1bi5wczHtGttu2zry3YD/YVbxQjZgO93XHBgbN03b7EnTbJxuHoqgoKWxzIYmVZJyjpt4v30xpK6xk7iXvQH1QySRM8O5cS5kMsNlApIt0KQsQpisjMXF8Axtu9Vu7cGJTDMLUy5jLhMDTCOkzBiMgUtYcgYp02wBU6Gim2G75b66nQv8kqGxfehcap4kqN+hZTGzrOepXmluEawCO0cYf800wutMRpYraUCoBIzVyBbDdstBDt4qYyE4V7eoJ3MUAt5eXp6D9bRhlqNCqlWEjjkG2rMwDAo5LGoWWbjldg5fMtQrzzpa1AaUdqxMVbwCNXPvBYF2qxCHKHXGfqkRFKPDvxOxoR9vtwL/cgA5ZNBuddhiyj5cnI46KJcH43cvx38zSn64OCXGgrfIYtTmIGi39kqa+eBQo1GZjvA1Fxa1g3+p4hXBVgzQiJs6Vi+duOaW22gO3ZyFHty1WwB7cIE209I48SxLYMpIV0q6AfKBifOBVKsljzEmmgBhgvaSJdPVBPWSRxgSNZoA6JhlVNcEqW+4QKt5dFZ4VAHLZ9AleMeMHwLoEBcj93jH0pTLZGhZYuAe/gp30Pk0rJga4Be/3hoK/HXxgsLgFrLhBxmTeRdcYhxuYHWctUdw6LRZ/Gpk/C+wLAkOgk6XqBJ7vaC/AVPyWUGWQ9vg7SqtgdJXr8GFYzI4hHuIlFyitjOtFoPPhjyMoNbeoG/QGmAguLHObUl3XSZEjxx6pjQwMClGfMYjoEWge87YpEfIZNaxELlRL1linGG9+gh0w8MvVyl6ALLlR2M1l8n1wcGJOcuEeK+PF6lddR1yL3e5upo3jAz3MEGBkR28n37GyBL7fTi8O2VTFDCqK/U3OP4j1WiM33pN1xheqlOKDN0erGHd94KWirPKqQ32yuXg8E6MwgduGv6Go7vOp/W672YtS/xIjWma9ULlj8LtcpuSfoJdpL6do8aB8kI7WRzLzsPd2/o/qpqCZf+rSZg7mc6jRuVnMTeRWlIIXXjRIOYaffgeFs71qgDKxa/5V66bBO2gIJUTMrDXKYa4LDRnhr/jymwo5fCOdOFtBZgL7wXNp1iaCh4xYqwC2Ubf45VCE/+lkBpNJmyN/avJSbyxO2iw2h0OZssmqItcEIbBqUrGkomV5ZG5mlzkMf8k9ks94XMF2fBMwZXSNz6Hn7wqQ3j40JwkGcUAlwG3WiRlzLjZIh49Fx+d/MEBNMByLwerhHNAFxWoZug28cMFj7QyamaHxirNEtzPnyyKVCatCfuPYsRobqxKl1zbjAn+1Rl6f66MTZUST2EKlfBo/1bpm5lQt09Bmi9if8EkSzDm0lgmI3wO3KBeojb7VPBQin0KXqIlLvaXqUyYxVu22gnaS5x/7oB4g6sly4Tdd393WSJ/Gowyze0q0SpLd8FLs6ngEU9ZHFNU2kn4VPMlsxhL81XJnTBmWkkbK6V3AWZUYM64xlsmxE4IVdgodVsh9apXpR/6c9PfR6MG/Uglklu+RPIQHqHZL50cmIxL5I/hDZdxeO0IhCpFyXidAbfuxkpbBBGKxVMmyGn1gzXMTebyRA/+NAqnzPAorJcgeQHSjBuC2ZnSiy2xYxTercONwircKXD8aNz4tYX+/7bQv92Dnf+Glf8GCdozJd8pya3SGFMODKpE6nJ2M6E3W69aLgfoNOfyHuJ5F+48s0av3QoOCzIFwTzxAzzRRuYb6jXaaE7lGE3CEbOMemlqHUrkoCFxPuhLT5lR41ATMzjWmvqIBtUPF6d9MFb5uq9ovWviF7v/+7DPMzMfvM9smtmX/tABBlSkwwWaVEmDMPgHExlC9+Nba9Ni9EhJi3/Y68Ma+/SbWGYzc6Riqv0cRjVyfXDwksVlb19Ho446fx15gerz696GbYLxVGXWnWjolfPSiAnh6qnxYspyUwyHdBxRs2Y+PnoABwOazK1bmg7u4cgX7q+pGaRpGLzC1M7hLy8qRmbkkTVimxbPJ5ouXfYM5orb+VigtmbUgB8eMYuJ0hxNz208X226Xr3zCQYSITzbH4elUgD2Io3MIjAJTGvmzlZKzIerkfYyg7RT6DzCn9F0p2hvESXQOZWgUWXR9MEgnd5YjGG6gkgtFsw4tZtMa5XJ2E+kTKO0czRoes/Lum0Y7uHPcAdB2PkUBrDuweCz4hLCfliT0rHN4OaLABcoodjXkGiWFsdNVsGMyxjIMYoDF6cI4w+lmFuwxuY5M8bFiVFQEDRldOEGXb9NTeUwD2sTy7RFfc6im7q8ZUCi7o/Lf8J2UbdgSGW7FVajklmkmcUiiy4Y7XFKOzWY+WqqeVxAliC9xjqpVq6XK5qeEY99m9q3LBlZ5U8ZHpeyX2jmDWXXPgjlk04fTDY1keYpfZ3EfSiKqkfDeD2Glfq+nDP7li3RG2e8ZFywqcARdCfIdDQfjL++cTaurNXbcvhwD1eu6c8717uy5+dyuzvWNpHbt88xNDyiOhIGiYUXjY1dhuRRcBcEZ0oOyhxYKt0EARw8LzSsayqqMeh70qoZvVtTDNiIkc3WteKqorpupOvtufpbMvVTefqnZulcxmcy9Dfk52ey87fn1u/Pyj8xI39HNn4qExd5uK79n51RfyXN70uar5U+ZtG8DHj/7QxaL9C3JVOp7K98+oP59B6cZbulfptZ6PGIG1RCcml4Mrdm30RzjDOBsTO9zgSaoL8N0B/ke9Nvh2CR5UtuV0IlOVhvO2ff5gZNhfO4/+589BhaH44lpdB4lGqVorYczRD9UB9eYanZ+nxcDfcrg5Y2rEGaSKVoPr647vXoOq+AfbTUqdvMZIsF0/wrgnPbC9L0yJ1KdXsUDgpifaALjtHHkOwWXvfpTqL6arjN6IETkaNUS1L6zNPYOWN+f9ZrL0r3bvBBEfO/VJP9nLqsWZv9SF1Wnhb43wNOfeX1oD6rwW2tzKhYKGuzdbuVw1JlNsnSVGmLcX57aGonKXkwt+7mq7gesiq/RQIlxaoZuyFSIltICgQMnGWaWd4rqLtrQn94X9qrZeAqAW9eJe14tVa7UFs/cZO29+j933evvPVS7zEe1vSIcUZHlY3SPDgjU7h7p2Ad5nals7I9GBujIk6Vx5LqOVdaKFf3Vf//QXUDE4JsGm4WhuGw3fpJ5eIzpeL73z3Y9vKQCsN2619QSwMEFAAAAAgA8H2BWsoyWcqAIAAAtfwAABoAAABNb2R1bGVzL2NvbW1vbi9jb21tb24ucHNtMe097XLbOJL/U5V3wFKuklQjUUl2bz98pdrR2pOM7+LEZznJVaVSOZiEJW4oQkNAcpRJ9qnuCe7JrhpfBElQpD6cODPS1MQSCTSA7kZ3o9FAt1rVn4cPWugKTyZRMkFPF0nAI5qwhw/W1Gg9fACVdGHEKcJhiEbnI/EVvT5HNEU4DdAMB9MoIaKJKUEcTxgUJSEU5FOCyEdOEgZAcEpQQOcRCdFNSmfibUoYXaQB8R8+uNGNBTS5iSaLlPTZinEyGzEWTRISnoUk4RFfoV8fPkAIoTlO8Qx15A/4vL2AJ4STtHOOkxBzmq7QEB3xdEG676xyjKdRMnl3xBbXLEijOTR7FvZ2gKTH8Syli/kLPCO7AFvOAIJ80ZV/jl5dPkdD5E05n7PjwWCGEzwhM5JwH39apMQP6GxgD4cNCqMb5LrIBuUuD+YpXUYhSdngPApSyugN90/obL7gZLCMUr7A8bkkNxuoTnroB+T9Hc+j/pKkQOXhk0eP/9p/9Of+o8ee6vo54VMaQu8vRlcnP+vH/6AhoOFH7+EDRVAvUhT2jjWNxWO+mhPvGHnjHDsoOF8ePvjy8IH3o/zFU8Me8ImSJf1A+qNPKWF8JvvRf3V5JvHZVz3TPexf4FVMcaj6ZuDDnwDzYGqDfpNGnPR/powj76c0pSlihHOYYnoUPjrqHL33f/oYEEED/5wwhiekm+u5YfsoYRzHcT+bMDaf75HN0f3i8536E9MAw7B26cZPGuGyNy2ERjClzmkScZq+iZKQ3rLRhCQchJ797nmULD6KN/to/mo1Jz/jJIxJ+lpOph5qPfafoBuaolvZjR567D/5i3gSQ+NbtEuv/0kC/u4IRHUDtN3gmFV0PMHXMRktOJ1hHgWv5pMUh2ToQYveLgSZL67jiE1JmheBlhx5deXdb7k4MLOYDfIM5pKYT/7Yf/Q3S2JaohF+27JwntI5SXlEWF5Iipd4wakiw3mUUM1G3jECXPcKpYmTfiBoK0hrE1V2RhNKVMp+FctpAV7AhKtYfgLkK5UnSAmEksEO5GgETUE4S6HhLiQKSj4yJkd1SVFaSvybiKT9BAZ2jLxZ9D4l7H0UFrtYVXGJ44WoeSfsep4fz2DBSFqwqyLCBorhih+lA9c8sn5+sQbsafksCGl+2CVADHnHSIijBhr9TGv0S8L4eZVGFxKioM83VedKH4NGxyDiN1TnZ0qd409KWUgNsqvtugdlvhclvoPy/t0r7Z20ruKrUzInSUiSYCWGMpQ1mjatVKp3lvG44mJvbPEXOguPixynytUu0vr5akUw6H+qxWLu0y9xq4OBm0OTbKvZV9ZqIUNO+WBMeH/06YQmnHzkqD9eOxKls8XKd4gmhPfxp+UM9e12UP+yySg+ozGJScD7L4WNhvo/fZzjJLyQOn8lV9ef0QlNliTlV7T/H0x3ubx62IAAG+O4gMbcKz27s3mee52buCg/j90Fy1PMquZ4aQMRGJO0sR8bUwV5mY4UQsJXUkKxuULuDepUTLxufrm5AxG2ZvY1xGhAEAdRvMIYlTT1qqs5qOD9zX9UruGmhwTmtDmRJwRbGVI9CaNk4hdG4lbVMGfDiAV0SdIZns/BgNRkPdIvomRyrt8N0Y+2TT46PR17CJYho9P+KZ3hKOmPSbqMAsIsi8o7fQHFoBx8s16cnekXb8i1qEpS+/2LSZR89OB9At/6AU1JNhT4kxK+SBNnb/3/JCtWEi0//hqjIWpzPGn/OyJoiH5FR+/RF/Slp1/h+TxWhnJWxAVf1qtG6SolbBFztj+/3XM6GSU4XvEoYG/GWrRqUayUm7TopsKiu1wkCSi5U90lvdIyD/5rQdLVEFZcMeFohj9yNjQv3588R58RW8xmOI0+EcSjGWEcz+bDGf7Y4VT2q8PmccQ7l/j2FHPc83pe9+2jd93uvz98YEN6+OCzdIqGSC0i02EBxPtsSL32oN19+9d33cGglzXLaYg5gd8d87BrAb6JSByyYblDVhknNFkRum2XXM1J1kVV5HGuyDzG/Iams1KxJ7liL8dKPJTK/TFXDlZRpSJ/yhWhfAo60dGzf8uVW5IkpGmp0J9lodspSS16ouEQccoCHOO0I5hAlJqnVEwaU66nKdeDHvSguz2Ngp4ZZM/0sSd7ka1qjm6ZGGMlK/uSdor6plJOGTSH8Kd3mTJr5WbGM+W0fKMFUlFDDVGjFp6oPrZQCwVTnEzA1y/tJ06RDbPWxCp14TOiC95PFnHsXBIe3dL0A5vjAGTUMwH35ZykQnLh+Cxh0WTK2RtTyGWLOTCrLThJqSarR7luVMvHmygJAbGmc74l0a9Tgj/kQLaUfM6hSu6TGAiwKWPMEfM0Z4G4hJ4QbVbjmdADsTA0K2oH0kRV1M9wZ+G6L18WRCjISTmQovF6KbVAbtQE1iy/Vnbtx043V9we3VO6SEJYkueq+Cd0AUYZSXgaEYaiBBk1pAlwdHrOhi6dr14rdZW1fkNTgoMp6hzh+RxA5ttEn9EbECNatYIm9SUHibLnzLd0KfpSSbCnimWs0mIEsFFmWkS6txZFW+gpTZHo4+k51Dg9Z+iWoITIfTjgRRQokcUcI+BTDEoPuFo0dm7DnhAunnI8EQtJ+G51Me9YWMR8CGgqPUWf0SgM++dkdk1SpP6C3YheUE6UW3OlJp2wS1D/NfjEUAdQ6ESyjdY++QVBwxLzX6r5kOOJoqtN7R+G6ls9w6kafiBZTVs3gJoSr2m7TBcqL96+wNapNFMZokm25+p2IFk2FqBzP06l0vbObpuhWr6+HO8CxeUluqY0Jjip8YLktw30mARjDbPfFTq2vNzK1xnbWlXL7tfnmQsB9gEXiv9NxfHiOq9T00otqvwwo1DKAkFgTgvjgClc7unls9yLfKNsce2jkykJPohNyhsU8TZDOE4JDld66UpC39e8K9RMRksxw9rCe9bOr3qhnHs8f3knaxV2SfL1BaLEOBnHfMGMFn99niG1mQPFLIVzyJIyxXM7AT0k9fZITqpxFJOExyuwTKJkoXjJEgkutVU5ghOaJCTgJFQj33g8qt6eB4VKo6rQx98jaW3f72+IuLsMS/0R1LRGkiOVbAyp1pBULGXpYFkdTb1iAroRPFlJta1S2HNqSRkl1Klg6PzrpkJpnxz8NTm5gEgxssbkLg28itjFj9VsE8rX7A1WzaL1LSaUW61p8weceEYjOcdZ73N168OmWwZ3sAshQTrZYDMQ9a7dGgDrHb+K+7YE2dQpXAPPLWFQheRpzKSOR+t49htpgL2Ig+q9+nWj/s4lp9m0OMjOg+z8BrKzatPsXkvPDYHvsge3fxHdQqPLk/ssvQ8iqV4kyTEOX5Db9RQSCHbjt46J83NsWyAXhvebs34t0EZ8Vwekmi3raj7fWCRW7dr3r/DEjunbLaJwrY/C24jfNlk/tiw/yT4tohZ6LYvp0zOoL47XGDXsMMaMM3hmRxM2VNfNNHCFddVcTxY1YrVvap2Sg4A1b3ezv6UkyfiruhIv6gOLivKnGpgbO488e6KaA1TmUdWUFJ72rVYCLTTKTnqhfg2r1gTPOTm0DKUqni5PjbuOqsv1SLrih6iZbnJTtUj8qlK12qXZ2NeZKA5hv40038QLuCUqXYvgGi2uynw/aKzVflUTtIWUxfK70lUbrFN2Vmubqrqip75G2W20oqtUi9F9U4sFLOyqGAvgtlSNT2kakEuSLvT3V3MIfYN5eVCb905t5k5xrFGcuXINJ1MD1dAU0neviO90tV2HvX0sxuvauIu1el2b+1jK17Wx9Uq/DvDmjoA6iHdlEmV+sfKes6Sj0+VVY1Q5fQrl6jp28yeIR75RsTqqgoqNE+FduZAtGPGv8DQXsiV/NgmUsko6w7Z2gnSFJ8A/ewAjYvf0y67+skE0lqzg6Xl0bJf1stcqyPUISwxD2EC+EWMGIN2rY2Q6aAC1gAnREHWkb1i3ms1jWwn7+mHXvxKsqwanQEjlCz+ctc/Crq+0aESYgKCVqumNd7JIUxH5hSfsGKIOIWzR9FZwPQREy7BHeJfxlACAoiTiEY6jTxAFe4MSKuI3Iwbhmynct5IVVv3+8VfBrIqxrYY4nshDJP2EcojqxlHCBA4BwaWWQ0pY8n//y9EUL4mIFlXrAKATx5Ni0/4oDDuG8zLaGKaBjzTU+qNPV9VozaQJ6ptgZnRJ5rEInrb6KENMcBKKtczpySW2X8MshWfZWsTRjoxNLXG6BT7SEoF8jBhnPjoDMvCelhAo4n4J4VoaWdAyHQUcrKBBNH9WxpAJ/gE06jDFXrtbpprEbr4VTYy3mhDv0A9D5PXKM8X0a7zJTLFpIyzvIri9EngfVDQkcZMFPp5GltlfmWIxwTKISJ7rdwIWX+xTU6bL9yygN0OPHVh7enLJhlJcQhD5CY1huRDR5HIRk1K89tF7kHRvPcXNY45TTtILHHxgnnRImGa+FMPuT08uZdD6yWW28ZXNMhGyDkUYwozRIMKchOg24jKa/bUVzX6UFajs+kgVyS2KX6VRjnlc4ehlUMBlMLLTk0v/LCzbLVlvRTGQ6CUzRsagv1zw+YIj7/W5pQgF6wEKLY3WBVQIjQGNSgENdkzWVjngLiWYS0mtS5WWqHKJsCWy+k7MaKz0LRjKj2ABLSt0ENv28Gy7zGnNNcQg/HEgz4k4i5Ib0qfcgvtQ6iWZ0SX5PsRBJhDkGSB5dY1ujFkH7WCNNxzC9Sh6HRapo0aDEHMcGB5JF7E4PGvO8Z1fsOwQ31s4IMLa73yHNLHO9UGdf7VNf9vwJjvFeb0S5wx7KAqtg3kgY9AQjQlOg2l/9OlZiufT7LCTGqIsrM6EQF87rKuIysQJlK5eLnhCMoWow7qa7MyPQk11L62wbxtIwJxAi2hiI1+jdWciWPBz9Mg6q46ZRnBW1XX3jD5MBob9o3c9ga6zcJjdZOSHDvGQ9TdiCeUgGjs1VSzKW8Jn+C/UtlDbBvnx8IHshHwp52IUdtsZHzhx635VzS0l2vRfMXJFEpzwcUDnpEIdwOUy4nAR6k84elRe2Eq2s7twlK8tOVDKEGfIxTYHU3L1A7k+GS+uh2rJpFyXXd92XfpFJ2VuX6Lg+U+IDdfptNrdS1rwKigxW6varnA6IbzKLC1qsBIxmnseXtAcYQWp3a6HypNjluooKxTlfrhn+kQ5HXYBIUT8LjBAe4ATMmfluh0M9tZat9bDAHBab+Xtlf7L7Pq9rd0NottueLv4HtZ4FjbwK7i8CnVHjCo8DGox6wjMqfcxFCdV/n0PBThpcxSSmCjTVyzUfDSmcE+oOCLH0G1Kk0lzt6F7qe6jZ5SGvj5/nxu4sQrFjuwojmEXFrWuphFM6XglD9oShjpsShdx2IWjgGcYj4UVnB0KnoPlYyE/w9Ql+WVBmDhCmAoJgMD1kGHDR6M4tkUOM8eGr4mqAroG3RJRDoURniSUwWUA+spT5iNH01dpFHxYWQ2LAbmqy/PHt6C4A7EWCcE444AERuOFmHcdEKN/B9r9veto7DIbW24sYhWYH7FC1gU4DX6mcUhSP5Odt1EcGwQI5rIqAmem0fUCdodSGtvcXuD6nedhEWYcMT7Mu3iUeu61HfjwtOovY0T6EgGePsEsRJp+5ojNzMxQjidLYYeq0pUbS1b7xbUcwPBBX9mmRkVEqL0IauDGAdC1+wgao74E3jFSpmJLDYoqaywhDmtsjw6sXc+ocDy5omomgOT1joxftSuuD5K0FywknQVeVcDvZqMxrVqjOhWidZNtnXXj29bD6Rqbl8nmHrpeyH0eSwWcCNWghFbEXTrBxbAbUksr8MzoZP4oTfHqecSkPsfwS5gs4JdV4363dt7Dx1Q1HG551F0VNG5lJXGDhtBH1byen+LAzixKAkCW8IAmVKKSrY30bjYH74K575bBdwijz1NakV6yQf+fNEpQu9fe15AaSaA1YwHTQurcgoQX9/qDC9h4YAu610d3o3tlr+AWFdEqm5MguokC2RlhUMhLTES/RpfP1kKwR1U1EGGECdtFI7g5qqpKirtaoMdr5qpeqUirEczBNuqDbs2/MOZh9cG8/EQGL5O1lF03ezfUzHmX4QazRVvJMlQmIag9WoY147nAmAm3q49eUMNQ2vptNj7vDTBjTKk8iZ5ZrZbRamAK/jDsBoaqj95QW4nAJgXmoD5A19wI/40RmQFY9mBtQ0vM6BoY/rouFq7Bcn2Osn6fiAtbzeGnU/NirG4AqxQYyid/ftHPFrXbHGFaQ2nnpVpNBySWq1s1KZirCHEtb1nutzJLrHO4FT+Z32lzQoxtSmw18Do9JIb5gjrGKHnX365Z+5LtU3K9mHQyp1T3WE4WuWYhKZdiO7f9Yxzjro8CdYHxeAT1wYXHqmRTYznkeNSq17OObe9Kqzfn0MtdoCnQMJpHOsJVeeqaOLaMU0vAgPF2TZqVFoiAgobMqS8zDCMt3P4pAzsP1dTWmwFCTZqnsP2g2tEFgLH1BX5lHIJCs69delS8qklovCY1H7+r7WuhZyUMXOgX/YtS58vjKTY3ujhDKu2DvDAs1wcLM9hQHTajDODcyEp3otkvpb4EF14OS3VBvRm3KTejTOs0gymbkgCiWawxKLcfuolSxhFNxL1U8AB8A6WRwECscRk66jvSsnfSt72fDzjJT+hsBsapzn2FFoyEuq+Wz07sH6JrHHwQl6jq4v4eO/Pt0modEhL8ThMSbJoUoGEGgBYyd/3f71w8hxxlO+Uo+61kSDjkj/pa+aNchXOpoqpOgB3yRh3yRv3e80Zpx8Bv/2Lf7/ua3k0uE7Ev7lFhx1ucvH19vsWFFPVuuqqr2L9qnze+3dS60vQPa+40rT7Gtf42GesmGbdPbz3p118d40f7PY+vnMxrDhcbb2OOhGvvqWhE3yoCqxMe5c7fi3tsDB3WHW5s7fM6Gxf4nU/ibyUPvt0FNbWHm/d20r7BhNjPaXszrba9DGbHe+bqfMoZzr7FNSF7E0v5ewAOgmmfl498U8l0j+4Iie/FHSH3W3JtMQ+3l12FZdEh2ckh2Um+p4dkJ4dkJ4dkJ4dkJxXUPSQ7+e6u7D8kOzlc2L8GxCHZySHZySHZiRNVh8wCB9m5FsQh2ckh2ckh2UkDnNfh3d3iIdnJIdnJIdnJ93SB/CHZySHZyeHW9kOyk0Oyk2+AxkOyk4101SHZySHZySHZyW9cbR6SnRySnRySnaxp45Ds5PtIduK6kdR99riUGsUEeN3P5Ci5UK+dIGVHYHbNj7JpCJfKL+IM4ipA3CiMS6Vj+baBXK1GXq/WzuuGQtqM+xvOtVE2i+8sqKsqoYZ7gN8nqTeKg/reiL3r4PJJiorbRa2ifnPuCtXyTTOHe4HPGgkf7XTPP9kPn27pzHCBuXfO+HIX9+2Od2Lz4GF3ugrymMoJHveEauYwKJffzmVQhvPtnQaOPh287VkWPScvNdBolm/4G4rU36QA3fxQ2TcUoL8xX+xBwH5bAbuVX/Y3IGQLvqZC4kOHt2mzzIkVPqd1Zv46z5PIowj/uVLt3qfjgvck143AXiJZaRc4cAs2TIXeHhDbEI449egEJDP0iMnTiEjVkPZxRU1l5uI95S2u9v6RZHmce6E8tzvnHNpXcpPq9MZfJQVR06TGzdMNoT7Snk+UkFvxCC69FZdz5fuzJtuxLib6N6+6433e9I53ALNNElzk3EHbc3KB5jEfFdecJ+Q2u+sZ9QVWoHFbmtTv48h6UDTDa30lfR+9uZi+vkoF+usr5oSaFhf6Z/N2d9uZ69v6QsVf6F/N+yDxvCGBjHHjTWJ6jWPva7Lm2nvpvac4iuWNvDJrlZn24mLsyuQnfJrS26bbffuZwHvEUN1morwEDytpWEz+pLsImRm4LgVSsXK/sdhIRTp0hwAuCN99ZBCqy5C+1/zoNrA9qYT9ctUdcJeDyzYIQlqTEWM/6mJ7nbGt4thNezRQIZt1YNNojp0UR1MFcOcaoeIQx9qMJdtqhwoN4ehCcxPKM/ymN8EgSxeYsdnslrnPvDsTO95VuhLyWcn8qciEjhFOVrcYduVQgJlIhxMxNIsYg801B462El2tNXy4VtK0oD2EEVcpNBlRyXyIIiPCATiE45VURC4t5rjdtZCk5A58FGo50TJZJkyuD6Nxzk57MttUlm5FZeI0qxxgWc+RY91Tma+s5BVnIkkoF2mSOwyyW6su2DfkmkxTgACNQXeKlyOBH6YTr9m5zeG1K685jektSTtwHXQXGKrjynDOgikJFzEJfwGIMs18z1VwRngaBbKP7hIgSJcRX8V0oop1C1nLyWzOVx1Y5FZmqlfp1AXGwG1qJzmXDy2gqpSxVNpmq/kstJKXu3DnfFOdutyFfWf2cpu8MjHSUadQW6YU7Ob5TCfPyl3AlK+XkyNZElIJBkKG1hSv5DwrtxAkTYdfMl26S/TJ19zIuGb85BaA5sq1sa4hsAoSwOkMlm3nFK92pWe9dhqLDmup6Whspq8ZxrkoaqTY6yf3ZxSliVkzlJEq/5xOlH247UjqNHTFosbmVEgArwUjTKfSTCmolLxl61IlLjUydKaLUkJCWce9Xapnztzm9Qve8Q0qlpzzG9R1uY23aLqYvGYDEA5v/BYd2A7lmatbmwyXZBIxTtI+KCk8IWO1QBW8/mIxIdx/mU6yBFjoxQLyW2UbUiabBp5HfiIq0HQyWP5xECUh+ej/k9FEa3k8u8avLp8PhdN6dP6PEWzhvbp8rl4HmJOJ6HxamQ1MOd8938syfEH2g5Paurq0dwIWOmiHF+TWsk2qTBPotNQ9w45KLPCGXOtM6/1FGpmBoc+grWF7EpIz9WHoXd8My7f7qdYxrfw+wNCOXUB9MVaU22hoKQHEhsIvb/r2lKZ2RrBqg5mRdBkF5KnIx4qOcj91EyB6lewt5R379ei9v4xYdA2aTLjs0wX50tVZs3OZhFtFWacr5mSeSs11E8Xaq9IC+1qZ12KzT37xrijHMRpVVBZbC2q9JZOdayHqMicy1OV9HW61I9Sf6wZAKAgIH6o61lZIAGNP1fZxvh67jWA1qRqC906d1R5z2Nm9mqaETWkcnmiI7cqFqGHuqqoS91UL0qOAJmEEE1sdnSkpfgUIizQaaRTYStEavMTYHk5s2O2ozHtrGhuLEru2KD0EIA5KTVH9atc2DGUcjXDzbudWohkZTSYpmajwgXJb+RIVbIF1lMF5xCNZcmht25WgQnlVlKC/q91XdFxTUl8RW2o+IbfAfUNxbsRljFppa2392s9J175ZA7gZtVtTQDCXr5xGHW/g9by+1+1ueHHRHZ2g6l+J1XiF+2tTYKckywqnUBJajzYFNyZLkkLyuDJ6mX61KcynKahguJan81YmYvP/exbD/ypE6N3x8RWFCTCe48RBWAJeMMHKBlS3u3E3TrTAtGTnxkBkPNE4+kS2HcytgbDFGEY7bTsWgdlT3yU4Nob4mqTXlJENqmzWgMjUuUkFE2qgd5eGYhnE8WRNPmTXp9p1rSSevw/Xdft0leDZlnZEZd29GRJfzZL4NtbE17IoRDtFau0F6MZGxF5afR1RGfAnHIq6UctheoMjOJRzAdwYMj9ZzK5J+vLmJyPW1Zv94EBjdAwhodKD5LJm4IFd5Hdh0HyVo+F7NXDuyNC5S4Pnnhk+ezWA7s54uCcmVjbAzbfnWwthJchtjNuIT3XQS8UNhBXWyVWldbKhFbKtGRKSG7yIjde6+LFdRa+SDwm9TZBxoSCRHXbLXfKWdvmj53RS4+mxdgfK7p7MKrIhSoeU76lCBQ+RmROPlSFU3H8wYn+UrF7evEyfE3xj5pQ5C/ELHEQahbMoiRgH5C9hIyUicQiRCcKlWHRNJavaJp1tSaj2zqQ8OKw64RmdUipS3FaDPjzZqg9rmpL2kjq61PV0f3OPq2jwZBcaiHcSrz0xsuJgxVyewFyuaiab7RpoSQjkgbrhbGweKFQ1EFp7U+F70Kx9sfO8qZpXIjZHj0b1MkX2Y8eatj2LfRrJfSEpXdK3UWXHSZ+1H9euozgeY/YMYaNgNLvGJ5jjmBYPyQhHuNqHcQRxPMtXPkZPCYdTShME+zdIw4T9DvTq8jl4+DJ4OXFwhDEerttAUZUcmyjATHM+RY8f5QCqvZSIsCEA9+eMilllS4uiNGhZtXLArmm4GrqSqGflvWP0Nou7ELWiYa5L+c0GLZjFfkMGpiK08ogtAzWQo6xut9Goym2zZSCaBaBrbtQ+SvRCeGgFvVjt+zrQptsdHAmw1pPKqDapWmEk1ubXMlD7/wlBwncMuXNLn3VTpAIsbAvOXesbucK321s/AY9k1QwnGzeWIaemJWB4uek2zGhglmJWnEO71253sxeDdq/tt7vuY70i+s9Ak43ciEbWxB9a/M/NBJCfovmjEeEhyNRufhWS13tqT1GWYsugVMB0UWR8z34VyxXIIUoXnxXrcDwpQLULWDnj3Z+1Dry6u+LvcEbth23WQ2/tlXlK7LMBCzVgouZs5GakF4ORoyBwD6pmH8VA66XUl1oRFhX2yWsw+0MJsxUFeZ67a+tEP/xwp3PB2f/eNkPZoHPOF6WHhQcVeLbCblUlu1Mp4Ys0kXWN7eW8E4/pE8q97Oq7ng5JgwBneatazmRTE0Ada66+JE/H9hiOLdxXNz5ZME5ncsHxDqzSczyfR0l2Pjy7kI7jybBjF/HVqft8CAg6ei9UufSPix3gTHB86UIlDVLjSD36UhrmHGMmoimzUao6Ivw3G0l15G/+vLklBBmnKZ6QgfqLAxEWwtq9yhohYR84nasrQqJPwgAfTCnjc0rjdTVjOomCwS1NP9zE9HZdSfZLPJjhBE9IqNdudcWBF0jKBiHm+BqzteUTwqEXg+U8AS/aLV41Ki1HrH42qPiBrJbgzhmIf5s0of4yEizA/ykWZk3qiVw8QTTHYZgS1mzw8zRaYk7ChH2iSaMaNylNeEhp2qQwhtsdbqKU3OI4blRhPo8juZwzuM0qmQmIEE2L/Jzn9+EwBz+gEzgfvSRKWkA4rGJyGbWvKr9tf4iSsP1OAGjTOUlwZHdAtFtqyTGQmOLwGsfAtGmhDfZhIYOr0R+G7WvMIGAKmgCR2UJf/h9QSwMEFAAAAAgAV3o/Ws9WOwyUAAAAMgEAABUAAAB0YWdtZ210L2Z1bmN0aW9uLmpzb251jjEOwjAMRfdKvYPlmRPkDEyIDXUo1CSRaBISBwlVuTtKU6gXpm/7/y+/pe8A8GrdZJ1OqOBSDwBLEwAcM5sjveiBCvCe3Y2td3j4+fwOVC3DHM7Rak1RuJON1BoK0MqeG+e1d6JnpsTCmYmNnwTMetUkMgAYfGL87kMbyhbY6SXdPyyf5fedKwXvEm0/SpWh78oHUEsDBBQAAAAIAMl9gVrmTL7luwUAAFsWAAAPAAAAdGFnbWdtdC9ydW4ucHMxzVjdb9s2EH8XoP/hYAuQDUTayx4GA8GmJN3qLR9G7DYPRYAy0lnmSpMqSTn1uvzvA6lP23JqZyk2PTnk3fF497sfL5crylPgZIkqIzHCdK00LsNr1K7jOn0Y8yzX8EB5QnmqgEiEjCiFCVAOK0ogI5Is4YGJ+FPoOvavgXeLn3NU+gS8maRpivIKNUmIJkPX8W4xE+8kg1PwkK9G0dVZ9LsS/N3tpet4lCtNeIzXZImndn98PZ1F1+dvrqOrN8ajO0k1ghagFwjRX7lE+DXnsaaCK2AiBaUlkmXoOlYyeCuUht5EPKKcLpAxeDubTUAXfsG8VIVMihjtxQjIwv2wV0RAoySxhkeqF/A5R7kuLo0apQIhrSMPIlmDmNvflbrreBKVyGWMyty2jEp4JpJ1eFvtuI5HChe2RSK77DrejKSXVOkdgQmJP4UqY1QP/BPfxNaszNYZdoqaDdfxLkUaccLWmsbqbhq9v9g9+P3FZXRnU1U42WmyNJfgnORMR7+dbm5fVOuu06924G+IBV+h1FoEfypzOTqHQROmIXx1HQCAvrm0BYF/JTjVQk41kRqluYjyC6FKpoLSVLDchGxG0kLAGP+gtKQ8vR+NqOI5Y0LiMtPrQaU8rM/cMvnMwebrXVFli6fUCGHCkCgEhdrCoLKEfEWl4EvkGlZEUvLAMIQpam20tYAyUr3C9lMZAIiSxNoRmUXHXEhY5kzTjCFokqoTiMVySUChgaPGpFDs3Qn5yVgWHLxWaMNY5FwPoVoYqGEIBcRGUEIwhIhpNOFqAkF5CepCzRSFOUY9Uh0vYFBqbgTRj5JkRlK/vQbmAkisSmXL2O7IffP1TRBTyst0Np9FTQ32gHIY+GNCpv4J+BdUxWKFcu1vpnbXjxlJ3xOWF36URdapAuCNDTExdoEZ8gR5vI5Sk9DTtpkAP4M/5oqmC60uMPOH8DN4WuYII/DmhCnssh0lSTAjKQRVKMZJE5aaKOBjl25QpanO116xwsfG227BNgHDBh3vUciqLDT56BasbmRF/HOxzHKNrYKC/rGH9ztPDwpE/iZFnplI1gS15UJvSWMplJjrMC6cKaG9fYgpRJvtfckroPCN9AXVr5tpa/tmCgETMbEl3ixfVkvBHtztweOuhyWdPLOATCF8hf6EEPucTRjRcyGXu7Z6VYxHTbg7YtaLEtMtGJKyrFWXuy5U269KaCrctB+jGsEhVAKjNoHVkRx2HPkvSuiwCmoV0Maj2Cm7AbMD5PcCtlPaQN5EErwa/J1yRxZTFwyrpV1xS8CbxBetEn8Pe/bhXCLRCKbbIAylVnXnFXbS7UIoPRGClW9xBwwgsJ0P+D/4ww8/3XdaqZRsaGtTplWwr/k7hfKKcJJiMk427P3Yae9c8DlNA3OJwDiYVQ5uuhvsHtvhyfNl/3JaL9FUPekQ7PZ7uy3gS3ijIEZTdWfE9M2x4AntyOiTEX3DE9Me11TAhMgasadGomgdWr3ELS7FCl+hndjTTLy8lXhBI1Fc5hCq2kVAZ7Jrx+srfCNvW38eSv4HUX/PXq/siWEuxRIUyhVtusZXj0Qtbh6bA6JxDG8dyVqvwVmvy1j/M776bmz1PMQP46mDWKoRKeBrrJo5yeZxR/JC/6V09g1i6/93rNPvzsMxBdh/tbrqf4fq6n+fGvu475T2d2QhHvCv355ztkrzMKXj63cPWFoLZUO8DZH2fG/MV4TRpBxotF6b0syT6zy5TvHalXOSa1EXujLjvxVNMDEP1ZPreHaedwq92YKqjYkhJs3MEL9gnGtMQOWxGR7Oc8bWYefU5RElAjHDFUyaoYmdMEZKiZiad2ZlkqPMSEjkemPu+rCGmDBmnlZ/kqtFcGMFzop9P3Sd3VUIbP5vUWWCK4SgyP3gw1uts2r1XHCNX/T9L63YTjXRuToXiSkPK92s3I9GN380ombSV/48BRu0MtxD1/kHUEsDBBQAAAAIAFd6P1qClwoyiwAAANQAAAAJAAAAaG9zdC5qc29uXY69CsJAEIR7wXdYtlPCcqhVOsXY+QRWZ26Vg7gX7kfUkHeXI2cRq4EZvpkZlgsAAHyyD9YJ1oAbUlgV+6FF39kcuWcxLO0baximDAAb0deODdYQfeLJHn8ovyJL7jwkMR3PQJsZPNvWu+Bukfaf5JlOSdponQRq/tjSOf952dK6gh0pUiss41nGL1BLAwQUAAAACABXej9aCJtPFYUAAACZAAAAEwAAAGxvY2FsLnNldHRpbmdzLmpzb24ti8EKgkAYBu+C7/Dzn3uChQ5RBlukoG4eZa2vOmyu7K5Fie8eKx2HmZnShIilz/qL+wwBVxZ008ZjtYizNiM8C5oiEvFe5dtaFnnVNkV5zMq2VHktTxkL4sG+4fwDxvByE/HmOzo06A6281WwTt8RS+WxwwvGDk/04S/WwY3gOM5pMv8AUEsDBBQAAAAIAFd6P1qVac3W6wEAALEDAAALAAAAcHJvZmlsZS5wczGFU8FqGzEUvBv8D0PcQ1uyhl5zWxwXDI0TYvfQU5C1b7MC+b1Felpn0/bfi7xruymBXsW8mTczTzOUrykQvia26oQj2iC18zRv45fpZDadzLBt3JtnHJz3eCYFvZBNShWoo9DjyoqvENUEvYLU6CWFMzPKtp1nurcoa1OIODTEN6PcZ5RvhgZoRGpRS4A2hKNa7UJUqNvTf6ZMrRSwI8fPqKgw3os1eesqEVTg2Fh1ndN+3OCHJFjDqKh2TGjItxRQnyK6RkgMK/u94SpeQwJiS9bVPYg7F4T3xIrOBGd2nmKmXN9vlzcw3F+eR/oK2hiFCQQWfZ/hknigSDo6ykkMIQw9OOHpJIuVSRtiddklDk6bseQHOVDYNOQ9Usxp3G1Wx0oeaS8dQXPR7tjbeZ/WG+aMFb4MZcv/Us6nE1fj4wfi7uZus3raLBePy+0n/JxOAODWxWylKF8XwkovWiaVaDpCsbHSEh6CWIoRv3CftFgn74fBhTCT1aJ8La2VxIpiVWV32qMYn1YVzrqLb6vlevu0usV08nvI4zvnsnKiOTKmF4XPxaqAOG8FT8/G9oOnxz2MdybC8XsmZ1geZ4oRXGbsoHO6G+OjnI7nfDU5syMvxaHxjNwRAtUUiC1VWTBfyOnn/FXXmWX+B1BLAwQUAAAACABXej9alSM6OAcAAAAFAAAACQAAAFJFQURNRS5tZFNWCHFyAQBQSwMEFAAAAAgAQ02CWhkOSxOGAQAApwIAABEAAAByZXF1aXJlbWVudHMucHNkMW2R3WrcMBSE7xf2HQb2wlCCvE5KQwqBmEJKL0JLmxc4Kx/bYmUdoZ8Yb+m7F9u7tFt6pYtvNDMa7fDam4jWWAY7OliOGKTJ85kEBwblJAMlo8naCQM56rjBYULqGc/Z6WTERUQOb0az2m52+MGMPiUfP5YlHUkNsWwvwrNBw55dw05PaCWAmsbMmCyMayXMgeJms+3m6ed2AwA7PEuApcQxIWbvJSRu8MYhGnE36GRuXFyCx3FUXkYOsWdrO7KWw6S0DKUnfaSOY1mfCoWL+asgR15eVZ/OG8A4TJIDLvVB3t/AW6bIyE7LMLBLyyVrHOPAVkZ1tizqU4FHFNVevSuwg2Nu5oqBm6znJLNsPNCRYdK6A1qKiQNiopBWn6I+qVpryS7Fxe+92qvb4g/8zlFy0LzSe/Wg9v+hnwP5fu2jbq8UL+JMkrCwD2qvqr/YN7FGT19cNF1/jq/U/ZXkkzjHOnHzQro3js+i6h/R4HNa2YOqrvK/eg7Lf5O9CrpTd4vu13bzG1BLAQIUABQAAAAIAFd6P1q+vQzZlQAAAFYBAAAXAAAAAAAAAAAAAAAAAAAAAABhZ2VudE1nbXQvZnVuY3Rpb24uanNvblBLAQIUABQAAAAIAGpQf1qc8ikvwAIAAE4HAAARAAAAAAAAAAAAAAAAAMoAAABhZ2VudE1nbXQvcnVuLnBzMVBLAQIUABQAAAAIAFd6P1rPVjsMlAAAADIBAAAdAAAAAAAAAAAAAAAAALkDAABhbGVydENvbmZpZ01nbXQvZnVuY3Rpb24uanNvblBLAQIUABQAAAAIAGpQf1oN/HngswUAAPkXAAAXAAAAAAAAAAAAAAAAAIgEAABhbGVydENvbmZpZ01nbXQvcnVuLnBzMVBLAQIUABQAAAAIAFd6P1q+vQzZlQAAAFYBAAAUAAAAAAAAAAAAAAAAAHAKAABjb25maWcvZnVuY3Rpb24uanNvblBLAQIUABQAAAAIAHZPglqlGaIaPwkAANsiAAAOAAAAAAAAAAAAAAAAADcLAABjb25maWcvcnVuLnBzMVBLAQIUABQAAAAIAPB9gVrKMlnKgCAAALX8AAAaAAAAAAAAAAAAAAAAAKIUAABNb2R1bGVzL2NvbW1vbi9jb21tb24ucHNtMVBLAQIUABQAAAAIAFd6P1rPVjsMlAAAADIBAAAVAAAAAAAAAAAAAAAAAFo1AAB0YWdtZ210L2Z1bmN0aW9uLmpzb25QSwECFAAUAAAACADJfYFa5ky+5bsFAABbFgAADwAAAAAAAAAAAAAAAAAhNgAAdGFnbWdtdC9ydW4ucHMxUEsBAhQAFAAAAAgAV3o/WoKXCjKLAAAA1AAAAAkAAAAAAAAAAAAAAAAACTwAAGhvc3QuanNvblBLAQIUABQAAAAIAFd6P1oIm08VhQAAAJkAAAATAAAAAAAAAAAAAAAAALs8AABsb2NhbC5zZXR0aW5ncy5qc29uUEsBAhQAFAAAAAgAV3o/WpVpzdbrAQAAsQMAAAsAAAAAAAAAAAAAAAAAcT0AAHByb2ZpbGUucHMxUEsBAhQAFAAAAAgAV3o/WpUjOjgHAAAABQAAAAkAAAAAAAAAAAAAAAAAhT8AAFJFQURNRS5tZFBLAQIUABQAAAAIAENNgloZDksThgEAAKcCAAARAAAAAAAAAAAAAAAAALM/AAByZXF1aXJlbWVudHMucHNkMVBLBQYAAAAADgAOAIEDAABoQQAAAAA=",
                    "discoveryContainerName": "discovery",
                    "tempfilename": "[format('{0}.tmp', parameters('filename'))]",
                    "ambaJsonURL": "https://azure.github.io/azure-monitor-baseline-alerts/amba-alerts.json",
                    "sasConfig": {
                      "signedResourceTypes": "sco",
                      "signedPermission": "r",
                      "signedServices": "b",
                      "signedExpiry": "[parameters('sasExpiry')]",
                      "signedProtocol": "https",
                      "keyToSign": "key2"
                    },
                    "keyName": "monitoringKey"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('deployscript-Function-{0}', parameters('instanceName'))]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('location')]",
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "AZURE_STORAGE_ACCOUNT",
                            "value": "[parameters('storageAccountName')]"
                          },
                          {
                            "name": "AZURE_STORAGE_KEY",
                            "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                          },
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/config', parameters('functionname'), 'appsettings')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}-farm', parameters('functionname'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "sku": {
                        "name": "Y1",
                        "tier": "Dynamic",
                        "size": "Y1",
                        "family": "Y",
                        "capacity": 0
                      },
                      "kind": "functioapp",
                      "properties": {
                        "perSiteScaling": false,
                        "elasticScaleEnabled": false,
                        "maximumElasticWorkerCount": 1,
                        "isSpot": false,
                        "reserved": false,
                        "isXenon": false,
                        "hyperV": false,
                        "targetWorkerCount": 0,
                        "targetWorkerSizeId": 0,
                        "zoneRedundant": false
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2023-01-01",
                      "name": "[parameters('functionname')]",
                      "location": "[parameters('location')]",
                      "kind": "functionapp",
                      "tags": "[parameters('Tags')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userManagedIdentity'))]": {}
                        }
                      },
                      "properties": {
                        "enabled": true,
                        "hostNameSslStates": [
                          {
                            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
                            "sslState": "Disabled",
                            "hostType": "Standard"
                          },
                          {
                            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
                            "sslState": "Disabled",
                            "hostType": "Repository"
                          }
                        ],
                        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]",
                        "reserved": false,
                        "isXenon": false,
                        "hyperV": false,
                        "siteConfig": {
                          "numberOfWorkers": 1,
                          "acrUseManagedIdentityCreds": false,
                          "alwaysOn": false,
                          "ipSecurityRestrictions": [
                            {
                              "ipAddress": "Any",
                              "action": "Allow",
                              "priority": 1,
                              "name": "Allow all",
                              "description": "Allow all access"
                            }
                          ],
                          "scmIpSecurityRestrictions": [
                            {
                              "ipAddress": "Any",
                              "action": "Allow",
                              "priority": 1,
                              "name": "Allow all",
                              "description": "Allow all access"
                            }
                          ],
                          "http20Enabled": false,
                          "functionAppScaleLimit": 200,
                          "minimumElasticInstanceCount": 0,
                          "minTlsVersion": "1.2",
                          "cors": {
                            "allowedOrigins": [
                              "https://portal.azure.com"
                            ],
                            "supportCredentials": true
                          }
                        },
                        "scmSiteAlsoStopped": false,
                        "clientAffinityEnabled": false,
                        "clientCertEnabled": false,
                        "clientCertMode": "Required",
                        "hostNamesDisabled": false,
                        "containerSize": 1536,
                        "dailyMemoryTimeQuota": 0,
                        "httpsOnly": true,
                        "redundancyMode": "None",
                        "storageAccountRequired": false,
                        "keyVaultReferenceIdentity": "SystemAssigned"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', parameters('functionname'), 'appsettings')]",
                      "properties": {
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]",
                        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]",
                        "WEBSITE_CONTENTSHARE": "[parameters('storageAccountName')]",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "ResourceGroup": "[resourceGroup().name]",
                        "SolutionTag": "[parameters('solutionTag')]",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey)]",
                        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                        "MSI_CLIENT_ID": "[parameters('userManagedIdentityClientId')]",
                        "PacksUserManagedId": "[parameters('packsUserManagedId')]",
                        "InstanceName": "[parameters('instanceName')]",
                        "AMBAJsonURL": "[variables('ambaJsonURL')]",
                        "servicesBaseURL": "https://raw.githubusercontent.com/Azure/azure-monitor-baseline-alerts/main/services",
                        "storageaccount": "[parameters('storageAccountName')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('functionname'))]",
                        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/extensions",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}', parameters('functionname'), 'MSDeploy')]",
                      "properties": {
                        "packageUri": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, variables('discoveryContainerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]",
                        "[resourceId('Microsoft.Resources/deploymentScripts', format('deployscript-Function-{0}', parameters('instanceName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('functionname')]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('appInsightsLocation')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "publicNetworkAccessForIngestion": "Enabled",
                        "publicNetworkAccessForQuery": "Enabled",
                        "WorkspaceResourceId": "[parameters('lawresourceid')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites/host/functionKeys",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/default/{1}', parameters('functionname'), variables('keyName'))]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "name": "[variables('keyName')]",
                        "value": "[parameters('apiManagementKey')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/config', parameters('functionname'), 'appsettings')]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location')))]",
                "[subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('logicappname')]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "functioname": {
                    "value": "[parameters('functionname')]"
                  },
                  "logicAppName": {
                    "value": "[parameters('logicappname')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "keyvaultid": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))), '2022-09-01').outputs.kvResourceId.value]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "14479473838979323047"
                    }
                  },
                  "parameters": {
                    "functioname": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "location": {
                      "type": "string"
                    },
                    "keyvaultid": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "logicAppName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "keyVaultName": "[split(parameters('keyvaultid'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Logic/workflows",
                      "apiVersion": "2019-05-01",
                      "name": "[parameters('logicAppName')]",
                      "tags": "[parameters('Tags')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "state": "Enabled",
                        "definition": {
                          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                          "contentVersion": "1.0.0.0",
                          "parameters": {
                            "$connections": {
                              "defaultValue": {},
                              "type": "Object"
                            }
                          },
                          "triggers": {
                            "manual": {
                              "type": "Request",
                              "kind": "Http",
                              "inputs": {}
                            }
                          },
                          "actions": {
                            "Get_Secret": {
                              "runAfter": {
                                "Parse_JSON": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('FunctionKey')}/value"
                              }
                            },
                            "Parse_JSON": {
                              "runAfter": {},
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                  "properties": {
                                    "function": {
                                      "type": "string"
                                    },
                                    "functionBody": {
                                      "properties": {},
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "Switch": {
                              "runAfter": {
                                "Get_Secret": [
                                  "Succeeded"
                                ]
                              },
                              "cases": {
                                "Case": {
                                  "case": "tagmgmt",
                                  "actions": {
                                    "tagmgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "Headers": {
                                          "x-functions-key": "[listKeys(resourceId('Microsoft.Web/sites/host', parameters('functioname'), 'default'), '2022-09-01').functionKeys.monitoringKey]"
                                        },
                                        "function": {
                                          "id": "[format('{0}/functions/tagmgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_2": {
                                  "case": "alertmgmt",
                                  "actions": {
                                    "alertConfigMgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/alertConfigMgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Case_4": {
                                  "case": "agentMgmt",
                                  "actions": {
                                    "agentMgmt": {
                                      "runAfter": {},
                                      "type": "Function",
                                      "inputs": {
                                        "body": "@body('Parse_JSON')?['functionBody']",
                                        "function": {
                                          "id": "[format('{0}/functions/agentmgmt', resourceId('Microsoft.Web/sites', parameters('functioname')))]"
                                        },
                                        "headers": {
                                          "x-functions-key": "@body('Get_secret')?['value']"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "default": {
                                "actions": {}
                              },
                              "expression": "@body('Parse_JSON')?['Function']",
                              "type": "Switch"
                            }
                          },
                          "outputs": {}
                        },
                        "parameters": {
                          "$connections": {
                            "value": {
                              "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'keyvault')]",
                                "connectionName": "keyvault",
                                "connectionProperties": {
                                  "authentication": {
                                    "type": "ManagedServiceIdentity"
                                  }
                                },
                                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/eastus/managedApis/keyvault', parameters('subscriptionId'))]"
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/connections', 'keyvault')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/connections",
                      "apiVersion": "2018-07-01-preview",
                      "name": "keyvault",
                      "properties": {
                        "displayName": "KeyVault",
                        "authenticatedUser": {},
                        "overallStatus": "Ready",
                        "statuses": [
                          {
                            "status": "Ready"
                          }
                        ],
                        "connectionState": "Enabled",
                        "parameterValueSet": {
                          "name": "oauthMI",
                          "values": {
                            "vaultName": {
                              "value": "[variables('keyVaultName')]"
                            }
                          }
                        },
                        "customParameterValues": {},
                        "createdTime": "2023-10-12T20:52:26.0864876Z",
                        "changedTime": "2023-10-12T20:52:26.0864876Z",
                        "api": {
                          "name": "keyvault",
                          "displayName": "Azure Key Vault",
                          "description": "Azure Key Vault is a service to securely store and access secrets.",
                          "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1656/1.0.1656.3432/keyvault/icon.png",
                          "brandColor": "#0079d6",
                          "category": "Standard",
                          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/keyvault', parameters('subscriptionId'), parameters('location'))]",
                          "type": "Microsoft.Web/locations/managedApis"
                        },
                        "testLinks": [],
                        "testRequests": []
                      },
                      "location": "[parameters('location')]"
                    }
                  ],
                  "outputs": {
                    "logicAppPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '2019-05-01', 'full').identity.principalId]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('functionname'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6)))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "workbook2deployment",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "lawresourceid": {
                    "value": "[parameters('lawresourceid')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "171292952624058976"
                    }
                  },
                  "parameters": {
                    "Tags": {
                      "type": "object"
                    },
                    "location": {
                      "type": "string"
                    },
                    "lawresourceid": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "version": "Notebook/1.0",
                      "items": [
                        {
                          "type": 1,
                          "content": {
                            "json": "# Azure Monitor Starter Packs - Extended Admin Centre - V3.0 (Beta)\n\n\n"
                          },
                          "customWidth": "50",
                          "name": "textTitle"
                        },
                        {
                          "type": 9,
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                              {
                                "id": "741661c9-5e51-44bc-8e8e-bfc6396f2646",
                                "version": "KqlParameterItem/1.0",
                                "name": "showHelp",
                                "label": "Show Help Info",
                                "type": 10,
                                "isRequired": true,
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[[\n    { \"value\":\"yes\", \"label\":\"Yes\",\"default\": \"yes\" },\n    { \"value\":\"no\", \"label\":\"No\" }\n]",
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "value": "no"
                              },
                              {
                                "version": "KqlParameterItem/1.0",
                                "name": "showHidden",
                                "label": "Show Hidden Items",
                                "type": 10,
                                "isRequired": true,
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[[\n    { \"value\":\"yes\", \"label\":\"Yes\",\"default\": \"yes\" },\n    { \"value\":\"no\", \"label\":\"No\" }\n]",
                                "timeContext": {
                                  "durationMs": 86400000
                                },
                                "value": "no",
                                "id": "f538abc2-3e09-45aa-a81e-b966a64e0703"
                              }
                            ],
                            "style": "above",
                            "queryType": 0,
                            "resourceType": "microsoft.operationalinsights/workspaces"
                          },
                          "customWidth": "50",
                          "name": "showHelpparameter"
                        },
                        {
                          "type": 11,
                          "content": {
                            "version": "LinkItem/1.0",
                            "style": "tabs",
                            "links": [
                              {
                                "id": "a9a63932-4a11-4fe1-938c-02619e609193",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Getting Started",
                                "subTarget": "gettingstarted",
                                "style": "link"
                              },
                              {
                                "id": "4f0ca437-37b0-42f6-a150-e994338f5185",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Status",
                                "subTarget": "status",
                                "style": "link"
                              },
                              {
                                "id": "15f0fa97-4286-48d6-9dea-26a956197d26",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Servers",
                                "subTarget": "discovery",
                                "style": "link"
                              },
                              {
                                "id": "c5269422-e723-43b6-b923-8bf44fd49320",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Services",
                                "subTarget": "paas",
                                "style": "link"
                              },
                              {
                                "id": "7499a88f-a536-41d7-9b58-9ebae1b5290e",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Alert Rules",
                                "subTarget": "alertmanagement",
                                "style": "link"
                              },
                              {
                                "id": "c2a67d72-dd46-44ea-adba-b9d70915c607",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Packs",
                                "subTarget": "rulemanagement",
                                "style": "link"
                              },
                              {
                                "id": "d8f7936d-170f-430d-af7d-ac22115a9e38",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Agents",
                                "subTarget": "agentmgmt",
                                "style": "link"
                              },
                              {
                                "id": "afec2944-3bd3-4bd3-8afa-6dc39d0b623a",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Discovery(Prototype)",
                                "subTarget": "autodiscovery",
                                "style": "link"
                              },
                              {
                                "id": "e1f636a4-1593-49ef-bf35-abf708e2be48",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Configuration",
                                "subTarget": "backend",
                                "style": "link"
                              },
                              {
                                "id": "295ed7b4-8237-409a-87d2-1efd439bea97",
                                "cellValue": "tabSelection",
                                "linkTarget": "parameter",
                                "linkLabel": "Logs",
                                "subTarget": "logs",
                                "style": "link"
                              }
                            ]
                          },
                          "customWidth": "75",
                          "name": "mainLinksTab"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "loadType": "always",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "## General Parameters\n\n### Subscriptions\n\nSelect the Subscriptions that will be used in the Configuration\n\n### Logic App\n\nSelect the logic app to be used. Typically the shoulbe a single one but if more instances exist, select the one for the instance you want to use.\n\n### Function Apps\n\nSelect the Backend Function to be used. Typically the shoulbe a single one but if more instances exist, select the one for the instance you want to use.\n\n### Config Function Key\n\nThis field will be automatically populated once the function is selected.\n\n### Workspace\n\nSelect the Log Analytics Workspace to be used for this instance.\n\n### Azure Managed Grafana\n\nSelect the Azure Managed Grafana if you have deployed one along with the solution.",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - Configuration "
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "7a778b2c-619d-4f82-bd1c-810f853af6fd",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Subscriptions",
                                      "type": 6,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "multiSelect": true,
                                      "quote": "'",
                                      "delimiter": ",",
                                      "typeSettings": {
                                        "additionalResourceOptions": [
                                          "value::all"
                                        ],
                                        "includeAll": false,
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "value": [
                                        "/subscriptions/b1e924f9-d16f-4260-a3c8-ff1ee462956b"
                                      ]
                                    },
                                    {
                                      "id": "1efb8bbe-532a-491b-b3c4-55f1402ee280",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "logicAppResource",
                                      "label": "Logic App",
                                      "type": 5,
                                      "isRequired": true,
                                      "query": "resources\n| where type == \"microsoft.logic/workflows\" \n| where isnotempty(tags.MonitorStarterPacksComponents)\n| project Id=id, Name=name",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "resourceTypeFilter": {
                                          "microsoft.logic/workflows": true
                                        },
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "/subscriptions/b1e924f9-d16f-4260-a3c8-ff1ee462956b/resourceGroups/rg-MonstarPacks/providers/Microsoft.Logic/workflows/AMP-vss-LogicApp"
                                    },
                                    {
                                      "id": "16d48fd3-189f-4604-9582-da7cf5c93d7c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "FunctionApps",
                                      "label": "Function Apps",
                                      "type": 5,
                                      "description": "Select the function to provide the access key.",
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\n| where type =~ 'microsoft.web/sites' and ['kind'] =~ 'functionapp'\n| where isnotempty(tags.MonitorStarterPacksComponents)\n| project id,name",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": []
                                      },
                                      "queryType": 1,
                                      "value": "/subscriptions/b1e924f9-d16f-4260-a3c8-ff1ee462956b/resourceGroups/rg-MonstarPacks/providers/Microsoft.Web/sites/AMP-vss-b1e924f9-Function"
                                    },
                                    {
                                      "id": "c9fbafc9-2806-4c24-8d34-18f7cae66299",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "configKey",
                                      "label": "Config Function Key",
                                      "type": 1,
                                      "description": "The function key is fetched automatically from the function selected on the left.",
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"POST\",\"path\":\"{FunctionApps}/functions/config/listkeys?api-version=2022-03-01\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.default\",\"columns\":[]}}]}",
                                      "typeSettings": {
                                        "isPassword": true
                                      },
                                      "queryType": 12
                                    },
                                    {
                                      "id": "4552c35d-c26c-4cbf-a4cf-b2e57ff7ee78",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Workspace",
                                      "label": "WorkSpace",
                                      "type": 5,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\n| where type == \"microsoft.operationalinsights/workspaces\"\n| project id",
                                      "crossComponentResources": [
                                        "value::all"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resourcegraph/resources",
                                      "value": "/subscriptions/b1e924f9-d16f-4260-a3c8-ff1ee462956b/resourceGroups/rg-MonstarPacks/providers/Microsoft.OperationalInsights/workspaces/Monster-LA"
                                    },
                                    {
                                      "id": "ea93902e-9856-4bd4-998d-ea88378907a7",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "GrafanaInstance",
                                      "label": "Azure Managed Grafana",
                                      "type": 2,
                                      "isRequired": true,
                                      "isGlobal": true,
                                      "query": "resources\n| where type =~ \"microsoft.dashboard/grafana\"\n| where isnotempty(tags.monitorStarterPacksComponents) or isnotempty(tags.MonitorStarterPacksComponents)\n| project id, label=properties.endpoint",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "/subscriptions/b1e924f9-d16f-4260-a3c8-ff1ee462956b/resourceGroups/rg-MonstarPacks/providers/Microsoft.Dashboard/grafana/AMSPb1e924f9"
                                    },
                                    {
                                      "id": "7961f447-f72b-401d-a26b-283a44e45b2e",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "DefaultAG",
                                      "label": "Default Action Group",
                                      "type": 5,
                                      "isRequired": true,
                                      "query": "resources\r\n| where type == \"microsoft.insights/actiongroups\"\r\n| where properties.enabled == 'true'\r\n| project id",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": []
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "/subscriptions/b1e924f9-d16f-4260-a3c8-ff1ee462956b/resourceGroups/NetworkWatcherRG/providers/microsoft.insights/actiongroups/Jose"
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants"
                                },
                                "customWidth": "100",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "backend"
                                },
                                "name": "generalParams"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "03340268-1ac8-4d74-a76e-bc37a4bdd45c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "appInsightsName",
                                      "type": 1,
                                      "isRequired": true,
                                      "query": "resources\n| where type == \"microsoft.insights/components\"\n| where name == \"{FunctionApps:name}\"\n| project id",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants"
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHidden",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "parameters - 5"
                              },
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "f5b4b4b6-c5d7-4941-b807-8a61df48a0f4",
                                      "cellValue": "configTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Resource List",
                                      "subTarget": "resources",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 4"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where isnotempty(tags.MonitorStarterPacks) or isnotempty(tags.MonitorStarterPacksComponents)\n|union ( \npolicyresources | where isnotempty(properties.metadata.MonitorStarterPacks))\n| summarize count() by type\n| sort by count_ desc ",
                                  "size": 0,
                                  "title": "Monitoring Packs resources and Components",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "filter": true
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "configTab",
                                  "comparison": "isEqualTo",
                                  "value": "resources"
                                },
                                "name": "Installed Components",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              }
                            ],
                            "exportParameters": true
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "backend"
                          },
                          "name": "ConfigStatusGroup"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
                            "size": 0,
                            "queryType": 10
                          },
                          "conditionalVisibility": {
                            "parameterName": "showHidden",
                            "comparison": "isEqualTo",
                            "value": "yes"
                          },
                          "name": "queryServiceTags - Global"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "# Getting Started\n\nWelcome to the Azure Monitoring Packs. This workbook was designed to help you configuring the solution. Here you can:\n- Enable/Disable monitoring packs for one or more VMs or services. You may also disable all the monitoring for a specific server or service. This will remove the tags and the rule associations. For services, right now, the alerts won´t be deleted by themselves.\n- Enable/Disable Alerts in bulk. You can also assign a different Action group to one or more alerts or delete the rules**\n- Check policy status and start remediation if required. By clicking in a policy, you can also assign that policy to another scope.\n- Check Monitor pack associations.\n- Review discovered applications (VMs only)\n- Manage agent configuration (install/remove)\n\n## Link to your managed [Grafana]({GrafanaInstance:label}) instance, if you enabled it. Make sure to property set permissions before attemping to access it.\n\n## <span style=\"color: #FF0000\">If this is the first time using this solution, please configure the parameters in the ***Configuration*** tab and save the workbook for proper functionality.</span>\n\n\n## Please check the Monitoring Packs repository for updates. [Azure MONitor STARter Packs](http://github.com/Azure/AzureMonitorStarterPacks)\n## Also check the Azure Monitor Baseline Alerts ([AMBA](http://aka.ms/amba)) website for the details on the alerts.\n\n\n\n\n\n"
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "gettingstarted"
                          },
                          "name": "textGetStarted"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "04e679ee-16ae-46f6-a85b-d47751c0bcca",
                                      "cellValue": "dashTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Active Alerts",
                                      "subTarget": "alerts",
                                      "preText": "",
                                      "style": "link"
                                    },
                                    {
                                      "id": "a4b4c83e-fce7-48e2-95ce-acf12c050eaa",
                                      "cellValue": "dashTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "IaaS Summary",
                                      "subTarget": "iaas",
                                      "style": "link"
                                    },
                                    {
                                      "id": "4e01b5fe-51d5-4ba4-9d3c-6f5b5ef2d93c",
                                      "cellValue": "dashTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Services Summary",
                                      "subTarget": "paas",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 3 - Copy"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## IaaS Information\n\nThe summary below shows details related to the IaaS Monitoring packs.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "text - Summary - IaaS"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' or type =~ 'microsoft.compute/virtualmachines'\n| extend MonitorStatus=iff(isnotempty(tostring(tags.MonitorStarterPacks)),'Monitored','Not Monitored')\n| summarize count() by MonitorStatus",
                                        "size": 1,
                                        "title": "Monitoring Status (Tags)",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart",
                                        "chartSettings": {
                                          "seriesLabelSettings": [
                                            {
                                              "seriesName": "Monitored",
                                              "color": "green"
                                            },
                                            {
                                              "seriesName": "Not Monitored",
                                              "color": "orange"
                                            }
                                          ]
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "Monitoring Status Tags",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\n    JoinID = toupper(id)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| extend\n    JoinID = toupper(id)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| summarize count() by AgentInstalled=iff(isempty(ExtensionName),\"No\",\"Yes\")",
                                        "size": 1,
                                        "title": "Agent Install Status",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart",
                                        "chartSettings": {
                                          "seriesLabelSettings": [
                                            {
                                              "seriesName": "Yes",
                                              "label": "AMA Installed",
                                              "color": "green"
                                            },
                                            {
                                              "seriesName": "No",
                                              "label": "No AMA",
                                              "color": "red"
                                            }
                                          ]
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "agentInstallStatus",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n| join (resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Associated=count() by Pack\n| sort by Pack asc",
                                        "size": 1,
                                        "title": "Servers/Pack (Association)",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart",
                                        "tileSettings": {
                                          "showBorder": false,
                                          "titleContent": {
                                            "columnMatch": "Pack",
                                            "formatter": 1
                                          },
                                          "leftContent": {
                                            "columnMatch": "Associated",
                                            "formatter": 12,
                                            "formatOptions": {
                                              "palette": "auto"
                                            },
                                            "numberFormat": {
                                              "unit": 17,
                                              "options": {
                                                "maximumSignificantDigits": 3,
                                                "maximumFractionDigits": 2
                                              }
                                            }
                                          }
                                        },
                                        "mapSettings": {
                                          "locInfo": "LatLong",
                                          "sizeSettings": "Associated",
                                          "sizeAggregation": "Sum",
                                          "legendMetric": "Associated",
                                          "legendAggregation": "Sum",
                                          "itemColorSettings": {
                                            "type": "heatmap",
                                            "colorAggregation": "Sum",
                                            "nodeColorField": "Associated",
                                            "heatmapPalette": "greenRed"
                                          }
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "AssociatedResourceStatsperTag - Copy - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n| join (resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Tagged=count() by Pack\n| sort by Pack asc\n\n\n",
                                        "size": 1,
                                        "title": "Tagged Resources per Tag",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "tiles",
                                        "tileSettings": {
                                          "showBorder": false,
                                          "titleContent": {
                                            "columnMatch": "Pack",
                                            "formatter": 1
                                          },
                                          "leftContent": {
                                            "columnMatch": "Tagged",
                                            "formatter": 12,
                                            "formatOptions": {
                                              "palette": "auto"
                                            },
                                            "numberFormat": {
                                              "unit": 17,
                                              "options": {
                                                "maximumSignificantDigits": 3,
                                                "maximumFractionDigits": 2
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "taggedResourceStatsperTag",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n| join (resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| project-away rulename,rulename1,resourceId\n| summarize Associated=count() by Pack\n| sort by Pack asc",
                                        "size": 1,
                                        "title": "Associated Servers per Pack",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "tiles",
                                        "tileSettings": {
                                          "showBorder": false,
                                          "titleContent": {
                                            "columnMatch": "Pack",
                                            "formatter": 1
                                          },
                                          "leftContent": {
                                            "columnMatch": "Associated",
                                            "formatter": 12,
                                            "formatOptions": {
                                              "palette": "auto"
                                            },
                                            "numberFormat": {
                                              "unit": 17,
                                              "options": {
                                                "maximumSignificantDigits": 3,
                                                "maximumFractionDigits": 2
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "customWidth": "33",
                                      "name": "AssociatedResourceStatsperTag - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "dashTab",
                                  "comparison": "isEqualTo",
                                  "value": "iaas"
                                },
                                "name": "groupDashboardIaaS"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## Active Alerts List\n\nThis tab shows all Monitoring Packs related alerts that are currently active.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "text - Summary - Active Alerts"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "alertsmanagementresources\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status,severity=properties.context.context.severity\n| where isnotempty(alertRule)\n| join (resources\n| where type == \"microsoft.insights/scheduledqueryrules\" or type ==\"microsoft.insights/metricalerts\" or type == 'microsoft.insights/activitylogalerts'\n| where isnotempty(tags.MonitorStarterPacks)\n| extend alertRule=tolower(tostring(['id']))) on alertRule\n| project id, ['Alert Name']=name,['Details']=['Alert Id'], Status=status, Resource=resourceId, Sev=severity\n| where Status=='Activated'\n",
                                        "size": 0,
                                        "title": "Active Alerts",
                                        "exportedParameters": [
                                          {
                                            "fieldName": "Details",
                                            "parameterName": "selectedAlertId",
                                            "parameterType": 5
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Details",
                                              "formatter": 7,
                                              "formatOptions": {
                                                "linkTarget": "OpenBlade",
                                                "linkLabel": "Details",
                                                "linkIsContextBlade": true,
                                                "bladeOpenContext": {
                                                  "bladeName": "AlertDetails.ReactView",
                                                  "extensionName": "Microsoft_Azure_Monitoring_Alerts",
                                                  "bladeJsonParameters": "{\n    \"alertId\": \"{selectedAlertId}\",\n    \"invokedFrom\": \"CopyLinkFeature\"\n}"
                                                }
                                              }
                                            },
                                            {
                                              "columnMatch": "Status",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "Activated",
                                                    "representation": "up",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "Resource",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": "Resource",
                                                "linkIsContextBlade": true,
                                                "showIcon": true
                                              }
                                            },
                                            {
                                              "columnMatch": "Sev",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "1",
                                                    "representation": "Sev1",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "2",
                                                    "representation": "Sev2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "3",
                                                    "representation": "Sev3",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "4",
                                                    "representation": "Sev4",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "==",
                                                    "thresholdValue": "0",
                                                    "representation": "Sev0",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "unknown",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "Alert Id",
                                              "formatter": 7,
                                              "formatOptions": {
                                                "linkTarget": "Resource",
                                                "linkLabel": "Details",
                                                "linkIsContextBlade": true
                                              }
                                            },
                                            {
                                              "columnMatch": "Target",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": null,
                                                "showIcon": true
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "customWidth": "66",
                                      "name": "activeAlertsquery"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "alertsmanagementresources\n| where ['type'] == 'microsoft.alertsmanagement/alerts'\n| project ['Alert Id']=id,resourceId=properties.context.context.resourceId, alertRule=tolower(tostring(properties.essentials.alertRule)), status=properties.context.status\n| where isnotempty(alertRule)\n| join (resources\n| where type == \"microsoft.insights/scheduledqueryrules\" or type ==\"microsoft.insights/metricalerts\" or type == 'microsoft.insights/activitylogalerts'\n| where isnotempty(tags.MonitorStarterPacks)\n| extend alertRule=tolower(tostring(['id']))) on alertRule\n| summarize count() by AlertType=type\n\n",
                                        "size": 0,
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "piechart"
                                      },
                                      "customWidth": "33",
                                      "name": "activeAlertsQueryPie"
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "dashTab",
                                  "comparison": "isEqualTo",
                                  "value": "alerts"
                                },
                                "name": "groupDashAlerts"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices&Type=PaaS\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
                                  "size": 0,
                                  "queryType": 10
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "dashTab",
                                    "comparison": "isEqualTo",
                                    "value": "paas"
                                  },
                                  {
                                    "parameterName": "showHidden",
                                    "comparison": "isEqualTo",
                                    "value": "yes"
                                  }
                                ],
                                "name": "queryServiceTags"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices&Type=Platform\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"\",\"value\":\"\"}],\"transformers\":null}",
                                  "size": 0,
                                  "queryType": 10
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "dashTab",
                                    "comparison": "isEqualTo",
                                    "value": "paas"
                                  },
                                  {
                                    "parameterName": "showHidden",
                                    "comparison": "isEqualTo",
                                    "value": "yes"
                                  }
                                ],
                                "name": "queryServiceTags - Platform"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project nameSpace=tolower(strcat(tostring(split(properties.scopes[0],\"/\")[-3]),\"/\",tostring(split(properties.scopes[0],\"/\")[-2]))),Target=split(properties.scopes[0],\"/\")[-1]\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project nameSpace=tolower(strcat(tostring(split(properties.scopes[0],\"/\")[-3]),\"/\",tostring(split(properties.scopes[0],\"/\")[-2]))),Target=split(properties.scopes[0],\"/\")[-1])\n| distinct tostring(Target),nameSpace\n| summarize Total=count() by nameSpace",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "piechart"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "dashTab",
                                  "comparison": "isEqualTo",
                                  "value": "paas"
                                },
                                "name": "query - resourcestomerge - nonIaaS"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "status"
                          },
                          "name": "dashboardgroup"
                        },
                        {
                          "type": 1,
                          "content": {
                            "json": "## Server Monitoring Setup\n\nSelect servers on the right to assign a pack. Once the backend is done with the assigning, the server will show on the left side grid.\n\nOn the left side grid, the monitoring can be updated to add more packs, as well as to remove a specific pack or remove any monitoring altogether from the server.",
                            "style": "info"
                          },
                          "conditionalVisibilities": [
                            {
                              "parameterName": "tabSelection",
                              "comparison": "isEqualTo",
                              "value": "discovery"
                            },
                            {
                              "parameterName": "showHelp",
                              "comparison": "isEqualTo",
                              "value": "yes"
                            }
                          ],
                          "name": "serversMonitoringHelptext"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Servers",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "When Monitoring is first enabled, the Azure Monitoring Agent will also be installed to the selected servers.",
                                  "style": "info"
                                },
                                "name": "text - 3"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId=tolower(tostring(resourceId))//ruleId=properties.dataCollectionRuleId\n| join kind= inner  (\nresources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| summarize by resourceId, Pack\n| summarize Packs=tostring(make_list(Pack)) by resourceId\n| project Packs2=tostring(Packs), resourceId",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Packs",
                                        "formatter": 1
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHidden",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "showPin": false,
                                "name": "query - associatedVMs"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources | where type =~ 'microsoft.hybridcompute/machines' \n| where isnotempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.osType, subscriptionId, Location=location\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| where isnotempty(tolower(tags.MonitorStarterPacks)) and (tolower(tags.Vendor) != 'databricks')\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location)\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
                                  "size": 0,
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Packs",
                                        "formatter": 1
                                      },
                                      {
                                        "columnMatch": "OS",
                                        "formatter": 1
                                      }
                                    ]
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHidden",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "showPin": false,
                                "name": "query - taggedVMs"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\",\"mergeType\":\"leftouter\",\"leftTable\":\"query - taggedVMs\",\"rightTable\":\"query - associatedVMs\",\"leftColumn\":\"Resource\",\"rightColumn\":\"resourceId\"}],\"projectRename\":[{\"originalName\":\"[query - associatedVMs].Packs2\",\"mergedName\":\"Associations\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - associatedVMs].MPs\",\"mergedName\":\"MPs\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - taggedVMs].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Resource Group\",\"mergedName\":\"Resource Group\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Packs\",\"mergedName\":\"Packs\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].OS\",\"mergedName\":\"OS\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Location\",\"mergedName\":\"Location\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].resourceId\",\"mergedName\":\"resourceId\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"}]}",
                                        "size": 0,
                                        "title": "Monitored Machines",
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "taggedVMs",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "queryType": 7,
                                        "visualization": "table",
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Associations",
                                              "formatter": 0,
                                              "tooltipFormat": {
                                                "tooltip": "If empty, no DCR associations have been created by the policies yet."
                                              }
                                            },
                                            {
                                              "columnMatch": "Associated Packs",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "is Empty",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "showPin": false,
                                      "name": "query-mergeVMs",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "{Workspace}"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "54f2c7fb-7251-43b6-aa4d-fd94647cac4a",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTagsLeft",
                                            "label": "Add/Remove",
                                            "type": 2,
                                            "isGlobal": true,
                                            "multiSelect": true,
                                            "quote": "",
                                            "delimiter": ",",
                                            "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.MonitoringPackType=='IaaS'\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs",
                                            "crossComponentResources": [
                                              "{Workspace}"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resourcegraph/resources"
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources"
                                      },
                                      "customWidth": "25",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedVMs",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "param-IaaS-tagged"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                            "cellValue": "",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove Monitoring for {PackTagsLeft} Pack(s)",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "removeTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"{PackTagsLeft}\",\n    \"PackType\": \"IaaS\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove Monitoring for {PackTagsLeft} Pack(s) \n\nServers:\n\n{taggedVMs}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "550df977-06a8-4c40-9cd3-aba6286ebcdf",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Add Monitoring for {PackTagsLeft} Pack(s)",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"{PackTagsLeft}\",\n    \"PackType\": \"IaaS\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Add Monitoring",
                                              "description": "# Please confirm the change.\n\nAdd Monitoring for {PackTagsLeft} Pack(s)",
                                              "actionName": "AddMonitoringPack",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "3b1af630-47ab-43e9-a5b2-d2f2e21880d0",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove All Monitoring for VM",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMs}],\n    \"Pack\": \"All\",\n    \"PackType\": \"IaaS\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove All Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove All Monitoring for {PackTagsLeft} Pack(s)",
                                              "actionName": "RemoveAllMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "75",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedVMs",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "links - 1"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "discovery"
                                },
                                "name": "TaggedGroup"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.hybridcompute/machines' | where isempty(tolower(tags.MonitorStarterPacks))\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.osType, subscriptionId, Location=location\n| union (resources | where type =~ 'microsoft.compute/virtualmachines' \n| where isempty(tolower(tags.MonitorStarterPacks)) \n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location)\n| union (resources | where type =~ 'microsoft.compute/virtualmachinescalesets' and properties.orchestrationMode == 'Uniform'\n| where isempty(tolower(tags.MonitorStarterPacks)) \n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.virtualMachineProfile.storageProfile.osDisk.osType, subscriptionId, Location=location)\n| join kind= leftouter  (\n    resourcecontainers| where type =~ 'microsoft.resources/subscriptions'\n    | project Subscription=name,subscriptionId\n    ) \non subscriptionId| project-away subscriptionId, subscriptionId1",
                                        "size": 0,
                                        "title": "Non-monitored Machines",
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "parameterName": "vmstotag",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "exportToExcelOptions": "all",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resourcegraph/resources",
                                        "crossComponentResources": [
                                          "{Subscriptions}"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "OS",
                                              "formatter": 1
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "$gen_link_Resource_0",
                                              "sortOrder": 1
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "$gen_link_Resource_0",
                                            "sortOrder": 1
                                          }
                                        ]
                                      },
                                      "name": "Non Monitores Servers",
                                      "styleSettings": {
                                        "margin": "400",
                                        "padding": "400",
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "8a177eab-edac-41cc-84f9-a5b7de931bea",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "PackTags",
                                            "label": "Select Pack to Enable",
                                            "type": 2,
                                            "isGlobal": true,
                                            "multiSelect": true,
                                            "quote": "",
                                            "delimiter": ",",
                                            "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.MonitoringPackType=='IaaS'\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs",
                                            "crossComponentResources": [
                                              "value::tenant"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resources/tenants",
                                            "value": [
                                              "Nginx"
                                            ]
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants"
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "vmstotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "param-IaaS-vmstotag"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Monitoring for {PackTags} Pack",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "addTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{vmstotag}],\n    \"Pack\": \"{PackTags}\",\n    \"PackType\": \"IaaS\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Monitoring Packs",
                                              "description": "# This will enable the pack for the following servers:\n{vmstotag}\n\nby adding the {PackTags} Pack(s) to the resource(s).",
                                              "actionName": "EnableMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "vmstotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "links - 1 - Copy"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "tabSelection",
                                  "comparison": "isEqualTo",
                                  "value": "discovery"
                                },
                                "name": "NonTaggedGroup"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "discovery"
                          },
                          "name": "Servers",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Azure Services",
                            "items": [
                              {
                                "type": 1,
                                "content": {
                                  "json": "## Services Monitoring Setup\n\nSelect service on the right to assign a pack. Once the backend is done with the assigning, the service will show on the left side grid.\n\nOn the left side grid, the monitoring can be updated to remove a specific pack from the service.",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - Monitoring - PaaS"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "parameters": [
                                          {
                                            "id": "69e06557-55cc-490c-86d2-892d7817b729",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "SelectPaasType",
                                            "label": "Select Service Type(s)",
                                            "type": 7,
                                            "multiSelect": true,
                                            "quote": "'",
                                            "delimiter": ",",
                                            "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices\",\"contentType\":\"text/plain\",\"urlParams\":[],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[]}}]}",
                                            "typeSettings": {
                                              "additionalResourceOptions": [
                                                "value::all"
                                              ],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 10,
                                            "value": [
                                              "value::all"
                                            ]
                                          }
                                        ],
                                        "style": "above",
                                        "queryType": 10
                                      },
                                      "name": "parameters - service type tagged"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getMonitoredPaaS\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"resourceFilter\",\"value\":\"{SelectPaasType}\"}],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[{\"path\":\"$.Resource\",\"columnid\":\"Resource\"},{\"path\":\"$.type\",\"columnid\":\"Type\"},{\"path\":\"$.tag\",\"columnid\":\"tag\"},{\"path\":\"$.AlertRules\",\"columnid\":\"AlertRules\"},{\"path\":\"$.resourceGroup\",\"columnid\":\"resourceGroup\"},{\"path\":\"$.kind\",\"columnid\":\"kind\"}]}}]}",
                                        "size": 0,
                                        "title": "Monitored Services",
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "parameterName": "taggedPaaS",
                                            "parameterType": 1,
                                            "quote": ""
                                          },
                                          {
                                            "fieldName": "tag",
                                            "parameterName": "PaaSLeftTagsOnly",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "exportToExcelOptions": "all",
                                        "queryType": 10,
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "AlertRules",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "0",
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "is Empty",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "warning",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "Total number of alerts created by the policies. It can take a while for the alert rules to be created. If still a warning after a day, please check logs."
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "name": "query - Monitored Services",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                            "cellValue": "",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remove Monitoring for {taggedPaaS:$.tag} Pack(s)",
                                            "preText": "",
                                            "postText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "removeTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedPaaS}],\n    \"Pack\": \"{PaaSLeftTagsOnly}\",\n    \"PackType\": \"PaaS\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Remove Monitoring",
                                              "description": "# Please confirm the change.\n\nRemove Monitoring for Pack(s).\n\nResources:\n\n{taggedPaaS:$.Resource}\n\nTags:\n\n{taggedPaaS:$.tag}",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "75",
                                      "conditionalVisibility": {
                                        "parameterName": "taggedPaaS",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "actionsPaaSLeft"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "name": "TaggedGroupPaaS"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "parameters": [
                                          {
                                            "id": "f6a88467-77d9-4e0e-912a-3d7b94aab938",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "SelectPaaStypeToTag",
                                            "label": "Select Service Type",
                                            "type": 7,
                                            "multiSelect": true,
                                            "quote": "'",
                                            "delimiter": ",",
                                            "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getSupportedServices\",\"contentType\":\"text/plain\",\"urlParams\":[],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[]}}]}",
                                            "typeSettings": {
                                              "additionalResourceOptions": [
                                                "value::all"
                                              ],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 10,
                                            "value": [
                                              "value::all"
                                            ]
                                          }
                                        ],
                                        "style": "above",
                                        "queryType": 10
                                      },
                                      "name": "parameters - service type not tagged"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getNonMonitoredPaaS\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"resourceFilter\",\"value\":\"{SelectPaaStypeToTag}\"}],\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.*\",\"columns\":[{\"path\":\"$.Resource\",\"columnid\":\"Resource\"},{\"path\":\"$.type\",\"columnid\":\"type\"},{\"path\":\"$.location\",\"columnid\":\"location\"},{\"path\":\"$.resourceGroup\",\"columnid\":\"resourceGroup\"},{\"path\":\"$.kind\",\"columnid\":\"kind\"}]}}]}",
                                        "size": 0,
                                        "title": "Non-Monitored Services",
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "parameterName": "paastotag",
                                            "parameterType": 1,
                                            "quote": ""
                                          },
                                          {
                                            "fieldName": "type",
                                            "parameterName": "passtotagtype",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "showExportToExcel": true,
                                        "exportToExcelOptions": "all",
                                        "queryType": 10,
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Total",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">=",
                                                    "thresholdValue": "1",
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "<",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "unknown",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "Total number of Alerts assigned to this resource."
                                              }
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "type",
                                              "sortOrder": 1
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "type",
                                            "sortOrder": 1
                                          }
                                        ]
                                      },
                                      "name": "query - nonMonitored Paas - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "parameters": [
                                          {
                                            "id": "27d8cc17-6eb9-4158-aff2-f5a2bbddff58",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "AvdLAWPaaS",
                                            "label": "Select AVD Log Analytics Workspace",
                                            "type": 5,
                                            "isGlobal": true,
                                            "query": "resources\n| where type =~ \"Microsoft.OperationalInsights/workspaces\"\n",
                                            "crossComponentResources": [
                                              "value::tenant"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [],
                                              "showDefault": false
                                            },
                                            "timeContext": {
                                              "durationMs": 86400000
                                            },
                                            "queryType": 1,
                                            "resourceType": "microsoft.resources/tenants"
                                          }
                                        ],
                                        "style": "pills",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants"
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibilities": [
                                        {
                                          "parameterName": "paastotag",
                                          "comparison": "isNotEqualTo"
                                        },
                                        {
                                          "parameterName": "PackTagsPaaS",
                                          "comparison": "isEqualTo",
                                          "value": "Avd"
                                        }
                                      ],
                                      "name": "param-IaaS-AvdLaw"
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Monitoring",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [
                                                {
                                                  "key": "action",
                                                  "value": "addTag"
                                                }
                                              ],
                                              "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{paastotag}],\n    \"Pack\": \"{PackTagsPaaS}\",\n    \"PackType\": \"PaaS\",\n    \"Type\": \"{passtotagtype}\",\n    \"DefaultAG\": \"{DefaultAG}\",\n    \"AVDLAW\" : \"{AvdLAWPaaS}\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Monitoring Packs",
                                              "description": "# This will enable the pack for the following services:\n***{paastotag:$.Resource}***\n\nby adding the specific Pack(s) to the resource(s).\n\n_AVD Alternate Log Analytics Workspace (if any):_\n\n{AvdLAWPaaS:name}\n",
                                              "actionName": "EnableMonitoring",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "conditionalVisibility": {
                                        "parameterName": "paastotag",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "platformenableparameters"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "customWidth": "50",
                                "name": "NonTaggedGroup"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "paas"
                          },
                          "name": "PaaSMgmt",
                          "styleSettings": {
                            "showBorder": true
                          }
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "355de2ec-11fb-4db8-9813-2e0bf7cdb3d0",
                                      "cellValue": "alertTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Packs' Alerts",
                                      "subTarget": "packs",
                                      "style": "link"
                                    },
                                    {
                                      "id": "d1f8bc9e-5a21-47f3-a2b3-e7fc213e04ee",
                                      "cellValue": "alertTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Other Alerts",
                                      "subTarget": "others",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 18"
                              },
                              {
                                "type": 1,
                                "content": {
                                  "json": "## Alerts Configuration\n\n### Select a pack on the left to visualize the alerts rules related to those packs. Select the Other Alerts tab to visualiza any other alert rule that is not related to the packs.",
                                  "style": "info"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "showHelp",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "text - Alert - Packs Alerts"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "e99b4870-f7a6-4b8e-95b7-6aaeece1f438",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "AlertPack",
                                      "type": 2,
                                      "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\", \"microsoft.insights/metricalerts\",\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs\n",
                                      "crossComponentResources": [
                                        "value::tenant"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 1,
                                      "resourceType": "microsoft.resources/tenants",
                                      "value": "microsoft.keyvault/vaults"
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "packs"
                                },
                                "name": "param-alerts-toAction"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1]\n| union (\nresources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isnotempty(tags.MonitorStarterPacks)\n| project id,MP=tags.MonitorStarterPacks, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| where MP=='{AlertPack}'",
                                  "size": 0,
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "fieldName": "",
                                      "parameterName": "alertsselected",
                                      "parameterType": 1,
                                      "quote": ""
                                    }
                                  ],
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "location",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "name",
                                        "formatter": 7
                                      }
                                    ],
                                    "filter": true
                                  }
                                },
                                "customWidth": "70",
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "packs"
                                },
                                "name": "AlertConfigQuery",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "# Enable or Disable alerts. \n\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\n\n# Update Action Group\n## Select a list of alerts on the left and a new Action Group to assign to the alert.\n\n# Delete Alert rules\n## Select a list of alert rules to be deleted.",
                                        "style": "info"
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHelp",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "name": "AlertMgmtHelpText"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/actiongroups\"\n| where properties.enabled == 'true'\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\"(\",properties.emailReceivers[0].emailAddress,\")\")",
                                        "size": 1,
                                        "exportFieldName": "",
                                        "exportParameterName": "selectedAG",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "id",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": "OpenBlade",
                                                "linkIsContextBlade": true,
                                                "showIcon": true
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "alertsselected",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "ActionGroupsQuery",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "paragraph",
                                        "links": [
                                          {
                                            "id": "f5cb3ede-91d1-4414-bfa1-a1689f45d0c8",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Enable Alerts",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Enable\", \n    \"alerts\":  [{alertsselected}]\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Enable Alerts",
                                              "description": "# This action will Enable the selected Alerts\n\n{alertsselected}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "d9469141-a104-4696-b9cd-f0fc7e3f963e",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Disable Alerts",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Disable\", \n    \"alerts\":  [{alertsselected}]\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Disable Alerts",
                                              "description": "# This action will disable the selected Alerts\n\n{alertsselected}",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "7942ba17-4942-4f4a-b2ea-e19ad806b49d",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Update Action Group",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Update\", \n    \"alerts\":  [{alertsselected}],\n    \"aGroup\": {selectedAG}\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Update Action Group",
                                              "description": "Updating alerts:\n\n\n{alertsselected}\n\nwith Action Group:\n\n{selectedAG}\n",
                                              "actionName": "updateAG",
                                              "runLabel": "Update"
                                            }
                                          },
                                          {
                                            "id": "f802b903-8a8a-458d-9c55-a428d96ba63d",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Delete Alert Rule",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Delete\", \n    \"alerts\":  [{alertsselected}]\n  }\n}\n",
                                              "httpMethod": "POST",
                                              "title": "Delete",
                                              "description": "# Deleting Alerts\n\nThe following alert rules will be deleted:\n\n{alertsselected}",
                                              "actionName": "Delete",
                                              "runLabel": "Delete"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 8"
                                    }
                                  ]
                                },
                                "customWidth": "30",
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "packs"
                                },
                                "name": "AlertsSubGroup1"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "Alert Management - Other Alerts",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where tolower(type) in (\"microsoft.insights/scheduledqueryrules\")\n| where isempty(tags.MonitorStarterPacks)\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0],\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1]\n| union (\nresources\n| where tolower(type) in (\"microsoft.insights/metricalerts\")\n| where isempty(tags.MonitorStarterPacks)\n| project id, Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])\n| union (resources\n| where tolower(type) in (\"microsoft.insights/activitylogalerts\")\n| where isempty(tags.MonitorStarterPacks)\n| project id,Enabled=properties.enabled, Description=properties.description, ['Action Group']=split(properties.actions.actionGroups[0].actionGroupId,\"/\")[8], location, Target=split(properties.scopes[0],\"/\")[-1])",
                                        "size": 0,
                                        "exportMultipleValues": true,
                                        "exportedParameters": [
                                          {
                                            "fieldName": "",
                                            "parameterName": "alertsselectednopack",
                                            "parameterType": 1,
                                            "quote": ""
                                          }
                                        ],
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "visualization": "table",
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "location",
                                              "formatter": 5
                                            },
                                            {
                                              "columnMatch": "name",
                                              "formatter": 7
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "$gen_link_Enabled_1",
                                              "sortOrder": 1
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "$gen_link_Enabled_1",
                                            "sortOrder": 1
                                          }
                                        ]
                                      },
                                      "customWidth": "70",
                                      "name": "queryOtherAlerts",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 12,
                                      "content": {
                                        "version": "NotebookGroup/1.0",
                                        "groupType": "editable",
                                        "items": [
                                          {
                                            "type": 1,
                                            "content": {
                                              "json": "# Enable or Disable alerts. \n\n## By selecting a list of alerts on the left, the buttons will disable or enable the alert rules in Azure Monitor.\n\n# Update Action Group\n## Select a list of alerts on the left and a new Action Group to assign to the alert.",
                                              "style": "info"
                                            },
                                            "conditionalVisibility": {
                                              "parameterName": "showHelp",
                                              "comparison": "isEqualTo",
                                              "value": "yes"
                                            },
                                            "name": "text - 3"
                                          },
                                          {
                                            "type": 3,
                                            "content": {
                                              "version": "KqlItem/1.0",
                                              "query": "resources\n| where type == \"microsoft.insights/actiongroups\"\n| where properties.enabled == 'true'\n| project id, emailReceivers=strcat(properties.emailReceivers[0].name,\"(\",properties.emailReceivers[0].emailAddress,\")\")",
                                              "size": 1,
                                              "exportFieldName": "",
                                              "exportParameterName": "selectedAG",
                                              "queryType": 1,
                                              "resourceType": "microsoft.resourcegraph/resources",
                                              "gridSettings": {
                                                "filter": true
                                              }
                                            },
                                            "name": "agQuery2",
                                            "styleSettings": {
                                              "showBorder": true
                                            }
                                          },
                                          {
                                            "type": 11,
                                            "content": {
                                              "version": "LinkItem/1.0",
                                              "style": "paragraph",
                                              "links": [
                                                {
                                                  "id": "f5cb3ede-91d1-4414-bfa1-a1689f45d0c8",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Enable Alerts",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Enable\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}",
                                                    "httpMethod": "POST",
                                                    "title": "Enable Alerts",
                                                    "description": "# This action will Enable the selected Alerts\n\n{alertsselected}",
                                                    "runLabel": "Confirm"
                                                  }
                                                },
                                                {
                                                  "id": "d9469141-a104-4696-b9cd-f0fc7e3f963e",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Disable Alerts",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Disable\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}\n",
                                                    "httpMethod": "POST",
                                                    "title": "Disable Alerts",
                                                    "description": "# This action will disable the selected Alerts\n\n{alertsselected}",
                                                    "runLabel": "Confirm"
                                                  }
                                                },
                                                {
                                                  "id": "7942ba17-4942-4f4a-b2ea-e19ad806b49d",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Update Action Group",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Update\", \n    \"alerts\":  [{alertsselectednopack}],\n    \"aGroup\": {selectedAG}\n  }\n}\n",
                                                    "httpMethod": "POST",
                                                    "title": "Update Action Group",
                                                    "description": "Updating alerts:\n\n\n{alertsselected}\n\nwith Action Group:\n\n{selectedAG}\n",
                                                    "actionName": "updateAG",
                                                    "runLabel": "Update"
                                                  }
                                                },
                                                {
                                                  "id": "eb46862a-b443-489e-a2bf-abc05c541b53",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Delete Alert Rule",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [],
                                                    "body": "{ \n  \"function\": \"alertmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"Delete\", \n    \"alerts\":  [{alertsselectednopack}]\n  }\n}\n",
                                                    "httpMethod": "POST",
                                                    "title": "Delete",
                                                    "description": "# Deleting the following Alert rules:\n\n\n{alertsselectednopack}]\n",
                                                    "actionName": "Delete",
                                                    "runLabel": "Delete"
                                                  }
                                                }
                                              ]
                                            },
                                            "name": "links - 8"
                                          }
                                        ]
                                      },
                                      "customWidth": "30",
                                      "conditionalVisibility": {
                                        "parameterName": "alertsselectednopack",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "AlertsSubGroup1"
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "alertTab",
                                  "comparison": "isEqualTo",
                                  "value": "others"
                                },
                                "name": "AlertMGMT - Others"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "alertmanagement"
                          },
                          "name": "AlertMGMT"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "13be6531-5163-4697-b6bd-cb7381b15d65",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "IaaS Packs Associtation",
                                      "subTarget": "associations",
                                      "preText": "Iaas",
                                      "style": "link"
                                    },
                                    {
                                      "id": "82684c12-244f-4488-9223-da3e48a6206f",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "DCR Details",
                                      "subTarget": "dcrdetails",
                                      "style": "link"
                                    },
                                    {
                                      "id": "0f666555-5e2a-4eb9-bd6c-cef1365a6ce9",
                                      "cellValue": "packsTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "VMInsights Status",
                                      "subTarget": "vmistatus",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 2"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "VMInsights Status",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=inner  (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(sourceResourceId), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| project serverName=sourceResourceId, name\n| summarize VMInsightsAssociations=count(name) by ['Server Name']=serverName \n",
                                        "size": 1,
                                        "title": "Servers and DCR associations",
                                        "exportFieldName": "Server Name",
                                        "exportParameterName": "vmiSelectedServer",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "VMInsightsAssociations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "If more than one VMInsights association is found, there may be data duplication to one or more Log Analytics workspaces."
                                              }
                                            }
                                          ],
                                          "filter": true,
                                          "sortBy": [
                                            {
                                              "itemKey": "$gen_thresholds_VMInsightsAssociations_1",
                                              "sortOrder": 2
                                            }
                                          ]
                                        },
                                        "sortBy": [
                                          {
                                            "itemKey": "$gen_thresholds_VMInsightsAssociations_1",
                                            "sortOrder": 2
                                          }
                                        ]
                                      },
                                      "customWidth": "50",
                                      "name": "query - 3",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=leftouter   (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(split(sourceResourceId,'/')[8]), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| where sourceResourceId=~'{vmiSelectedServer}'\n| summarize by DCRId=dataCollectionRuleId\n",
                                        "size": 1,
                                        "title": "Details for {vmiSelectedServer}",
                                        "exportFieldName": "DCR",
                                        "exportParameterName": "vmiSelectedDCR",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "VMInsightsAssociations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "If more than one VMInsights association is found, there may be data duplication to one or more Log Analytics workspaces."
                                              }
                                            }
                                          ],
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "customWidth": "50",
                                      "name": "query - VM Insights per DCR",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=inner   (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(split(sourceResourceId,'/')[8]), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| project serverName, dataCollectionRuleId\n| summarize Servers=count(serverName) by DCRId=dataCollectionRuleId\n",
                                        "size": 1,
                                        "title": "VMInsights DCRs and Servers",
                                        "exportFieldName": "DCRId",
                                        "exportParameterName": "VMIdataCollectionRuleId",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "dataCollectionRuleId",
                                              "formatter": 13,
                                              "formatOptions": {
                                                "linkTarget": "Resource",
                                                "linkIsContextBlade": true,
                                                "showIcon": true
                                              }
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "customWidth": "50",
                                      "name": "query - VMInsight rules details",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where ['type'] =~ 'microsoft.insights/datacollectionrules'\n| mv-expand datasources=properties.dataSources.performanceCounters\n| where isnotnull(datasources)\n| mv-expand  cs=datasources.counterSpecifiers //=~ '\\\\VmInsights\\\\DetailedMetrics'\n| where cs =~'\\\\VmInsights\\\\DetailedMetrics'\n| join kind=leftouter   (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| where isnotnull(properties.dataCollectionRuleId)\n| extend sourceResourceId=tostring(split(id,'/providers/Microsoft.Insights/')[0])\n| extend serverName=tostring(split(sourceResourceId,'/')[8]), dataCollectionRuleId=tostring(properties.dataCollectionRuleId)) on $left.id == $right.dataCollectionRuleId\n| where dataCollectionRuleId=='{VMIdataCollectionRuleId}'\n| project ['Server Name']=sourceResourceId\n\n",
                                        "size": 1,
                                        "title": "Associated Servers",
                                        "exportFieldName": "DCR",
                                        "exportParameterName": "vmiSelectedDCR",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "VMInsightsAssociations",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": ">",
                                                    "thresholdValue": "1",
                                                    "representation": "2",
                                                    "text": "{0}{1}"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "success",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              },
                                              "tooltipFormat": {
                                                "tooltip": "If more than one VMInsights association is found, there may be data duplication to one or more Log Analytics workspaces."
                                              }
                                            }
                                          ],
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "customWidth": "50",
                                      "name": "query - VM Insights per DCR - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "packsTab",
                                  "comparison": "isEqualTo",
                                  "value": "vmistatus"
                                },
                                "name": "group - VMInsights status"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "IaaS Packs Association",
                                  "items": [
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) //or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)\n| join (insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId//ruleId=properties.dataCollectionRuleId\n) on rulename\n| project-away rulename1,resourceId\n| summarize Associated=count() by Pack, rulename\n| order by Pack asc",
                                        "size": 0,
                                        "title": "Select Pack to see associated Machines",
                                        "exportFieldName": "rulename",
                                        "exportParameterName": "selectedRule",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Group",
                                              "formatter": 1
                                            }
                                          ],
                                          "filter": true
                                        },
                                        "sortBy": []
                                      },
                                      "customWidth": "50",
                                      "name": "query - 6 - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=split(properties.dataCollectionRuleId,\"/\")[8],resourceName=split(resourceId,\"/\")[8],resourceId//ruleId=properties.dataCollectionRuleId\n| where '{selectedRule}'==rulename",
                                        "size": 0,
                                        "title": "Associated Machines",
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Group",
                                              "formatter": 1
                                            }
                                          ],
                                          "filter": true
                                        }
                                      },
                                      "customWidth": "50",
                                      "name": "query - 6 - Copy - Copy",
                                      "styleSettings": {
                                        "showBorder": true
                                      }
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "packsTab",
                                  "comparison": "isEqualTo",
                                  "value": "associations"
                                },
                                "name": "rulemanagement",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks)\n| extend ds=properties.dataSources\n| project id,Type=kind, location,syslog=ds.syslog[0].streams[0], windowsEventLogs=ds.windowsEventLogs[0].streams[0], logsettings=ds.logFiles, performanceCounters=ds.performanceCounters[0].streams[0],provisioningState=properties.provisioningState, \ndataCollectionEndpointId=properties.dataCollectionEndpointId,transformKql=properties.dataFlows[0].transformKql,workspaceResourceId=properties.destinations.logAnalytics[0].workspaceResourceId\n",
                                  "size": 0,
                                  "title": "List of Currently Configured Data Collection Rules",
                                  "showRefreshButton": true,
                                  "exportedParameters": [
                                    {
                                      "parameterName": "selectedRule"
                                    },
                                    {
                                      "fieldName": "destinationName",
                                      "parameterName": "destinationName",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "",
                                      "parameterName": "resourceGroupName",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "workspaceResourceId",
                                      "parameterName": "workspace",
                                      "parameterType": 5
                                    },
                                    {
                                      "fieldName": "properties",
                                      "parameterName": "properties",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "name",
                                      "parameterName": "name",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "location",
                                      "parameterName": "location",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "Rule Type",
                                      "parameterName": "kind",
                                      "parameterType": 1
                                    },
                                    {
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "id",
                                      "parameterName": "id",
                                      "parameterType": 1
                                    }
                                  ],
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resourcegraph/resources",
                                  "crossComponentResources": [
                                    "{Subscriptions}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "id",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkColumn": "id",
                                          "linkTarget": "Resource",
                                          "linkIsContextBlade": true,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Type",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Windows",
                                              "representation": "Initial_Access",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Linux",
                                              "representation": "Console",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "Capture",
                                              "text": "Custom"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "location",
                                        "formatter": 17,
                                        "formatOptions": {
                                          "customColumnWidthSetting": "94px"
                                        }
                                      },
                                      {
                                        "columnMatch": "syslog",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "subTarget": "2",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "bladeOpenContext": {
                                            "bladeName": "DataCollectionRulesDataSourceManagementViewModel",
                                            "extensionName": "Microsoft_Azure_Monitoring",
                                            "bladeParameters": [
                                              {
                                                "name": "id",
                                                "source": "column",
                                                "value": "id"
                                              }
                                            ]
                                          },
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "windowsEventLogs",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "logsettings",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "performanceCounters",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "performanceCounters",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured!"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "provisioningState",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "succeeded",
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "customColumnWidthSetting": "17ch"
                                        },
                                        "numberFormat": {
                                          "unit": 0,
                                          "options": {
                                            "style": "decimal"
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "dataCollectionEndpointId",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "21.7143ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "transformKql",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "queries",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "stopped",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "|",
                                              "representation": "success",
                                              "text": "Ingestion KQL"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "stopped",
                                              "text": "Custom KQL"
                                            }
                                          ],
                                          "bladeOpenContext": {
                                            "bladeName": "CreateMicrosoftTableTransformBlade",
                                            "extensionName": "Microsoft_OperationsManagementSuite_Workspace",
                                            "bladeJsonParameters": "{\r\n\t\"workspaceResourceId\" : \"{workspace}\",\r\n\t\"providers\" : \"microsoft.operationalinsights\",\r\n\t\"table\" : { \r\n\t\t\"name\" : \"{selectedTableName}\",\r\n\t\t\"description\":\"Security events collected from windows machines by Azure Security Center or Azure Sentinel.\",\r\n\t\t\"hasData\":true,\r\n\t\t\"tableType\":\"Microsoft\",\r\n\t\t\"tableAPIState\":\"Any\",\r\n\t\t\"solutions\":[\"Security and Audit\",\"Microsoft Sentinel\"],\r\n\t\t\"categories\":[\"Security\"],\r\n\t\t\"retentionInDaysAsDefault\":false,\r\n\t\t\"totalRetentionInDaysAsDefault\":false,\r\n\t\t\"isEditTransformationEnabled\":true,\r\n\t\t\"isCreateTransformationEnabled\":true\r\n\t},\r\n\t\"isMicrosoftTable\" : true,\r\n\t\"isMigrationRequired\" : false\r\n}"
                                          },
                                          "customColumnWidthSetting": "22ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "workspaceResourceId",
                                        "formatter": 13,
                                        "formatOptions": {
                                          "linkTarget": "Resource",
                                          "showIcon": true,
                                          "customColumnWidthSetting": "16.8571ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "properties",
                                        "formatter": 7,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkLabel": "📋",
                                          "linkIsContextBlade": true,
                                          "customColumnWidthSetting": "5ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "kind",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "Capture",
                                              "text": "{0}{1} Custom"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "Linux",
                                              "representation": "Console",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "Windows",
                                              "representation": "Initial_Access",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "contains",
                                              "thresholdValue": "WorkspaceTransforms",
                                              "representation": "Persistence",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "customColumnWidthSetting": "17ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "name",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "securityEvents",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkColumn": "windowsEventLogs",
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "destinations",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "queries",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "dataSources",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "dataFlows",
                                        "formatter": 5,
                                        "formatOptions": {
                                          "aggregation": "Sum"
                                        }
                                      },
                                      {
                                        "columnMatch": "description",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "destinationName",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "lastModifiedBy",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "customEvents",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "cancelled",
                                              "text": "Not Configured"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "Configured"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      },
                                      {
                                        "columnMatch": "StepTab",
                                        "formatter": 5
                                      }
                                    ],
                                    "rowLimit": 1000,
                                    "filter": true
                                  },
                                  "sortBy": []
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "tabSelection",
                                    "comparison": "isEqualTo",
                                    "value": "rulemanagement"
                                  },
                                  {
                                    "parameterName": "packsTab",
                                    "comparison": "isEqualTo",
                                    "value": "dcrdetails"
                                  }
                                ],
                                "name": "Select Existing DCR - Copy",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "rulemanagement"
                          },
                          "name": "packMgmtGroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Agent Management",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "24d1e53a-ca25-4488-92af-4746e5411951",
                                      "cellValue": "agentTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Agents",
                                      "subTarget": "agents",
                                      "preText": "",
                                      "style": "link"
                                    },
                                    {
                                      "id": "230109a1-ed5a-4f33-b577-dab3c9b97c4d",
                                      "cellValue": "agentTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "HeartBeat",
                                      "subTarget": "heartbeat",
                                      "style": "link"
                                    },
                                    {
                                      "id": "7413ed40-fb13-48b3-acee-d27259ca7617",
                                      "cellValue": "agentTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "VM Applications",
                                      "subTarget": "vmapplications",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 3"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "Resources\n| where type == 'microsoft.compute/virtualmachines' and tolower(tags.Vendor) != 'databricks'\n| extend\n    JoinID = toupper(id),\n    OSType = tostring(properties.storageProfile.osDisk.osType)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('DependencyAgentWindows','DependencyAgentLinux')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        DepAgent = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines' and tolower(tags.Vendor) != 'databricks'\n| extend\n    JoinID = toupper(id),\n    OSType = tostring(properties.osType)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('DependencyAgentWindows','DependencyAgentLinux')\n    | extend\n        State= tolower(properties.provisioningState),\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        DepAgent = name,\n        UpgradeEnabled =  tostring(properties.enableAutomaticUpgrade)\n) on $left.JoinID == $right.VMId)\n| summarize by id, OSType, ['Dependency Agent']=iff(isempty(DepAgent),'N/A',DepAgent),ExtensionName=iff(isempty(ExtensionName),'N/A',ExtensionName), ['AMA State']=State, ['AMA Upg']=UpgradeEnabled,['Subscription']=subscriptionId,['Resource Group']=resourceGroup, location\n| extend Install=iff(ExtensionName=='N/A','Install',iff(['AMA State']<> 'succeeded','Unhealthy','')), Uninstall=iff((ExtensionName<>'N/A') and (['AMA State'] == 'succeeded'),'Uninstall',iff(['AMA State'] <> 'succeeded','Warning',''))\n",
                                  "size": 0,
                                  "title": "Agent Install Status",
                                  "exportMultipleValues": true,
                                  "exportedParameters": [
                                    {
                                      "parameterType": 1
                                    },
                                    {
                                      "parameterName": "vmstoinstall",
                                      "parameterType": 5,
                                      "quote": ""
                                    }
                                  ],
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "table",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Dependency Agent",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "N/A",
                                              "representation": "1",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Not Installed"
                                              }
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "DependencyAgentWindows",
                                              "representation": "success",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Installed"
                                              }
                                            },
                                            {
                                              "thresholdValue": "DependencyAgentLinux",
                                              "representation": "success",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Installed"
                                              }
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "unknown",
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "ExtensionName",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorLinuxAgent",
                                              "representation": "success",
                                              "text": "Linux Agent"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorWindowsAgent",
                                              "representation": "success",
                                              "text": "Windows Agent"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "stopped",
                                              "text": "No Agent"
                                            }
                                          ],
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}",
                                            "httpMethod": "POST",
                                            "title": "Install Agent",
                                            "description": "# Installing agent(s) for the following machine(s):\n\n{vmstoinstall}\n",
                                            "actionName": "InstallAgent",
                                            "runLabel": "InstallAgent"
                                          },
                                          "customColumnWidthSetting": "20ch"
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "Click To Install Agent"
                                        }
                                      },
                                      {
                                        "columnMatch": "State",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "succeeded",
                                              "representation": "success",
                                              "text": ""
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "failed",
                                              "representation": "3",
                                              "text": "failed"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "unknown",
                                              "text": ""
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "AMA Upg",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "1",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Auto Upgrade not enabled"
                                              }
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "",
                                              "tooltipFormat": {
                                                "tooltip": "Enabled"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "columnMatch": "Subscription",
                                        "formatter": 15,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Resource Group",
                                        "formatter": 14,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "Install",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "ArmAction",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "success",
                                              "text": "Ok"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Unhealthy",
                                              "representation": "2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "Add",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}\n",
                                            "httpMethod": "POST",
                                            "title": "Install Agent",
                                            "description": "# Installing agent(s) for the following machine(s):\n\n\n{vmstoinstall}\n",
                                            "actionName": "Install Agent",
                                            "runLabel": "Install Agent"
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "Uninstall",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "ArmAction",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "is Empty",
                                              "representation": "3",
                                              "text": "Not Installed"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "Warning",
                                              "representation": "1",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "warning",
                                              "text": "{0}{1}"
                                            }
                                          ],
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"agentMgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveAgent\",\n    \"Resources\": [{vmstoinstall}]\n  }\n}\n",
                                            "httpMethod": "POST",
                                            "title": "Remove Agent",
                                            "description": "# Removing agent(s) for the following machine(s):\n\n## <span style=\"color:red\">Warning! </span> Removing the agent from the machine(s) may result in data not being collected.\n\n\n{vmstoinstall}\n",
                                            "actionName": "RemoveAgent",
                                            "runLabel": "RemoveAgent"
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "subscriptionId",
                                        "formatter": 15,
                                        "formatOptions": {
                                          "linkTarget": null,
                                          "showIcon": true
                                        }
                                      },
                                      {
                                        "columnMatch": "DepAgent",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "N/A",
                                              "representation": "1",
                                              "text": "{0}{1}",
                                              "tooltipFormat": {
                                                "tooltip": "Not Installed"
                                              }
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "success",
                                              "text": "{0}{1}",
                                              "tooltipFormat": {
                                                "tooltip": "Installed"
                                              }
                                            }
                                          ]
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "Dependency Agent Status"
                                        }
                                      },
                                      {
                                        "columnMatch": "UpgradeEnabled",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "true",
                                              "representation": "success",
                                              "text": ""
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "false",
                                              "representation": "2",
                                              "text": ""
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "unknown",
                                              "text": ""
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "filter": true
                                  },
                                  "sortBy": []
                                },
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "agents"
                                },
                                "showPin": false,
                                "name": "query - agent install status",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "Resources\n| where type == 'microsoft.compute/virtualmachines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.storageProfile.osDisk.osType)\n| join kind=leftouter(\n    Resources\n    | where ( type == 'microsoft.compute/virtualmachines/extensions') and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId\n| union (Resources\n| where type == 'microsoft.hybridcompute/machines'\n| extend\n    JoinID = toupper(id),\n    OSName = tostring(properties.osProfile.computerName),\n    OSType = tostring(properties.osType)\n| join kind=leftouter(\n    Resources\n    | where type == 'microsoft.hybridcompute/machines/extensions' and name in ('AzureMonitorLinuxAgent', 'AzureMonitorWindowsAgent')\n    | extend\n        VMId = toupper(substring(id, 0, indexof(id, '/extensions'))),\n        ExtensionName = name\n) on $left.JoinID == $right.VMId)\n| extend ExtensionName = iff(isnotempty(ExtensionName),ExtensionName, \"NotInstalled\")\n| summarize count() by ExtensionName\n| sort by ExtensionName asc",
                                  "size": 1,
                                  "title": "Agent Install Status",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "visualization": "tiles",
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "ExtensionName",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "linkTarget": "CellDetails",
                                          "linkIsContextBlade": true,
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorLinuxAgent",
                                              "representation": "success",
                                              "text": "Linux Agent"
                                            },
                                            {
                                              "operator": "==",
                                              "thresholdValue": "AzureMonitorWindowsAgent",
                                              "representation": "success",
                                              "text": "Windows Agent"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": "stopped",
                                              "text": "No Agent"
                                            }
                                          ],
                                          "customColumnWidthSetting": "20ch"
                                        }
                                      }
                                    ],
                                    "filter": true
                                  },
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "ExtensionName",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "count_",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "maximumSignificantDigits": 3,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    "showBorder": false
                                  },
                                  "chartSettings": {
                                    "seriesLabelSettings": [
                                      {
                                        "seriesName": "",
                                        "label": "No Agent",
                                        "color": "red"
                                      }
                                    ]
                                  }
                                },
                                "customWidth": "25",
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "agents"
                                },
                                "name": "query - agent install status - graph",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "Heartbeat | where Category == \"Azure Monitor Agent\"\n| summarize arg_max(TimeGenerated, *) by Computer\n| project  Computer,LastHeartbeat=TimeGenerated, ['SecondsAgo']=datetime_diff('second',now(),TimeGenerated)\n| sort by SecondsAgo asc",
                                  "size": 4,
                                  "title": "Last Heartbeat (24 hours)",
                                  "timeContext": {
                                    "durationMs": 86400000
                                  },
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "SecondsAgo",
                                        "formatter": 18,
                                        "formatOptions": {
                                          "thresholdsOptions": "icons",
                                          "thresholdsGrid": [
                                            {
                                              "operator": "<=",
                                              "thresholdValue": "600",
                                              "representation": "success",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": ">",
                                              "thresholdValue": "600",
                                              "representation": "2",
                                              "text": "{0}{1}"
                                            },
                                            {
                                              "operator": "Default",
                                              "thresholdValue": null,
                                              "representation": null,
                                              "text": "{0}{1}"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "filter": true
                                  }
                                },
                                "customWidth": "50",
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "heartbeat"
                                },
                                "name": "query - active alerts",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "resources\n| where type =~ \"microsoft.compute/virtualmachines\"\n| mvexpand with_itemindex=i apps=properties.applicationProfile.galleryApplications\n| where apps != ''\n| project Computer=name, ['Application Name']=tostring(split(apps.packageReferenceId,\"/\")[10]), Gallery=tostring(split(apps.packageReferenceId,\"/\")[8])\n| summarize by Gallery,['Application Name'], Computer\n| sort by Gallery asc",
                                  "size": 0,
                                  "title": "Client Status (VM Applications)",
                                  "showExportToExcel": true,
                                  "exportToExcelOptions": "all",
                                  "queryType": 1,
                                  "resourceType": "microsoft.resources/tenants",
                                  "crossComponentResources": [
                                    "value::tenant"
                                  ],
                                  "gridSettings": {
                                    "filter": true,
                                    "sortBy": [
                                      {
                                        "itemKey": "Computer",
                                        "sortOrder": 1
                                      }
                                    ]
                                  },
                                  "sortBy": [
                                    {
                                      "itemKey": "Computer",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "agentTab",
                                  "comparison": "isEqualTo",
                                  "value": "vmapplications"
                                },
                                "name": "query - vmapplications",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "agentmgmt"
                          },
                          "name": "AgentMGMTGroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Auto Discovery Prototype - Use with caution.",
                            "loadType": "always",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "6346adc4-5e50-4b56-ab9d-0d8b17b8a86f",
                                      "cellValue": "discTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Discovery Results",
                                      "subTarget": "discResults",
                                      "preText": "",
                                      "style": "link"
                                    },
                                    {
                                      "id": "a914f6ed-4d20-4895-bed4-48a32f3a5c21",
                                      "cellValue": "discTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Discovery Config",
                                      "subTarget": "discConfig",
                                      "style": "link"
                                    },
                                    {
                                      "id": "3a11d108-b694-4989-9302-48010831377a",
                                      "cellValue": "discTab",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Discovery Data",
                                      "subTarget": "discData",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "name": "links - 10"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "title": "VM Discovery",
                                  "items": [
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "When Discovery is first enabled, the Azure Monitoring Agent will also be installed to the selected servers along with a VM Application agent to collect discovery data. Data will be sent to the Log Analytics agent.",
                                        "style": "info"
                                      },
                                      "name": "text - 3"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "insightsresources\n| where type == \"microsoft.insights/datacollectionruleassociations\"\n| extend resourceId=split(id,'/providers/Microsoft.Insights/')[0]\n| where isnotnull(properties.dataCollectionRuleId)\n| project rulename=tostring(split(properties.dataCollectionRuleId,\"/\")[8]),resourceName=tostring(split(resourceId,\"/\")[8]),resourceId=tostring(resourceId)//ruleId=properties.dataCollectionRuleId\n| join kind= inner  (\nresources\n| where type == \"microsoft.insights/datacollectionrules\"\n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) and (MPs =~ 'WinDisc' or MPs =~ 'LxDisc')//or properties.dataSources.performanceCounters[0].name == 'VMInsightsPerfCounters'\n| summarize by Pack=MPs,rulename=tostring(name)) on rulename\n| summarize by resourceId, Pack\n| summarize Packs=make_list(Pack) by resourceId",
                                        "size": 0,
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Packs",
                                              "formatter": 1
                                            }
                                          ]
                                        }
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "test",
                                        "comparison": "isEqualTo",
                                        "value": "1"
                                      },
                                      "showPin": false,
                                      "name": "query - associatedVMs"
                                    },
                                    {
                                      "type": 3,
                                      "content": {
                                        "version": "KqlItem/1.0",
                                        "query": "resources | where type =~ 'microsoft.compute/virtualmachines' \n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isnotempty(MPs) and (MPs contains 'WinDisc' or MPs contains 'LxDisc')\n| project Resource=id,['Resource Group']=resourceGroup,Packs=tags.MonitorStarterPacks, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location\n",
                                        "size": 0,
                                        "queryType": 1,
                                        "resourceType": "microsoft.resources/tenants",
                                        "crossComponentResources": [
                                          "value::tenant"
                                        ],
                                        "gridSettings": {
                                          "formatters": [
                                            {
                                              "columnMatch": "Packs",
                                              "formatter": 18,
                                              "formatOptions": {
                                                "thresholdsOptions": "icons",
                                                "thresholdsGrid": [
                                                  {
                                                    "operator": "contains",
                                                    "thresholdValue": "WinDisc",
                                                    "text": "WinDisc"
                                                  },
                                                  {
                                                    "thresholdValue": "LxDisc",
                                                    "text": "LxDisk"
                                                  },
                                                  {
                                                    "operator": "Default",
                                                    "thresholdValue": null,
                                                    "representation": "unknown",
                                                    "text": "{0}{1}"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "columnMatch": "subscriptionId",
                                              "formatter": 15,
                                              "formatOptions": {
                                                "linkTarget": null,
                                                "showIcon": true
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "showHidden",
                                        "comparison": "isEqualTo",
                                        "value": "yes"
                                      },
                                      "showPin": false,
                                      "name": "query - taggedVMs"
                                    },
                                    {
                                      "type": 12,
                                      "content": {
                                        "version": "NotebookGroup/1.0",
                                        "groupType": "editable",
                                        "items": [
                                          {
                                            "type": 3,
                                            "content": {
                                              "version": "KqlItem/1.0",
                                              "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\",\"mergeType\":\"outer\",\"leftTable\":\"query - taggedVMs\",\"rightTable\":\"query - associatedVMs\",\"leftColumn\":\"Resource\",\"rightColumn\":\"resourceId\"}],\"projectRename\":[{\"originalName\":\"[query - taggedVMs].Resource\",\"mergedName\":\"Resource\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Resource Group\",\"mergedName\":\"Resource Group\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Packs\",\"mergedName\":\"Packs\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].OS\",\"mergedName\":\"OS\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Location\",\"mergedName\":\"Location\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].Subscription\",\"mergedName\":\"Subscription\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - associatedVMs].Packs\",\"mergedName\":\"Associated\",\"fromId\":\"964f21b6-ee11-43c6-a6e2-4119d566812c\"},{\"originalName\":\"[query - taggedVMs].subscriptionId\",\"mergedName\":\"subscriptionId\",\"fromId\":\"unknown\"},{\"originalName\":\"[query - associatedVMs].resourceId\"}]}",
                                              "size": 0,
                                              "title": "Discoverable Machines",
                                              "exportMultipleValues": true,
                                              "exportedParameters": [
                                                {
                                                  "fieldName": "",
                                                  "parameterName": "taggedVMsDiscovery",
                                                  "parameterType": 1,
                                                  "quote": ""
                                                }
                                              ],
                                              "showExportToExcel": true,
                                              "queryType": 7,
                                              "visualization": "table",
                                              "gridSettings": {
                                                "formatters": [
                                                  {
                                                    "columnMatch": "Packs",
                                                    "formatter": 18,
                                                    "formatOptions": {
                                                      "thresholdsOptions": "icons",
                                                      "thresholdsGrid": [
                                                        {
                                                          "operator": "contains",
                                                          "thresholdValue": "WinDisc",
                                                          "text": "WinDisc"
                                                        },
                                                        {
                                                          "operator": "contains",
                                                          "thresholdValue": "LxDisc",
                                                          "text": "LxDisc"
                                                        },
                                                        {
                                                          "operator": "Default",
                                                          "thresholdValue": null,
                                                          "representation": "unknown",
                                                          "text": "{0}{1}"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "OS",
                                                    "formatter": 1
                                                  },
                                                  {
                                                    "columnMatch": "Associated",
                                                    "formatter": 1
                                                  },
                                                  {
                                                    "columnMatch": "subscriptionId",
                                                    "formatter": 15,
                                                    "formatOptions": {
                                                      "linkTarget": null,
                                                      "showIcon": true
                                                    }
                                                  },
                                                  {
                                                    "columnMatch": "Associated Packs",
                                                    "formatter": 1
                                                  }
                                                ],
                                                "filter": true
                                              }
                                            },
                                            "showPin": false,
                                            "name": "query-mergeVMsDiscovery",
                                            "styleSettings": {
                                              "showBorder": true
                                            }
                                          },
                                          {
                                            "type": 9,
                                            "content": {
                                              "version": "KqlParameterItem/1.0",
                                              "crossComponentResources": [
                                                "{Workspace}"
                                              ],
                                              "parameters": [
                                                {
                                                  "id": "54f2c7fb-7251-43b6-aa4d-fd94647cac4a",
                                                  "version": "KqlParameterItem/1.0",
                                                  "name": "PackTagsLeftDiscovery",
                                                  "label": "Remove",
                                                  "type": 2,
                                                  "isGlobal": true,
                                                  "multiSelect": true,
                                                  "quote": "",
                                                  "delimiter": ",",
                                                  "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.MonitoringPackType=~'discovery'\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs",
                                                  "crossComponentResources": [
                                                    "{Workspace}"
                                                  ],
                                                  "typeSettings": {
                                                    "additionalResourceOptions": [],
                                                    "showDefault": false
                                                  },
                                                  "timeContext": {
                                                    "durationMs": 86400000
                                                  },
                                                  "queryType": 1,
                                                  "resourceType": "microsoft.resourcegraph/resources",
                                                  "value": []
                                                }
                                              ],
                                              "style": "pills",
                                              "queryType": 1,
                                              "resourceType": "microsoft.resourcegraph/resources"
                                            },
                                            "customWidth": "25",
                                            "conditionalVisibility": {
                                              "parameterName": "taggedVMsDiscovery",
                                              "comparison": "isNotEqualTo"
                                            },
                                            "name": "param-IaaS-tagged"
                                          },
                                          {
                                            "type": 11,
                                            "content": {
                                              "version": "LinkItem/1.0",
                                              "style": "paragraph",
                                              "links": [
                                                {
                                                  "id": "36b65f94-1c3d-4e7a-b771-677a2081d288",
                                                  "cellValue": "",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Remove Discovery {PackTagsLeftDiscovery} Pack(s)",
                                                  "preText": "",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [
                                                      {
                                                        "key": "action",
                                                        "value": "removeTag"
                                                      }
                                                    ],
                                                    "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"RemoveTag\",\n    \"Resources\": [{taggedVMsDiscovery}],\n    \"Pack\": \"{PackTagsLeftDiscovery}\",\n    \"PackType\":\"Discovery\"\n  }\n}",
                                                    "httpMethod": "POST",
                                                    "title": "Remove Monitoring",
                                                    "description": "# Please confirm the change.\n\nRemove Monitoring for {PackTagsLeftDiscovery} Pack(s) \n\nServers:\n\n{taggedVMsDiscovery}",
                                                    "runLabel": "Confirm"
                                                  }
                                                }
                                              ]
                                            },
                                            "customWidth": "75",
                                            "conditionalVisibility": {
                                              "parameterName": "taggedVMsDiscovery",
                                              "comparison": "isNotEqualTo"
                                            },
                                            "name": "links - 1"
                                          }
                                        ],
                                        "exportParameters": true
                                      },
                                      "customWidth": "50",
                                      "name": "TaggedGroupDiscovery"
                                    },
                                    {
                                      "type": 12,
                                      "content": {
                                        "version": "NotebookGroup/1.0",
                                        "groupType": "editable",
                                        "items": [
                                          {
                                            "type": 3,
                                            "content": {
                                              "version": "KqlItem/1.0",
                                              "query": "resources | where type =~ 'microsoft.compute/virtualmachines' \n| extend MPs=tostring(['tags'].MonitorStarterPacks)\n| where isempty(MPs) or (MPs notcontains 'WinDisc' and MPs notcontains 'LxDisc')//and subscriptionId in split('{Subscriptions:subscriptionId}',',')\n| project Resource=id,['Resource Group']=resourceGroup, OS=properties.storageProfile.osDisk.osType, subscriptionId, Location=location\n| join kind= leftouter   (resourcecontainers\n| where type =~ 'microsoft.resources/subscriptions'\n| project Subscription=name,subscriptionId) on subscriptionId\n| project-away subscriptionId, subscriptionId1",
                                              "size": 0,
                                              "title": "Non-discoverable Machines",
                                              "exportMultipleValues": true,
                                              "exportedParameters": [
                                                {
                                                  "parameterName": "vmstotagDiscovery",
                                                  "parameterType": 1,
                                                  "quote": ""
                                                }
                                              ],
                                              "queryType": 1,
                                              "resourceType": "microsoft.resourcegraph/resources",
                                              "crossComponentResources": [
                                                "{Subscriptions}"
                                              ],
                                              "visualization": "table",
                                              "gridSettings": {
                                                "filter": true,
                                                "sortBy": [
                                                  {
                                                    "itemKey": "$gen_link_Resource_0",
                                                    "sortOrder": 1
                                                  }
                                                ]
                                              },
                                              "sortBy": [
                                                {
                                                  "itemKey": "$gen_link_Resource_0",
                                                  "sortOrder": 1
                                                }
                                              ]
                                            },
                                            "name": "Non Discoverable Servers",
                                            "styleSettings": {
                                              "margin": "400",
                                              "padding": "400",
                                              "showBorder": true
                                            }
                                          },
                                          {
                                            "type": 9,
                                            "content": {
                                              "version": "KqlParameterItem/1.0",
                                              "crossComponentResources": [
                                                "value::tenant"
                                              ],
                                              "parameters": [
                                                {
                                                  "id": "8a177eab-edac-41cc-84f9-a5b7de931bea",
                                                  "version": "KqlParameterItem/1.0",
                                                  "name": "PackTagsDiscovery",
                                                  "label": "Select to Enable",
                                                  "type": 2,
                                                  "isGlobal": true,
                                                  "multiSelect": true,
                                                  "quote": "",
                                                  "delimiter": ",",
                                                  "query": "resources\n| where type == \"microsoft.insights/datacollectionrules\"\n| where isnotempty(tags.MonitorStarterPacks) and tags.MonitoringPackType=~'Discovery'\n| project MPs=tostring(tags.MonitorStarterPacks)\n| summarize by MPs",
                                                  "crossComponentResources": [
                                                    "value::tenant"
                                                  ],
                                                  "typeSettings": {
                                                    "additionalResourceOptions": [],
                                                    "showDefault": false
                                                  },
                                                  "timeContext": {
                                                    "durationMs": 86400000
                                                  },
                                                  "queryType": 1,
                                                  "resourceType": "microsoft.resources/tenants",
                                                  "value": []
                                                }
                                              ],
                                              "style": "pills",
                                              "queryType": 1,
                                              "resourceType": "microsoft.resources/tenants"
                                            },
                                            "customWidth": "50",
                                            "conditionalVisibility": {
                                              "parameterName": "vmstotagDiscovery",
                                              "comparison": "isNotEqualTo"
                                            },
                                            "name": "param-IaaS-vmstotag"
                                          },
                                          {
                                            "type": 11,
                                            "content": {
                                              "version": "LinkItem/1.0",
                                              "style": "paragraph",
                                              "links": [
                                                {
                                                  "id": "91fb0fed-0e4f-41ce-9024-98a3cc4432a7",
                                                  "linkTarget": "ArmAction",
                                                  "linkLabel": "Enable Monitoring for {PackTagsDiscovery} Pack",
                                                  "preText": "",
                                                  "style": "primary",
                                                  "linkIsContextBlade": true,
                                                  "armActionContext": {
                                                    "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                                    "headers": [],
                                                    "params": [
                                                      {
                                                        "key": "action",
                                                        "value": "addTag"
                                                      }
                                                    ],
                                                    "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{vmstotagDiscovery}],\n    \"Pack\": \"{PackTagsDiscovery}\",\n    \"PackType\": \"Discovery\"\n  }\n}",
                                                    "httpMethod": "POST",
                                                    "title": "Enable Monitoring Packs",
                                                    "description": "# This will enable the pack for the following servers:\n{vmstotagDiscovery}\n\nby adding the {PackTagsDiscovery} Pack(s) to the resource(s).",
                                                    "actionName": "EnableMonitoring",
                                                    "runLabel": "Confirm"
                                                  }
                                                }
                                              ]
                                            },
                                            "customWidth": "50",
                                            "conditionalVisibility": {
                                              "parameterName": "vmstotagDiscovery",
                                              "comparison": "isNotEqualTo"
                                            },
                                            "name": "links - 1 - Copy"
                                          }
                                        ],
                                        "exportParameters": true
                                      },
                                      "customWidth": "50",
                                      "name": "NonTaggedGroupDiscovery"
                                    }
                                  ]
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discConfig"
                                },
                                "name": "Servers - Discovery",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 11,
                                      "content": {
                                        "version": "LinkItem/1.0",
                                        "style": "list",
                                        "links": [
                                          {
                                            "id": "b3bb5a4d-0f95-4e9a-8634-9cb027f860aa",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Remediate (all policies)",
                                            "preText": "",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Remediate\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Rmediate policies",
                                              "description": "# Please confirm remediation\n\nThis button will trigger a global policy remeadiation. \n\nThe backend script will go through the policies and initiatives, finding the ones that are not compliant, and will trigger remediation. \n\nIt is not restricted to the ones in this screen.",
                                              "actionName": "Remediate",
                                              "runLabel": "Confirm"
                                            }
                                          },
                                          {
                                            "id": "8dfc5afa-108a-4713-8a0c-651c3a32c5f1",
                                            "linkTarget": "ArmAction",
                                            "linkLabel": "Check Compliance",
                                            "style": "primary",
                                            "linkIsContextBlade": true,
                                            "armActionContext": {
                                              "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                              "headers": [],
                                              "params": [],
                                              "body": "{ \n  \"function\": \"policymgmt\",\n  \"functionBody\" : {\n    \"SolutionTag\":\"MonitorStarterPacks\",\n    \"Action\": \"Scan\"\n  }\n}",
                                              "httpMethod": "POST",
                                              "title": "Check Policy Compliance",
                                              "description": "# Please confirm the scan.",
                                              "runLabel": "Confirm"
                                            }
                                          }
                                        ]
                                      },
                                      "name": "links - 3"
                                    },
                                    {
                                      "type": 1,
                                      "content": {
                                        "json": "## Policy Compliance Check\nThis task will trigger a tenant wide check for policy compliance.\n\n## Policy Remediation\n\nThis Task will trigger remediation for the policies in the list that are considered not compliant at this time.",
                                        "style": "info"
                                      },
                                      "conditionalVisibilities": [
                                        {
                                          "parameterName": "tabSelection",
                                          "comparison": "isEqualTo",
                                          "value": "policystatus"
                                        },
                                        {
                                          "parameterName": "showHelp",
                                          "comparison": "isEqualTo",
                                          "value": "yes"
                                        }
                                      ],
                                      "name": "text - 7"
                                    }
                                  ]
                                },
                                "customWidth": "25",
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discPolicies"
                                },
                                "name": "ComplianceButtons - Copy"
                              },
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "parameters": [
                                    {
                                      "id": "079a4550-40c9-44cd-a223-40097e453659",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "Computer",
                                      "type": 2,
                                      "query": "\nDiscovery_CL\n| parse RawData with timestamp \",\" rest1\n| extend Computer=split(_ResourceId,'/')[8],timestamp=todatetime(timestamp)\n| summarize by tostring(Computer)\n\n",
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 86400000
                                      },
                                      "queryType": 0,
                                      "resourceType": "microsoft.operationalinsights/workspaces",
                                      "value": null,
                                      "label": "Select Server"
                                    },
                                    {
                                      "id": "d1f20750-4a22-4433-9c5d-a4d9a4f62f9d",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "discoveryPeriod",
                                      "label": "Period",
                                      "type": 4,
                                      "typeSettings": {
                                        "selectableValues": [
                                          {
                                            "durationMs": 300000
                                          },
                                          {
                                            "durationMs": 900000
                                          },
                                          {
                                            "durationMs": 1800000
                                          },
                                          {
                                            "durationMs": 3600000
                                          },
                                          {
                                            "durationMs": 14400000
                                          },
                                          {
                                            "durationMs": 43200000
                                          },
                                          {
                                            "durationMs": 86400000
                                          },
                                          {
                                            "durationMs": 172800000
                                          },
                                          {
                                            "durationMs": 259200000
                                          },
                                          {
                                            "durationMs": 604800000
                                          },
                                          {
                                            "durationMs": 1209600000
                                          },
                                          {
                                            "durationMs": 2419200000
                                          }
                                        ]
                                      },
                                      "value": {
                                        "durationMs": 14400000
                                      }
                                    }
                                  ],
                                  "style": "above",
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces"
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discData"
                                },
                                "name": "param-discovery-period"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let maxts=Discovery_CL | summarize timestamp=max(tostring(split(RawData,\",\")[0]));\nDiscovery_CL\n| extend Computer=tostring(split(_ResourceId,'/')[8])//,timestamp=todatetime(timestamp)\n| extend fields=split(RawData,\",\")\n| extend timestamp=todatetime(fields[0])\n| extend type=tostring(fields[1])\n| extend platform=tostring(fields[2])\n| extend OSVersion=tostring(fields[3])\n| extend name=tostring(fields[4])\n| extend othertype=tostring(fields[5])\n| extend vendor=tostring(fields[6])\n| where timestamp == toscalar(maxts)\n| project timestamp,Computer,type,name,platform,OSVersion,othertype,vendor",
                                  "size": 0,
                                  "title": "All Discovery Data",
                                  "timeContextFromParameter": "discoveryPeriod",
                                  "showExportToExcel": true,
                                  "queryType": 0,
                                  "resourceType": "microsoft.operationalinsights/workspaces",
                                  "crossComponentResources": [
                                    "{Workspace}"
                                  ],
                                  "gridSettings": {
                                    "rowLimit": 1000,
                                    "filter": true
                                  }
                                },
                                "conditionalVisibility": {
                                  "parameterName": "discTab",
                                  "comparison": "isEqualTo",
                                  "value": "discData"
                                },
                                "name": "query - discovery - all"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getdiscoveryresults\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"WSId\",\"value\":\"{Workspace}\"}],\"transformers\":null}",
                                  "size": 0,
                                  "exportedParameters": [
                                    {
                                      "fieldName": "",
                                      "parameterName": "vmsDiscoveryTag",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "tag",
                                      "parameterName": "vmsDiscoveryTagValue",
                                      "parameterType": 1
                                    }
                                  ],
                                  "queryType": 10,
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "tag",
                                        "formatter": 7,
                                        "formatOptions": {
                                          "linkTarget": "ArmAction",
                                          "linkIsContextBlade": true,
                                          "armActionContext": {
                                            "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                            "headers": [],
                                            "params": [],
                                            "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{vmsDiscoveryTag}],\n    \"Pack\": \"{vmsDiscoveryTagValue}\"\n  }\n}",
                                            "httpMethod": "POST",
                                            "title": "TagDiscovery",
                                            "description": "# Adding Tag(s) To VMs\n\n\"Resources\": [{vmsDiscoveryTag:$.Computer}]\n\n\n\"Pack\": \"{vmsDiscoveryTagValue}\"",
                                            "actionName": "TagDiscovery",
                                            "runLabel": "TagDiscovery"
                                          }
                                        },
                                        "tooltipFormat": {
                                          "tooltip": "Click to Enable monitoring"
                                        }
                                      }
                                    ]
                                  }
                                },
                                "name": "query - 0"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "autodiscovery"
                          },
                          "name": "AutoDiscoveryGroup"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "items": [
                              {
                                "type": 9,
                                "content": {
                                  "version": "KqlParameterItem/1.0",
                                  "crossComponentResources": [
                                    "{appInsightsName}"
                                  ],
                                  "parameters": [
                                    {
                                      "id": "dffde712-0ef1-4c46-922a-47a42643130c",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "appInsightsTimeframe",
                                      "label": "Time Range",
                                      "type": 4,
                                      "typeSettings": {
                                        "selectableValues": [
                                          {
                                            "durationMs": 300000
                                          },
                                          {
                                            "durationMs": 900000
                                          },
                                          {
                                            "durationMs": 1800000
                                          },
                                          {
                                            "durationMs": 3600000
                                          },
                                          {
                                            "durationMs": 14400000
                                          },
                                          {
                                            "durationMs": 43200000
                                          },
                                          {
                                            "durationMs": 86400000
                                          },
                                          {
                                            "durationMs": 172800000
                                          },
                                          {
                                            "durationMs": 259200000
                                          },
                                          {
                                            "durationMs": 604800000
                                          },
                                          {
                                            "durationMs": 1209600000
                                          },
                                          {
                                            "durationMs": 2419200000
                                          },
                                          {
                                            "durationMs": 2592000000
                                          }
                                        ]
                                      },
                                      "timeContext": {
                                        "durationMs": 2592000000
                                      },
                                      "value": {
                                        "durationMs": 2419200000
                                      }
                                    },
                                    {
                                      "id": "70107de5-d9cd-46ea-9027-43d83053dac3",
                                      "version": "KqlParameterItem/1.0",
                                      "name": "FunctionApp",
                                      "label": "Function App",
                                      "type": 2,
                                      "query": "requests\n| project\n    timestamp,\n    id,\n    operation_Name,\n    success,\n    resultCode,\n    duration,\n    operation_Id,\n    cloud_RoleName,\n    invocationId=customDimensions['InvocationId']\n| order by timestamp desc\n| take 20\n| summarize by Functions=operation_Name\n",
                                      "crossComponentResources": [
                                        "{appInsightsName}"
                                      ],
                                      "typeSettings": {
                                        "additionalResourceOptions": [],
                                        "showDefault": false
                                      },
                                      "timeContext": {
                                        "durationMs": 2592000000
                                      },
                                      "queryType": 0,
                                      "resourceType": "microsoft.insights/components",
                                      "value": "config"
                                    }
                                  ],
                                  "style": "pills",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components"
                                },
                                "name": "parameters - 18"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "requests\n| project\n    timestamp,\n    id,\n    operation_Name,\n    success,\n    resultCode,\n    duration,\n    operation_Id,\n    cloud_RoleName,\n    invocationId=customDimensions['InvocationId']\n| where operation_Name =~ '{FunctionApp}'\n| order by timestamp desc\n| take 20",
                                  "size": 0,
                                  "title": "Invocations",
                                  "timeContextFromParameter": "appInsightsTimeframe",
                                  "exportedParameters": [
                                    {
                                      "fieldName": "invocationId",
                                      "parameterName": "invocationid",
                                      "parameterType": 1
                                    },
                                    {
                                      "fieldName": "operation_Id",
                                      "parameterName": "operationid",
                                      "parameterType": 1
                                    }
                                  ],
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsName}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "id",
                                        "formatter": 5
                                      }
                                    ]
                                  }
                                },
                                "customWidth": "30",
                                "name": "queryInvocations"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "union traces\n| union exceptions\n| where operation_Id == '{operationid}'\n| where customDimensions['InvocationId'] == '{invocationid}'\n| order by timestamp asc\n| project\n    timestamp,\n    message = iff(message != '', message, iff(innermostMessage != '', innermostMessage, customDimensions.[strcat('prop__{','OriginalFormat}')])),\n    logLevel = customDimensions.['LogLevel']",
                                  "size": 0,
                                  "title": "Invocation Details",
                                  "noDataMessage": "No Invocation Selected",
                                  "timeContextFromParameter": "appInsightsTimeframe",
                                  "exportFieldName": "invocationId",
                                  "exportParameterName": "invocationid",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsName}"
                                  ]
                                },
                                "customWidth": "70",
                                "name": "queryInvocationDetails"
                              }
                            ]
                          },
                          "conditionalVisibility": {
                            "parameterName": "tabSelection",
                            "comparison": "isEqualTo",
                            "value": "logs"
                          },
                          "name": "groupLogs"
                        },
                        {
                          "type": 3,
                          "content": {
                            "version": "KqlItem/1.0",
                            "query": "{\"version\":\"CustomEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"x-functions-key\",\"value\":\"{configKey}\"}],\"method\":\"GET\",\"url\":\"https://{FunctionApps:name}.azurewebsites.net/api/config?Action=getdiscoveryresults\",\"contentType\":\"text/plain\",\"urlParams\":[{\"key\":\"WSId\",\"value\":\"{Workspace}\"}],\"transformers\":null}",
                            "size": 0,
                            "exportedParameters": [
                              {
                                "parameterName": "vmsDiscoveryTag",
                                "parameterType": 1
                              },
                              {
                                "fieldName": "tag",
                                "parameterName": "vmsDiscoveryTagValue",
                                "parameterType": 1
                              }
                            ],
                            "queryType": 10,
                            "gridSettings": {
                              "formatters": [
                                {
                                  "columnMatch": "tag",
                                  "formatter": 1,
                                  "formatOptions": {
                                    "linkTarget": "ArmAction",
                                    "linkIsContextBlade": true,
                                    "armActionContext": {
                                      "path": "{logicAppResource}/triggers/manual/run?api-version=2016-06-01",
                                      "headers": [],
                                      "params": [],
                                      "body": "{ \n  \"function\": \"tagmgmt\",\n  \"functionBody\" : {\n    \"Action\":\"AddTag\",\n    \"Resources\": [{vmsDiscoveryTag}],\n    \"Pack\": \"{vmsDiscoveryTagValue}\"\n  }\n}",
                                      "httpMethod": "POST",
                                      "title": "Enable Monitoring",
                                      "description": "# Adding Tag(s) To VMs\n\n\"Resources\": {vmsDiscoveryTag:$.Computer}\n\n\"Pack\": \"{vmsDiscoveryTagValue}\"",
                                      "runLabel": "Enable"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "conditionalVisibility": {
                            "parameterName": "discTab",
                            "comparison": "isEqualTo",
                            "value": "discResults"
                          },
                          "name": "query - discovery Results"
                        }
                      ],
                      "fallbackResourceIds": [
                        "Azure Monitor"
                      ],
                      "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
                    },
                    "wbConfig": "[string(variables('$fxv#0'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/workbooks",
                      "apiVersion": "2022-04-01",
                      "name": "[guid('Azure Monitor Starter Packs V2')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "kind": "shared",
                      "properties": {
                        "displayName": "Azure Monitor Starter Packs Extended",
                        "serializedData": "[variables('wbConfig')]",
                        "category": "workbook",
                        "sourceId": "[parameters('lawresourceid')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "dceName": {
                    "value": "[format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "3784354634483652394"
                    }
                  },
                  "parameters": {
                    "dceName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionEndpoints",
                      "apiVersion": "2021-09-01-preview",
                      "name": "[parameters('dceName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "networkAcls": {
                          "publicNetworkAccess": "Enabled"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "dceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionEndpoints', parameters('dceName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('packPolicyRoleDefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "[format('AMP-{0}-UMI-Packs', parameters('instanceName'))]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "addRGRoleAssignments": {
                    "value": true
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "17842332302260083262"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "addRGRoleAssignments": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "RGroleDefinitionIds": [
                      "b24988ac-6180-42a0-ab88-20f7382dd24c",
                      "22926164-76b3-42b3-bc55-97df8dab3e41"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1567859393178125257"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('Tags')]"
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-{2}', parameters('userIdentityName'), copyIndex(), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "12046791720435112264"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignmentRG",
                        "count": "[length(variables('RGroleDefinitionIds'))]"
                      },
                      "condition": "[parameters('addRGRoleAssignments')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-RG', parameters('userIdentityName'), copyIndex())]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "18441567381332934980"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AMP-{0}-UMI-AzFun-{1}', parameters('instanceName'), parameters('location'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "roleDefinitionIds": {
                    "value": "[variables('backendFunctionRoleDefinitionIds')]"
                  },
                  "userIdentityName": {
                    "value": "[format('AMP-{0}-UMI-Function', parameters('instanceName'))]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('resourceGroupName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "17842332302260083262"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "roleDefinitionIds": {
                      "type": "array"
                    },
                    "userIdentityName": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "addRGRoleAssignments": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "RGroleDefinitionIds": [
                      "b24988ac-6180-42a0-ab88-20f7382dd24c",
                      "22926164-76b3-42b3-bc55-97df8dab3e41"
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}', parameters('userIdentityName'), parameters('location'))]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "userIdentityName": {
                            "value": "[parameters('userIdentityName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1567859393178125257"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "userIdentityName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                              "apiVersion": "2023-01-31",
                              "name": "[parameters('userIdentityName')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('Tags')]"
                            }
                          ],
                          "outputs": {
                            "userManagedIdentityPrincipalId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').principalId]"
                            },
                            "userManagedIdentityClientId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName')), '2023-01-31').clientId]"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userIdentityName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignments",
                        "count": "[length(parameters('roleDefinitionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-{2}', parameters('userIdentityName'), copyIndex(), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[parameters('roleDefinitionIds')[copyIndex()]]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "12046791720435112264"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "userIdentityRoleAssignmentRG",
                        "count": "[length(variables('RGroleDefinitionIds'))]"
                      },
                      "condition": "[parameters('addRGRoleAssignments')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-{1}-RG', parameters('userIdentityName'), copyIndex())]",
                      "subscriptionId": "[parameters('subscriptionId')]",
                      "resourceGroup": "[parameters('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "resourcename": {
                            "value": "[parameters('userIdentityName')]"
                          },
                          "principalId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "roleDefinitionId": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          },
                          "roleShortName": {
                            "value": "[variables('RGroleDefinitionIds')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "18441567381332934980"
                            }
                          },
                          "parameters": {
                            "resourcename": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "principalId": {
                              "type": "string"
                            },
                            "roleDefinitionId": {
                              "type": "string"
                            },
                            "roleShortName": {
                              "type": "string"
                            },
                            "utcValue": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "variables": {
                            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                              "properties": {
                                "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                                "principalId": "[parameters('principalId')]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[variables('roleIdtoUse')]"
                              }
                            }
                          ],
                          "outputs": {
                            "roleassignmentname": {
                              "type": "string",
                              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "userManagedIdentityPrincipalId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
                    },
                    "userManagedIdentityClientId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityClientId.value]"
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('userIdentityName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[parameters('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "kvName": {
                    "value": "[format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "functionName": {
                    "value": "[parameters('functionname')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "16236972932648714751"
                    }
                  },
                  "parameters": {
                    "kvName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "functionName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "vaultUri": "[format('https://{0}.vault.azure.net', parameters('kvName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2021-06-01-preview",
                      "name": "[parameters('kvName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "tenantId": "[subscription().tenantId]",
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": false,
                        "enabledForTemplateDeployment": false,
                        "enableSoftDelete": true,
                        "softDeleteRetentionInDays": 90,
                        "enableRbacAuthorization": true,
                        "vaultUri": "[variables('vaultUri')]",
                        "provisioningState": "Succeeded",
                        "publicNetworkAccess": "Enabled",
                        "enablePurgeProtection": true
                      }
                    },
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2021-11-01-preview",
                      "name": "[format('{0}/{1}', parameters('kvName'), 'FunctionKey')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "attributes": {
                          "enabled": true
                        },
                        "contentType": "string",
                        "value": "[listKeys(resourceId('Microsoft.Web/sites/host', parameters('functionName'), 'default'), '2022-09-01').functionKeys.monitoringKey]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "kvResourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('functionname'))]"
              ]
            },
            {
              "copy": {
                "name": "userIdentityRoleAssignments",
                "count": "[length(variables('logicappRequiredRoleassignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('logiapprbac-{0}', copyIndex())]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "resourcename": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6))), '2022-09-01').outputs.kvResourceId.value]"
                  },
                  "principalId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('logicappname')), '2022-09-01').outputs.logicAppPrincipalId.value]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "roleDefinitionId": {
                    "value": "[variables('logicappRequiredRoleassignments')[copyIndex()]]"
                  },
                  "roleShortName": {
                    "value": "[variables('logicappRequiredRoleassignments')[copyIndex()]]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "12046791720435112264"
                    }
                  },
                  "parameters": {
                    "resourcename": {
                      "type": "string"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "roleShortName": {
                      "type": "string"
                    },
                    "utcValue": {
                      "type": "string",
                      "defaultValue": "[utcNow()]"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]",
                      "properties": {
                        "description": "[format('{0}-{1}-{2}-{3}', parameters('solutionTag'), parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                        "principalId": "[parameters('principalId')]",
                        "principalType": "ServicePrincipal",
                        "roleDefinitionId": "[variables('roleIdtoUse')]"
                      }
                    }
                  ],
                  "outputs": {
                    "roleassignmentname": {
                      "type": "string",
                      "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'), parameters('instanceName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('amp-{0}-kv-{1}', parameters('instanceName'), substring(uniqueString(parameters('subscriptionId'), parameters('resourceGroupName'), 'keyvault'), 0, 6)))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', parameters('logicappname'))]"
              ]
            }
          ],
          "outputs": {
            "packsUserManagedIdentityId": {
              "type": "string",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityPrincipalId.value]"
            },
            "packsUserManagedResourceId": {
              "type": "string",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('AMP-{0}-UMI-Packs-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.userManagedIdentityResourceId.value]"
            },
            "dceId": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('AMP-{0}-DCE-{1}', parameters('instanceName'), parameters('location'))), '2022-09-01').outputs.dceId.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment')]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    },
    {
      "condition": "[variables('deployPacks')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "DeployAllPacks",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "dceId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.dceId.value]"
          },
          "customerTags": {
            "value": "[parameters('customerTags')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "useExistingAG": {
            "value": "[parameters('useExistingAG')]"
          },
          "userManagedIdentityResourceId": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName'))), '2022-09-01').outputs.packsUserManagedResourceId.value]"
          },
          "workspaceId": "[if(parameters('createNewLogAnalyticsWS'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment'), '2022-09-01').outputs.lawresourceid.value), createObject('value', parameters('existingLogAnalyticsWSId')))]",
          "actionGroupName": {
            "value": "[parameters('actionGroupName')]"
          },
          "resourceGroupId": "[if(parameters('createNewResourceGroup'), createObject('value', reference(subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName'))), '2022-09-01').outputs.newResourceGroupId.value), createObject('value', parameters('resourceGroupId')))]",
          "emailreceiver": {
            "value": "[parameters('emailreceiver')]"
          },
          "emailreiceversemail": {
            "value": "[parameters('emailreiceversemail')]"
          },
          "grafanaResourceId": "[if(parameters('deployGrafana'), if(parameters('newGrafana'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('azureManagedGrafana-{0}', parameters('instanceName'))), '2022-09-01').outputs.grafanaId.value), createObject('value', parameters('existingGrafanaResourceId'))), createObject('value', ''))]",
          "solutionTag": {
            "value": "[variables('solutionTag')]"
          },
          "solutionVersion": {
            "value": "[variables('solutionVersion')]"
          },
          "existingActionGroupResourceId": {
            "value": "[parameters('existingActionGroupId')]"
          },
          "deployIaaSPacks": {
            "value": "[or(parameters('deployIaaSPacks'), parameters('deployAllPacks'))]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "imageGalleryName": {
            "value": "[variables('ImageGalleryName')]"
          },
          "instanceName": {
            "value": "[parameters('instanceName')]"
          },
          "deployGrafana": {
            "value": "[parameters('deployGrafana')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "521722359653771966"
            }
          },
          "parameters": {
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroupId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "location for the deployment."
              }
            },
            "useExistingAG": {
              "type": "bool",
              "metadata": {
                "description": "If set to true, a new Action group will be created"
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
              }
            },
            "solutionTag": {
              "type": "string"
            },
            "solutionVersion": {
              "type": "string"
            },
            "dceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
              }
            },
            "userManagedIdentityResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource ID of the user managed identity to be used for the deployment"
              }
            },
            "grafanaResourceId": {
              "type": "string",
              "defaultValue": ""
            },
            "customerTags": {
              "type": "object"
            },
            "existingActionGroupResourceId": {
              "type": "string"
            },
            "deployIaaSPacks": {
              "type": "bool"
            },
            "storageAccountName": {
              "type": "string"
            },
            "imageGalleryName": {
              "type": "string"
            },
            "instanceName": {
              "type": "string"
            },
            "deployGrafana": {
              "type": "bool"
            },
            "actionGroupName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Action Group to be used or created."
              }
            },
            "emailreceiver": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Email receiver names to be used for the Action Group if being created."
              }
            },
            "emailreiceversemail": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Email addresses to be used for the Action Group if being created."
              }
            }
          },
          "variables": {
            "solutionTagComponents": "MonitorStarterPacksComponents",
            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
            "tempTags": {
              "[format('{0}', variables('solutionTagComponents'))]": "BackendComponent",
              "solutionVersion": "[parameters('solutionVersion')]",
              "instanceName": "[parameters('instanceName')]"
            },
            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]"
          },
          "resources": [
            {
              "condition": "[not(parameters('useExistingAG'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('deployAG-new-{0}-{1}', parameters('actionGroupName'), parameters('location'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "emailreceiver": {
                    "value": "[parameters('emailreceiver')]"
                  },
                  "emailreiceversemail": {
                    "value": "[parameters('emailreiceversemail')]"
                  },
                  "Tags": {
                    "value": "[variables('Tags')]"
                  },
                  "location": {
                    "value": "global"
                  },
                  "groupshortname": {
                    "value": "[parameters('actionGroupName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "12883385540442311034"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "groupshortname": {
                      "type": "string"
                    },
                    "emailreceiver": {
                      "type": "string"
                    },
                    "emailreiceversemail": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/actionGroups",
                      "apiVersion": "2023-01-01",
                      "name": "[parameters('groupshortname')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('Tags')]",
                      "properties": {
                        "groupShortName": "[parameters('groupshortname')]",
                        "enabled": true,
                        "emailReceivers": [
                          {
                            "name": "[parameters('emailreceiver')]",
                            "emailAddress": "[parameters('emailreiceversemail')]",
                            "useCommonAlertSchema": false
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "agGroupId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('groupshortname'))]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('deployIaaSPacks')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('deployIaaSPacks-{0}-{1}', parameters('instanceName'), parameters('location'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workspaceId": {
                    "value": "[parameters('workspaceId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "dceId": {
                    "value": "[parameters('dceId')]"
                  },
                  "userManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "actionGroupResourceId": "[if(parameters('useExistingAG'), createObject('value', parameters('existingActionGroupResourceId')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('deployAG-new-{0}-{1}', parameters('actionGroupName'), parameters('location'))), '2022-09-01').outputs.agGroupId.value))]",
                  "customerTags": {
                    "value": "[parameters('customerTags')]"
                  },
                  "resourceGroupId": {
                    "value": "[parameters('resourceGroupId')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "imageGalleryName": {
                    "value": "[parameters('imageGalleryName')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "6127935660436792819"
                    }
                  },
                  "parameters": {
                    "subscriptionId": {
                      "type": "string"
                    },
                    "resourceGroupId": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "location for the deployment."
                      }
                    },
                    "workspaceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                      }
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "dceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                      }
                    },
                    "userManagedIdentityResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Full resource ID of the user managed identity to be used for the deployment"
                      }
                    },
                    "customerTags": {
                      "type": "object"
                    },
                    "actionGroupResourceId": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "imageGalleryName": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "tempTags": {
                      "[format('{0}', parameters('solutionTag'))]": "BackendComponent",
                      "solutionVersion": "[parameters('solutionVersion')]",
                      "instanceName": "[parameters('instanceName')]",
                      "MonitoringPackType": "IaaS"
                    },
                    "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('ADDSPack-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "imageGalleryName": {
                            "value": "[parameters('imageGalleryName')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "storageAccountname": {
                            "value": "[parameters('storageAccountName')]"
                          },
                          "tableName": {
                            "value": "addsmonitoring"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "9430016841999804802"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string",
                              "defaultValue": "ADDS",
                              "metadata": {
                                "description": "The Tag value for this pack"
                              }
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "solutionTag": {
                              "type": "string",
                              "defaultValue": "MonitorStarterPacks"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "instanceName": {
                              "type": "string"
                            },
                            "storageAccountname": {
                              "type": "string"
                            },
                            "imageGalleryName": {
                              "type": "string"
                            },
                            "tableName": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "rulename": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "kind": "Windows",
                            "ruleshortname": "[format('{0}-collection-{1}', parameters('packtag'), parameters('instanceName'))]",
                            "appName": "[format('{0}-collection', parameters('packtag'))]",
                            "appDescription": "[format('{0} Collection - {1}', parameters('packtag'), parameters('instanceName'))]",
                            "OS": "Windows",
                            "xPathQueries": [
                              "Directory Service!*[System[(Eventlevel=1)]]",
                              "DNS Server!*[System[(Eventlevel=1)]]",
                              "Active Directory Web Services!*[System[(Eventlevel=1)]]",
                              "DFS Replication!*[System[(Eventlevel=1)]]"
                            ],
                            "performanceCounters": [
                              "\\Memory()\\Available Bytes",
                              "\\Memory()\\Committed Bytes",
                              "\\DirectoryServices(NTDS)\\DS Search sub-operations/sec",
                              "\\Security System-Wide Statistics()\\KDC AS Requests",
                              "\\Security System-Wide Statistics()\\KDC TGS Requests",
                              "\\Security System-Wide Statistics()\\Kerberos Authentications",
                              "\\DirectoryServices(NTDS)\\LDAP Client Sessions",
                              "\\DirectoryServices(NTDS)\\LDAP Searches/sec",
                              "\\DirectoryServices(NTDS)\\LDAP UDP operations/sec",
                              "\\DirectoryServices(NTDS)\\LDAP Writes/sec",
                              "\\Process(LSASS)\\Handle Count",
                              "\\Process(LSASS)\\Private Bytes",
                              "\\Process(LSASS)\\% Processor Time",
                              "\\Security System-Wide Statistics()\\NTLM Authentications",
                              "\\Memory()\\Pages/sec",
                              "\\Processor(_Total)\\% Processor Time",
                              "\\Server()\\Server Sessions",
                              "\\System()\\System Up Time",
                              "\\TCPv4()\\Connections Established",
                              "\\TCPv6()\\Connections Established",
                              "\\DirectoryServices(NTDS)\\DRA Inbound Bytes Compressed (Between Sites, Before Compression)/sec",
                              "\\DirectoryServices(NTDS)\\DRA Inbound Bytes Compressed (Between Sites, After Compression)/sec",
                              "\\DirectoryServices(NTDS)\\DRA Inbound Bytes Not Compressed (Within Site)/sec",
                              "\\DirectoryServices(NTDS)\\DRA Inbound Bytes Total/sec",
                              "\\DirectoryServices(NTDS)\\DRA Outbound Bytes Compressed (Between Sites, After Compression)/sec",
                              "\\DirectoryServices(NTDS)\\DRA Outbound Bytes Compressed (Between Sites, Before Compression)/sec",
                              "\\DirectoryServices(NTDS)\\DRA Outbound Bytes Not Compressed (Within Site)/sec",
                              "\\DirectoryServices(NTDS)\\DRA Outbound Bytes Total/sec",
                              "\\Process(dns)\\% Processor Time",
                              "\\DNS()\\Total Query Received/sec",
                              "\\Process(dns)\\Private Bytes",
                              "\\DirectoryServices(NTDS)\\ATQ Outstanding Queued Requests",
                              "\\DirectoryServices(NTDS)\\ATQ Request Latency",
                              "\\DirectoryServices(NTDS)\\ATQ Threads Other",
                              "\\DirectoryServices(NTDS)\\ATQ Threads LDAP",
                              "\\DirectoryServices(NTDS)\\ATQ Threads Total"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrPerformance-{0}-{1}-{2}', parameters('packtag'), parameters('instanceName'), parameters('location'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "rulename": {
                                    "value": "[variables('rulename')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "wsfriendlyname": {
                                    "value": "[variables('workspaceFriendlyName')]"
                                  },
                                  "kind": {
                                    "value": "[variables('kind')]"
                                  },
                                  "xPathQueries": {
                                    "value": "[variables('xPathQueries')]"
                                  },
                                  "counterSpecifiers": {
                                    "value": "[variables('performanceCounters')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "15691414683408659274"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "defaultValue": "Windows"
                                    },
                                    "wsfriendlyname": {
                                      "type": "string",
                                      "defaultValue": "TBD"
                                    },
                                    "xPathQueries": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "counterSpecifiers": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "samplingFrequencyInSeconds": {
                                      "type": "int",
                                      "defaultValue": 300
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('rulename')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "[parameters('kind')]",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceId')]",
                                              "name": "[parameters('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataSources": {
                                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), null(), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                                          "performanceCounters": [
                                            {
                                              "streams": [
                                                "Microsoft-Perf"
                                              ],
                                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                                              "name": "PerfCountersDataSource"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Event",
                                              "Microsoft-Perf"
                                            ],
                                            "destinations": [
                                              "[parameters('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('client-{0}-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('location'))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  },
                                  "instanceName": {
                                    "value": "[parameters('instanceName')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "imageGalleryName": {
                                    "value": "[parameters('imageGalleryName')]"
                                  },
                                  "resourceGroupId": {
                                    "value": "[parameters('resourceGroupId')]"
                                  },
                                  "storageAccountname": {
                                    "value": "[parameters('storageAccountname')]"
                                  },
                                  "subscriptionId": {
                                    "value": "[parameters('subscriptionId')]"
                                  },
                                  "tableName": {
                                    "value": "[parameters('tableName')]"
                                  },
                                  "tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "userManagedIdentityResourceId": {
                                    "value": "[parameters('userManagedIdentityResourceId')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "solutionTag": {
                                    "value": "[parameters('solutionTag')]"
                                  },
                                  "appDescription": {
                                    "value": "[variables('appDescription')]"
                                  },
                                  "appName": {
                                    "value": "[variables('appName')]"
                                  },
                                  "OS": {
                                    "value": "[variables('OS')]"
                                  },
                                  "ruleshortname": {
                                    "value": "[variables('ruleshortname')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "5259099012799328015"
                                    }
                                  },
                                  "parameters": {
                                    "packtag": {
                                      "type": "string",
                                      "defaultValue": "ADDS",
                                      "metadata": {
                                        "description": "Name of the DCR rule to be created"
                                      }
                                    },
                                    "location": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "location for the deployment."
                                      }
                                    },
                                    "workspaceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                                      }
                                    },
                                    "solutionTag": {
                                      "type": "string"
                                    },
                                    "dceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                                      }
                                    },
                                    "userManagedIdentityResourceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Full resource ID of the user managed identity to be used for the deployment"
                                      }
                                    },
                                    "subscriptionId": {
                                      "type": "string"
                                    },
                                    "resourceGroupId": {
                                      "type": "string"
                                    },
                                    "storageAccountname": {
                                      "type": "string"
                                    },
                                    "imageGalleryName": {
                                      "type": "string"
                                    },
                                    "tableName": {
                                      "type": "string"
                                    },
                                    "tags": {
                                      "type": "object"
                                    },
                                    "instanceName": {
                                      "type": "string"
                                    },
                                    "ruleshortname": {
                                      "type": "string"
                                    },
                                    "appName": {
                                      "type": "string"
                                    },
                                    "appDescription": {
                                      "type": "string"
                                    },
                                    "OS": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                                    "tableNameToUse": "[format('{0}_CL', parameters('tableName'))]",
                                    "lawFriendlyName": "[split(parameters('workspaceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('addscollectionapp-{0}', parameters('instanceName'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "resourceGroup": "[variables('resourceGroupName')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "aigname": {
                                            "value": "[parameters('imageGalleryName')]"
                                          },
                                          "appDescription": {
                                            "value": "[parameters('appDescription')]"
                                          },
                                          "appName": {
                                            "value": "[parameters('appName')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "osType": {
                                            "value": "[parameters('OS')]"
                                          },
                                          "tags": {
                                            "value": "[parameters('tags')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "17117017597267615596"
                                            }
                                          },
                                          "parameters": {
                                            "location": {
                                              "type": "string"
                                            },
                                            "aigname": {
                                              "type": "string"
                                            },
                                            "osType": {
                                              "type": "string"
                                            },
                                            "appDescription": {
                                              "type": "string"
                                            },
                                            "appName": {
                                              "type": "string"
                                            },
                                            "tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Compute/galleries/applications",
                                              "apiVersion": "2022-03-03",
                                              "name": "[format('{0}/{1}', parameters('aigname'), parameters('appName'))]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('tags')]",
                                              "properties": {
                                                "supportedOSType": "[parameters('osType')]",
                                                "description": "[parameters('appDescription')]"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('upload-addscollectionapp-{0}', parameters('instanceName'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "resourceGroup": "[variables('resourceGroupName')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "containerName": {
                                            "value": "applications"
                                          },
                                          "filename": {
                                            "value": "addscollection.zip"
                                          },
                                          "storageAccountName": {
                                            "value": "[parameters('storageAccountname')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "tags": {
                                            "value": "[parameters('tags')]"
                                          },
                                          "instanceName": {
                                            "value": "[parameters('instanceName')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "9749958818365986474"
                                            }
                                          },
                                          "parameters": {
                                            "location": {
                                              "type": "string"
                                            },
                                            "storageAccountName": {
                                              "type": "string"
                                            },
                                            "sasExpiry": {
                                              "type": "string",
                                              "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
                                            },
                                            "filename": {
                                              "type": "string"
                                            },
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "tags": {
                                              "type": "object"
                                            },
                                            "instanceName": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "$fxv#0": "UEsDBBQAAAAIAFZ6P1o+xZ9s3wQAAF8OAAANAAAAYWRjb2xsZWN0LnBzMc1XYW/bNhD9LkD/4cAaq7VaSjqgwOBBQFUrborasRGlG4q6KBjxLHOVSIE8uXHa/veBku0kTYq124rlk6nj8d7j3SN5fgBc5LosMaeoto997wGcraQFmxtZE2ynLCRpmkGFZGRugSsBH4wktEArrIA0cFjKErvl2I5BtrNqFwMFnG+cBZLLxiBMtZKkDfACFbUhrRuQvjnvey7onBteIaGBFZY1COz4Sa18r2cadSYrjAukUHBCCMfaVJyAaeZ7D/o7exCRtmSkKvpss9lswuk0FAKOj4dVNbSWBQ6rV3W4UhVLXQo0McuHiz+kEvqDbZktXC5c4D3wVxGmUyGOj11guYR+6yYJK7gFAuGRMdokudsSZLJEReVmpBVJ1WAQwEfwPQAAtgOFIczeR+NuNS8NcrEBvJCWLINPoBsK2yqk0uZ6jWaii4guCMKkrlEJ3/sMvoelRfh4O/LIICepCtiyu823rVdz3n3ZiME3YTqc6r2Qd0X0vc++10vSaSuyiS5cqJglYm+Icrt2eYfnSK22IG+McaJZGkSwNc8RtGpnhLTvQRi5RqAVJ1jpUnRrkhRKXWzl2pvoYixLPMXiJW4gBnb8cjIdLrLX2dnRdDHq4rs6GF1mSIsMzVrmaBcnZ2m22MvSLpjv9eyc02qii7j/HCl8QVjNja7R0AZCNwVfwIUnvEJgKSd+zi3ueVmoOa1YEH11yvd6a11KtdSt6te6bCqEMHUbniC5g7Jn8+bwrUvaaaNIVjiALp8OegC/83IAZ7ywvtcjXtj4KfO9j2xdRfyyiip7UOlG0QvBhqzX30FGbV7LFiYYssE197UuM3mJN92dJbjhVnZpcASd644p++x77Knv7aU4SNJtxtqdpdK+z1yV5zm9sigGvf6bitPq7XBodKPETchTrLhUUhUHN8w/Pz48HPwSBIN2w+6szBoKHQawW6pcfClIthMzhEcq18IdkoaWv3bX1L8VptiVe3eZsuOXR6/fTWajZPJumoyOX5wc/QNtplkCeyW5nbL7ovxbxJzm72L7fWq/p1pOsyRNn7W05zmNDeL9V7CVlwh62doUCRsJSffq8vxmCTnSLn3dc+0ArlQTRBNUBa3+H6V9j4Qkjbf7GOx39MOEMPlpDK5hcc+DPtWaIIY3XFj5lk3SZD48ODBak7Btfi2Z9CRLtdNs3LlHApe8KemEV1IVTgl4Qb7Xmxu9lu7Rj4ElqU2z2ez8T8zJhdGjSpzhhYNiGbrOEdpKj42u4OEWdnQST7SlRImxOzaDG+APWdvI6ZFWCruOKoYT/BB2IBDmutLdkCXpLH0WXXl2DPaf0Y5pvOf8hcOsRtVnrnFbu8bHYE7abGDn7Xo/519VrmP6Wxqt25ZDO97ZXEbifW6uO3TQV4yc1/7D93qnmGsjRk6Rcf9q2dEF5g1hPwiiax5t4u6UdJJOxl16W4leS/fdN91kPDv/s405uE7hB0kVSsuthdroHN0vmqX7C6Dcu7tGA0/AYq6VcELO6yY+9L2lNtDvSYgPf4OehLAkeOJGjx4Fu5bYuT6Kb17Q7e003+J0qOFIV3VDaFqdRvAJOt2Gu0IfXdRcif11Npq/CoIOISNuKMxKxBrCrKMIj7tWmDTx0pF1NA6eXLN8vUYtobxuvq1Grfdo/mqwj/xfl+cvUEsDBBQAAAAIAFZ6P1oYCugm0gMAAIwOAAAWAAAAYWRkc2NvbGxlY3Rpb250YXNrLnhtbJ2XXW/aShCGn+tK5z9Y3IP5SE5PEYeKlLZBSnuiQpUbbtzgECtgI2xC0h/fHs3sYvxFIblC7M7OvPPuOzPr3796vOeJJQscHvFZExMQEfIvNVo0aFLDwSfklogZASFz3f3OhE/UafE3Nd7T5y/e0GOCR8zDQY9t9WiihsS6fk9CwoouLi4xt9zjs1RPDZYE3LImIibijoSGolnislVEMyK2xLi0adLkDJcmbVw9m+CSWFQ1i9PBocc3fOYExCSs8Ugs1hEhd0QZW2M/VBufvsZp09H8W9T134QWTbq0OKNLh3c0ONedJh3O6OFmPOQ9D9iQcE/Emr5a5lfy1t/5xog+UwYMcRgyxuEDEQsW+NymmTjpfYjP3bk9A+4LOJC7XRMwZ25vtohrQsASv2CXt9ozv8LXaLuIZTtjK0iEszWPeCzoc82Ec74o/vJutZcxCRErBiQM2eRy/aga6nOnHmJ89XzKiXJm7om5GUQeaxIuiNioR/n/nOrrTJVl9NVRfb2jq5rqqs53KA95KccU3B4/VCWCX+58Y/Mt7uXv1j16u8bmkEJ6XOuedJKAlWW6GKVs4xAw0y6RrYhsHWfrQu5uzUjxj7U665zr7z+2ArIWVboUBq/wtXuJmi41H+lHUiEDVVnAImXK3HjxVJG7cl553v7MjWhF9JTY/lvm7QsbFrq/UlRSFYLXU5+C/Vq7g3RSUcaIOaEy6fMVn62ieKmXYneULiLYF9qP98occcd/hFxoBZlqDdRfXoGv85BHsataOfGZyDJ2SvSXnSz27x3mS0U8Y6LWMn/CtOdno512opyb4eNGFRlW6LGqix0/k49j9CyZL3hWPkQjCVtVzMMJUV/jIY9BKlTW/6z8/J1LvN25XYeuuuEqu+oZFafsZc+Usz1sWewEp+WVVdQ453loX0bl7E47kY/y+nkgfXHGTBVV5CO/d0xbh1k9bJn3eYPHg06myJ4q+qqyKDLxpC+nTTqzd/PuSn9llpuXx1vaXFqGTjlTNeGkCmRXuujbzATIrmfnw2G1iFL2773YvgPNm+iJ5Ojk3GdeVQPia5lRzwe6TLnJvbqnjHlW/YvOOrRLFjI1ttrdxtqDRKdTHu0XxpRVuh+n+w3Fb26viKKMc8CaORvlXnIXhup8JVJe5atBeo2PY1eviJgTpf/Ne9d0eM/yKbNc9su3nJ2CDhc868yOlf06n9JYtUq+BvzU16Rv3+9DxkzxmOlXzf4F32BFTIuare5yhmUebmx/NTqReSpxxJusi6pORWSq5pi3Yncra8lgzyp096Uor0XzbdLnf1BLAwQUAAAACABWej9aEQ+coSQBAACbAQAACwAAAGluc3RhbGwucHMxRZCxTsMwEIb3SHmHk+lABwexVmKImnZCgEiRGLJY9jU9xbEj+9ImLTwZA4/EK6CWAPN/36f/v6+Pz9naW4PhTuhFdSBn/CHmxz5glRdFKdKEtnB9XSNLYmxhuga5CsGHXDN5ByVZdGzHpXdMrsf5HE6QJgAAYhZ6t6EWYQGPTTbRygZUZgQcKHIU8Aa+Z7kli1BQ1H6P4d7XGQ8MMu86dCZN3tMEbUQ4/YjbxlD4rXNJr1ZDp5yRedA72iNklZlc2ZG6NNG+G0EZ7a1FzVkXb//xZ6wpMgZZ6h2a3qLZqNiAfG0tXMZr7xgdQ3ajjImTg7xjFZtsaO00IXIgV89BnvEH1SKIvICihOUfAedIgFz7oBHkS8QA5RjPz71QT4p3ICrxDVBLAQIUABQAAAAIAFZ6P1o+xZ9s3wQAAF8OAAANAAAAAAAAAAAAAAAAAAAAAABhZGNvbGxlY3QucHMxUEsBAhQAFAAAAAgAVno/WhgK6CbSAwAAjA4AABYAAAAAAAAAAAAAAAAACgUAAGFkZHNjb2xsZWN0aW9udGFzay54bWxQSwECFAAUAAAACABWej9aEQ+coSQBAACbAQAACwAAAAAAAAAAAAAAAAAQCQAAaW5zdGFsbC5wczFQSwUGAAAAAAMAAwC4AAAAXQoAAAAA",
                                            "discoveryContainerName": "applications",
                                            "tempfilename": "download.tmp",
                                            "sasConfig": {
                                              "signedResourceTypes": "sco",
                                              "signedPermission": "r",
                                              "signedServices": "b",
                                              "signedExpiry": "[parameters('sasExpiry')]",
                                              "signedProtocol": "https",
                                              "keyToSign": "key2"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Resources/deploymentScripts",
                                              "apiVersion": "2020-10-01",
                                              "name": "[format('deployscript-addappdiscovery-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                                              "tags": "[parameters('tags')]",
                                              "location": "[parameters('location')]",
                                              "kind": "AzureCLI",
                                              "properties": {
                                                "azCliVersion": "2.42.0",
                                                "timeout": "PT5M",
                                                "retentionInterval": "PT1H",
                                                "environmentVariables": [
                                                  {
                                                    "name": "AZURE_STORAGE_ACCOUNT",
                                                    "value": "[parameters('storageAccountName')]"
                                                  },
                                                  {
                                                    "name": "AZURE_STORAGE_KEY",
                                                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value]"
                                                  },
                                                  {
                                                    "name": "CONTENT",
                                                    "value": "[variables('$fxv#0')]"
                                                  }
                                                ],
                                                "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --overwrite true', variables('tempfilename'), variables('tempfilename'), parameters('filename'), parameters('filename'), variables('discoveryContainerName'), parameters('filename'))]"
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "fileURL": {
                                              "type": "string",
                                              "value": "[format('{0}{1}/{2}?{3}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, parameters('containerName'), parameters('filename'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken)]"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('addscollectionappversion-{0}', parameters('instanceName'))]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "resourceGroup": "[variables('resourceGroupName')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "aigname": {
                                            "value": "[parameters('imageGalleryName')]"
                                          },
                                          "appName": {
                                            "value": "[parameters('appName')]"
                                          },
                                          "appVersionName": {
                                            "value": "1.0.0"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "targetRegion": {
                                            "value": "[parameters('location')]"
                                          },
                                          "mediaLink": {
                                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-addscollectionapp-{0}', parameters('instanceName'))), '2022-09-01').outputs.fileURL.value]"
                                          },
                                          "installCommands": {
                                            "value": "powershell -command \"ren addscollection addscollection.zip; expand-archive ./addscollection.zip . ; ./install.ps1\""
                                          },
                                          "removeCommands": {
                                            "value": "powershell -command \"Unregister-ScheduledTask -TaskName 'AD DS Collection Task' '\\' \""
                                          },
                                          "tags": {
                                            "value": "[parameters('tags')]"
                                          },
                                          "packageFileName": {
                                            "value": "addscollection.zip"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "12441285522123093851"
                                            }
                                          },
                                          "parameters": {
                                            "aigname": {
                                              "type": "string"
                                            },
                                            "appName": {
                                              "type": "string"
                                            },
                                            "appVersionName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "targetRegion": {
                                              "type": "string"
                                            },
                                            "mediaLink": {
                                              "type": "string"
                                            },
                                            "packageFileName": {
                                              "type": "string"
                                            },
                                            "installCommands": {
                                              "type": "string"
                                            },
                                            "removeCommands": {
                                              "type": "string"
                                            },
                                            "tags": {
                                              "type": "object"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Compute/galleries/applications/versions",
                                              "apiVersion": "2022-03-03",
                                              "name": "[format('{0}/{1}/{2}', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]",
                                              "location": "[parameters('location')]",
                                              "tags": "[parameters('tags')]",
                                              "properties": {
                                                "publishingProfile": {
                                                  "source": {
                                                    "mediaLink": "[parameters('mediaLink')]"
                                                  },
                                                  "manageActions": {
                                                    "install": "[parameters('installCommands')]",
                                                    "remove": "[parameters('removeCommands')]"
                                                  },
                                                  "settings": {
                                                    "packageFileName": "[parameters('packageFileName')]"
                                                  },
                                                  "enableHealthCheck": false,
                                                  "targetRegions": [
                                                    {
                                                      "name": "[parameters('targetRegion')]",
                                                      "regionalReplicaCount": 1,
                                                      "storageAccountType": "Standard_LRS"
                                                    }
                                                  ],
                                                  "replicaCount": 1,
                                                  "excludeFromLatest": false,
                                                  "storageAccountType": "Standard_LRS"
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "appVersionId": {
                                              "type": "string",
                                              "value": "[resourceId('Microsoft.Compute/galleries/applications/versions', parameters('aigname'), parameters('appName'), parameters('appVersionName'))]"
                                            }
                                          }
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('addscollectionapp-{0}', parameters('instanceName')))]",
                                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('upload-addscollectionapp-{0}', parameters('instanceName')))]"
                                      ]
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[variables('tableNameToUse')]",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "resourceGroup": "[variables('resourceGroupName')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "parentname": {
                                            "value": "[variables('lawFriendlyName')]"
                                          },
                                          "tableName": {
                                            "value": "[variables('tableNameToUse')]"
                                          },
                                          "retentionDays": {
                                            "value": 31
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "2081426938105913058"
                                            }
                                          },
                                          "parameters": {
                                            "parentname": {
                                              "type": "string"
                                            },
                                            "tableName": {
                                              "type": "string"
                                            },
                                            "retentionDays": {
                                              "type": "int",
                                              "defaultValue": 31
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.OperationalInsights/workspaces/tables",
                                              "apiVersion": "2022-10-01",
                                              "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                                              "properties": {
                                                "totalRetentionInDays": "[parameters('retentionDays')]",
                                                "plan": "Analytics",
                                                "schema": {
                                                  "name": "[parameters('tableName')]",
                                                  "columns": [
                                                    {
                                                      "name": "TimeGenerated",
                                                      "type": "datetime"
                                                    },
                                                    {
                                                      "name": "RawData",
                                                      "type": "string"
                                                    }
                                                  ]
                                                },
                                                "retentionInDays": "[parameters('retentionDays')]"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "addscollectionDCR",
                                      "subscriptionId": "[parameters('subscriptionId')]",
                                      "resourceGroup": "[variables('resourceGroupName')]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "endpointResourceId": {
                                            "value": "[parameters('dceId')]"
                                          },
                                          "filepatterns": {
                                            "value": [
                                              "C:\\WindowsAzure\\ADDS\\*.csv"
                                            ]
                                          },
                                          "kind": {
                                            "value": "Windows"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "lawResourceId": {
                                            "value": "[parameters('workspaceId')]"
                                          },
                                          "OS": {
                                            "value": "Windows"
                                          },
                                          "solutionTag": {
                                            "value": "[parameters('solutionTag')]"
                                          },
                                          "tableName": {
                                            "value": "[variables('tableNameToUse')]"
                                          },
                                          "packtag": {
                                            "value": "ADDS"
                                          },
                                          "packtype": {
                                            "value": "IaaS"
                                          },
                                          "instanceName": {
                                            "value": "[parameters('instanceName')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "1128108251442731456"
                                            }
                                          },
                                          "parameters": {
                                            "location": {
                                              "type": "string"
                                            },
                                            "solutionTag": {
                                              "type": "string"
                                            },
                                            "lawResourceId": {
                                              "type": "string"
                                            },
                                            "tableName": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "kind": {
                                              "type": "string"
                                            },
                                            "filepatterns": {
                                              "type": "array"
                                            },
                                            "OS": {
                                              "type": "string"
                                            },
                                            "packtype": {
                                              "type": "string"
                                            },
                                            "endpointResourceId": {
                                              "type": "string",
                                              "metadata": {
                                                "description": "Specifies the resource id of the data collection endpoint."
                                              }
                                            },
                                            "instanceName": {
                                              "type": "string"
                                            }
                                          },
                                          "variables": {
                                            "streamName": "[format('Custom-{0}', parameters('tableName'))]",
                                            "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.Insights/dataCollectionRules",
                                              "apiVersion": "2022-06-01",
                                              "name": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]",
                                              "location": "[parameters('location')]",
                                              "tags": {
                                                "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                                                "MonitoringPackType": "[parameters('packtype')]"
                                              },
                                              "kind": "[parameters('kind')]",
                                              "properties": {
                                                "dataSources": {
                                                  "logFiles": [
                                                    {
                                                      "streams": [
                                                        "[variables('streamName')]"
                                                      ],
                                                      "filePatterns": "[parameters('filepatterns')]",
                                                      "format": "text",
                                                      "settings": {
                                                        "text": {
                                                          "recordStartTimestampFormat": "ISO 8601"
                                                        }
                                                      },
                                                      "name": "[parameters('tableName')]"
                                                    }
                                                  ]
                                                },
                                                "destinations": {
                                                  "logAnalytics": [
                                                    {
                                                      "workspaceResourceId": "[parameters('lawResourceId')]",
                                                      "name": "[variables('lawFriendlyName')]"
                                                    }
                                                  ]
                                                },
                                                "dataFlows": [
                                                  {
                                                    "streams": [
                                                      "[variables('streamName')]"
                                                    ],
                                                    "destinations": [
                                                      "[variables('lawFriendlyName')]"
                                                    ],
                                                    "transformKql": "source",
                                                    "outputStream": "[variables('streamName')]"
                                                  }
                                                ],
                                                "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                                "streamDeclarations": {
                                                  "[format('{0}', variables('streamName'))]": {
                                                    "columns": [
                                                      {
                                                        "name": "TimeGenerated",
                                                        "type": "datetime"
                                                      },
                                                      {
                                                        "name": "RawData",
                                                        "type": "string"
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "outputs": {
                                            "ruleId": {
                                              "type": "string",
                                              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS')))]"
                                            },
                                            "ruleName": {
                                              "type": "string",
                                              "value": "[format('AMP-{0}-FileColl-{1}-{2}', parameters('instanceName'), parameters('packtag'), parameters('OS'))]"
                                            }
                                          }
                                        }
                                      },
                                      "dependsOn": [
                                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', variables('tableNameToUse'))]"
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('VMInsightsPack-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "7423306630869613208"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string",
                              "defaultValue": "VMI",
                              "metadata": {
                                "description": "The Tag value for this pack"
                              }
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string"
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "rulename": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "ruleshortname": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('vmInsightsDCR-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "ruleName": {
                                    "value": "[variables('rulename')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "13954368441826719999"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "ruleName": {
                                      "type": "string"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2021-09-01-preview",
                                      "name": "[format('{0}-VMI', parameters('ruleName'))]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "properties": {
                                        "description": "Data collection rule for VM Insights.",
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "dataSources": {
                                          "performanceCounters": [
                                            {
                                              "name": "VMInsightsPerfCounters",
                                              "streams": [
                                                "Microsoft-InsightsMetrics"
                                              ],
                                              "samplingFrequencyInSeconds": 60,
                                              "counterSpecifiers": [
                                                "\\VmInsights\\DetailedMetrics"
                                              ]
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                                              "name": "[variables('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-InsightsMetrics"
                                            ],
                                            "destinations": [
                                              "[variables('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "VMIRuleId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-VMI', parameters('ruleName')))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "instanceName": {
                                    "value": "[parameters('instanceName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "17027824023029962763"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "instanceName": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "moduleprefix": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "Log Alert for Virtual Machine Data Disk Read Latency (ms)",
                                        "alertRuleDisplayName": "Data Disk Read Latency (ms)",
                                        "alertRuleName": "DataDiskReadLatency(ms)",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AggregatedValue",
                                        "operator": "GreaterThan",
                                        "threshold": 30,
                                        "query": "    InsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\"\r\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\r\n| where Disk !in ('C:','/')\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated,15m), Computer, _ResourceId, Disk\r\n"
                                      },
                                      {
                                        "alertRuleDescription": "Log Alert for Virtual Machine Data Disk Free Space Percentage",
                                        "alertRuleDisplayName": "Data Disk Free Space Percentage",
                                        "alertRuleName": "DataDiskFreeSpacePercentage",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AggregatedValue",
                                        "operator": "LessThan",
                                        "threshold": 10,
                                        "query": "    InsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where Namespace == \"LogicalDisk\"and Name == \"FreeSpacePercentage\"\r\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\r\n| where Disk !in ('C:','/')\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated,15m), Computer, _ResourceId, Disk\r\n"
                                      },
                                      {
                                        "alertRuleDescription": "Log Alert for Virtual Machine Data Disk Write Latency (ms)",
                                        "alertRuleDisplayName": "Data Disk Write Latency (ms)",
                                        "alertRuleName": "DataDiskWriteLatency(ms)",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AggregatedValue",
                                        "operator": "GreaterThan",
                                        "threshold": 30,
                                        "query": "    InsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\"\r\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\r\n| where Disk !in ('C:','/')\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated,15m), Computer, _ResourceId, Disk\r\n"
                                      },
                                      {
                                        "alertRuleDescription": "Log Alert for Virtual Machine Network Read (bytes-sec)",
                                        "alertRuleDisplayName": "Network Read (bytes-sec)",
                                        "alertRuleName": "NetworkRead(bytes-sec)",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AggregatedValue",
                                        "operator": "GreaterThan",
                                        "threshold": 10000000,
                                        "query": "    InsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where Namespace == \"Network\" and Name == \"ReadBytesPerSecond\"\r\n| extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"])\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface\r\n"
                                      },
                                      {
                                        "alertRuleDescription": "Log Alert for Virtual Machine Network Write (bytes-sec)",
                                        "alertRuleDisplayName": "Network Write (bytes-sec)",
                                        "alertRuleName": "NetworkWrite(bytes-sec)",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AggregatedValue",
                                        "operator": "GreaterThan",
                                        "threshold": 10000000,
                                        "query": "    InsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where Namespace == \"Network\" and Name == \"WriteBytesPerSecond\"\r\n| extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"])\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface\r\n"
                                      },
                                      {
                                        "alertRuleDescription": "Log Alert for Virtual Machine Data OS Read Latency (ms)",
                                        "alertRuleDisplayName": "OS Disk Read Latency (ms)",
                                        "alertRuleName": "OSDiskReadLatency(ms)",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AggregatedValue",
                                        "operator": "GreaterThan",
                                        "threshold": 30,
                                        "query": "    InsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\"\r\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk\r\n"
                                      },
                                      {
                                        "alertRuleDescription": "Log Alert for Virtual Machine OS Disk Free Space Percentage",
                                        "alertRuleDisplayName": "OS Disk Free Space Percentage",
                                        "alertRuleName": "OSDiskFreeSpacePercentage",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AggregatedValue",
                                        "operator": "LessThan",
                                        "threshold": 10,
                                        "query": "    InsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\"\r\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk\r\n"
                                      },
                                      {
                                        "alertRuleDescription": "Log Alert for Virtual Machine OS Disk Write Latency (ms)",
                                        "alertRuleDisplayName": "OS Disk Write Latency (ms)",
                                        "alertRuleName": "OSDiskWriteLatency(ms)",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AggregatedValue",
                                        "operator": "GreaterThan",
                                        "threshold": 50,
                                        "query": "    InsightsMetrics| where Origin == \"vm.azm.ms\"\r\n| where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\"\r\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk\r\n"
                                      },
                                      {
                                        "alertRuleDescription": "Log Alert for Virtual Machine Processor Utilization Percentage",
                                        "alertRuleDisplayName": "Processor Utilization Percentage",
                                        "alertRuleName": "ProcessorUtilizationPercentage",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AggregatedValue",
                                        "operator": "GreaterThan",
                                        "threshold": 85,
                                        "query": "    InsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where Namespace == \"Processor\" and Name == \"UtilizationPercentage\"\r\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId\r\n"
                                      },
                                      {
                                        "alertRuleDescription": "Log Alert for Virtual Machine Available Memory Percentage",
                                        "alertRuleDisplayName": "Available Memory Percentage",
                                        "alertRuleName": "AvailableMemoryPercentage",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT5M",
                                        "windowSize": "PT15M",
                                        "alertType": "Aggregated",
                                        "metricMeasureColumn": "AggregatedValue",
                                        "operator": "LessThan",
                                        "threshold": 10,
                                        "query": "    InsightsMetrics\r\n| where Origin == \"vm.azm.ms\"\r\n| where Namespace == \"Memory\" and Name == \"AvailableMB\"\r\n| extend TotalMemory = toreal(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"])\r\n| extend AvailableMemoryPercentage = (toreal(Val) / TotalMemory) * 100.0\r\n| summarize AggregatedValue = avg(AvailableMemoryPercentage) by bin(TimeGenerated, 15m), Computer, _ResourceId\r\n"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[variables('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "17858688129795365440"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "dimensions": "[if(contains(parameters('alertlist')[copyIndex()], 'dimensions'), createObject('value', parameters('alertlist')[copyIndex()].dimensions), createObject('value', null()))]",
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.32.4.45862",
                                                      "templateHash": "10159755056440989647"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "dimensions": {
                                                      "type": "array",
                                                      "defaultValue": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "16566470716356207302"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "18444959286864838274"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('IISPack-deployment-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "17534859391202854246"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "IIS"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "rulename": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "ruleshortname": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "kind": "Windows",
                            "xPathQueries": [
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2221)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5152)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5010 or EventID=5011 or EventID=5012 or EventID=5013)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5009)]]",
                              "Application!*[System[Provider[@Name='Active Server Pages'] and (EventID=500 or EventID=499 or EventID=23 or EventID=22 or EventID=21 or EventID=20 or EventID=19 or EventID=18 or EventID=17 or EventID=16 or EventID=9 or EventID=8 or EventID=7 or EventID=6 or EventID=5)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1037)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2208)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2206)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2201)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2203)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2204)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2274 or EventID=2268 or EventID=2220 or EventID=2219 or EventID=2214)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5088 or EventID=5061 or EventID=5060)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2296)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2295)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2293)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1133)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2261)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5036)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2264)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2298)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2218)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2258)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2227)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2233)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2226 or EventID=2230 or EventID=2231 or EventID=2232)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5174 or EventID=5179 or EventID=5180)]]"
                            ],
                            "performanceCounters": [
                              "\\Web Service(_Total)\\Bytes Received/sec",
                              "\\Web Service(_Total)\\Bytes Sent/sec",
                              "\\Web Service(_Total)\\Bytes Total/sec",
                              "\\Web Service(_Total)\\Connection Attempts/sec",
                              "\\Web Service(_Total)\\Current Connections",
                              "\\Web Service(_Total)\\Total Method Requests/sec",
                              "\\Microsoft FTP Service(_Total)\\Bytes Total/sec",
                              "\\Microsoft FTP Service(_Total)\\Current Connections",
                              "\\SMTP Server(_Total)\\Bytes Received/sec",
                              "\\SMTP Server(_Total)\\Bytes Sent/sec",
                              "\\SMTP Server(_Total)\\Bytes Total/sec",
                              "\\SMTP Server(_Total)\\Inbound Connections Current",
                              "\\SMTP Server(_Total)\\Message Bytes Received/sec",
                              "\\SMTP Server(_Total)\\Message Bytes Sent/sec",
                              "\\SMTP Server(_Total)\\Messages Delivered/sec",
                              "\\SMTP Server(_Total)\\Messages Received/sec",
                              "\\SMTP Server(_Total)\\Messages Sent/sec",
                              "\\SMTP Server(_Total)\\Outbound Connections Current",
                              "\\SMTP Server(_Total)\\Total Messages Submitted",
                              "\\SMTP Server(SMTP 1)\\Bytes Received/sec",
                              "\\SMTP Server(SMTP 1)\\Bytes Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Bytes Total/sec",
                              "\\SMTP Server(SMTP 1)\\Inbound Connections Current",
                              "\\SMTP Server(SMTP 1)\\Message Bytes Received/sec",
                              "\\SMTP Server(SMTP 1)\\Message Bytes Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Delivered/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Received/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Outbound Connections Current",
                              "\\SMTP Server(SMTP 1)\\Total Messages Submitted"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "instanceName": {
                                    "value": "[parameters('instanceName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "9461356001780640398"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "instanceName": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "moduleprefix": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                                        "alertRuleDisplayName": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                                        "alertRuleName": "AlertRule-IIS-2012-1",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2221) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                                        "alertRuleDisplayName": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                                        "alertRuleName": "AlertRule-IIS-2012-2",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5152) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool worker process is unresponsive",
                                        "alertRuleDisplayName": "Application Pool worker process is unresponsive",
                                        "alertRuleName": "AlertRule-IIS-2012-3",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5010,5011,5012,5013) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool worker process terminated unexpectedly",
                                        "alertRuleDisplayName": "Application Pool worker process terminated unexpectedly",
                                        "alertRuleName": "AlertRule-IIS-2012-4",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5009) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "ASP application error occurred",
                                        "alertRuleDisplayName": "ASP application error occurred",
                                        "alertRuleName": "AlertRule-IIS-2012-5",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (500,499,23,22,21,20,19,18,17,16,9,8,7,6,5) and EventLog == 'Application' and Source == 'Active Server Pages'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP control channel for the WWW Service did not open",
                                        "alertRuleDisplayName": "HTTP control channel for the WWW Service did not open",
                                        "alertRuleName": "AlertRule-IIS-2012-6",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1037) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not create a client connection object for user",
                                        "alertRuleDisplayName": "HTTP Server could not create a client connection object for user",
                                        "alertRuleName": "AlertRule-IIS-2012-7",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2208) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not create the main connection socket",
                                        "alertRuleDisplayName": "HTTP Server could not create the main connection socket",
                                        "alertRuleName": "AlertRule-IIS-2012-8",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2206) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not initialize its security",
                                        "alertRuleDisplayName": "HTTP Server could not initialize its security",
                                        "alertRuleName": "AlertRule-IIS-2012-9",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2201) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not initialize the socket library",
                                        "alertRuleDisplayName": "HTTP Server could not initialize the socket library",
                                        "alertRuleName": "AlertRule-IIS-2012-10",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2203) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server was unable to initialize due to a shortage of available memory",
                                        "alertRuleDisplayName": "HTTP Server was unable to initialize due to a shortage of available memory",
                                        "alertRuleName": "AlertRule-IIS-2012-11",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2204) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "ISAPI application error detected",
                                        "alertRuleDisplayName": "ISAPI application error detected",
                                        "alertRuleName": "AlertRule-IIS-2012-12",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2274,2268,2220,2219,2214) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Job object associated with the application pool encountered an error",
                                        "alertRuleDisplayName": "Job object associated with the application pool encountered an error",
                                        "alertRuleName": "AlertRule-IIS-2012-13",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5088,5061,5060) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Module has an invalid precondition",
                                        "alertRuleDisplayName": "Module has an invalid precondition",
                                        "alertRuleName": "AlertRule-IIS-2012-14",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2296) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Module registration error detected (failed to find RegisterModule entrypoint)",
                                        "alertRuleDisplayName": "Module registration error detected (failed to find RegisterModule entrypoint)",
                                        "alertRuleName": "AlertRule-IIS-2012-15",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2295) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Module registration error detected (module returned an error during registration)",
                                        "alertRuleDisplayName": "Module registration error detected (module returned an error during registration)",
                                        "alertRuleName": "AlertRule-IIS-2012-16",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2293) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Only one type of logging can be enabled at a time",
                                        "alertRuleDisplayName": "Only one type of logging can be enabled at a time",
                                        "alertRuleName": "AlertRule-IIS-2012-17",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1133) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                                      },
                                      {
                                        "alertRuleDescription": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                                        "alertRuleDisplayName": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                                        "alertRuleName": "AlertRule-IIS-2012-18",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2261) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The configuration manager for WAS did not initialize",
                                        "alertRuleDisplayName": "The configuration manager for WAS did not initialize",
                                        "alertRuleName": "AlertRule-IIS-2012-19",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5036) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "The directory specified for caching compressed content is invalid",
                                        "alertRuleDisplayName": "The directory specified for caching compressed content is invalid",
                                        "alertRuleName": "AlertRule-IIS-2012-20",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2264) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The Global Modules list is empty",
                                        "alertRuleDisplayName": "The Global Modules list is empty",
                                        "alertRuleName": "AlertRule-IIS-2012-21",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2298) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The HTTP server encountered an error processing the server side include file",
                                        "alertRuleDisplayName": "The HTTP server encountered an error processing the server side include file",
                                        "alertRuleName": "AlertRule-IIS-2012-22",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2218) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server failed to close client connections to URLs during shutdown",
                                        "alertRuleDisplayName": "The server failed to close client connections to URLs during shutdown",
                                        "alertRuleName": "AlertRule-IIS-2012-23",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2258) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to acquire a license for a SSL connection",
                                        "alertRuleDisplayName": "The server was unable to acquire a license for a SSL connection",
                                        "alertRuleName": "AlertRule-IIS-2012-24",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2227) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to allocate a buffer to read a file",
                                        "alertRuleDisplayName": "The server was unable to allocate a buffer to read a file",
                                        "alertRuleName": "AlertRule-IIS-2012-25",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2233) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to read a file",
                                        "alertRuleDisplayName": "The server was unable to read a file",
                                        "alertRuleName": "AlertRule-IIS-2012-26",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2226,2230,2231,2232) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "WAS detected invalid configuration data",
                                        "alertRuleDisplayName": "WAS detected invalid configuration data",
                                        "alertRuleName": "AlertRule-IIS-2012-27",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5174,5179,5180) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[variables('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "17858688129795365440"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "dimensions": "[if(contains(parameters('alertlist')[copyIndex()], 'dimensions'), createObject('value', parameters('alertlist')[copyIndex()].dimensions), createObject('value', null()))]",
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.32.4.45862",
                                                      "templateHash": "10159755056440989647"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "dimensions": {
                                                      "type": "array",
                                                      "defaultValue": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "16566470716356207302"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "18444959286864838274"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "rulename": {
                                    "value": "[variables('rulename')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "wsfriendlyname": {
                                    "value": "[variables('workspaceFriendlyName')]"
                                  },
                                  "kind": {
                                    "value": "[variables('kind')]"
                                  },
                                  "xPathQueries": {
                                    "value": "[variables('xPathQueries')]"
                                  },
                                  "counterSpecifiers": {
                                    "value": "[variables('performanceCounters')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "15691414683408659274"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "defaultValue": "Windows"
                                    },
                                    "wsfriendlyname": {
                                      "type": "string",
                                      "defaultValue": "TBD"
                                    },
                                    "xPathQueries": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "counterSpecifiers": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "samplingFrequencyInSeconds": {
                                      "type": "int",
                                      "defaultValue": 300
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('rulename')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "[parameters('kind')]",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceId')]",
                                              "name": "[parameters('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataSources": {
                                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), null(), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                                          "performanceCounters": [
                                            {
                                              "streams": [
                                                "Microsoft-Perf"
                                              ],
                                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                                              "name": "PerfCountersDataSource"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Event",
                                              "Microsoft-Perf"
                                            ],
                                            "destinations": [
                                              "[parameters('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrIISLogs-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "ruleName": {
                                    "value": "[format('{0}-IISLogs', variables('rulename'))]"
                                  },
                                  "lawResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "endpointResourceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "11212238793022467482"
                                    }
                                  },
                                  "parameters": {
                                    "ruleName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the name of the data collection rule to create."
                                      }
                                    },
                                    "endpointResourceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the resource id of the data collection endpoint."
                                      }
                                    },
                                    "location": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the location in which to create the data collection rule."
                                      }
                                    },
                                    "lawResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    }
                                  },
                                  "variables": {
                                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('ruleName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "Windows",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                        "dataSources": {
                                          "iisLogs": [
                                            {
                                              "streams": [
                                                "Microsoft-W3CIISLog"
                                              ],
                                              "name": "iisLogsDataSource"
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('lawResourceId')]",
                                              "name": "[variables('lawFriendlyName')]"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-W3CIISLog"
                                            ],
                                            "destinations": [
                                              "[variables('lawFriendlyName')]"
                                            ],
                                            "transformKql": "source",
                                            "outputStream": "Microsoft-W3CIISLog"
                                          }
                                        ],
                                        "streamDeclarations": {
                                          "Custom-MyTable_CL": {
                                            "columns": [
                                              {
                                                "name": "TimeGenerated",
                                                "type": "datetime"
                                              },
                                              {
                                                "name": "RawData",
                                                "type": "string"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('IIS2016-deployment-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "1996276289550204623"
                            }
                          },
                          "parameters": {
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "IIS2016"
                            },
                            "solutionTag": {
                              "type": "string",
                              "defaultValue": "MonitorStarterPacks"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "instanceName": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            }
                          },
                          "variables": {
                            "rulename": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "ruleshortname": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "kind": "Windows",
                            "xPathQueries": [
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1071 or EventID=1073)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1135 or EventID=1134)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2226 or EventID=2230 or EventID=2231 or EventID=2232)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2274 or EventID=2268 or EventID=2220 or EventID=2219 or EventID=2214)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5172 or EventID=5173)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5174 or EventID=5179 or EventID=5180)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5152)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1037)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1062)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1126)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1133)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1173)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC'] and (EventID=1175)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2201)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2203)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2204)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2206)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2208)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2218)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2227)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2233)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2258)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2261)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2264)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2281)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2293)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2295)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2296)]]",
                              "Application!*[System[Provider[@Name='Microsoft-Windows-IIS-W3SVC-WP'] and (EventID=2298)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5005)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5030)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5036)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5053)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5063)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5066)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5067)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-WAS'] and (EventID=5153)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6001)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6002)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6003)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6004)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6005)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6006)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6007)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6008)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6009)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6010)]]",
                              "System!*[System[Provider[@Name='Microsoft-Windows-W3LOGSVC'] and (EventID=6011)]]",
                              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7023 or EventID=7024)]]",
                              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7031)]]",
                              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7034)]]",
                              "System!*[System[Provider[@Name='Service Control Manager'] and (EventID=7043)]]"
                            ],
                            "performanceCounters": [
                              "\\Web Service(_Total)\\Bytes Received/sec",
                              "\\Web Service(_Total)\\Bytes Sent/sec",
                              "\\Web Service(_Total)\\Bytes Total/sec",
                              "\\Web Service(_Total)\\Connection Attempts/sec",
                              "\\Web Service(_Total)\\Current Connections",
                              "\\Web Service(_Total)\\Total Method Requests/sec",
                              "\\Microsoft FTP Service(_Total)\\Bytes Total/sec",
                              "\\Microsoft FTP Service(_Total)\\Current Connections",
                              "\\SMTP Server(_Total)\\Bytes Received/sec",
                              "\\SMTP Server(_Total)\\Bytes Sent/sec",
                              "\\SMTP Server(_Total)\\Bytes Total/sec",
                              "\\SMTP Server(_Total)\\Inbound Connections Current",
                              "\\SMTP Server(_Total)\\Message Bytes Received/sec",
                              "\\SMTP Server(_Total)\\Message Bytes Sent/sec",
                              "\\SMTP Server(_Total)\\Messages Delivered/sec",
                              "\\SMTP Server(_Total)\\Messages Received/sec",
                              "\\SMTP Server(_Total)\\Messages Sent/sec",
                              "\\SMTP Server(_Total)\\Outbound Connections Current",
                              "\\SMTP Server(_Total)\\Total Messages Submitted",
                              "\\SMTP Server(SMTP 1)\\Bytes Received/sec",
                              "\\SMTP Server(SMTP 1)\\Bytes Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Bytes Total/sec",
                              "\\SMTP Server(SMTP 1)\\Inbound Connections Current",
                              "\\SMTP Server(SMTP 1)\\Message Bytes Received/sec",
                              "\\SMTP Server(SMTP 1)\\Message Bytes Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Delivered/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Received/sec",
                              "\\SMTP Server(SMTP 1)\\Messages Sent/sec",
                              "\\SMTP Server(SMTP 1)\\Outbound Connections Current",
                              "\\SMTP Server(SMTP 1)\\Total Messages Submitted"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "instanceName": {
                                    "value": "[parameters('instanceName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "9461356001780640398"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "instanceName": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "moduleprefix": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                                        "alertRuleDisplayName": "A server side include file has included itself or the maximum depth of server side includes has been exceeded",
                                        "alertRuleName": "AlertRule-IIS-2012-1",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2221) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                                        "alertRuleDisplayName": "Application Pool has an IdleTimeout equal to or greater than the PeriodicRestart time",
                                        "alertRuleName": "AlertRule-IIS-2012-2",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5152) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool worker process is unresponsive",
                                        "alertRuleDisplayName": "Application Pool worker process is unresponsive",
                                        "alertRuleName": "AlertRule-IIS-2012-3",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5010,5011,5012,5013) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Application Pool worker process terminated unexpectedly",
                                        "alertRuleDisplayName": "Application Pool worker process terminated unexpectedly",
                                        "alertRuleName": "AlertRule-IIS-2012-4",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5009) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "ASP application error occurred",
                                        "alertRuleDisplayName": "ASP application error occurred",
                                        "alertRuleName": "AlertRule-IIS-2012-5",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (500,499,23,22,21,20,19,18,17,16,9,8,7,6,5) and EventLog == 'Application' and Source == 'Active Server Pages'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP control channel for the WWW Service did not open",
                                        "alertRuleDisplayName": "HTTP control channel for the WWW Service did not open",
                                        "alertRuleName": "AlertRule-IIS-2012-6",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1037) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not create a client connection object for user",
                                        "alertRuleDisplayName": "HTTP Server could not create a client connection object for user",
                                        "alertRuleName": "AlertRule-IIS-2012-7",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2208) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not create the main connection socket",
                                        "alertRuleDisplayName": "HTTP Server could not create the main connection socket",
                                        "alertRuleName": "AlertRule-IIS-2012-8",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2206) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not initialize its security",
                                        "alertRuleDisplayName": "HTTP Server could not initialize its security",
                                        "alertRuleName": "AlertRule-IIS-2012-9",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2201) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server could not initialize the socket library",
                                        "alertRuleDisplayName": "HTTP Server could not initialize the socket library",
                                        "alertRuleName": "AlertRule-IIS-2012-10",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2203) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "HTTP Server was unable to initialize due to a shortage of available memory",
                                        "alertRuleDisplayName": "HTTP Server was unable to initialize due to a shortage of available memory",
                                        "alertRuleName": "AlertRule-IIS-2012-11",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2204) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "ISAPI application error detected",
                                        "alertRuleDisplayName": "ISAPI application error detected",
                                        "alertRuleName": "AlertRule-IIS-2012-12",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2274,2268,2220,2219,2214) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Job object associated with the application pool encountered an error",
                                        "alertRuleDisplayName": "Job object associated with the application pool encountered an error",
                                        "alertRuleName": "AlertRule-IIS-2012-13",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5088,5061,5060) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "Module has an invalid precondition",
                                        "alertRuleDisplayName": "Module has an invalid precondition",
                                        "alertRuleName": "AlertRule-IIS-2012-14",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2296) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Module registration error detected (failed to find RegisterModule entrypoint)",
                                        "alertRuleDisplayName": "Module registration error detected (failed to find RegisterModule entrypoint)",
                                        "alertRuleName": "AlertRule-IIS-2012-15",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2295) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Module registration error detected (module returned an error during registration)",
                                        "alertRuleDisplayName": "Module registration error detected (module returned an error during registration)",
                                        "alertRuleName": "AlertRule-IIS-2012-16",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2293) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "Only one type of logging can be enabled at a time",
                                        "alertRuleDisplayName": "Only one type of logging can be enabled at a time",
                                        "alertRuleName": "AlertRule-IIS-2012-17",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1133) and EventLog == 'System' and Source == 'Microsoft-Windows-IIS-W3SVC'"
                                      },
                                      {
                                        "alertRuleDescription": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                                        "alertRuleDisplayName": "SF_NOTIFY_READ_RAW_DATA filter notification is not supported in IIS 8",
                                        "alertRuleName": "AlertRule-IIS-2012-18",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2261) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The configuration manager for WAS did not initialize",
                                        "alertRuleDisplayName": "The configuration manager for WAS did not initialize",
                                        "alertRuleName": "AlertRule-IIS-2012-19",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5036) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      },
                                      {
                                        "alertRuleDescription": "The directory specified for caching compressed content is invalid",
                                        "alertRuleDisplayName": "The directory specified for caching compressed content is invalid",
                                        "alertRuleName": "AlertRule-IIS-2012-20",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2264) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The Global Modules list is empty",
                                        "alertRuleDisplayName": "The Global Modules list is empty",
                                        "alertRuleName": "AlertRule-IIS-2012-21",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2298) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The HTTP server encountered an error processing the server side include file",
                                        "alertRuleDisplayName": "The HTTP server encountered an error processing the server side include file",
                                        "alertRuleName": "AlertRule-IIS-2012-22",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2218) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server failed to close client connections to URLs during shutdown",
                                        "alertRuleDisplayName": "The server failed to close client connections to URLs during shutdown",
                                        "alertRuleName": "AlertRule-IIS-2012-23",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2258) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to acquire a license for a SSL connection",
                                        "alertRuleDisplayName": "The server was unable to acquire a license for a SSL connection",
                                        "alertRuleName": "AlertRule-IIS-2012-24",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2227) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to allocate a buffer to read a file",
                                        "alertRuleDisplayName": "The server was unable to allocate a buffer to read a file",
                                        "alertRuleName": "AlertRule-IIS-2012-25",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2233) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "The server was unable to read a file",
                                        "alertRuleDisplayName": "The server was unable to read a file",
                                        "alertRuleName": "AlertRule-IIS-2012-26",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2226,2230,2231,2232) and EventLog == 'Application' and Source == 'Microsoft-Windows-IIS-W3SVC-WP'"
                                      },
                                      {
                                        "alertRuleDescription": "WAS detected invalid configuration data",
                                        "alertRuleDisplayName": "WAS detected invalid configuration data",
                                        "alertRuleName": "AlertRule-IIS-2012-27",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5174,5179,5180) and EventLog == 'System' and Source == 'Microsoft-Windows-WAS'"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[variables('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "17858688129795365440"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "dimensions": "[if(contains(parameters('alertlist')[copyIndex()], 'dimensions'), createObject('value', parameters('alertlist')[copyIndex()].dimensions), createObject('value', null()))]",
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.32.4.45862",
                                                      "templateHash": "10159755056440989647"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "dimensions": {
                                                      "type": "array",
                                                      "defaultValue": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "16566470716356207302"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "18444959286864838274"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "rulename": {
                                    "value": "[variables('rulename')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "wsfriendlyname": {
                                    "value": "[variables('workspaceFriendlyName')]"
                                  },
                                  "kind": {
                                    "value": "[variables('kind')]"
                                  },
                                  "xPathQueries": {
                                    "value": "[variables('xPathQueries')]"
                                  },
                                  "counterSpecifiers": {
                                    "value": "[variables('performanceCounters')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "15691414683408659274"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "defaultValue": "Windows"
                                    },
                                    "wsfriendlyname": {
                                      "type": "string",
                                      "defaultValue": "TBD"
                                    },
                                    "xPathQueries": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "counterSpecifiers": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "samplingFrequencyInSeconds": {
                                      "type": "int",
                                      "defaultValue": 300
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('rulename')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "[parameters('kind')]",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceId')]",
                                              "name": "[parameters('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataSources": {
                                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), null(), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                                          "performanceCounters": [
                                            {
                                              "streams": [
                                                "Microsoft-Perf"
                                              ],
                                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                                              "name": "PerfCountersDataSource"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Event",
                                              "Microsoft-Perf"
                                            ],
                                            "destinations": [
                                              "[parameters('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrIISLogs-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "ruleName": {
                                    "value": "[format('{0}-IISLogs', variables('rulename'))]"
                                  },
                                  "lawResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "endpointResourceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "11212238793022467482"
                                    }
                                  },
                                  "parameters": {
                                    "ruleName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the name of the data collection rule to create."
                                      }
                                    },
                                    "endpointResourceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the resource id of the data collection endpoint."
                                      }
                                    },
                                    "location": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the location in which to create the data collection rule."
                                      }
                                    },
                                    "lawResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    }
                                  },
                                  "variables": {
                                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('ruleName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "Windows",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                        "dataSources": {
                                          "iisLogs": [
                                            {
                                              "streams": [
                                                "Microsoft-W3CIISLog"
                                              ],
                                              "name": "iisLogsDataSource"
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('lawResourceId')]",
                                              "name": "[variables('lawFriendlyName')]"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-W3CIISLog"
                                            ],
                                            "destinations": [
                                              "[variables('lawFriendlyName')]"
                                            ],
                                            "transformKql": "source",
                                            "outputStream": "Microsoft-W3CIISLog"
                                          }
                                        ],
                                        "streamDeclarations": {
                                          "Custom-MyTable_CL": {
                                            "columns": [
                                              {
                                                "name": "TimeGenerated",
                                                "type": "datetime"
                                              },
                                              {
                                                "name": "RawData",
                                                "type": "string"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('DNS2016-deployment-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "15095836579749806306"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "DNS2016"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "rulename": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "ruleshortname": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "kind": "Windows",
                            "xPathQueries": [
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=10)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1000)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1004)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1200)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1201)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1203)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=131)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=140)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=150)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1540)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4000)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4006)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4007)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4010)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4011)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4012)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4014)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4015)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4016)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4017)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=408)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=409)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=410)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=414)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4510)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4511)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4512)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=501)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=502)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=503)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=504)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=5051)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=6527)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=6702)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=706)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7060)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7616)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7636)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7642)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7644)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=777)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=111 or EventID=6533)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4018 or EventID=4019)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4513 or EventID=4514)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=4520 or EventID=4521)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=707 or EventID=1003)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7692 or EventID=790)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=796 or EventID=799)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=2200 or EventID=2202 or EventID=2203)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=7502 or EventID=7503 or EventID=7504)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=792 or EventID=795 or EventID=797)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=1001 or EventID=1008 or EventID=3151 or EventID=3152 or EventID=3153)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=403 or EventID=404 or EventID=405 or EventID=406 or EventID=407)]]",
                              "DNS Server!*[System[Provider[@Name='Microsoft-Windows-DNS-Server-Service'] and (EventID=500 or EventID=505 or EventID=506 or EventID=507 or EventID=2204)]]"
                            ],
                            "performanceCounters": [
                              "\\DNS\\AXFR Request Received",
                              "\\DNS\\AXFR Request Sent",
                              "\\DNS\\AXFR Response Received",
                              "\\DNS\\AXFR Success Received",
                              "\\DNS\\AXFR Success Sent",
                              "\\DNS\\Caching Memory",
                              "\\DNS\\Data Flush Pages/sec",
                              "\\DNS\\Data Flushes/sec",
                              "\\DNS\\Database Node Memory",
                              "\\DNS\\Dynamic Update NoOperation",
                              "\\DNS\\Dynamic Update NoOperation/sec",
                              "\\DNS\\Dynamic Update Queued",
                              "\\DNS\\Dynamic Update Received",
                              "\\DNS\\Dynamic Update Received/sec",
                              "\\DNS\\Dynamic Update Rejected",
                              "\\DNS\\Dynamic Update TimeOuts",
                              "\\DNS\\Dynamic Update Written to Database",
                              "\\DNS\\Dynamic Update Written to Database/sec",
                              "\\DNS\\IXFR Request Received",
                              "\\DNS\\IXFR Request Sent",
                              "\\DNS\\IXFR Response Received",
                              "\\DNS\\IXFR Success Received",
                              "\\DNS\\IXFR Success Sent",
                              "\\DNS\\IXFR TCP Success Received",
                              "\\DNS\\IXFR UDP Success Received",
                              "\\DNS\\Nbstat Memory",
                              "\\DNS\\Notify Received",
                              "\\DNS\\Notify Sent",
                              "\\DNS\\Query Dropped Bad Socket",
                              "\\DNS\\Query Dropped Bad Socket/sec",
                              "\\DNS\\Query Dropped By Policy",
                              "\\DNS\\Query Dropped By Policy/sec",
                              "\\DNS\\Query Dropped By Response Rate Limiting",
                              "\\DNS\\Query Dropped By Response Rate Limiting/sec",
                              "\\DNS\\Query Dropped Send",
                              "\\DNS\\Query Dropped Send/sec",
                              "\\DNS\\Query Dropped Total",
                              "\\DNS\\Query Dropped Total/sec",
                              "\\DNS\\Record Flow Memory",
                              "\\DNS\\Recursive Queries",
                              "\\DNS\\Recursive Queries/sec",
                              "\\DNS\\Recursive Query Failure",
                              "\\DNS\\Recursive Query Failure/sec",
                              "\\DNS\\Recursive Send TimeOuts",
                              "\\DNS\\Recursive TimeOut/sec",
                              "\\DNS\\Responses Suppressed",
                              "\\DNS\\Responses Suppressed/sec",
                              "\\DNS\\Secure Update Failure",
                              "\\DNS\\Secure Update Received",
                              "\\DNS\\Secure Update Received/sec",
                              "\\DNS\\TCP Message Memory",
                              "\\DNS\\TCP Query Received",
                              "\\DNS\\TCP Query Received/sec",
                              "\\DNS\\TCP Response Sent",
                              "\\DNS\\TCP Response Sent/sec",
                              "\\DNS\\Total Query Received",
                              "\\DNS\\Total Query Received/sec",
                              "\\DNS\\Total Remote Inflight Queries",
                              "\\DNS\\Total Response Sent",
                              "\\DNS\\Total Response Sent/sec",
                              "\\DNS\\UDP Message Memory",
                              "\\DNS\\UDP Query Received",
                              "\\DNS\\UDP Query Received/sec",
                              "\\DNS\\UDP Response Sent",
                              "\\DNS\\UDP Response Sent/sec",
                              "\\DNS\\Unmatched Responses Received",
                              "\\DNS\\WINS Lookup Received",
                              "\\DNS\\WINS Lookup Received/sec",
                              "\\DNS\\WINS Response Sent",
                              "\\DNS\\WINS Response Sent/sec",
                              "\\DNS\\WINS Reverse Lookup Received",
                              "\\DNS\\WINS Reverse Lookup Received/sec",
                              "\\DNS\\WINS Reverse Response Sent",
                              "\\DNS\\WINS Reverse Response Sent/sec",
                              "\\DNS\\Zone Transfer Failure",
                              "\\DNS\\Zone Transfer Request Received",
                              "\\DNS\\Zone Transfer SOA Request Sent",
                              "\\DNS\\Zone Transfer Success"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "instanceName": {
                                    "value": "[parameters('instanceName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "10681976057115393931"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "instanceName": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "moduleprefix": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "Service.DependencyFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.DependencyFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-10",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (10) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.FileOpenError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.FileOpenError",
                                        "alertRuleName": "AlertRule-Dns-2016-1000",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1000) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.CouldNotOpenDatabase",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.CouldNotOpenDatabase",
                                        "alertRuleName": "AlertRule-Dns-2016-1004",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1004) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.BootFileNotFound",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.BootFileNotFound",
                                        "alertRuleName": "AlertRule-Dns-2016-1200",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1200) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.ZoneCreationFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.ZoneCreationFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-1201",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1201) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.NoForwardingAddresses",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.NoForwardingAddresses",
                                        "alertRuleName": "AlertRule-Dns-2016-1203",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1203) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "WINSConnector.Initialize.Failed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.WINSConnector.Initialize.Failed",
                                        "alertRuleName": "AlertRule-Dns-2016-131",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (131) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "RPC.Initialize.Failed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RPC.Initialize.Failed",
                                        "alertRuleName": "AlertRule-Dns-2016-140",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (140) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.PluginInitFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.PluginInitFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-150",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (150) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.DomainNodeCreationError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.DomainNodeCreationError",
                                        "alertRuleName": "AlertRule-Dns-2016-1540",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1540) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.OpenFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.OpenFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4000",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4000) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.LoadFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.LoadFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4006",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4006) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.OpenPartitionFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.OpenPartitionFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4007",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4007) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.RecordLoadFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.RecordLoadFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4010",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4010) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.WriteFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.WriteFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4011",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4011) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.WriteTimeout",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.WriteTimeout",
                                        "alertRuleName": "AlertRule-Dns-2016-4012",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4012) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.SecurityInterfaceFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.SecurityInterfaceFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4014",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4014) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.InterfaceError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.InterfaceError",
                                        "alertRuleName": "AlertRule-Dns-2016-4015",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4015) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.LDAPTimeout",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.LDAPTimeout",
                                        "alertRuleName": "AlertRule-Dns-2016-4016",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4016) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.DNSAdminsError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.DNSAdminsError",
                                        "alertRuleName": "AlertRule-Dns-2016-4017",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4017) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.OpenSocketForAddress",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.OpenSocketForAddress",
                                        "alertRuleName": "AlertRule-Dns-2016-408",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (408) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.UpdateListenAddresses",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.UpdateListenAddresses",
                                        "alertRuleName": "AlertRule-Dns-2016-409",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (409) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.InvalidListenAddresses",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidListenAddresses",
                                        "alertRuleName": "AlertRule-Dns-2016-410",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (410) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.SingleLabelHostname",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.SingleLabelHostname",
                                        "alertRuleName": "AlertRule-Dns-2016-414",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (414) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.FSMOUnavailable",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.FSMOUnavailable",
                                        "alertRuleName": "AlertRule-Dns-2016-4510",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4510) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.DeleteError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.DeleteError",
                                        "alertRuleName": "AlertRule-Dns-2016-4511",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4511) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.PartitionCreateError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.PartitionCreateError",
                                        "alertRuleName": "AlertRule-Dns-2016-4512",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4512) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.InvalidZoneType",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidZoneType",
                                        "alertRuleName": "AlertRule-Dns-2016-501",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (501) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.NoZoneFile",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.NoZoneFile",
                                        "alertRuleName": "AlertRule-Dns-2016-502",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (502) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.SecondaryRequiresMasters",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.SecondaryRequiresMasters",
                                        "alertRuleName": "AlertRule-Dns-2016-503",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (503) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.RegZoneCreationFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.RegZoneCreationFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-504",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (504) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.Memory.Warning",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.Memory.Warning",
                                        "alertRuleName": "AlertRule-Dns-2016-5051",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (5051) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.ZoneExpiration",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.ZoneExpiration",
                                        "alertRuleName": "AlertRule-Dns-2016-6527",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (6527) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.UpdateDSPeersFailure",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.UpdateDSPeersFailure",
                                        "alertRuleName": "AlertRule-Dns-2016-6702",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (6702) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "RootHints.NoRootNameServer",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RootHints.NoRootNameServer",
                                        "alertRuleName": "AlertRule-Dns-2016-706",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (706) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.ConnectionError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.ConnectionError",
                                        "alertRuleName": "AlertRule-Dns-2016-7060",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7060) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "DNSSEC.TALoadFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TALoadFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-7616",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7616) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "DNSSEC.TPDeleted",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TPDeleted",
                                        "alertRuleName": "AlertRule-Dns-2016-7636",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7636) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "DNSSEC.InvalidTA",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.InvalidTA",
                                        "alertRuleName": "AlertRule-Dns-2016-7642",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7642) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "DNSSEC.TARefreshFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.TARefreshFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-7644",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7644) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "DNSSEC.ZoneUnSignFailure",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.DNSSEC.ZoneUnSignFailure",
                                        "alertRuleName": "AlertRule-Dns-2016-777",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (777) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.ThreadCreationFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.ThreadCreationFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-111",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (111,6533) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.BackgroundLoadFailure",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.BackgroundLoadFailure",
                                        "alertRuleName": "AlertRule-Dns-2016-4018",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4018,4019) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.EnlistmentFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.EnlistmentFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4513",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4513,4514) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ADI.RetryableZoneOperationFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.ADI.RetryableZoneOperationFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-4520",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (4520,4521) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "RootHints.CacheFileError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.RootHints.CacheFileError",
                                        "alertRuleName": "AlertRule-Dns-2016-707",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (707,1003) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Server.EDNS0.ZoneTransfer.OptionInvalid",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.Server.EDNS0.ZoneTransfer.OptionInvalid",
                                        "alertRuleName": "AlertRule-Dns-2016-7692",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7692,790) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "ClientSubnet.LoadFail",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.ClientSubnet.LoadFail",
                                        "alertRuleName": "AlertRule-Dns-2016-796",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (796,799) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.RegistryOperationFailed",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.RegistryOperationFailed",
                                        "alertRuleName": "AlertRule-Dns-2016-2200",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (2200,2202,2203) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.Memory.Error",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.Memory.Error",
                                        "alertRuleName": "AlertRule-Dns-2016-7502",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (7502,7503,7504) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Policy.ServerLevel.LoadFail",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Rules.Policy.ServerLevel.LoadFail",
                                        "alertRuleName": "AlertRule-Dns-2016-792",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (792,795,797) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.FileError",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.FileError",
                                        "alertRuleName": "AlertRule-Dns-2016-1001",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (1001,1008,3151,3152,3153) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Service.SocketFailure",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Service.SocketFailure",
                                        "alertRuleName": "AlertRule-Dns-2016-403",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (403,404,405,406,407) and EventLog == 'DNS Server'"
                                      },
                                      {
                                        "alertRuleDescription": "Configuration.InvalidRegistrySetting",
                                        "alertRuleDisplayName": "Microsoft.Windows.DNSServer.2016.Configuration.InvalidRegistrySetting",
                                        "alertRuleName": "AlertRule-Dns-2016-500",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (500,505,506,507,2204) and EventLog == 'DNS Server'"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[variables('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "17858688129795365440"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "dimensions": "[if(contains(parameters('alertlist')[copyIndex()], 'dimensions'), createObject('value', parameters('alertlist')[copyIndex()].dimensions), createObject('value', null()))]",
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.32.4.45862",
                                                      "templateHash": "10159755056440989647"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "dimensions": {
                                                      "type": "array",
                                                      "defaultValue": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "16566470716356207302"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "18444959286864838274"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "rulename": {
                                    "value": "[variables('rulename')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "wsfriendlyname": {
                                    "value": "[variables('workspaceFriendlyName')]"
                                  },
                                  "kind": {
                                    "value": "[variables('kind')]"
                                  },
                                  "xPathQueries": {
                                    "value": "[variables('xPathQueries')]"
                                  },
                                  "counterSpecifiers": {
                                    "value": "[variables('performanceCounters')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "15691414683408659274"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "defaultValue": "Windows"
                                    },
                                    "wsfriendlyname": {
                                      "type": "string",
                                      "defaultValue": "TBD"
                                    },
                                    "xPathQueries": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "counterSpecifiers": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "samplingFrequencyInSeconds": {
                                      "type": "int",
                                      "defaultValue": 300
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('rulename')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "[parameters('kind')]",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceId')]",
                                              "name": "[parameters('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataSources": {
                                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), null(), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                                          "performanceCounters": [
                                            {
                                              "streams": [
                                                "Microsoft-Perf"
                                              ],
                                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                                              "name": "PerfCountersDataSource"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Event",
                                              "Microsoft-Perf"
                                            ],
                                            "destinations": [
                                              "[parameters('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('PS2016-deployment-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "14932330406794107409"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string",
                              "defaultValue": "PS2016",
                              "metadata": {
                                "description": "The tag to be used for the solution."
                              }
                            },
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "rulename": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "ruleshortname": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "workspaceFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "kind": "Windows",
                            "xPathQueries": [
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=83) and (Provider[@Name='Microsoft-Windows-PrintBRM' or @Name='PrintBrm'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=360) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Operational!*[System[(EventID=701 or EventID=702 or EventID=703 or EventID=704) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=364 or EventID=365 or EventID=367) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=315) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=371) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=356) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=513 or EventID=514) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=600 or EventID=601) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=515 or EventID=516 or EventID=517 or EventID=518 or EventID=519 or EventID=520) and (Provider[@Name='Microsoft-Windows-PrintService'])]]",
                              "Microsoft-Windows-PrintService/Admin!*[System[(EventID=502 or EventID=503 or EventID=504 or EventID=505 or EventID=506 or EventID=507 or EventID=508 or EventID=509 or EventID=510 or EventID=511 or EventID=512) and (Provider[@Name='Microsoft-Windows-PrintService'])]]"
                            ],
                            "performanceCounters": [
                              "\\Print Queue(_Total)\\Jobs",
                              "\\Print Queue(_Total)\\Jobs Spooling",
                              "\\Print Queue(_Total)\\Total Jobs Printed",
                              "\\Print Queue(_Total)\\Total Pages Printed"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('dcrPerformance-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "rulename": {
                                    "value": "[variables('rulename')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "wsfriendlyname": {
                                    "value": "[variables('workspaceFriendlyName')]"
                                  },
                                  "kind": {
                                    "value": "[variables('kind')]"
                                  },
                                  "xPathQueries": {
                                    "value": "[variables('xPathQueries')]"
                                  },
                                  "counterSpecifiers": {
                                    "value": "[variables('performanceCounters')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "15691414683408659274"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "rulename": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "defaultValue": "Windows"
                                    },
                                    "wsfriendlyname": {
                                      "type": "string",
                                      "defaultValue": "TBD"
                                    },
                                    "xPathQueries": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "counterSpecifiers": {
                                      "type": "array",
                                      "defaultValue": []
                                    },
                                    "samplingFrequencyInSeconds": {
                                      "type": "int",
                                      "defaultValue": 300
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('rulename')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "[parameters('kind')]",
                                      "properties": {
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "description": "[format('Data Collection Rule for {0}}} - {1}}}', parameters('kind'), parameters('rulename'))]",
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceId')]",
                                              "name": "[parameters('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataSources": {
                                          "windowsEventLogs": "[if(empty(parameters('xPathQueries')), null(), createArray(createObject('streams', createArray('Microsoft-Event'), 'xPathQueries', parameters('xPathQueries'), 'name', 'EventLogsDataSource')))]",
                                          "performanceCounters": [
                                            {
                                              "streams": [
                                                "Microsoft-Perf"
                                              ],
                                              "samplingFrequencyInSeconds": "[parameters('samplingFrequencyInSeconds')]",
                                              "counterSpecifiers": "[parameters('counterSpecifiers')]",
                                              "name": "PerfCountersDataSource"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Event",
                                              "Microsoft-Perf"
                                            ],
                                            "destinations": [
                                              "[parameters('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "dcrId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('rulename'))]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "instanceName": {
                                    "value": "[parameters('instanceName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "5768752023116223663"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "instanceName": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "moduleprefix": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "Ensure the server is accessible.",
                                        "alertRuleDisplayName": "Ensure the server is accessible.",
                                        "alertRuleName": "AlertRule-PS-2016-1",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (83) and EventLog == 'Microsoft-Windows-PrintService/Admin' and (Source == 'Microsoft-Windows-PrintBRM' or Source == 'PrintBrm')"
                                      },
                                      {
                                        "alertRuleDescription": "Manually install the color profile.",
                                        "alertRuleDisplayName": "Manually install the color profile.",
                                        "alertRuleName": "AlertRule-PS-2016-2",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (360) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Retry printing or restart the print server.",
                                        "alertRuleDisplayName": "Retry printing or restart the print server.",
                                        "alertRuleName": "AlertRule-PS-2016-3",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (701,702,703,704) and EventLog == 'Microsoft-Windows-PrintService/Operational!*' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Install the Printer Driver.",
                                        "alertRuleDisplayName": "Install the Printer Driver.",
                                        "alertRuleName": "AlertRule-PS-2016-4",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (364,365,367) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Restart the print spooler fix sharing problems and check Group Policy.",
                                        "alertRuleDisplayName": "Restart the print spooler fix sharing problems and check Group Policy.",
                                        "alertRuleName": "AlertRule-PS-2016-5",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (315) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Restart the print spooler and unshare the printer.",
                                        "alertRuleDisplayName": "Restart the print spooler and unshare the printer.",
                                        "alertRuleName": "AlertRule-PS-2016-6",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (371) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Update the printer driver.",
                                        "alertRuleDisplayName": "Update the printer driver.",
                                        "alertRuleName": "AlertRule-PS-2016-7",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (356) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Check Group Policy and network connectivity.",
                                        "alertRuleDisplayName": "Check Group Policy and network connectivity.",
                                        "alertRuleName": "AlertRule-PS-2016-8",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (513,514) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Try again or install an updated printer driver.",
                                        "alertRuleDisplayName": "Try again or install an updated printer driver.",
                                        "alertRuleName": "AlertRule-PS-2016-9",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (600,601) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Check network connectivity and Group Policy.",
                                        "alertRuleDisplayName": "Check network connectivity and Group Policy.",
                                        "alertRuleName": "AlertRule-PS-2016-10",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (515,516,517,518,519,520) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      },
                                      {
                                        "alertRuleDescription": "Check resource availability.",
                                        "alertRuleDisplayName": "Check resource availability.",
                                        "alertRuleName": "AlertRule-PS-2016-11",
                                        "alertRuleSeverity": 2,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Event | where  EventID in (502,503,504,505,506,507,508,509,510,511,512) and EventLog == 'Microsoft-Windows-PrintService/Admin' and Source == 'Microsoft-Windows-PrintService'"
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[variables('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "17858688129795365440"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "dimensions": "[if(contains(parameters('alertlist')[copyIndex()], 'dimensions'), createObject('value', parameters('alertlist')[copyIndex()].dimensions), createObject('value', null()))]",
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.32.4.45862",
                                                      "templateHash": "10159755056440989647"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "dimensions": {
                                                      "type": "array",
                                                      "defaultValue": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "16566470716356207302"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "18444959286864838274"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Nginx-deployment-{0}-{1}', parameters('instanceName'), parameters('location'))]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "userManagedIdentityResourceId": {
                            "value": "[parameters('userManagedIdentityResourceId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "actionGroupResourceId": {
                            "value": "[parameters('actionGroupResourceId')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "15723327484299479063"
                            }
                          },
                          "parameters": {
                            "actionGroupResourceId": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "packtag": {
                              "type": "string",
                              "defaultValue": "Nginx"
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the data collection endpoint to be used for the deployment."
                              }
                            },
                            "userManagedIdentityResourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the user managed identity to be used for the deployment"
                              }
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "tableName": "NginxLogs",
                            "tableNameToUse": "[format('{0}_CL', variables('tableName'))]",
                            "lawFriendlyName": "[split(parameters('workspaceId'), '/')[8]]",
                            "rulename": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "ruleshortname": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "filePatterns": [
                              "/var/log/nginx/access.log",
                              "/var/log/nginx/error.log"
                            ],
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]",
                            "lawResourceGroup": "[split(parameters('workspaceId'), '/')[4]]",
                            "facilityNames": [
                              "daemon"
                            ],
                            "logLevels": [
                              "Debug",
                              "Info",
                              "Notice",
                              "Warning",
                              "Error",
                              "Critical",
                              "Alert",
                              "Emergency"
                            ]
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[variables('tableName')]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('lawResourceGroup')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "parentname": {
                                    "value": "[variables('lawFriendlyName')]"
                                  },
                                  "tableName": {
                                    "value": "[variables('tableNameToUse')]"
                                  },
                                  "retentionDays": {
                                    "value": 31
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "2081426938105913058"
                                    }
                                  },
                                  "parameters": {
                                    "parentname": {
                                      "type": "string"
                                    },
                                    "tableName": {
                                      "type": "string"
                                    },
                                    "retentionDays": {
                                      "type": "int",
                                      "defaultValue": 31
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.OperationalInsights/workspaces/tables",
                                      "apiVersion": "2022-10-01",
                                      "name": "[format('{0}/{1}', parameters('parentname'), parameters('tableName'))]",
                                      "properties": {
                                        "totalRetentionInDays": "[parameters('retentionDays')]",
                                        "plan": "Analytics",
                                        "schema": {
                                          "name": "[parameters('tableName')]",
                                          "columns": [
                                            {
                                              "name": "TimeGenerated",
                                              "type": "datetime"
                                            },
                                            {
                                              "name": "RawData",
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "retentionInDays": "[parameters('retentionDays')]"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "copy": {
                                "name": "fileCollectionRule",
                                "count": "[length(variables('filePatterns'))]"
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('filecollectionrule-{0}-{1}', parameters('packtag'), copyIndex())]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "endpointResourceId": {
                                    "value": "[parameters('dceId')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "ruleName": {
                                    "value": "[format('{0}-{1}', variables('rulename'), copyIndex())]"
                                  },
                                  "filepatterns": {
                                    "value": [
                                      "[variables('filePatterns')[copyIndex()]]"
                                    ]
                                  },
                                  "lawResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "tableName": {
                                    "value": "[variables('tableNameToUse')]"
                                  },
                                  "facilityNames": {
                                    "value": "[variables('facilityNames')]"
                                  },
                                  "logLevels": {
                                    "value": "[variables('logLevels')]"
                                  },
                                  "syslogDataSourceName": {
                                    "value": "NginxLogs-1238219"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "1791385127478685010"
                                    }
                                  },
                                  "parameters": {
                                    "ruleName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the name of the data collection rule to create."
                                      }
                                    },
                                    "endpointResourceId": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the resource id of the data collection endpoint."
                                      }
                                    },
                                    "tableName": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Name of the table."
                                      }
                                    },
                                    "location": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "Specifies the location in which to create the data collection rule."
                                      }
                                    },
                                    "filepatterns": {
                                      "type": "array"
                                    },
                                    "lawResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "facilityNames": {
                                      "type": "array"
                                    },
                                    "logLevels": {
                                      "type": "array"
                                    },
                                    "syslogDataSourceName": {
                                      "type": "string",
                                      "defaultValue": "sysLogsDataSource-1688419672"
                                    }
                                  },
                                  "variables": {
                                    "streamName": "[format('Custom-{0}', parameters('tableName'))]",
                                    "lawFriendlyName": "[split(parameters('lawResourceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2022-06-01",
                                      "name": "[parameters('ruleName')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "kind": "Linux",
                                      "properties": {
                                        "dataSources": {
                                          "syslog": [
                                            {
                                              "streams": [
                                                "Microsoft-Syslog"
                                              ],
                                              "facilityNames": "[parameters('facilityNames')]",
                                              "logLevels": "[parameters('logLevels')]",
                                              "name": "[parameters('syslogDataSourceName')]"
                                            }
                                          ],
                                          "logFiles": [
                                            {
                                              "streams": [
                                                "[variables('streamName')]"
                                              ],
                                              "filePatterns": "[parameters('filepatterns')]",
                                              "format": "text",
                                              "settings": {
                                                "text": {
                                                  "recordStartTimestampFormat": "ISO 8601"
                                                }
                                              },
                                              "name": "[parameters('tableName')]"
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('lawResourceId')]",
                                              "name": "[variables('lawFriendlyName')]"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-Syslog"
                                            ],
                                            "destinations": [
                                              "[variables('lawFriendlyName')]"
                                            ],
                                            "transformKql": "source | where SyslogMessage == \"Stopped A high performance web server and a reverse proxy server.\" or SyslogMessage == \"Started A high performance web server and a reverse proxy server.\"",
                                            "outputStream": "Microsoft-Syslog"
                                          },
                                          {
                                            "streams": [
                                              "[variables('streamName')]"
                                            ],
                                            "destinations": [
                                              "[variables('lawFriendlyName')]"
                                            ],
                                            "transformKql": "source",
                                            "outputStream": "[variables('streamName')]"
                                          }
                                        ],
                                        "dataCollectionEndpointId": "[parameters('endpointResourceId')]",
                                        "streamDeclarations": {
                                          "[format('{0}', variables('streamName'))]": {
                                            "columns": [
                                              {
                                                "name": "TimeGenerated",
                                                "type": "datetime"
                                              },
                                              {
                                                "name": "RawData",
                                                "type": "string"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "ruleId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('ruleName'))]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('lawResourceGroup')), 'Microsoft.Resources/deployments', variables('tableName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('Alerts-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "AGId": {
                                    "value": "[parameters('actionGroupResourceId')]"
                                  },
                                  "packtag": {
                                    "value": "[parameters('packtag')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "instanceName": {
                                    "value": "[parameters('instanceName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "17575300843145168501"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceId": {
                                      "type": "string"
                                    },
                                    "AGId": {
                                      "type": "string"
                                    },
                                    "packtag": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "instanceName": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "moduleprefix": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                                    "alertlist": [
                                      {
                                        "alertRuleDescription": "Nginx stopped.",
                                        "alertRuleDisplayName": "Nginx service stopped.",
                                        "alertRuleName": "AlertRule-Nginx-1",
                                        "alertRuleSeverity": 1,
                                        "autoMitigate": true,
                                        "evaluationFrequency": "PT15M",
                                        "windowSize": "PT15M",
                                        "alertType": "rows",
                                        "query": "Syslog | where SyslogMessage == \"Stopped A high performance web server and a reverse proxy server.\""
                                      }
                                    ]
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2022-09-01",
                                      "name": "[format('{0}-Alerts', variables('moduleprefix'))]",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "alertlist": {
                                            "value": "[variables('alertlist')]"
                                          },
                                          "AGId": {
                                            "value": "[parameters('AGId')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "moduleprefix": {
                                            "value": "[variables('moduleprefix')]"
                                          },
                                          "packtag": {
                                            "value": "[parameters('packtag')]"
                                          },
                                          "Tags": {
                                            "value": "[parameters('Tags')]"
                                          },
                                          "workspaceId": {
                                            "value": "[parameters('workspaceId')]"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.32.4.45862",
                                              "templateHash": "17858688129795365440"
                                            }
                                          },
                                          "parameters": {
                                            "alertlist": {
                                              "type": "array"
                                            },
                                            "location": {
                                              "type": "string"
                                            },
                                            "workspaceId": {
                                              "type": "string"
                                            },
                                            "AGId": {
                                              "type": "string"
                                            },
                                            "packtag": {
                                              "type": "string"
                                            },
                                            "Tags": {
                                              "type": "object"
                                            },
                                            "moduleprefix": {
                                              "type": "string"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "copy": {
                                                "name": "Alerts",
                                                "count": "[length(parameters('alertlist'))]"
                                              },
                                              "type": "Microsoft.Resources/deployments",
                                              "apiVersion": "2022-09-01",
                                              "name": "[format('{0}-Alert-{1}', parameters('packtag'), copyIndex())]",
                                              "properties": {
                                                "expressionEvaluationOptions": {
                                                  "scope": "inner"
                                                },
                                                "mode": "Incremental",
                                                "parameters": {
                                                  "location": {
                                                    "value": "[parameters('location')]"
                                                  },
                                                  "actionGroupResourceId": {
                                                    "value": "[parameters('AGId')]"
                                                  },
                                                  "alertRuleDescription": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleDescription]"
                                                  },
                                                  "alertRuleDisplayName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleDisplayName)]"
                                                  },
                                                  "alertRuleName": {
                                                    "value": "[format('{0}-{1}', parameters('moduleprefix'), parameters('alertlist')[copyIndex()].alertRuleName)]"
                                                  },
                                                  "alertRuleSeverity": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertRuleSeverity]"
                                                  },
                                                  "autoMitigate": {
                                                    "value": "[parameters('alertlist')[copyIndex()].autoMitigate]"
                                                  },
                                                  "evaluationFrequency": {
                                                    "value": "[parameters('alertlist')[copyIndex()].evaluationFrequency]"
                                                  },
                                                  "windowSize": {
                                                    "value": "[parameters('alertlist')[copyIndex()].windowSize]"
                                                  },
                                                  "scope": {
                                                    "value": "[parameters('workspaceId')]"
                                                  },
                                                  "query": {
                                                    "value": "[parameters('alertlist')[copyIndex()].query]"
                                                  },
                                                  "dimensions": "[if(contains(parameters('alertlist')[copyIndex()], 'dimensions'), createObject('value', parameters('alertlist')[copyIndex()].dimensions), createObject('value', null()))]",
                                                  "packtag": {
                                                    "value": "[parameters('packtag')]"
                                                  },
                                                  "Tags": {
                                                    "value": "[parameters('Tags')]"
                                                  },
                                                  "alertType": {
                                                    "value": "[parameters('alertlist')[copyIndex()].alertType]"
                                                  },
                                                  "metricMeasureColumn": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].metricMeasureColumn), createObject('value', null()))]",
                                                  "operator": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].operator), createObject('value', null()))]",
                                                  "threshold": "[if(equals(parameters('alertlist')[copyIndex()].alertType, 'Aggregated'), createObject('value', parameters('alertlist')[copyIndex()].threshold), createObject('value', null()))]"
                                                },
                                                "template": {
                                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                  "contentVersion": "1.0.0.0",
                                                  "metadata": {
                                                    "_generator": {
                                                      "name": "bicep",
                                                      "version": "0.32.4.45862",
                                                      "templateHash": "10159755056440989647"
                                                    }
                                                  },
                                                  "parameters": {
                                                    "alertType": {
                                                      "type": "string",
                                                      "allowedValues": [
                                                        "rows",
                                                        "Aggregated"
                                                      ]
                                                    },
                                                    "alertRuleName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDisplayName": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleDescription": {
                                                      "type": "string"
                                                    },
                                                    "scope": {
                                                      "type": "string"
                                                    },
                                                    "actionGroupResourceId": {
                                                      "type": "string"
                                                    },
                                                    "alertRuleSeverity": {
                                                      "type": "int"
                                                    },
                                                    "location": {
                                                      "type": "string"
                                                    },
                                                    "windowSize": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "evaluationFrequency": {
                                                      "type": "string",
                                                      "defaultValue": "PT15M"
                                                    },
                                                    "autoMitigate": {
                                                      "type": "bool",
                                                      "defaultValue": false
                                                    },
                                                    "query": {
                                                      "type": "string"
                                                    },
                                                    "packtag": {
                                                      "type": "string"
                                                    },
                                                    "Tags": {
                                                      "type": "object"
                                                    },
                                                    "threshold": {
                                                      "type": "int",
                                                      "defaultValue": 0
                                                    },
                                                    "metricMeasureColumn": {
                                                      "type": "string",
                                                      "defaultValue": ""
                                                    },
                                                    "dimensions": {
                                                      "type": "array",
                                                      "defaultValue": [
                                                        {
                                                          "name": "Computer",
                                                          "operator": "Include",
                                                          "values": [
                                                            "*"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "defaultValue": "GreaterThan",
                                                      "allowedValues": [
                                                        "GreaterThan",
                                                        "GreaterThanOrEqual",
                                                        "LessThan",
                                                        "LessThanOrEqual",
                                                        "Equal",
                                                        "NotEqual"
                                                      ]
                                                    }
                                                  },
                                                  "resources": [
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'rows')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "16566470716356207302"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Count",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "GreaterThan",
                                                                      "threshold": 0,
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "condition": "[equals(parameters('alertType'), 'Aggregated')]",
                                                      "type": "Microsoft.Resources/deployments",
                                                      "apiVersion": "2022-09-01",
                                                      "name": "[parameters('alertRuleName')]",
                                                      "properties": {
                                                        "expressionEvaluationOptions": {
                                                          "scope": "inner"
                                                        },
                                                        "mode": "Incremental",
                                                        "parameters": {
                                                          "alertRuleName": {
                                                            "value": "[parameters('alertRuleName')]"
                                                          },
                                                          "alertRuleDisplayName": {
                                                            "value": "[parameters('alertRuleDisplayName')]"
                                                          },
                                                          "alertRuleDescription": {
                                                            "value": "[parameters('alertRuleDescription')]"
                                                          },
                                                          "scope": {
                                                            "value": "[parameters('scope')]"
                                                          },
                                                          "dimensions": {
                                                            "value": "[parameters('dimensions')]"
                                                          },
                                                          "actionGroupResourceId": {
                                                            "value": "[parameters('actionGroupResourceId')]"
                                                          },
                                                          "alertRuleSeverity": {
                                                            "value": "[parameters('alertRuleSeverity')]"
                                                          },
                                                          "location": {
                                                            "value": "[parameters('location')]"
                                                          },
                                                          "windowSize": {
                                                            "value": "[parameters('windowSize')]"
                                                          },
                                                          "evaluationFrequency": {
                                                            "value": "[parameters('evaluationFrequency')]"
                                                          },
                                                          "autoMitigate": {
                                                            "value": "[parameters('autoMitigate')]"
                                                          },
                                                          "query": {
                                                            "value": "[parameters('query')]"
                                                          },
                                                          "Tags": {
                                                            "value": "[parameters('Tags')]"
                                                          },
                                                          "threshold": {
                                                            "value": "[parameters('threshold')]"
                                                          },
                                                          "metricMeasureColumn": {
                                                            "value": "[parameters('metricMeasureColumn')]"
                                                          },
                                                          "operator": {
                                                            "value": "[parameters('operator')]"
                                                          }
                                                        },
                                                        "template": {
                                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                                          "contentVersion": "1.0.0.0",
                                                          "metadata": {
                                                            "_generator": {
                                                              "name": "bicep",
                                                              "version": "0.32.4.45862",
                                                              "templateHash": "18444959286864838274"
                                                            }
                                                          },
                                                          "parameters": {
                                                            "alertRuleName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDisplayName": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleDescription": {
                                                              "type": "string"
                                                            },
                                                            "scope": {
                                                              "type": "string"
                                                            },
                                                            "actionGroupResourceId": {
                                                              "type": "string"
                                                            },
                                                            "alertRuleSeverity": {
                                                              "type": "int"
                                                            },
                                                            "location": {
                                                              "type": "string"
                                                            },
                                                            "windowSize": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "evaluationFrequency": {
                                                              "type": "string",
                                                              "defaultValue": "PT15M"
                                                            },
                                                            "autoMitigate": {
                                                              "type": "bool",
                                                              "defaultValue": false
                                                            },
                                                            "query": {
                                                              "type": "string"
                                                            },
                                                            "dimensions": {
                                                              "type": "array"
                                                            },
                                                            "threshold": {
                                                              "type": "int"
                                                            },
                                                            "metricMeasureColumn": {
                                                              "type": "string"
                                                            },
                                                            "Tags": {
                                                              "type": "object"
                                                            },
                                                            "operator": {
                                                              "type": "string",
                                                              "allowedValues": [
                                                                "GreaterThan",
                                                                "GreaterThanOrEqual",
                                                                "LessThan",
                                                                "LessThanOrEqual",
                                                                "Equal",
                                                                "NotEqual"
                                                              ]
                                                            }
                                                          },
                                                          "resources": [
                                                            {
                                                              "type": "Microsoft.Insights/scheduledQueryRules",
                                                              "apiVersion": "2023-03-15-preview",
                                                              "name": "[parameters('alertRuleName')]",
                                                              "location": "[parameters('location')]",
                                                              "tags": "[parameters('Tags')]",
                                                              "properties": {
                                                                "description": "[parameters('alertRuleDescription')]",
                                                                "ruleResolveConfiguration": {},
                                                                "displayName": "[parameters('alertRuleDisplayName')]",
                                                                "enabled": true,
                                                                "scopes": [
                                                                  "[parameters('scope')]"
                                                                ],
                                                                "targetResourceTypes": [
                                                                  "Microsoft.OperationalInsights/workspaces"
                                                                ],
                                                                "windowSize": "[parameters('windowSize')]",
                                                                "evaluationFrequency": "[parameters('evaluationFrequency')]",
                                                                "severity": "[parameters('alertRuleSeverity')]",
                                                                "criteria": {
                                                                  "allOf": [
                                                                    {
                                                                      "query": "[parameters('query')]",
                                                                      "timeAggregation": "Average",
                                                                      "metricMeasureColumn": "[parameters('metricMeasureColumn')]",
                                                                      "dimensions": "[parameters('dimensions')]",
                                                                      "resourceIdColumn": "[if(empty(parameters('dimensions')), '_ResourceId', null())]",
                                                                      "operator": "[parameters('operator')]",
                                                                      "threshold": "[parameters('threshold')]",
                                                                      "failingPeriods": {
                                                                        "numberOfEvaluationPeriods": 1,
                                                                        "minFailingPeriodsToAlert": 1
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "autoMitigate": "[parameters('autoMitigate')]",
                                                                "actions": {
                                                                  "actionGroups": [
                                                                    "[parameters('actionGroupResourceId')]"
                                                                  ],
                                                                  "customProperties": {}
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "VMInsightsDependencyPack",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "dceId": {
                            "value": "[parameters('dceId')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "resourceGroupId": {
                            "value": "[parameters('resourceGroupId')]"
                          },
                          "solutionTag": {
                            "value": "[parameters('solutionTag')]"
                          },
                          "solutionVersion": {
                            "value": "[parameters('solutionVersion')]"
                          },
                          "subscriptionId": {
                            "value": "[parameters('subscriptionId')]"
                          },
                          "workspaceId": {
                            "value": "[parameters('workspaceId')]"
                          },
                          "customerTags": {
                            "value": "[parameters('customerTags')]"
                          },
                          "instanceName": {
                            "value": "[parameters('instanceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "8958640379218679332"
                            }
                          },
                          "parameters": {
                            "packtag": {
                              "type": "string",
                              "defaultValue": "InsightsDep",
                              "metadata": {
                                "description": "The Tag value for this pack"
                              }
                            },
                            "location": {
                              "type": "string",
                              "metadata": {
                                "description": "location for the deployment."
                              }
                            },
                            "workspaceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Full resource ID of the log analytics workspace to be used for the deployment."
                              }
                            },
                            "solutionTag": {
                              "type": "string"
                            },
                            "solutionVersion": {
                              "type": "string"
                            },
                            "dceId": {
                              "type": "string"
                            },
                            "subscriptionId": {
                              "type": "string"
                            },
                            "resourceGroupId": {
                              "type": "string"
                            },
                            "customerTags": {
                              "type": "object"
                            },
                            "instanceName": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "rulename": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "ruleshortname": "[format('AMP-{0}-{1}', parameters('instanceName'), parameters('packtag'))]",
                            "tempTags": {
                              "[format('{0}', parameters('solutionTag'))]": "[parameters('packtag')]",
                              "MonitoringPackType": "IaaS",
                              "solutionVersion": "[parameters('solutionVersion')]"
                            },
                            "Tags": "[if(equals(parameters('customerTags'), createObject()), variables('tempTags'), union(variables('tempTags'), parameters('customerTags').All))]",
                            "resourceGroupName": "[split(parameters('resourceGroupId'), '/')[4]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('vmInsightsDCR-{0}', parameters('packtag'))]",
                              "subscriptionId": "[parameters('subscriptionId')]",
                              "resourceGroup": "[variables('resourceGroupName')]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "workspaceResourceId": {
                                    "value": "[parameters('workspaceId')]"
                                  },
                                  "Tags": {
                                    "value": "[variables('Tags')]"
                                  },
                                  "ruleName": {
                                    "value": "[variables('rulename')]"
                                  },
                                  "dceId": {
                                    "value": "[parameters('dceId')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.32.4.45862",
                                      "templateHash": "13954368441826719999"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "workspaceResourceId": {
                                      "type": "string"
                                    },
                                    "Tags": {
                                      "type": "object"
                                    },
                                    "ruleName": {
                                      "type": "string"
                                    },
                                    "dceId": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "wsfriendlyname": "[split(parameters('workspaceResourceId'), '/')[8]]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Insights/dataCollectionRules",
                                      "apiVersion": "2021-09-01-preview",
                                      "name": "[format('{0}-VMI', parameters('ruleName'))]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('Tags')]",
                                      "properties": {
                                        "description": "Data collection rule for VM Insights.",
                                        "dataCollectionEndpointId": "[parameters('dceId')]",
                                        "dataSources": {
                                          "performanceCounters": [
                                            {
                                              "name": "VMInsightsPerfCounters",
                                              "streams": [
                                                "Microsoft-InsightsMetrics"
                                              ],
                                              "samplingFrequencyInSeconds": 60,
                                              "counterSpecifiers": [
                                                "\\VmInsights\\DetailedMetrics"
                                              ]
                                            }
                                          ]
                                        },
                                        "destinations": {
                                          "logAnalytics": [
                                            {
                                              "workspaceResourceId": "[parameters('workspaceResourceId')]",
                                              "name": "[variables('wsfriendlyname')]"
                                            }
                                          ]
                                        },
                                        "dataFlows": [
                                          {
                                            "streams": [
                                              "Microsoft-InsightsMetrics"
                                            ],
                                            "destinations": [
                                              "[variables('wsfriendlyname')]"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "VMIRuleId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', format('{0}-VMI', parameters('ruleName')))]"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), variables('resourceGroupName')), 'Microsoft.Resources/deployments', format('deployAG-new-{0}-{1}', parameters('actionGroupName'), parameters('location')))]"
              ]
            },
            {
              "condition": "[parameters('deployGrafana')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "grafana",
              "subscriptionId": "[parameters('subscriptionId')]",
              "resourceGroup": "[variables('resourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "fileName": {
                    "value": "grafana.zip"
                  },
                  "grafanaResourceId": {
                    "value": "[parameters('grafanaResourceId')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "resourceGroupName": {
                    "value": "[variables('resourceGroupName')]"
                  },
                  "customerTags": {
                    "value": "[parameters('customerTags')]"
                  },
                  "packsManagedIdentityResourceId": {
                    "value": "[parameters('userManagedIdentityResourceId')]"
                  },
                  "solutionTag": {
                    "value": "[parameters('solutionTag')]"
                  },
                  "solutionVersion": {
                    "value": "[parameters('solutionVersion')]"
                  },
                  "instanceName": {
                    "value": "[parameters('instanceName')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8858171580267209258"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    },
                    "grafanaResourceId": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "packsManagedIdentityResourceId": {
                      "type": "string"
                    },
                    "customerTags": {
                      "type": "object"
                    },
                    "solutionTag": {
                      "type": "string"
                    },
                    "solutionVersion": {
                      "type": "string"
                    },
                    "instanceName": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": "",
                    "grafanaName": "[split(parameters('grafanaResourceId'), '/')[8]]",
                    "tempfilename": "[format('{0}.tmp', parameters('fileName'))]",
                    "Tags": "[if(equals(parameters('customerTags'), createObject()), createObject(format('{0}', parameters('solutionTag')), parameters('solutionTag'), 'solutionVersion', parameters('solutionVersion')), union(createObject(format('{0}', parameters('solutionTag')), parameters('solutionTag'), 'solutionVersion', parameters('solutionVersion'), 'instanceName', parameters('instanceName')), parameters('customerTags').All))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "deployscript-Grafana",
                      "tags": "[variables('Tags')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "userAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('packsManagedIdentityResourceId'))]": {}
                        }
                      },
                      "kind": "AzureCLI",
                      "properties": {
                        "azCliVersion": "2.42.0",
                        "timeout": "PT5M",
                        "retentionInterval": "PT1H",
                        "environmentVariables": [
                          {
                            "name": "CONTENT",
                            "value": "[variables('$fxv#0')]"
                          }
                        ],
                        "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az extension add --name amg && az login --identity && unzip {3} && for file in *.json; do az grafana dashboard import -g {4} -n {5} --subscription {6} --definition \"$file\" --overwrite true;done', variables('tempfilename'), variables('tempfilename'), parameters('fileName'), parameters('fileName'), parameters('resourceGroupName'), variables('grafanaName'), parameters('subscriptionId'))]"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('azureManagedGrafana-{0}', parameters('instanceName')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('MonitoringPacks-backend-{0}', parameters('instanceName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalytics-Deployment')]",
        "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('RGMonitoringPacks-{0}-{1}', parameters('location'), parameters('instanceName')))]"
      ]
    }
  ]
}